/*
SQLyog 企业版 - MySQL GUI v8.14 
MySQL - 5.1.28-rc-community : Database - mlog
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`mlog` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `mlog`;

/*Table structure for table `mlog_catalog` */

DROP TABLE IF EXISTS `mlog_catalog`;

CREATE TABLE `mlog_catalog` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_create_time` datetime NOT NULL,
  `_description` text,
  `_modify_time` datetime DEFAULT NULL,
  `_name` varchar(100) NOT NULL,
  `_order` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`)
) ENGINE=MyISAM AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_catalog` */

insert  into `mlog_catalog`(`_id`,`_create_time`,`_description`,`_modify_time`,`_name`,`_order`) values (2,'2012-08-06 15:23:10','',NULL,'Java',NULL),(3,'2012-08-06 15:23:25','',NULL,'JavaScript',NULL),(4,'2012-08-07 12:46:55','',NULL,'.Net',NULL),(5,'2012-08-07 12:47:00','',NULL,'碎碎念',NULL),(6,'2012-08-08 12:53:19','','2012-08-08 13:02:40','心情说',NULL),(7,'2012-08-14 17:38:06',NULL,NULL,'Lucene',NULL),(8,'2012-08-14 17:43:00',NULL,NULL,'M-Spring',NULL),(9,'2012-08-14 17:43:01',NULL,NULL,'SQL',NULL),(10,'2012-08-14 17:43:02',NULL,NULL,'Spring',NULL),(11,'2012-08-14 17:43:03',NULL,NULL,'webwork',NULL),(12,'2012-08-14 17:43:04',NULL,NULL,'Android',NULL),(13,'2012-08-14 17:43:05',NULL,NULL,'JBPM',NULL),(14,'2012-08-14 17:43:06',NULL,NULL,'Hibernate',NULL),(15,'2012-08-14 17:56:10',NULL,NULL,'Freemarker',NULL),(16,'2012-08-14 17:56:21',NULL,NULL,'设计模式',NULL),(17,'2012-08-14 17:56:51',NULL,NULL,'网摘',NULL),(18,'2012-08-14 17:56:52',NULL,NULL,'G-Blog',NULL),(19,'2012-08-14 17:56:53',NULL,NULL,'webservice',NULL),(20,'2012-08-14 17:56:59',NULL,NULL,'编程开发',NULL),(21,'2012-08-14 17:57:14',NULL,NULL,'GWT',NULL),(22,'2012-08-14 17:57:22',NULL,NULL,'Wordpress',NULL),(23,'2012-08-14 17:58:51',NULL,NULL,'linux',NULL),(24,'2012-08-14 17:58:51',NULL,NULL,'struts2',NULL);

/*Table structure for table `mlog_comment` */

DROP TABLE IF EXISTS `mlog_comment`;

CREATE TABLE `mlog_comment` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_agent` varchar(1000) DEFAULT NULL,
  `_author` varchar(100) NOT NULL,
  `_content` varchar(5000) NOT NULL,
  `_create_time` datetime NOT NULL,
  `_email` varchar(100) DEFAULT NULL,
  `_post_id` varchar(50) DEFAULT NULL,
  `_status` varchar(30) NOT NULL,
  `_url` varchar(200) DEFAULT NULL,
  `_post` bigint(20) NOT NULL,
  `_parent_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`),
  KEY `FK6FB51DD77C51831` (`_post`),
  KEY `FK6FB51DD72E7DDA5E` (`_parent_id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_comment` */

insert  into `mlog_comment`(`_id`,`_agent`,`_author`,`_content`,`_create_time`,`_email`,`_post_id`,`_status`,`_url`,`_post`,`_parent_id`) values (32,'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.79 Safari/537.1','雾非雾的情思','<img src=\"http://localhost:8080/mlog/script/kindeditor/plugins/emoticons/images/0.gif\" border=\"0\" alt=\"\" />','2012-10-05 13:57:40','330721072@qq.com','0:0:0:0:0:0:0:1','approved','http://www.mspring.org',384,NULL);

/*Table structure for table `mlog_links` */

DROP TABLE IF EXISTS `mlog_links`;

CREATE TABLE `mlog_links` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_description` varchar(2000) DEFAULT NULL,
  `_name` varchar(100) NOT NULL,
  `_target` varchar(50) DEFAULT NULL,
  `_url` varchar(100) NOT NULL,
  `_visable` bit(1) DEFAULT NULL,
  `_order` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`),
  UNIQUE KEY `_name` (`_name`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_links` */

insert  into `mlog_links`(`_id`,`_description`,`_name`,`_target`,`_url`,`_visable`,`_order`) values (4,'','慕春博客','_top','http://www.mspring.org','',NULL);

/*Table structure for table `mlog_options` */

DROP TABLE IF EXISTS `mlog_options`;

CREATE TABLE `mlog_options` (
  `_name` varchar(300) NOT NULL,
  `_value` varchar(3000) DEFAULT NULL,
  PRIMARY KEY (`_name`),
  UNIQUE KEY `_name` (`_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `mlog_options` */

insert  into `mlog_options`(`_name`,`_value`) values ('description','渐渐明白，其实无所谓是另一种从容。'),('keyword','mlog'),('blogname','M-Spring'),('blogurl','http://localhost:8080/mlog'),('blogsubname','渐渐明白，其实无所谓是另一种从容。'),('notice','Classicl is something not fade,but grow more precious with time pass by,so is dream.\r\n</br>\r\n梦想这东西和经典一样，永远不会因为时间而褪色，反而更显珍贵。'),('skin','garland'),('copyright','Copyright @ <a target=\"_blank\" href=\"http://www.mspring.org\" alt=\"慕春\">慕春</a>'),('comment_audit','false'),('menu','<a href=\"%base%\" target=\"_self\">首页</a>\r\n<a href=\"%base%/catalog/碎碎念\" target=\"_self\">碎碎念</a>\r\n<a href=\"%base%/catalog/心情说\" target=\"_self\">心情说</a>\r\n<a href=\"%base%/t\" target=\"_self\">微博</a>\r\n<a href=\"%base%/search/\">搜索</a>');

/*Table structure for table `mlog_post` */

DROP TABLE IF EXISTS `mlog_post`;

CREATE TABLE `mlog_post` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_comment_count` bigint(20) DEFAULT NULL,
  `_comment_status` varchar(20) NOT NULL,
  `_content` text NOT NULL,
  `_create_time` datetime DEFAULT NULL,
  `_modify_time` datetime DEFAULT NULL,
  `_password` varchar(30) DEFAULT NULL,
  `_post_ip` varchar(50) DEFAULT NULL,
  `_post_status` varchar(20) NOT NULL,
  `_summary` text,
  `_title` varchar(200) NOT NULL,
  `_url` varchar(300) NOT NULL,
  `_post_user` bigint(20) NOT NULL,
  `_view_count` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`),
  UNIQUE KEY `_title` (`_title`),
  UNIQUE KEY `_url` (`_url`),
  KEY `FK99285C2820FC8468` (`_post_user`)
) ENGINE=MyISAM AUTO_INCREMENT=385 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_post` */

insert  into `mlog_post`(`_id`,`_comment_count`,`_comment_status`,`_content`,`_create_time`,`_modify_time`,`_password`,`_post_ip`,`_post_status`,`_summary`,`_title`,`_url`,`_post_user`,`_view_count`) values (167,0,'open','<p>我在项目中使用hibernate search的时候，明明我已经数据了搜索关键字了，但是在搜索的时候依然提示Try to search with an empty string.. 而且出现这个错误是有规律的，一下两种情况会出现这个问题：</p>  <blockquote>   <p>&#160;</p>    <p>1，搜索关键字只为一个英文字母时（两个或两个以上不会出现这个问题）</p>    <p>2，搜索关键字全部为数字时</p> </blockquote>  <p>以下是这个问题的BUG日志信息：</p>  <blockquote>   <p>     <br />org.hibernate.search.SearchException: Try to search with an empty string: title      <br />&#160;&#160;&#160; at org.hibernate.search.query.dsl.impl.ConnectedMultiFieldsTermQueryBuilder.createQuery(ConnectedMultiFieldsTermQueryBuilder.java:103)      <br />&#160;&#160;&#160; at org.hibernate.search.query.dsl.impl.ConnectedMultiFieldsTermQueryBuilder.createQuery(ConnectedMultiFieldsTermQueryBuilder.java:78)      <br />&#160;&#160;&#160; at org.mspring.mlog.service.search.impl.PostSearchServiceImpl.search(PostSearchServiceImpl.java:42)      <br />&#160;&#160;&#160; at org.mspring.mlog.web.module.web.SearchWidget.searchView(SearchWidget.java:34)      <br />&#160;&#160;&#160; at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)      <br />&#160;&#160;&#160; at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)      <br />&#160;&#160;&#160; at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</p> </blockquote>  <p>&#160;</p>  <p>看到这个错误是不是觉得很诡异，明明已经输入了搜索关键字系统却搜索关键字为空。我先开始一直以为这个问题是Hibernate Search的一个BUG，我也尝试过换为高版本的HibernateSearch，但是也是同样出现这个问题，这个错误我折腾了好几天了，在网上也没有找到有价值的信息。没办法，只有自己动手调试了，今天我从hibernate search官网上下载下来源码，替换掉项目中的hibernate search Jar包，调试了一下，终于发现问题的所在了。</p>  <p>从前面的错误日志可以看出，是在类org.hibernate.search.query.dsl.impl.ConnectedMultiFieldsTermQueryBuilder的第103行和78行报错，于是我在该类中添加了断点。下面是涉及到这个BUG的源码：</p>  <blockquote>   <pre class=\"brush: java; highlight: [20]\">public Query createQuery(FieldContext fieldContext) {\n		final Query perFieldQuery;\n		final DocumentBuilderIndexedEntity&lt;?&gt; documentBuilder = Helper.getDocumentBuilder( queryContext );\n		FieldBridge fieldBridge = documentBuilder.getBridge( fieldContext.getField() );\n		if ( fieldBridge instanceof NumericFieldBridge ) {\n			return NumericFieldUtils.createExactMatchQuery( fieldContext.getField(), value );\n		}\n\n		String searchTerm = buildSearchTerm( fieldContext, documentBuilder );\n\n		if ( fieldContext.isIgnoreAnalyzer() ) {\n			perFieldQuery = createTermQuery( fieldContext, searchTerm );\n		}\n		else {\n			List&lt;String&gt; terms = getAllTermsFromText(\n					fieldContext.getField(), searchTerm, queryContext.getQueryAnalyzer()\n			);\n\n			if ( terms.size() == 0 ) {\n				throw new SearchException( &quot;Try to search with an empty string: &quot; + fieldContext.getField() );\n			}\n			else if ( terms.size() == 1 ) {\n				perFieldQuery = createTermQuery( fieldContext, terms.get( 0 ) );\n			}\n			else {\n				BooleanQuery booleanQuery = new BooleanQuery();\n				for ( String localTerm : terms ) {\n					Query termQuery = createTermQuery( fieldContext, localTerm );\n					booleanQuery.add( termQuery, BooleanClause.Occur.SHOULD );\n				}\n				perFieldQuery = booleanQuery;\n			}\n		}\n		return fieldContext.getFieldCustomizer().setWrappedQuery( perFieldQuery ).createQuery();\n	}\n\n\nprivate List&lt;String&gt; getAllTermsFromText(String fieldName, String localText, Analyzer analyzer) {\n		//it\'s better not to apply the analyzer with wildcard as * and ? can be mistakenly removed\n		List&lt;String&gt; terms = new ArrayList&lt;String&gt;();\n		if ( termContext.getApproximation() == TermQueryContext.Approximation.WILDCARD ) {\n			terms.add( localText );\n		}\n		else {\n			try {\n				terms = Helper.getAllTermsFromText( fieldName, localText, analyzer );\n			}\n			catch ( IOException e ) {\n				throw new AssertionFailure( &quot;IO exception while reading String stream??&quot;, e );\n			}\n		}\n		return terms;\n	}</pre>\n</blockquote>\n\n<p>&#160;</p>\n\n<p>看到第20行了吗？上面BUG日志中的错误信息就是又这里打印出来的。出现这个问题的原因是terms.size() == 0造成的。terms队列是又lucene分词器来决定的，所以出现这个问题应该就是由分词器引起的。</p>\n\n<p>接下来我去看了一下hibernate search分词器配置，我配置的是org.apache.lucene.analysis.cn.ChineseAnalyzer，该分词器是由lucene提供的中文解析的分词器。于是我去网上现在了一个国内的开源分词器IKAnalyzer，替换之后问题果然解决。</p>\n\n<p>看来老外写的东西对中文的支持还不是很完善……</p>\n\n<p>下面贴一下最终正确的Hibernate Search配置：</p>\n\n<blockquote>\n  <pre class=\"brush: xhtml; toolbar: false\">&lt;prop key=&quot;hibernate.search.default.directory_provider&quot;&gt;org.hibernate.search.store.FSDirectoryProvider&lt;/prop&gt;\n&lt;prop key=&quot;hibernate.search.default.indexBase&quot;&gt;${user.home}/.mlog/indexes&lt;/prop&gt;\n&lt;prop key=&quot;hibernate.search.analyzer&quot;&gt;org.wltea.analyzer.lucene.IKAnalyzer&lt;/prop&gt;</pre></blockquote>','2012-08-13 10:56:41','2012-08-13 10:56:42',NULL,NULL,'publish',NULL,'hibernate search提示空搜索关键词错误','/post/2012/7/14/1344938571663.html',1,53),(168,0,'open','<p>&#160;</p>  <blockquote>   <p>昨天本来想下载一下Hibernate Search的最新源代码的，我去JBoss官网看了一下，Hibernate相关的代码都放在了sourceforge上面，但是我访问sourceforge的时候直接报404错误，无法访问网页。sourceforge<font style=\"background-color: #ffffff\">是一个很好的开源项目托管社区，为什么就打不开了呢？</font></p>    <p><font style=\"background-color: #ffffff\">我上网查了一下，原来出现这个问题的不只是我一个人，现在国内的IP都无法访问sourceforge。具体是什么远程造成不能访问，不止是国内网络的限制，还是sourceforge做的限制。</font></p>    <p><font style=\"background-color: #ffffff\">现在好像只封了sourceforge的部分IP，如果我们想访问sourceforge的话，可以直接通过216.34.181.99 ，216.34.181.60等IP来进行访问。</font></p>    <p><a href=\"http://www.mspring.org/wp-content/uploads/2012/08/image.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 10px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2012/08/image_thumb.png\" width=\"805\" height=\"424\" /></a></p></blockquote>','2012-08-10 08:38:48','2012-08-10 08:38:49',NULL,NULL,'publish',NULL,'sourceforge 打不开？','/post/2012/7/14/1344938579386.html',1,5),(169,0,'open','<blockquote>   <p>昨天夜里下了个阵雨，早上起来看没下雨了，就没带伞谁知道走到四号线里面被雨淋了，而且四号线里面的雨比昨天夜里的雨好要大。</p>    <p>在四号线北京大学东门站B口，进站必须经过的楼梯处漏雨了，而且亮点是在于有个哥们拿手机给漏雨的地方拍了张照片，被地铁的工作人员发现了，</p>    <p>他们拦住这个拍照的哥们硬是不让人家走，要求把照片给删了。。。&#160; 他们在那里争执了很久，旁边有人声援那拍照的哥们，地铁工作人员没办法才将人家放走了。。。</p>    <p>估计人家是怕这张照片弄到网上，对人家影响不好哈。看来网络的力量还是无穷的哈。 </p></blockquote>','2012-08-08 09:27:28','2012-08-08 09:27:33',NULL,NULL,'publish',NULL,'四号线漏水了...','/post/2012/7/14/1344938579446.html',1,2),(170,0,'open','<p>今天看到了一篇文章《程序员在职业生涯中说的25句话》，一对比原来这里面好多话我也都说过哈。 </p>  <blockquote>   <p>1.“它在我的电脑上运行得很好，不信的话，你可以过来看。“     <br />2.“你有权限登录？你是管理员吗？“      <br />3.“这不是一个bug，这是一个功能。”      <br />4.“这是很奇怪啊......”      <br />5.“以前从来没有过的。”      <br />6.“昨天它还好好的。”      <br />7.“这怎么可能呢？”      <br />8.“你有检查过你的网络连接/设置吗？”(特别是当应用程序太慢的时候)      <br />9.“只有输入错误的数据才能结束掉它吗？”      <br />10.“你的数据肯定有问题。”      <br />11.“我已经几个星期都没碰过那代码了！”      <br />12.“你肯定用错了类库的版本。”      <br />13.“这只是不凑巧而已，不必担心。”      <br />14.“我不可能对每一个都做单元测试！”      <br />15.“这不是我的错。我用过都是开源的库。“      <br />16.“它运行了，但我没有写任何单元测试。”      <br />17.“一定有人改了我的代码。”      <br />18.“你检查过你的系统是否有病毒吗？”      <br />19.“即使它不运行，你感觉到有什么变化吗？”      <br />20.“你不能在操作系统上使用该版本。”      <br />21.“你为什么要那么做？”      <br />22.“程序崩溃的时候你在哪？”      <br />23.“我敢肯定我已经修复了它。”      <br />24.“你升级后重启了应用服务器和数据库服务器吗？”      <br />25.“你安装了哪个版本的JRE/JDK/JVM？”</p>    <p>同时，也欢迎你在下面随意添加你自己的。我敢肯定有很多！</p></blockquote>','2012-08-06 08:27:31','2012-08-06 08:27:31',NULL,NULL,'publish',NULL,'软件工程师在职业生涯中说的25句话','/post/2012/7/14/1344938579491.html',1,1),(171,0,'open','<blockquote>   <p>昨天写了一篇文&lt;<a href=\"http://www.mspring.org/index.php/archives/872.html\">Springmvc AnnotationMethodHandlerAdapter配置不起作用</a>&gt;，这个问题的主要原因是，mvc:annotation-driven和AnnotationMethodHandlerAdapter配置重复造成的。mvc:annotation-driven是一种简写的配置方式，那么mvc:annotation-driven到底做了哪些工作呢？如何替换掉mvc:annotation-driven呢？</p> </blockquote>  <p>&lt;mvc:annotation-driven/&gt;在初始化的时候会自动创建两个对象，org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter和org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter， 我们如果想不使用&lt;mvc:annotation-driven/&gt;这种简写方式，将其替换掉的话，就必须自己手动去配置这两个bean对象。下面是这两个对象的配置方法，和详细的注视说明。</p>  <pre class=\"brush: xhtml; toolbar: false\">&lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping&quot;&gt; \n  		&lt;property name=&quot;useDefaultSuffixPattern&quot; value=&quot;false&quot; /&gt;\n  		&lt;property name=&quot;interceptors&quot;&gt;\n  			&lt;list&gt;\n				&lt;bean class=&quot;org.mspring.mlog.web.interceptor.RememberMeInterceptor&quot; /&gt;\n				&lt;bean class=&quot;org.mspring.mlog.web.interceptor.SettingInterceptor&quot; /&gt;\n				&lt;bean class=&quot;org.mspring.platform.web.query.interceptor.QueryParameterInterceptor&quot; /&gt;\n  			&lt;/list&gt;\n  		&lt;/property&gt;\n 	&lt;/bean&gt; \n	\n	&lt;!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 --&gt;\n	&lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot; &gt;\n		&lt;property name=&quot;messageConverters&quot;&gt;\n			&lt;list&gt;&#160;&#160; &lt;-- 这个converter是我自己定义的，是为了解决spring自带的StringHttpMessageConverter中文乱码问题的 --&gt;\n				&lt;bean class=&quot;org.mspring.platform.web.converter.StringHttpMessageConverter&quot;&gt;\n					&lt;constructor-arg value=&quot;UTF-8&quot; /&gt;\n				&lt;/bean&gt;\n				&lt;!-- 这里可以根据自己的需要添加converter\n				&lt;bean class=&quot;org.springframework.http.converter.ByteArrayHttpMessageConverter&quot; /&gt;  \n				&lt;bean class=&quot;org.springframework.http.converter.StringHttpMessageConverter&quot; /&gt;  \n				&lt;bean class=&quot;org.springframework.http.converter.ResourceHttpMessageConverter&quot; /&gt;  \n				&lt;bean class=&quot;org.springframework.http.converter.xml.SourceHttpMessageConverter&quot; /&gt;  \n				&lt;bean class=&quot;org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter&quot; /&gt;  \n				&lt;bean class=&quot;org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter&quot; /&gt;  \n				&lt;bean class=&quot;org.springframework.http.converter.json.MappingJacksonHttpMessageConverter&quot; /&gt;\n				--&gt;\n			&lt;/list&gt;\n		&lt;/property&gt;\n		&lt;property name=&quot;customArgumentResolvers&quot;&gt;\n			&lt;list&gt;\n				&lt;bean class=&quot;org.mspring.platform.web.resolver.UrlVariableMethodArgumentResolver&quot; /&gt;\n			&lt;/list&gt;\n		&lt;/property&gt;\n		\n		&lt;property name=&quot;webBindingInitializer&quot;&gt;\n			&lt;bean id=&quot;webBindingInitializer&quot; class=&quot;org.springframework.web.bind.support.ConfigurableWebBindingInitializer&quot;&gt;\n				&lt;property name=&quot;conversionService&quot; ref=&quot;conversionService&quot;/&gt;\n			&lt;/bean&gt;\n		&lt;/property&gt;\n	&lt;/bean&gt;\n	\n	\n	&lt;!-- 1,注册ConversionService --&gt;\n	&lt;bean id=&quot;conversionService&quot;\n		class=&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;&gt;\n		&lt;property name=&quot;converters&quot;&gt;\n			&lt;list&gt;\n				&lt;bean class=&quot;org.mspring.platform.web.converter.DateConverter&quot;&gt;\n					&lt;property name=&quot;pattern&quot; value=&quot;yyyy-MM-dd HH:mm:ss&quot; /&gt;\n				&lt;/bean&gt;\n			&lt;/list&gt;\n		&lt;/property&gt;\n		&lt;property name=&quot;formatters&quot;&gt;\n			&lt;list&gt;\n				&lt;bean\n					class=&quot;org.mspring.mlog.web.formatter.factory.TagFormatAnnotationFormatterFactory&quot;&gt;&lt;/bean&gt;\n				&lt;bean\n					class=&quot;org.mspring.mlog.web.formatter.factory.EncodingFormatAnnotationFormatterFactory&quot;&gt;&lt;/bean&gt;\n			&lt;/list&gt;\n		&lt;/property&gt;\n	&lt;/bean&gt;</pre>\n\n<p>这样，我们就可以就成功的替换掉&lt;mvc:annotation-driven /&gt;了</p>','2012-08-03 09:47:08','2012-08-03 09:47:10',NULL,NULL,'publish',NULL,'&lt;mvc:annotation-driven/&gt;都做了那些事情','/post/2012/7/14/1344938579544.html',1,2),(172,0,'open','<p>昨天在编写Springmvc程序的时候遇到了一个问题：在使用@ResponseBody返回数据的时候出现了中文乱码的问题，于是上网搜索了一下原因。 发现原来是因为在类org.springframework.http.converter.StringHttpMessageConverter中设置的默认编码为ISO-8859-1。</p>  <p>问题原因找到了，那么接下来就是想办法解决了。我的解决办法是，重写spring提供的StringHttpMessageConverter，然后将我重写的类加载到Spring配置文件中，当spring调用的时候就会去调用我重写过的StringHttpMessageConverter，这样编码问题就会解决了。我的java代码和spring的配置如下：</p>  <p>Java：</p>  <pre class=\"brush: java; toolbar: false\">package org.mspring.platform.web.converter;\n\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.http.HttpOutputMessage;\nimport org.springframework.http.MediaType;\nimport org.springframework.util.FileCopyUtils;\n\n/**\n * @author Gao Youbo\n * @since 2012-8-1\n * @Description\n * @TODO 解决spring默认提供的StringHttpMessageConverter在@ResponseBody中文时乱码\n */\npublic class StringHttpMessageConverter extends org.springframework.http.converter.StringHttpMessageConverter {\n\n    /**\n     *\n     */\n    public StringHttpMessageConverter(Charset defaultCharset) {\n        // TODO Auto-generated constructor stub\n        List&lt;MediaType&gt; mediaTypeList = new ArrayList&lt;MediaType&gt;();\n        mediaTypeList.add(new MediaType(&quot;text&quot;, &quot;plain&quot;, defaultCharset));\n        mediaTypeList.add(MediaType.ALL);\n        super.setSupportedMediaTypes(mediaTypeList);\n    }\n\n    protected void writeInternal(String s, HttpOutputMessage outputMessage) throws IOException {\n        Charset charset = Charset.forName(&quot;UTF-8&quot;);\n        FileCopyUtils.copy(s, new OutputStreamWriter(outputMessage.getBody(), charset));\n    }\n}</pre>\n\n<p>Spring配置</p>\n\n<pre class=\"brush: xhtml; toolbar: false\">&lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot;&gt;\n   &lt;property name=&quot;messageConverters&quot;&gt;\n      &lt;list&gt;\n         &lt;bean id=&quot;stringHttpMessageConverter&quot; class=&quot;org.mspring.platform.web.converter.StringHttpMessageConverter&quot;&gt;\n            &lt;constructor-arg value=&quot;UTF-8&quot; /&gt;\n         &lt;/bean&gt;\n      &lt;/list&gt;\n   &lt;/property&gt;\n&lt;/bean&gt;</pre>\n\n<p>这样配置就做好了，但是事不随人意，我测试之后乱码问题仍然还是存在。然后就是无线的蛋疼，折腾。。。 花了我一下午的时候，还是没有找到问题的所在。</p>\n\n<p>有心栽花花不成，无心插柳柳成荫。今天上午看到了一篇关于Springmvc的文章，找到了问题的所在。原来是我spring配置中</p>\n\n<p>&lt;mvc:annotation-driven conversion-service=&quot;conversionService&quot; /&gt;</p>\n\n<p>和：</p>\n\n<p>&lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot;&gt;。。。</p>\n\n<p>配置重复了。那篇文章中是这么描述的：</p>\n\n<blockquote>\n  <p>&lt;mvc:annotation-driven/&gt;是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。&lt;mvc:annotation-driven/&gt;会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter两个bean,是spring MVC为@Controllers分发请求所必须的。并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。</p>\n</blockquote>\n\n<p>原来我的配置还停留在spring初学者的阶段。。。看来我要好好学习了。好了找到错误的原因了，那么接下来就该去验证了，希望这次能够通过。。。</p>','2012-08-02 15:15:37','2012-08-02 15:15:37',NULL,NULL,'publish',NULL,'Springmvc AnnotationMethodHandlerAdapter配置不起作用','/post/2012/7/14/1344938579593.html',1,3),(173,0,'open','<p><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/1.jpg\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"1\" border=\"0\" alt=\"1\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/1_thumb.jpg\" width=\"302\" height=\"454\" /></a><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/2.jpg\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"2\" border=\"0\" alt=\"2\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/2_thumb.jpg\" width=\"304\" height=\"453\" /></a><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/3.jpg\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"3\" border=\"0\" alt=\"3\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/3_thumb.jpg\" width=\"303\" height=\"452\" /></a></p>  <p>&#160;</p>  <p>还有巨多的美女....&#160;&#160; <a href=\"http://games.qq.com/zt2012/chinajoy2012/sg.htm\">http://games.qq.com/zt2012/chinajoy2012/sg.htm</a></p>','2012-07-27 12:39:08','2012-07-27 12:39:08',NULL,NULL,'publish',NULL,'showgril亮瞎你的眼...','/post/2012/7/14/1344938579649.html',1,4),(174,0,'open','昨天刚发表日志说我博客的百度快照一直停留在7月13号，没想到今天早上来查看的时候，我的百度快照已经跟新了。\n\n看来百度还是不敢做的太过火哈。','2012-07-26 08:24:31','2012-08-07 08:42:33',NULL,NULL,'publish',NULL,'百度快照终于跟上来了','/post/2012/7/14/1344938579745.html',1,9),(175,0,'open','<p>最近我的博客一直更新的比较勤，但是我最近两周几乎每天都在看我博客的百度快照，快照一直停留在7月13号。。。。。</p>  <p>浪费我感情了，我好不容易下定决心想好好的写博客，结果百度不给面子啊。</p>  <p>今天在站长交流群中聊天，终于让我找到平衡了。原来发生这种情况的，不是只是我一个人。</p>  <p>原来是由于百度大规模K站的原因，于是我查了几个平时发展的很不错的博友的网站， 发现他们的也都是出现这个情况，快照也都停留在7月13号，一下引用的是论坛中的一段消息：</p>  <p>&#160;</p>  <blockquote>   <p>6月28号百度大规模k站以后，一直没有恢复的迹象，到了7月13号百度k站规模更大，有人统计这次百度大调整有百分之八十的网站都或多或少的收到牵连，而个人站长都是依靠百度的搜索引擎获取流量来赚取广告费的，是个人站长的主要收入来源，这次百度k站，影响了大部分站长的收入。于是站长们向百度提出宣战，7.18日恶意点击竞价排名，逼退广告主停止百度竞价。</p> </blockquote>  <p>看来，群众的力量是无限的，百度牛， 网友还是更牛滴，总是有惩罚百度的办法， 希望百度经快恢复正常快照吧。</p>','2012-07-25 21:46:30','2012-07-25 21:46:31',NULL,NULL,'publish',NULL,'为什么我博客的百度快照一直停留在7月13号','/post/2012/7/14/1344938579802.html',1,0),(176,0,'open','<p>如果你在澳大利亚电子产品经销商Kogan的网站上进行网购的话，使用IE7的用户们可能会“惊喜”地发现他们需要多付6.8%的钱。</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/image3.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/image_thumb3.png\" width=\"605\" height=\"392\" /></a></p>  <p><font size=\"4\">收钱的理由其实非常合理：</font></p>  <blockquote>   <p>     <br />好像你昏迷了5年多？咋到现在还用着IE7？为了让互联网环境更加和谐，我们将对您在Kogan.com的购买收      <br />取6.8%的税。      <br />我们费了这么大工夫让网站在IE7下看起来和其他浏览器的显示效果一样，你们理应付给我们辛苦费！</p> </blockquote> 如果不想花这笔“冤枉钱”，Kogan 建议更换其他浏览器，如Chrome、Firefox、Safari、Opera。  <br />Kogan 这个做法，Web前端开发者一定会非常认同，虽然微软一再敦促用户升级至最新的IE版本，但是仍有大  <br />量的IE6/7用户存在，在国内，这个数据要更多。为了照顾这个份额不小的用户群，开发者需要做大量的CSS  <br />hack工作。  <br />收额外费用不失为加速老版本IE退出市场的好方法，是不是应该对IE6用户收取更多的费用呢？','2012-07-23 13:08:57','2012-07-23 13:08:58',NULL,NULL,'publish',NULL,'还在用IE7？&ldquo;那么请付给我们辛苦费！&rdquo;','/post/2012/7/14/1344938579858.html',1,0),(177,0,'open','<blockquote>   <p>没事一如既往的捣腾自己的小程序，但是这次遇到一个问题（以前也遇到过，但是忘记怎么解决了）。在我的web应用程序启动之后，在完成固定次数的数据操作之后（例如固定20次查询），程序就会卡死。于是开始了我曲折的debug过程。</p>    <p>首先解决为何我的程序在做固定次数的数据查询之后就会卡死的问题，我的程序使用springmvc+hibernate写的，数据库使用的是mysql。首先排除mysql的问题，因为我其他应用程序也使用的是该mysql服务，其他程序很正常。既然不是数据库的问题，那么肯定就是我代码的问题啦。我程序的数据源是在spring中配置的dbcp数据源，配置文件如下：</p>    <pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;!-- datasource --&gt;\n&lt;bean id=&quot;dataSource&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot; destroy-method=&quot;close&quot;&gt;\n	&lt;!-- connection info --&gt;\n	&lt;property name=&quot;driverClassName&quot; value=&quot;${jdbc.driver}&quot; /&gt;\n	&lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot; /&gt;\n	&lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot; /&gt;\n	&lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot; /&gt;\n	&lt;!-- connection pooling info --&gt;\n	&lt;property name=&quot;maxIdle&quot; value=&quot;${dbcp.maxIdle}&quot; /&gt;\n	&lt;property name=&quot;maxActive&quot; value=&quot;${dbcp.maxActive}&quot; /&gt;\n	&lt;property name=&quot;defaultAutoCommit&quot; value=&quot;false&quot; /&gt;\n	&lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;3600000&quot; /&gt;\n	&lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;3600000&quot; /&gt;\n&lt;/bean&gt;\n\n\n### mysql\nhibernate.dialect=org.hibernate.dialect.MySQL5Dialect\nhibernate.show_sql=true\nhibernate.format_sql=false\nhibernate.jdbc.fetch_size=25\nhibernate.jdbc.batch_size=25\nhibernate.cache.use_query_cache=true\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc\\:mysql\\://127.0.0.1\\:3306/mlog?useUnicode\\=true&amp;characterEncoding\\=utf8\njdbc.username=root\njdbc.password=gaoyoubo</pre>\n\n  <p>应该也不是数据源配置的问题，因为我其他程序使用同样的配置很正常，所以排除数据源配置错误。</p>\n\n  <p>那么，接下来找其原因，我的程序在卡住的时候，控制台的日志都会停留在：<font color=\"#ff0000\">DEBUG [SessionFactoryUtils:320] Opening Hibernate Session</font>那么我想应该跟这句话有关系吧，这句话说明在打开hibernate session的时候程序卡住了。于是我在网上搜索一下这个问题，得到问题的原因是每次在使用完成session时，没有及时的释放资源，导致下次获取的时候获取不到。解决办法为在web.xml中添加一个filter配置，配置文件如下：</p>\n\n  <pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;filter&gt;\n	&lt;filter-name&gt;openSessionInViewFilter&lt;/filter-name&gt;\n	&lt;filter-class&gt;org.springframework.orm.hibernate3.support.OpenSessionInViewFilter&lt;/filter-class&gt;\n	&lt;init-param&gt;\n		&lt;param-name&gt;singleSession&lt;/param-name&gt;   \n		&lt;param-value&gt;true&lt;/param-value&gt;\n	&lt;/init-param&gt;\n&lt;/filter&gt;\n&lt;filter-mapping&gt;\n	&lt;filter-name&gt;openSessionInViewFilter&lt;/filter-name&gt;\n	&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n&lt;/filter-mapping&gt;</pre>\n\n  <p>该配置是限定在每次请求中只使用一个session，切在完成请求后，filter会自动做session.flush()操作，释放资源。注意filter中配置的参数singleSession的值必须为true，否则该配置将不会生效。</p>\n\n  <p>添加完该配置后，重新编译运行程序，果然上面的问题解决了。但是问题还没结束，在做完以上配置之后，做数据持久化时，系统会抱一个错误，错误信息如下：</p>\n\n  <pre class=\"brush: ruby; showcolumns: true; toolbar: false; highlight: [1]\">org.springframework.dao.InvalidDataAccessApiUsageException: Write operations are not allowed in read-only mode (FlushMode.MANUAL): Turn your Session into FlushMode.COMMIT/AUTO or remove \'readOnly\' marker from transaction definition.\n	at org.springframework.orm.hibernate3.HibernateTemplate.checkWriteOperationAllowed(HibernateTemplate.java:1175)\n	at org.springframework.orm.hibernate3.HibernateTemplate$12.doInHibernate(HibernateTemplate.java:685)\n	at org.springframework.orm.hibernate3.HibernateTemplate$12.doInHibernate(HibernateTemplate.java:1)\n	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)\n	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)\n	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:683)\n	at org.mspring.platform.persistence.hibernate.service.AbstractHibernateService.save(AbstractHibernateService.java:74)\n	at org.mspring.mlog.service.impl.CatalogServiceImpl.createCatalog(CatalogServiceImpl.java:34)\n	at org.mspring.mlog.web.module.admin.CatalogWidget.doCreateCatalog(CatalogWidget.java:98)\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n	at java.lang.reflect.Method.invoke(Method.java:597)</pre>\n\n  <p>该日志的意思是：在只读模式下（FlushMode.NEVER/MANUAL）写操作不被允许：把你的Session改成FlushMode.COMMIT/AUTO或者清除事务定义中的readOnly标记。 看到这个问题我的第一反映就是spring的事务没有配置好，但是我检查了一下我的配置文件，事务的配置确实是没有问题的。</p>\n\n  <p>这时我就不得不佩服网络的力量了，我在网上找到了错误原因和解决办法，这个问题是我们上面配置<font color=\"#ff0000\">OpenSessionInViewFilter</font>造成的，OpenSessionInViewFilter在getSession的时候,会把获取回来的session的flush mode 设为FlushMode.NEVER。然后把该sessionFactory绑定到TransactionSynchronizationManager，使request的整个过程都使用同一个session，在请求过后再接除该sessionFactory的绑定，最后closeSessionIfNecessary根据该session是否已和transaction绑定来决定是否关闭session。在这个过程中，若HibernateTemplate 发现自当前session有不是readOnly的transaction，就会获取到FlushMode.AUTO Session，使方法拥有写权限。也即是，如果有不是readOnly的transaction就可以由Flush.NEVER转为Flush.AUTO,拥有insert,update,delete操作权限，如果没有transaction，并且没有另外人为地设flush model的话，则doFilter的整个过程都是Flush.NEVER。所以受transaction(声明式的事务)保护的方法有写权限，没受保护的则没有。</p>\n\n  <p>解决方法就是修改一下我们刚刚配置的filter，将其修改成如下配置：</p>\n\n  <pre class=\"brush: c-sharp; showcolumns: true; toolbar: false\">&lt;filter&gt;\n	&lt;filter-name&gt;openSessionInViewFilter&lt;/filter-name&gt;\n	&lt;filter-class&gt;org.springframework.orm.hibernate3.support.OpenSessionInViewFilter&lt;/filter-class&gt;\n	&lt;init-param&gt;\n		&lt;param-name&gt;sessionFactoryBeanName&lt;/param-name&gt;\n		&lt;param-value&gt;sessionFactory&lt;/param-value&gt;\n	&lt;/init-param&gt;\n	&lt;init-param&gt;\n		&lt;param-name&gt;singleSession&lt;/param-name&gt;   \n		&lt;param-value&gt;true&lt;/param-value&gt;\n	&lt;/init-param&gt;\n	&lt;init-param&gt;\n		&lt;param-name&gt;flushMode&lt;/param-name&gt;\n		&lt;param-value&gt;AUTO&lt;/param-value&gt;\n	&lt;/init-param&gt;\n&lt;/filter&gt;\n&lt;filter-mapping&gt;\n	&lt;filter-name&gt;openSessionInViewFilter&lt;/filter-name&gt;\n	&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n&lt;/filter-mapping&gt;</pre>\n\n  <p>&#160;</p>\n\n  <p>到这里， 这个问题就完全解决了。。。</p></blockquote>','2012-07-20 13:11:52','2012-07-20 13:11:52',NULL,NULL,'publish',NULL,'曲折的debug过程','/post/2012/7/14/1344938580064.html',1,1),(178,0,'open','<p>&#160;</p>  <blockquote>   <p>自己没事的时候一直在写我的blog程序，我的程序后台管理界面的属性菜单是保存在数据库中的，这样方便管理属性菜单、方便做权限控制。我们如果想添加一个菜单项，只许在数据库中配置一下即可。</p>    <p>下图即为加载成功后的属性菜单图：</p>    <p><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/image1.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/image_thumb1.png\" width=\"149\" height=\"244\" /></a></p>    <p>下面讲解一下如果完整该树形菜单的加载。</p> </blockquote>  <p>1、首先准备树形菜单所用到的JavaScript控件、我这里用到的是jquery-zTree，这个控件我们可以在这里进行下载：<a href=\"http://www.ztree.me\">http://www.ztree.me</a>，这是该控件的官网， 网站上有详细的API、使用教程以及Demo。</p>  <p>2、定义数据表并插入属性菜单数据，表结构以及数据如下：</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/image2.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/image_thumb2.png\" width=\"743\" height=\"309\" /></a></p>  <p>3、编写试题类代码。</p>  <pre class=\"brush: java; showcolumns: true; toolbar: false\">/**\n * \n */\npackage org.mspring.mlog.entity;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n/**\n * @author Gao Youbo\n * @since 2012-7-16\n * @Description\n * @TODO\n */\n@Entity\n@Table(name = &quot;tree_item&quot;)\npublic class TreeItem {\n    private String id;\n    private String name;\n    private Long parent;\n    private Long order;\n    private String call;\n    private Long type;\n    private Boolean deleted;\n    private String icon;\n    private Boolean open;\n    private String target;\n\n    @Id\n    @Column(name = &quot;id&quot;, unique = true, nullable = false, length = 100)\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    @Column(name = &quot;name&quot;, length = 200, nullable = false)\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    @Column(name = &quot;parent&quot;, length = 200)\n    public Long getParent() {\n        return parent;\n    }\n\n    public void setParent(Long parent) {\n        this.parent = parent;\n    }\n\n    @Column(name = &quot;order&quot;, length = 200, nullable = false)\n    public Long getOrder() {\n        return order;\n    }\n\n    public void setOrder(Long order) {\n        this.order = order;\n    }\n\n    @Column(name = &quot;call&quot;, length = 500)\n    public String getCall() {\n        return call;\n    }\n\n    public void setCall(String call) {\n        this.call = call;\n    }\n\n    @Column(name = &quot;type&quot;, length = 2)\n    public Long getType() {\n        return type;\n    }\n\n    public void setType(Long type) {\n        this.type = type;\n    }\n\n    @Column(name = &quot;deleted&quot;, length = 1)\n    public Boolean getDeleted() {\n        return deleted;\n    }\n\n    public void setDeleted(Boolean deleted) {\n        this.deleted = deleted;\n    }\n\n    @Column(name = &quot;icon&quot;, length = 100)\n    public String getIcon() {\n        return icon;\n    }\n\n    public void setIcon(String icon) {\n        this.icon = icon;\n    }\n\n    @Column(name = &quot;open&quot;, length = 1)\n    public Boolean getOpen() {\n        return open;\n    }\n\n    public void setOpen(Boolean open) {\n        this.open = open;\n    }\n\n    @Column(name = &quot;target&quot;, length = 100)\n    public String getTarget() {\n        return target;\n    }\n\n    public void setTarget(String target) {\n        this.target = target;\n    }\n}</pre>\n\n<p>4、编写数据库查询方法，查询数据库中树形菜单项的定义，并将其封装到List集合中，我这里使用的是Hibernate查询。</p>\n\n<pre class=\"brush: java; showcolumns: true; toolbar: false\">public List&lt;TreeItem&gt; findAllItems() {\n        // TODO Auto-generated method stub\n        String queryString = &quot;select t from TreeItem t where t.deleted = false&quot;;\n        return find(queryString);\n    }</pre>\n\n\n\n<p>这里我们如查询的是数据库中定义的所有属性菜单。 我们要想加上权限控制的话， 只需在数据库中添加一个TreeItem和User的关联表，每次加载TreeItem的时候根据用户加载即可。</p>\n\n<p>5、将数据传递到页面，并加载出属性菜单。将数据传递到页面的方法有很多，例如servlet，struts，springmvc 等。。。 可根据项目需要选择一个即可。下面是加载属性菜单的页面例子， 页面我使用的是freemarker模板引擎</p>\n\n<pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;${base}/script/jquery-zTree/zTreeStyle/zTreeStyle.css&quot;&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;${base}/script/jquery-zTree/jquery.ztree.all-3.2.min.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n	var setting = {\n		view: {\n			showLine: true,\n			selectedMulti: false,\n			dblClickExpand: false\n		},\n		data: {\n			simpleData: {\n				enable: true\n			}\n		},\n		callback: {\n			onClick: onClick\n		}\n	};\n	var zNodes =[\n		&lt;#if items?exists&gt;\n			&lt;#list items as item&gt;\n				&lt;#if item_has_next&gt;\n					{ id:${item.id}, pId:${item.parent?default(&quot;0&quot;)}, name:\'${item.name?default(&quot;&quot;)}\', url:\'${item.call?default(&quot;&quot;)}\', open:${item.open?string(&quot;true&quot;,&quot;false&quot;)}, target:\'${item.target?default(&quot;&quot;)}\' },\n				&lt;#else&gt;\n					{ id:${item.id}, pId:${item.parent?default(&quot;0&quot;)}, name:\'${item.name?default(&quot;&quot;)}\', url:\'${item.call?default(&quot;&quot;)}\', open:${item.open?string(&quot;true&quot;,&quot;false&quot;)}, target:\'${item.target?default(&quot;&quot;)}\' }\n				&lt;/#if&gt;\n			&lt;/#list&gt;\n		&lt;/#if&gt;\n	];\n\n	function onClick(e,treeId, treeNode) {\n		var zTree = $.fn.zTree.getZTreeObj(&quot;treeMenu&quot;);\n		zTree.expandNode(treeNode);\n	}\n\n	$(document).ready(function(){\n		$.fn.zTree.init($(&quot;#treeMenu&quot;), setting, zNodes);\n	});\n&lt;/script&gt;\n\n&lt;div class=&quot;treeMenuDiv&quot;&gt;\n	&lt;ul id=&quot;treeMenu&quot; class=&quot;ztree&quot; &gt;&lt;/ul&gt;\n&lt;/div&gt;</pre>\n\n<p>&#160;</p>\n\n<p>到这里一个树形菜单就完成了。。。</p>','2012-07-17 09:11:59','2012-07-17 09:12:02',NULL,NULL,'publish',NULL,'使用freemarker从数据库加载属性菜单','/post/2012/7/14/1344938580108.html',1,0),(179,0,'open','<p style=\"padding-left: 30px;\">简述：月薪八千遭父奚落，北大月薪八千，匿名网友：我爸觉得我北大博士毕业，一个月不拿个1万元以上就是白念书了。爸爸，对不起!我北大毕业，但没能挣大钱当大官。爸爸，对不起!我北大毕业，但没能挣大钱当大官北大毕业…</p>\n         月薪八千遭父奚落，北大月薪八千，匿名网友：我爸觉得我北大博士毕业，一个月不拿个1万元以上就是白念书了。爸爸，对不起!我北大毕业，但没能挣大钱当大官。\n\n<strong>爸爸，对不起!我北大毕业，但没能挣大钱当大官</strong>\n\n北大毕业生匿名发帖引热议 显露儿女既厌恶父母为他们设计的人生又担心辜负父母矛盾心情\n\n本报北京讯(记者谢绮珊)“爸爸，对不起，我北大毕业，但我没能挣大钱、当大官。”又到一年毕业季，近日，北京大学未名BBS的匿名板块上发出一个帖子，题为“你们的父母也这么想吗”。帖子作者在帖子中写道：“本人，今年小硕毕业，找了份起薪8000多元/月、年底会有些奖金的工作。未来会有些许上升空间。算是比上不足比下有余，本来对物质没有太多期望。但是我爸爸早就在亲戚面前夸下海口，大约是我每年赚上百万毫无压力之类……知道我的offer状况之后，更是对我恶语相加，认为我给他丢了脸……打了好多电话骚扰我……他还说北大的学生应该去当市长、省长……”\n\n这个帖子引发北大学生和广大网友的热议。很多人表示“原来北大人也压力山大啊”！他们在发言中流露出既厌恶父母为他们设计人生，又担心辜负父母的矛盾心情。\n\n有网友跟帖说：“父母跟别人拼了20多年的儿女，学习都是最好的，他们觉得赢了。儿女毕业工作后他们才知道，生活上还是拼不过煤老板的儿女。现在他们觉得可以在儿女的婚姻上拼一把，就千方百计阻挠儿女的正常感情，想让找个有钱的……”\n\n昨天，教育学者熊丙奇在接受本报记者采访时表示：“其实不仅仅是北大、清华，其他学校的毕业生也有如此遭遇。名校情结顺带提高了家长对子女就业的期望，当现实不尽如人意的时候，就会产生一种落差。如果大家认为上名校的目的就是升官发财，会导致对自身定位的错误，对教育的期望也会发生错误。”\n\n<strong>网友声音</strong>\n\n匿名网友：我爸觉得我北大博士毕业，一个月不拿个1万元以上就是白念书了。\n\n匿名网友：我今年和我男友结婚。我们都是研究生，我男朋友不想花家里的钱结婚，自己就那么几万元。但是家里人却因为我们在北大，觉得我们钱多得不得了似的。他们也不想想，我们还是研究生，我们一个月不花钱也没那么多钱。\n\n&nbsp;\n\n&nbsp;','2012-07-15 09:28:43','2012-07-15 09:28:43',NULL,NULL,'publish',NULL,'北大硕士月薪八千遭父奚落：爸爸 对不起','/post/2012/7/14/1344938580153.html',1,0),(180,0,'open','<blockquote>   <p>刚刚在百度知道上看到有人问了一个问题“怎么使用Java执行定时任务”，我之前在项目中解决过这样的问题，但是一直没有将解决方案终结成文档，趁着这个机会总结一下。</p> </blockquote>  <p>&#160;&#160;&#160;&#160;&#160;&#160; 我的Java定时任务解决方案使用的是Spring+Quartz，了解Spring Quartz解决方案必须明白三个概念：Job(任务)、Trigger(触发器)，Scheduler(调度器)。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160; 1，Job(任务)</p>  <blockquote>   <p>很好理解，Job的意思就是我们要定时执行的操作了，例如定时更新数据、定时同步数据、定时调用webservice接口…</p>    <p>实现一个Job很容易，我们只需新建一个类， 使其实现接口org.quartz.StatefulJob即可，下面是一个Job的示例</p>    <pre class=\"brush: javascript; showcolumns: true; toolbar: false\">/**\n * \n */\npackage org.mspring.mlog.job;\n\nimport org.apache.log4j.Logger;\nimport org.mspring.mlog.job.command.UpdateCommentNumCommand;\nimport org.mspring.platform.job.command.Command;\nimport org.quartz.JobExecutionContext;\nimport org.quartz.JobExecutionException;\nimport org.quartz.StatefulJob;\n\n/**\n * @author Gao Youbo\n * @since May 5, 2012\n */\npublic class UpdateCommentNumJob implements StatefulJob {\n    private static final Logger log = Logger.getLogger(UpdateCommentNumJob.class);\n\n    /*\n     * 该方法为实现接口的方法，在该方法中可编写我们需要定时执行的任务\n     * (non-Javadoc)\n     * \n     * @see org.mspring.platform.job.HibernateAwareJob#doExecute(org.quartz.JobExecutionContext)\n     */\n    @Override\n    protected void doExecute(JobExecutionContext context) throws JobExecutionException {\n        // TODO Auto-generated method stub\n        log.debug(&quot;############################################ execute job UpdateCommentNumJob&quot;);\n        try {\n            Command command = new UpdateCommentNumCommand();\n            command.execute();\n        } catch (Exception e) {\n            // TODO: handle exception\n            e.printStackTrace();\n            log.warn(&quot;execute job UpdateCommentNumJob failure!&quot;, e);\n        }\n    }\n\n}</pre>\n\n  <p>这样要定时执行的任务就写好了，接下来是在Spring配置文件中配置上该Job，以下为Spring Job的配置示例：</p>\n\n  <p>&#160;</p>\n\n  <pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;!-- 注意这里Bean的class固定指向org.springframework.scheduling.quartz.JobDetailBean --&gt;\n&lt;bean id=&quot;updateCommentNumJob&quot; class=&quot;org.springframework.scheduling.quartz.JobDetailBean&quot;&gt;\n	&lt;!-- 这里的jobClass就定义了我们要定时执行的是哪个类 --&gt;\n	&lt;property name=&quot;jobClass&quot; value=&quot;org.mspring.mlog.job.UpdateCommentNumJob&quot; /&gt;\n&lt;/bean&gt;</pre>\n</blockquote>\n\n<p>&#160;&#160;&#160;&#160; 2，Trigger(触发器)</p>\n\n<blockquote>\n  <p>在Job编写完成之后，下面就该定义什么时候去执行Job了。那么这个功能就交给触发器来完成。</p>\n\n  <p>定义一个触发器不需要我们任何的编码操作， 只许在spring配置文件中进行一下配置即可，触发器的配置方法有两种（我所知道的只有这两种方法，不止是否还另外有方法，不过这两种方法完全能够满足我们所遇到的需求）</p>\n\n  <p>触发器配置方法一：</p>\n\n  <p>第一种方法是规定每隔多少时间执行一次调度，以下为第一种方法的配置示例：</p>\n\n  <pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;!-- 这里使用的是SimpleTriggerBean，该方法可直接指定多久执行一次Job --&gt;\n&lt;bean id=&quot;updateCommentNumTrigger&quot; class=&quot;org.springframework.scheduling.quartz.SimpleTriggerBean&quot;&gt;\n	&lt;!-- 这里执行的就是我们在第一步所配置的Job --&gt;\n	&lt;property name=&quot;jobDetail&quot; ref=&quot;updateCommentNumJob&quot; /&gt;\n	&lt;!-- 这里指定的是在spring容器启动后多少时间开始执行任务，单位为毫秒 --&gt;\n	&lt;property name=&quot;startDelay&quot; value=&quot;3600000&quot;&gt;&lt;/property&gt;\n	&lt;!-- 这指定的是每个多久执行一直Job任务，单位为毫秒 --&gt;\n	&lt;property name=&quot;repeatInterval&quot; value=&quot;3600000&quot;&gt;&lt;/property&gt;\n&lt;/bean&gt;</pre>\n\n  <p>&#160;</p>\n\n  <p>触发器配置方法二：</p>\n\n  <p>在讲解第二种触发器配置方法之前，我们先讲一下Corn表达式，corn表达式是个数字和符号组成的字符串，该表达式能够详细的定义Job方法执行的时间规则。关于corn表达式的详细内容请见文章“<a href=\"http://www.mspring.org/index.php/archives/825.html\" target=\"_blank\">quartz corn表达式</a>”。</p>\n\n  <p>以下为触发器的第二种配置方法示例：</p>\n\n  <pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;!-- 这里使用的是CronTriggerBean，该方法可配置corn表达式 --&gt;\n&lt;bean id=&quot;autoDfylDataTrigger&quot; class=&quot;org.springframework.scheduling.quartz.CronTriggerBean&quot;&gt;\n	&lt;!-- 这里执行的就是我们在第一步所配置的Job --&gt;\n	&lt;property name=&quot;jobDetail&quot; ref=&quot;updateCommentNumJob&quot;/&gt;	\n	&lt;property name=&quot;cronExpression&quot;&gt;\n		&lt;!-- 这里配置的就是 在每天的夜里23点30分执行Job任务 --&gt;\n		&lt;value&gt;0 30 23 * * ?&lt;/value&gt;	\n	&lt;/property&gt;\n&lt;/bean&gt;</pre>\n</blockquote>\n\n<p>&#160;&#160;&#160; 3，Scheduler(调度器)</p>\n\n<blockquote>\n  <p>在完成Job和触发器的开发和配置之后，那么接下来就是怎么去执行这个触发器了，这个工作是由调度器来完成的。同样的，调度器也不需要我们任何的编码操作，只需要我们在spring的配置文件中配置一下即可，以下为调度器Spring的配置示例：</p>\n\n  <pre class=\"brush: xhtml; showcolumns: true; toolbar: false\">&lt;bean id=&quot;scheduler&quot; class=&quot;org.springframework.scheduling.quartz.SchedulerFactoryBean&quot;&gt;\n	&lt;!-- 这里配置的就是我们在第二步定义的触发器 --&gt;\n	&lt;property name=&quot;triggers&quot;&gt;\n		&lt;list&gt;\n			&lt;ref bean=&quot;updateCommentNumTrigger&quot;/&gt;\n		&lt;/list&gt;\n	&lt;/property&gt;\n	&lt;!-- schedulerContextAsMap指的是我们在执行Job过程中需要依赖的对象，比如这里需要依赖sessionFactory --&gt;\n	&lt;property name=&quot;schedulerContextAsMap&quot;&gt;\n		&lt;map&gt;\n			&lt;entry key=&quot;sessionFactory&quot;&gt;\n				&lt;ref bean=&quot;sessionFactory&quot;/&gt;\n			&lt;/entry&gt;\n		&lt;/map&gt;\n	&lt;/property&gt;\n&lt;/bean&gt;</pre>\n</blockquote>\n\n<p>到这里一个定时任务就执行开发完成了。</p>','2012-07-11 10:52:44','2012-07-11 10:52:51',NULL,NULL,'publish',NULL,'使用Spring Quartz执行定时Job任务','/post/2012/7/14/1344938580199.html',1,0),(181,0,'open','<p>一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素。   <br />按顺序依次为    <br />秒（0~59）    <br />分钟（0~59）    <br />小时（0~23）    <br />天（月）（0~31，但是你需要考虑你月的天数）    <br />月（0~11）    <br />天（星期）（1~7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）    <br />7.年份（1970－2099）    <br />其中每个元素可以是一个值(如6),一个连续区间(9-12),一个间隔时间(8-18/4)(/表示每隔4小时),一个列表(1,3,5),通配符。由于&quot;月份中的日期&quot;和&quot;星期中的日期&quot;这两个元素互斥的,必须要对其中一个设置?.    <br />0 0 10,14,16 * * ? 每天上午10点，下午2点，4点    <br />0 0/30 9-17 * * ?&#160;&#160; 朝九晚五工作时间内每半小时    <br />0 0 12 ? * WED 表示每个星期三中午12点    <br />&quot;0 0 12 * * ?&quot; 每天中午12点触发    <br />&quot;0 15 10 ? * *&quot; 每天上午10:15触发    <br />&quot;0 15 10 * * ?&quot; 每天上午10:15触发    <br />&quot;0 15 10 * * ? *&quot; 每天上午10:15触发    <br />&quot;0 15 10 * * ? 2005&quot; 2005年的每天上午10:15触发    <br />&quot;0 * 14 * * ?&quot; 在每天下午2点到下午2:59期间的每1分钟触发    <br />&quot;0 0/5 14 * * ?&quot; 在每天下午2点到下午2:55期间的每5分钟触发    <br />&quot;0 0/5 14,18 * * ?&quot; 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发    <br />&quot;0 0-5 14 * * ?&quot; 在每天下午2点到下午2:05期间的每1分钟触发    <br />&quot;0 10,44 14 ? 3 WED&quot; 每年三月的星期三的下午2:10和2:44触发    <br />&quot;0 15 10 ? * MON-FRI&quot; 周一至周五的上午10:15触发    <br />&quot;0 15 10 15 * ?&quot; 每月15日上午10:15触发    <br />&quot;0 15 10 L * ?&quot; 每月最后一日的上午10:15触发    <br />&quot;0 15 10 ? * 6L&quot; 每月的最后一个星期五上午10:15触发    <br />&quot;0 15 10 ? * 6L 2002-2005&quot; 2002年至2005年的每月的最后一个星期五上午10:15触发    <br />&quot;0 15 10 ? * 6#3&quot; 每月的第三个星期五上午10:15触发    <br />有些子表达式能包含一些范围或列表    <br />例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”    <br />“*”字符代表所有可能的值    <br />因此，“*”在子表达式（月）里表示每个月的含义，“*”在子表达式（天（星期））表示星期的每一天    <br />“/”字符用来指定数值的增量    <br />例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样    <br />“？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值    <br />当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”    <br />“L” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写    <br />但是它在两个子表达式里的含义是不同的。    <br />在天（月）子表达式中，“L”表示一个月的最后一天    <br />在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT    <br />如果在“L”前有具体的内容，它就具有其他的含义了    <br />例如：“6L”表示这个月的倒数第６天，“ＦＲＩＬ”表示这个月的最一个星期五    <br />注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题    <br />字段&#160;&#160; 允许值&#160;&#160; 允许的特殊字符    <br />秒&#160;&#160;&#160; 0-59&#160;&#160;&#160; , - * /    <br />分&#160;&#160;&#160; 0-59&#160;&#160;&#160; , - * /    <br />小时&#160;&#160;&#160; 0-23&#160;&#160;&#160; , - * /    <br />日期&#160;&#160;&#160; 1-31&#160;&#160;&#160; , - * ? / L W C    <br />月份&#160;&#160;&#160; 1-12 或者 JAN-DEC&#160;&#160;&#160; , - * /    <br />星期&#160;&#160;&#160; 1-7 或者 SUN-SAT&#160;&#160;&#160; , - * ? / L C #    <br />年（可选）&#160;&#160;&#160; 留空, 1970-2099&#160;&#160;&#160; , - * /</p>','2012-07-11 10:40:30','2012-07-11 10:40:30',NULL,NULL,'publish',NULL,'quartz corn表达式','/post/2012/7/14/1344938580249.html',1,0),(182,0,'open','<p>由于从6月30日开始全球同步多出1秒钟(即“闰秒”)的时间，LinkedIn、Foursquare、Reddit、Mozilla、Yelp和Gawke等大量网站遭遇了技术故障。</p>  <p>闰秒是对“协调世界时”(UTC)所做出的基本调整，以便令其与太阳时间保持同步，但这多出来的1秒钟给各类网络服务器带来了问题。据美国科技网站 Mashable报道，这一现象导致了Java和Cassandra问题，甚至于Gawker整个网站瘫痪了45分钟。Yelp和Stumbleupon 等网站也出现了技术故障。</p>  <p>上一次时钟增加1秒钟的时间还是在2008年，网站在处理这种情况时出现问题十分常见，但总体而言，全球各地的网站始终可以顺利完成这种过渡。</p>','2012-07-09 08:09:30','2012-07-09 08:09:30',NULL,NULL,'publish',NULL,'闰秒导致多家知名网站遭遇技术故障','/post/2012/7/14/1344938580307.html',1,0),(183,0,'open','视频地址： http://www.tudou.com/programs/view/SKp7fv1Y4tE/\n\n&nbsp;\n\n世界之所以能够进步、能够发展，就是因为有了女人的存在，\n男人白天奔波，夜里操劳为的啥，还不是直接或间接，有意或是无意的\n为他们梦想的， 但是现实中还没有的，\n或者是他梦想的，而且已经在现实中找到的\n或是他们梦想的，而且也已经在现实中找到的，但是与他梦想不一样的\n或是不知道在哪里，存不存在，漂不漂亮的女孩子或女人\n可以吃得更好、穿得更好、睡得更好\n走得更少、住得更宽敞吗\n\n你想当年那么多希腊战士，浴血奋战，鲜血肥沃了大地\n\n还不是为了看看天下第一美女长的啥样，多大的力量\n\n&nbsp;\n\n&nbsp;','2012-07-07 05:02:12','2012-07-07 05:02:12',NULL,NULL,'publish',NULL,'很搞笑的一个视频。。。','/post/2012/7/14/1344938580363.html',1,0),(184,0,'open','<blockquote>   <p>更新内容</p>    <p>1、当不手动设置主题菜单时，菜单显示错乱问题      <br />2、主题设置项“列表页是否启用缩略图”无法设置问题       <br />3、修改Image Lazy Load报错问题       <br />4、调整文章列表页标题样式       <br />5、调整侧边栏样式</p>    <p>演示地址：<a href=\"http://www.mspring.org\">http://www.mspring.org</a></p>    <p>下载地址：<a title=\"http://115.com/file/e719n4k2#color-cloud-v1.4.3.zip\" href=\"http://115.com/file/e719n4k2#color-cloud-v1.4.3.zip\">http://115.com/file/e719n4k2#color-cloud-v1.4.3.zip</a></p>    <p>(注：下载地址使用的是115网盘，如连接失效请留言提醒，谢谢)</p></blockquote>','2012-07-05 05:50:21','2012-07-05 05:50:22',NULL,NULL,'publish',NULL,'wordpress主题color-cloud 1.4.3更新','/post/2012/7/14/1344938580417.html',1,0),(185,0,'open','<p>好吧， 我承认我自己写的wordpress主题<a href=\"http://www.mspring.org/index.php/archives/742.html\">Color-cloud</a>，不好看了。而且已经很久没有更新了。目前用这个主题的人也应该只有我一个吧。。。 </p>  <p>今天看到一款很喜欢的主题，我见异思迁了。。。 考虑要不要换过去呢？ </p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2012/07/image.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2012/07/image_thumb.png\" width=\"565\" height=\"299\" /></a></p>','2012-07-04 09:13:12','2012-07-04 09:13:12',NULL,NULL,'publish',NULL,'看到一款喜欢的皮肤，见异思迁了。','/post/2012/7/14/1344938580479.html',1,0),(186,0,'open','今天是我在全讯通华的最后一天了，庆祝一下。\n\n下周已我就要到大智慧上班了。','2012-06-29 07:15:20','2012-06-29 07:15:20',NULL,NULL,'publish',NULL,'全讯通华的最后一天。。。','/post/2012/7/14/1344938580611.html',1,1),(187,0,'open','<pre class=\"brush: sql; toolbar: false\">SELECT /*+ rule */ lpad(\' \',decode(l.xidusn ,0,3,0))||l.oracle_username User_name, \no.owner,o.object_name,o.object_type,s.sid,s.serial# \nFROM v$locked_object l,dba_objects o,v$session s \nWHERE l.object_id=o.object_id \nAND l.session_id=s.sid \nORDER BY o.object_id,xidusn DESC</pre>','2012-06-27 12:57:39','2012-06-27 12:57:40',NULL,NULL,'publish',NULL,'Oracle查询锁表','/post/2012/7/14/1344938580658.html',1,0),(188,0,'open','<p>Oracle在删除用户对象，或者drop表之后，磁盘上的空间并没有随着数据的删除而变大。 要想释放磁盘空间，执行一下两个步骤即可。 </p>  <p>1，首先查出个各数据文件占用的空间大小：</p>  <pre class=\"brush: sql; toolbar: false\">select /*+ ordered use_hash(a,b,c) */\na.file_id,a.file_name,a.filesize, b.freesize,\n(a.filesize-b.freesize) usedsize,\nc.hwmsize,\nc.hwmsize - (a.filesize-b.freesize) unsedsize_belowhwm,\na.filesize - c.hwmsize canshrinksize \nfrom \n(\nselect file_id,file_name,round(bytes/1024/1024) filesize from dba_data_files\n) a,\n(\nselect file_id,round(sum(dfs.bytes)/1024/1024) freesize from dba_free_space dfs\ngroup by file_id\n) b,\n(\nselect file_id,round(max(block_id)*8/1024) HWMsize from dba_extents\ngroup by file_id) c\nwhere a.file_id = b.file_id\nand a.file_id = c.file_id\norder by unsedsize_belowhwm desc</pre>\n\n<p>2， 执行雨区resize数据库空间</p>\n\n<pre class=\"brush: sql; toolbar: false\">alter database datafile \'D:\\APP\\ADMINISTRATOR\\ORADATA\\ORCL\\USERS01.DBF\' resize 300M;</pre>','2012-06-19 07:51:50','2012-06-19 07:51:52',NULL,NULL,'publish',NULL,'Oracle清理磁盘空间','/post/2012/7/14/1344938580705.html',1,0),(189,0,'open','<pre class=\"brush: xhtml; toolbar: false\">&lt;ss:bean id=\"create_time\" name=\"java.util.Date\"&gt;\n	&lt;ss:param name=\"create_time\"&gt;\n		&lt;ss:property value=\"creationTime\"/&gt;\n	&lt;/ss:param&gt;\n&lt;/ss:bean&gt;\n&lt;ss:date name=\"#create_time\" format=\"yyyy-mm-dd HH:mm:ss\"/&gt;</pre>\n<pre class=\"brush: xhtml; toolbar: false\"></pre>\nLong类型值：1334546562714\n\n转换后页面显示：2012-04-16 11:22:42','2012-04-16 02:05:37','2012-04-16 02:05:37',NULL,NULL,'publish',NULL,'struts2标签，将long类型的时间转换成String类型显示','/post/2012/7/14/1344938580757.html',1,0),(190,0,'open','<pre class=\"brush: java; toolbar: false\">/**\n * \n */\npackage org.mspring.platform.dao.support;\n\n/**\n * @author Gao Youbo\n * @since Mar 19, 2012\n */\npublic class Condition {\n    public static final String EXP_WHERE = &quot; WHERE &quot;;\n    public static final String EXP_OR = &quot; OR &quot;;\n    public static final String EXP_AND = &quot; AND &quot;;\n    public static final String EXP_LIKE = &quot; LIKE &quot;;\n    public static final String EXP_BETWEEN = &quot; BETWEEN &quot;;\n    public static final String EXP_EQ = &quot; = &quot;;\n    public static final String EXP_NOT_EQ = &quot; &lt;&gt; &quot;;\n    public static final String EXP_GREAT_THAN = &quot; &gt; &quot;;\n    public static final String EXP_GREAT_THAN_EQ = &quot; &gt;= &quot;;\n    public static final String EXP_LESS_THAN = &quot; &lt; &quot;;\n    public static final String EXP_LESS_THAN_EQ = &quot; &lt;= &quot;;\n    public static final String EXP_IN = &quot; IN &quot;;\n    public static final String EXP_IS_NULL = &quot; IS NULL &quot;;\n    public static final String EXP_IS_NOT_NULL = &quot; IS NOT NULL &quot;;\n    \n    public static final String EXP_BUILD_STRING = &quot;EXP_BUILD_STRING&quot;;\n    \n\n    private String field;\n    private String expression;\n    private Object value;\n\n    /**\n     * \n     */\n    public Condition(String field, String expression, Object value) {\n        // TODO Auto-generated constructor stub\n        this.field = field;\n        this.expression = expression;\n        this.value = value;\n    }\n\n    public String getField() {\n        return field;\n    }\n\n    public void setField(String field) {\n        this.field = field;\n    }\n\n    public String getExpression() {\n        return expression;\n    }\n\n    public void setExpression(String expression) {\n        this.expression = expression;\n    }\n\n    public Object getValue() {\n        return value;\n    }\n\n    public void setValue(Object value) {\n        this.value = value;\n    }\n\n}</pre>\n\n<p>&#160;</p>\n\n<p>&#160;</p>\n\n<p>&#160;</p>\n\n<p>&#160;</p>\n\n<pre class=\"brush: java; toolbar: false\">package org.mspring.platform.dao.support;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.mspring.platform.common.StringUtils;\n\npublic class QueryBuilder {\n    private List&lt;Sort&gt; sorts = new ArrayList&lt;Sort&gt;();\n    private List&lt;Condition&gt; conditions = new ArrayList&lt;Condition&gt;();\n\n    public boolean isConditionsEmpty() {\n        return this.conditions.isEmpty();\n    }\n\n    public boolean isOrdersEmpty() {\n        return this.sorts.isEmpty();\n    }\n\n    public List&lt;Condition&gt; getConditions() {\n        return conditions;\n    }\n\n    public List&lt;Sort&gt; getSorts() {\n        return sorts;\n    }\n\n    public QueryBuilder asc(String field) {\n        Sort sort = new Sort(field, Sort.ASC);\n        this.sorts.add(sort);\n        return this;\n    }\n\n    public QueryBuilder desc(String field) {\n        Sort sort = new Sort(field, Sort.DESC);\n        this.sorts.add(sort);\n        return this;\n    }\n\n    public QueryBuilder buildEqual(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_EQ, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildNotEqual(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_NOT_EQ, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildGreatThan(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_GREAT_THAN, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildLessThan(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_LESS_THAN, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildGreatThanOrEqual(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_GREAT_THAN_EQ, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildLessThanOrEqual(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_LESS_THAN_EQ, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildLike(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_LIKE, &quot;%&quot; + value + &quot;%&quot;);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildLeftPaddingLike(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_LIKE, value + &quot;%&quot;);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildRightPaddingLike(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_LIKE, &quot;%&quot; + value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildBetween(String field, Object begin, Object end) {\n        TuplePair&lt;Object, Object&gt; tuplePairValue = new TuplePair&lt;Object, Object&gt;(begin, end);\n        Condition condition = new Condition(field, Condition.EXP_BETWEEN, tuplePairValue);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildIN(String field, Object value) {\n        Condition condition = new Condition(field, Condition.EXP_IN, value);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildIsNull(String field) {\n        Condition condition = new Condition(field, Condition.EXP_IS_NULL, null);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildIsNotNull(String field) {\n        Condition condition = new Condition(field, Condition.EXP_IS_NOT_NULL, null);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildOR() {\n        Condition condition = new Condition(null, Condition.EXP_BETWEEN, null);\n        conditions.add(condition);\n        return this;\n    }\n\n    public QueryBuilder buildString(String hql) {\n        Condition condition = new Condition(null, Condition.EXP_BUILD_STRING, hql);\n        conditions.add(condition);\n        return this;\n    }\n\n    public TuplePair&lt;String, Object[]&gt; toString(Class entityClass) {\n        String entityName = entityClass.getSimpleName();\n        String entityAlias = StringUtils.uncapitalize(entityName);\n        StringBuffer hql = new StringBuffer();\n        hql.append(&quot; FROM &quot;).append(entityName).append(&quot; AS &quot;).append(entityAlias);\n        List values = new ArrayList();\n        int current;\n        if (!this.isConditionsEmpty()) {\n            hql.append(Condition.EXP_WHERE);\n            current = 1;\n            for (Condition condition : conditions) {\n                if (current &gt; 1 &amp;&amp; !Condition.EXP_OR.equals(condition.getExpression())) {\n                    hql.append(Condition.EXP_AND);\n                }\n                if (Condition.EXP_OR.equals(condition.getExpression())) {\n                    hql.append(Condition.EXP_OR);\n                }\n                if (Condition.EXP_IN.equals(condition.getExpression())) {\n                    hql.append(&quot; &quot;).append(condition.getField()).append(condition.getExpression()).append(&quot; (&quot;).append(&quot;?&quot;).append(&quot;)&quot;);\n                    values.add(condition.getValue());\n                } else if (Condition.EXP_BETWEEN.equals(condition.getExpression())) {\n                    hql.append(&quot; &quot;).append(condition.getField()).append(condition.getExpression()).append(&quot; &quot;).append(&quot;?&quot;).append(Condition.EXP_AND).append(&quot;?&quot;);\n                    TuplePair&lt;Object, Object&gt; valuePair = (TuplePair&lt;Object, Object&gt;) condition.getValue();\n                    values.add(valuePair.getTuple1());\n                    values.add(valuePair.getTuple2());\n                } else if (Condition.EXP_IS_NULL.equals(condition.getExpression())) {\n                    hql.append(&quot; &quot;).append(condition.getField()).append(condition.getExpression());\n                } else if (Condition.EXP_IS_NOT_NULL.equals(condition.getExpression())) {\n                    hql.append(&quot; &quot;).append(condition.getField()).append(condition.getExpression());\n                } else if (Condition.EXP_BUILD_STRING.equals(condition.getExpression())) {\n                    hql.append(&quot; &quot;).append(condition.getValue());\n                } else {\n                    hql.append(&quot; &quot;).append(condition.getField()).append(condition.getExpression()).append(&quot;?&quot;);\n                    values.add(condition.getValue());\n                }\n                current++;\n            }\n        }\n        if (!this.isOrdersEmpty()) {\n            hql.append(&quot; ORDER BY&quot;);\n            current = 1;\n            for (Sort sort : sorts) {\n                if (current &gt; 1) {\n                    hql.append(&quot;,&quot;);\n                }\n                hql.append(&quot; &quot;).append(sort.getField()).append(&quot; &quot;).append(sort.getOrder());\n                current++;\n            }\n        }\n        return new TuplePair(hql.toString(), values.toArray());\n    }\n}</pre>','2012-03-21 06:18:17','2012-03-21 06:18:18',NULL,NULL,'publish',NULL,'Hibernate QueryBuilder','/post/2012/7/14/1344938580804.html',1,0),(191,0,'open','<p>信阳的归属问题，经由湖北省代表何世涛在2011年人代会提出后，引起新的更大的一轮豫两省之争，亦置信阳于不尴不尬的境地。信阳不属于河南的5大理由：   <br />1.区位上，据信阳偏属南方，处于河南、湖北、安徽三省交界，为中原六省最重要交通要塞之一。湖北代表提出信阳位置比较特殊，虽说属于河南省，但却距河南省会郑州将近600公里，坐特快火车得耗时6个小时，而距湖北省会武汉却仅有90公里，火车仅需1个半小时；</p>  <p>   <br />2.文化上，信阳文化与中原文化的差异大。众所周知，河南是博大精深的中华文化的发源地，具有悠久的历史底蕴，可以说是中华文化的缩影。但是，信阳却是楚文化的发源地。楚文化在以中原文化的代表的河南自然得不到相应重视。作为湖南、湖北代表的皆是楚文化，是楚文化的拓展地，但都不是发源地，作为文化领头羊的信阳却隶属河南，置我们楚文化无何地？</p>  <p>   <br />3.农业上，在农作物方面，由于信阳位于秦岭---淮河以南，当属南方，信阳种植水稻等南方特有作物，与湖北更为相似。而河南主产小麦、玉米，在河南仅有信阳种植水稻。河南省农业厅对此并不太重视。</p>  <p>   <br />4.方言上，河南省除了信阳都使用的是河南话。信阳人作为尴尬的河南人却不会说河南话，不仅倍受其他豫言带城市排挤，更受河南省打压…据数据表明，河南省财政厅鲜对信阳拨款！</p>  <p>   <br />5.政治上，当初河南省政府承诺把信阳划分到河南后会优先发展信阳的保证并没有做到，对此，信阳人民很失望，大多数人都同意将信阳划分出去，可能更利于信阳发展。</p>','2012-03-17 01:04:40','2012-03-17 01:04:42',NULL,NULL,'publish',NULL,'湖北代表提出信阳划归湖北省','/post/2012/7/14/1344938580860.html',1,0),(192,0,'open','安装MySQL\n\nsudo apt-get install mysql-server\n\n这个应该很简单了，而且我觉得大家在安装方面也没什么太大问题，所以也就不多说了，下面我们来讲讲配置。\n\n配置MySQL\n\n注意，在Ubuntu下MySQL缺省是只允许本地访问的，如果你要其他机器也能够访问的话，那么需要改变/etc/mysql/my.cnf配置文件了！下面我们一步步地来：\n\n默认的MySQL安装之后根用户是没有密码的，所以首先用根用户进入：\n\n$mysql -u root\n\n在这里之所以用-u root是因为我现在是一般用户（firehare），如果不加-u root的话，mysql会以为是firehare在登录。注意，我在这里没有进入根用户模式，因为没必要。一般来说，对mysql中的数据库进行操作，根本没必要进入根用户模式，只有在设置时才有这种可能。\n\n进入mysql之后，最要紧的就是要设置Mysql中的root用户密码了，否则，Mysql服务无安全可言了。\n\nmysql&gt; GRANT ALL PRIVILEGES ON *.* TO root@localhost IDENTIFIED BY \"123456\";\n\n注意，我这儿用的是123456做为root用户的密码，但是该密码是不安全的，请大家最好使用大小写字母与数字混合的密码，且不少于8位。\n\n这样的话，就设置好了MySQL中的root用户密码了，然后就用root用户建立你所需要的数据库。我这里就以xoops为例：\n\nmysql&gt;CREATE DATABASE xoops；\n\nmysql&gt;GRANT ALL PRIVILEGES ON xoops.* TO xoops_root@localhost IDENTIFIED BY \"654321\";\n\n这样就建立了一个xoops_roots的用户，它对数据库xoops有着全部权限。以后就用xoops_root来对xoops数据库进行管理，而无需要再用root用户了，而该用户的权限也只被限定在xoops数据库中。\n\n如果你想进行远程访问或控制，那么你要做两件事：\n\n其一：\n\nmysql&gt;GRANT ALL PRIVILEGES ON xoops.* TO xoops_root@\"%\" IDENTIFIED BY \"654321\";\n\n允许xoops_root用户可以从任意机器上登入MySQL。\n\n其二：\n\n$sudo gedit /etc/mysql/my.cnf\n\n老的版本中\n\n&gt;skip-networking =&gt; # skip-networking\n\n新的版本中\n\n&gt;bind-address=127.0.0.1 =&gt; bind-address= 你机器的IP\n\n这样就可以允许其他机器访问MySQL了。','2012-03-10 00:10:13','2012-03-10 00:10:13',NULL,NULL,'publish',NULL,'ubuntu MySQL安装指南','/post/2012/7/14/1344938580913.html',1,0),(193,0,'open','<p>想给域名绑定到linux服务器上apache的子目录中，查了N久没有查到， 于是乎找到了下列代码。 </p>  <p>将代码放到apache网站根目录就行了。 </p>  <pre class=\"brush: php; collapse: true\">#启用rewrite引擎\nRewriteEngine On\n#www.xxx.com为你要指定到子目录的域名\nRewriteCond %{HTTP_HOST} ^(www.)?xxx.com$\n#cms为要绑定域名的子目录\nRewriteCond %{REQUEST_URI} !^/cms/\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ /cms/$1\nRewriteCond %{HTTP_HOST} ^(www.)?xxx.com$\nRewriteRule ^(/)?$ cms/ [L]</pre>\n\n<p><font size=\"5\" face=\"Cordia New\">that’s all.&#160; 简单吧。 </font></p>','2012-03-07 06:39:39','2012-03-07 06:52:45',NULL,NULL,'publish',NULL,'linux route我不会，我就会rewrite','/post/2012/7/14/1344938580967.html',1,0),(194,0,'open','<p><a>查看 Linux 内核路由表</a></p>  <p>使用下面的 route 命令可以查看 Linux 内核路由表。</p>  <pre># route</pre>\n\n<pre>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface\n192.168.0.0     *               255.255.255.0   U     0      0        0 eth0\n169.254.0.0     *               255.255.0.0     U     0      0        0 eth0\ndefault         192.168.0.1     0.0.0.0         UG    0      0        0 eth0</pre>\n\n<p>route 命令的输出项说明</p>\n\n<p>输出项\n  <br />说明</p>\n\n<p>Destination\n  <br />目标网段或者主机</p>\n\n<p>Gateway\n  <br />网关地址，”*” 表示目标是本主机所属的网络，不需要路由</p>\n\n<p>Genmask\n  <br />网络掩码</p>\n\n<p>Flags\n  <br />标记。一些可能的标记如下：</p>\n\n<p>U — 路由是活动的</p>\n\n<p>H — 目标是一个主机</p>\n\n<p>G — 路由指向网关</p>\n\n<p>R — 恢复动态路由产生的表项</p>\n\n<p>D — 由路由的后台程序动态地安装</p>\n\n<p>M — 由路由的后台程序修改</p>\n\n<p>! — 拒绝路由</p>\n\n<p>Metric\n  <br />路由距离，到达指定网络所需的中转数（linux 内核中没有使用）</p>\n\n<p>Ref\n  <br />路由项引用次数（linux 内核中没有使用）</p>\n\n<p>Use\n  <br />此路由项被路由软件查找的次数</p>\n\n<p>Iface\n  <br />该路由表项对应的输出接口</p>\n\n<h5><a>3 种路由类型</a></h5>\n\n<h6><a>主机路由</a></h6>\n\n<p>主机路由是路由选择表中指向单个IP地址或主机名的路由记录。主机路由的Flags字段为H。例如，在下面的示例中，本地主机通过IP地址192.168.1.1的路由器到达IP地址为10.0.0.10的主机。</p>\n\n<pre>Destination    Gateway       Genmask        Flags     Metric    Ref    Use    Iface\n-----------    -------     -------            -----     ------    ---    ---    -----\n10.0.0.10     192.168.1.1    255.255.255.255   UH       0    0      0    eth0</pre>\n\n<h6><a>网络路由</a></h6>\n\n<p>网络路由是代表主机可以到达的网络。网络路由的Flags字段为N。例如，在下面的示例中，本地主机将发送到网络192.19.12的数据包转发到IP地址为192.168.1.1的路由器。</p>\n\n<pre>Destination    Gateway       Genmask      Flags    Metric    Ref     Use    Iface\n-----------    -------     -------         -----    -----   ---    ---    -----\n192.19.12     192.168.1.1    255.255.255.0      UN      0       0     0    eth0</pre>\n\n<h6><a>默认路由</a></h6>\n\n<p>当主机不能在路由表中查找到目标主机的IP地址或网络路由时，数据包就被发送到默认路由（默认网关）上。默认路由的Flags字段为G。例如，在下面的示例中，默认路由是IP地址为192.168.1.1的路由器。</p>\n\n<pre>Destination    Gateway       Genmask    Flags     Metric    Ref    Use    Iface\n-----------    -------     ------- -----      ------    ---    ---    -----\ndefault       192.168.1.1     0.0.0.0    UG       0        0     0    eth0</pre>\n\n<h4><a>配置静态路由</a></h4>\n\n<h5><a>route 命令</a></h5>\n\n<p>设置和查看路由表都可以用 route 命令，设置内核路由表的命令格式是：</p>\n\n<pre># route  [add|del] [-net|-host] target [netmask Nm] [gw Gw] [[dev] If]</pre>\n\n<p>其中：</p>\n\n<ul>\n  <li>\n    <p>add : 添加一条路由规则</p>\n  </li>\n\n  <li>\n    <p>del : 删除一条路由规则</p>\n  </li>\n\n  <li>\n    <p>-net : 目的地址是一个网络</p>\n  </li>\n\n  <li>\n    <p>-host : 目的地址是一个主机</p>\n  </li>\n\n  <li>\n    <p>target : 目的网络或主机</p>\n  </li>\n\n  <li>\n    <p>netmask : 目的地址的网络掩码</p>\n  </li>\n\n  <li>\n    <p>gw : 路由数据包通过的网关</p>\n  </li>\n\n  <li>\n    <p>dev : 为路由指定的网络接口</p>\n  </li>\n</ul>\n\n<h5><a>route 命令使用举例</a></h5>\n\n<p>添加到主机的路由</p>\n\n<pre># route add -host 192.168.1.2 dev eth0:0\n# route add -host 10.20.30.148 gw 10.20.30.40</pre>\n\n<p>添加到网络的路由</p>\n\n<pre># route add -net 10.20.30.40 netmask 255.255.255.248 eth0\n# route add -net 10.20.30.48 netmask 255.255.255.248 gw 10.20.30.41\n# route add -net 192.168.1.0/24 eth1</pre>\n\n<p>添加默认路由</p>\n\n<pre># route add default gw 192.168.1.1</pre>\n\n<p>删除路由</p>\n\n<pre># route del -host 192.168.1.2 dev eth0:0\n# route del -host 10.20.30.148 gw 10.20.30.40\n# route del -net 10.20.30.40 netmask 255.255.255.248 eth0\n# route del -net 10.20.30.48 netmask 255.255.255.248 gw 10.20.30.41\n# route del -net 192.168.1.0/24 eth1\n# route del default gw 192.168.1.1</pre>\n\n<h5><a>设置包转发</a></h5>\n\n<p>在 CentOS 中默认的内核配置已经包含了路由功能，但默认并没有在系统启动时启用此功能。开启 Linux 的路由功能可以通过调整内核的网络参数来实现。要配置和调整内核参数可以使用 sysctl 命令。例如：要开启 Linux 内核的数据包转发功能可以使用如下的命令。</p>\n\n<pre># sysctl -w net.ipv4.ip_forward=1</pre>\n\n<p>这样设置之后，当前系统就能实现包转发，但下次启动计算机时将失效。为了使在下次启动计算机时仍然有效，需要将下面的行写入配置文件/etc/sysctl.conf。</p>\n\n<pre># vi /etc/sysctl.conf</pre>\n\n<pre>net.ipv4.ip_forward = 1</pre>\n\n<p>用户还可以使用如下的命令查看当前系统是否支持包转发。</p>\n\n<pre># sysctl  net.ipv4.ip_forward</pre>','2012-03-07 01:18:03','2012-03-07 01:18:03',NULL,NULL,'publish',NULL,'linux 路由表维护','/post/2012/7/14/1344938581043.html',1,0),(195,0,'open','<p>Javascript本身并不支持面向对象，它没有访问控制符，它没有定义类的关键字class，它没有支持继承的extend或冒号，它也没有用来支持虚函数的virtual，不过，Javascript是一门灵活的语言，下面我们就看看没有关键字class的Javascript如何实现类定义，并创建对象。</p>  <p>一：定义类并创建类的实例对象   <br />在Javascript中，我们用function来定义类，如下：</p>  <p>function Shape()   <br />{    <br />var x = 1 ;    <br />var y = 2 ;    <br />}</p>  <p>你或许会说，疑？这个不是定义函数吗？没错，这个是定义函数，我们定义了一个Shape函数，并对x和y进行了初始化。不过，如果你换个角度来看，这个就是定义一个Shape类，里面有两个属性x和y，初始值分别是1和2，只不过，我们定义类的关键字是function而不是class。   <br />然后，我们可以创建Shape类的对象aShape，如下：</p>  <p>var aShape = new Shape();</p>  <p>二：定义公有属性和私有属性   <br />我们已经创建了aShape对象，但是，当我们试着访问它的属性时，会出错，如下：</p>  <p>aShape.x = 1 ;</p>  <p>这说明，用var定义的属性是私有的。我们需要使用this关键字来定义公有的属性</p>  <p>function Shape()   <br />{    <br />this .x = 1 ;    <br />this .y = 2 ;    <br />}</p>  <p>这样，我们就可以访问Shape的属性了，如。</p>  <p>aShape.x = 2 ;</p>  <p>好，我们可以根据上面的代码总结得到：用var可以定义类的private属性，而用this能定义类的public属性。   <br />三：定义公有方法和私有方法    <br />在Javascript中，函数是Function类的实例，Function间接继承自Object，所以，函数也是一个对象，因此，我们可以用赋值的方法创建函数，当然，我们也可以将一个函数赋给类的一个属性变量，那么，这个属性变量就可以称为方法，因为它是一个可以执行的函数。代码如下：</p>  <p>function Shape()   <br />{    <br />var x = 0 ;    <br />var y = 1 ;    <br />this .draw = function ()    <br />{    <br />// print;    <br />};    <br />}</p>  <p>我们在上面的代码中定义了一个draw，并把一个function赋给它，下面，我们就可以通过aShape调用这个函数，OOP中称为公有方法，如：</p>  <p>aShape.draw();</p>  <p>如果用var定义，那么这个draw就变成私有的了，OOP中称为私有方法，如</p>  <p>function Shape()   <br />{    <br />var x = 0 ;    <br />var y = 1 ;    <br />var draw = function ()    <br />{    <br />// print;    <br />};    <br />}</p>  <p>这样就不能使用aShape.draw调用这个函数了。   <br />三：构造函数    <br />Javascript并不支持OOP，当然也就没有构造函数了，不过，我们可以自己模拟一个构造函数，让对象被创建时自动调用，代码如下：</p>  <p>function Shape()   <br />{    <br />var init = function ()    <br />{    <br />// 构造函数代码    <br />};    <br />init();    <br />}</p>  <p>在Shape的最后，我们人为的调用了init函数，那么，在创建了一个Shape对象是，init总会被自动调用，可以模拟我们的构造函数了。   <br />四：带参数的构造函数    <br />如何让构造函数带参数呢？其实很简单，将要传入的参数写入函数的参数列表中即可，如</p>  <p>function Shape(ax,ay)   <br />{    <br />var x = 0 ;    <br />var y = 0 ;    <br />var init = function ()    <br />{    <br />// 构造函数    <br />x = ax;    <br />y = ay;    <br />};    <br />init();    <br />}</p>  <p>这样，我们就可以这样创建对象：</p>  <p>var aShape = new Shape( 0 , 1 );</p>  <p>五：静态属性和静态方法   <br />在Javascript中如何定义静态的属性和方法呢？如下所示</p>  <p>function Shape(ax,ay)   <br />{    <br />var x = 0 ;    <br />var y = 0 ;    <br />var init = function ()    <br />{    <br />// 构造函数    <br />x = ax;    <br />y = ay;    <br />};    <br />init();    <br />}    <br />Shape.count = 0 ; // 定义一个静态属性count，这个属性是属于类的，不是属于对象的。    <br />Shape.staticMethod = function (){}; // 定义一个静态的方法</p>  <p>有了静态属性和方法，我们就可以用类名来访问它了，如下</p>  <p>alert ( aShape.count );   <br />aShape.staticMethod();</p>  <p>注意：静态属性和方法都是公有的，目前为止，我不知道如何让静态属性和方法变成私有的～   <br />六：在方法中访问本类的公有属性和私有属性    <br />在类的方法中访问自己的属性，Javascript对于公有属性和私有属性的访问方法有所不同，请大家看下面的代码</p>  <p>function Shape(ax,ay)   <br />{    <br />var x = 0 ;    <br />var y = 0 ;    <br />this .gx = 0 ;    <br />this .gy = 0 ;    <br />var init = function ()    <br />{    <br />x = ax; // 访问私有属性，直接写变量名即可    <br />y = ay;    <br />this .gx = ax; // 访问公有属性，需要在变量名前加上this.    <br />this .gy = ay;    <br />};    <br />init();    <br />}</p>  <p>七：this的注意事项   <br />根据笔者的经验，类中的this并不是一直指向我们的这个对象本身的，主要原因还是因为Javascript并不是OOP语言，而且，函数和类均用function定义，当然会引起一些小问题。    <br />this指针指错的场合一般在事件处理上面，我们想让某个对象的成员函数来响应某个事件，当事件被触发以后，系统会调用我们这个成员函数，但是，传入的this指针已经不是我们本身的对象了，当然，这时再在成员函数中调用this当然会出错了。    <br />解决方法是我们在定义类的一开始就将this保存到一个私有的属性中，以后，我们可以用这个属性代替this。我用这个方法使用this指针相当安全，而且很是省心～    <br />我们修改一下代码，解决this问题。对照第六部分的代码看，你一定就明白了</p>  <p>function Shape(ax,ay)   <br />{    <br />var _this = this ; // 把this保存下来，以后用_this代替this，这样就不会被this弄晕了    <br />var x = 0 ;    <br />var y = 0 ;    <br />_this.gx = 0 ;    <br />_this.gy = 0 ;    <br />var init = function ()    <br />{    <br />x = ax; // 访问私有属性，直接写变量名即可    <br />y = ay;    <br />_this.gx = ax; // 访问公有属性，需要在变量名前加上this.    <br />_this.gy = ay;    <br />};    <br />init();    <br />}</p>  <p>以上我们聊了如何在Javascript中定义类，创建类的对象，创建公有和私有的属性和方法，创建静态属性和方法，模拟构造函数，并且讨论了容易出错的this。   <br />关于Javascript中的OOP实现就聊到这里，以上是最实用的内容，一般用Javascript定义类，创建对象用以上的代码已经足够了。当然，你还可以用mootools或prototype来定义类，创建对象。我用过mootools框架，感觉很不错，它对Javascript的类模拟就更完善了，还支持类的继承，有兴趣的读者可以去尝试一下。当然，如果使用了框架，那么在你的网页中就需要包含相关的js头文件，因此我还是希望读者能够在没有框架的情况下创建类，这样，代码效率较高，而且你也可以看到，要创建一个简单的类并不麻烦～</p>','2012-02-26 12:07:38','2012-02-26 12:07:38',NULL,NULL,'publish',NULL,'JavaScript中定义类','/post/2012/7/14/1344938581153.html',1,0),(196,0,'open','<blockquote>   <p>好久没有来整理我的博客了，今天是年后的第一天班，刚刚没事进去看了一下，发现留言板上有一条留言：“博主你太懒了~~”，看了之后我的老脸也是一红呀。</p>    <p>是好久都没有更新我的博客了。暂时搞技术的，一般搞技术的都比较腼腆，不会表达，当初开博客主要是为了折腾，我开博客不是为了能够赚钱，</p>    <p>我不在乎百度有多少收录不在乎PR。。。 我只是把他当做一个记事本用的。</p>    <p>我博客中大部分记录的都是技术相关的文章，很少有涉及到我个人生后的文章。我以后还是会好好的写博客的，把他当成一种积累。。 </p></blockquote>','2012-02-06 03:32:00','2012-02-06 02:37:46',NULL,NULL,'publish',NULL,'好久没有整理博客了..','/post/2012/7/14/1344938585056.html',1,0),(197,0,'open','<p>在现场使用tomcat6.0的过程中，如果不经过优化会大降低应用程序的运行效率。即使在应用负载均衡的环境下也很难达到理想的运行效率，因此tomcat6的优化也突显出的很大的重要性。</p>  <p>针对网上的一些文档，制订如下优化方案，当然这些方案也是属于试验阶段，没有针对真正的生产环境测试过。</p>  <p>方案如下：</p>  <p><b>一、 </b><b>使用带有</b><b>NIO</b><b>的</b><b>http1.1</b><b>的超文件传输协议：</b><b></b></p>  <p>Java的IO操作集中在java.io这个包中，是基于流阻塞API（即BIO，Block IO）。对于大多数应用来说，这样的API使用很方便，然而，一些对性能要求较高的应用，尤其是服务器端应用，往往需要一个更为有效的方式来处理IO。从JDK1.4起，NIO API作为一个基于缓冲区，并能提供非阻塞IO操作的API（即NIO，non-blocking IO）被引入。</p>  <p>BIO与NIO一个比较重要的不同，是我们使用BIO的时候往往会引入多线程，每个连接一个单独的线程；而NIO则是使用单线程或者只使用少量的多线程，每个连接共用一个线程。</p>  <p>而Tomcat6应用NIO只是用在处理发送、接收信息的时候用到，也就是说：tomcat6还是传统的多线程Servlet。因此即使我们的JAVA应用使用ThreadLocal的，例如JSF的FaceContext、Hibernate的session管理、Strusts的context的管理等等，也不会因为使用NIO而受到影响。</p>  <p>更改方法：</p>  <p>打开tomcat的配置文件：</p>  <p>#vi $TOMCAT_HOME/conf/server.xml</p>  <p>找到：</p>  <p>&lt;Connector port=&quot;8080&quot; protocol=&quot;http1.1&quot; .....</p>  <p>改为：</p>  <p>&lt;Connector port=&quot;8080&quot; </p>  <p>protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</p>  <p><b>二、使用</b><b>APR</b><b>来增强</b><b>Tomcat</b><b>性能：</b><b></b></p>  <p>Tomcat可以使用APR来提供超强的可伸缩性和性能，更好地集成本地服务器技术。APR（Apache Portable Runtime）是一个高可移植库，它是Apache HTTP Server 2.x的核心。APR有很多用途，包括访问高级IO功能（例如sendfile,epoll和open SSL），OS级别的功能（随机数生成、系统状态等等），本地进程管理（共享内存、NT管道和UNIX socket）。这些功能使和Tomcat作为一个通常的前台WEB服务器，能更好的和其它本地WEB技术集成，总体上让Java更有效率作为一个高性能Web服务器平台而不是简单作为后台容器。</p>  <p>安装：</p>  <p>1、 下载apr并安装</p>  <p>截止到2009年11月20日版本：apr-1.3.8.tar.gz及apr-util-1.3.9.tar.gz</p>  <p>下载地址：http://apr.apache.org/download.cgi</p>  <p>安装步骤：</p>  <p>（1）、安装apr及apr-util</p>  <p>#tar zxvf apr-1.3.8.tar.gz</p>  <p>#cd apr-1.3.8</p>  <p>#./configure —prefix=/usr/lib/apr</p>  <p>#make</p>  <p>#make install</p>  <p>#tar zxvf apr-util-1.3.9.tar.gz</p>  <p>#cd apr-util-1.3.9</p>  <p>#./configure —with-apr=/usr/lib/apr</p>  <p>#make</p>  <p>#make install</p>  <p>（2）、安装tomcat-native.tar.gz</p>  <p>此文件在$TOMCAT_HOME/bin的目录下</p>  <p>#tar zxvf tomcat-native.tar.gz</p>  <p>#cd tomcat-native-1.1.16-src/jni/native</p>  <p>#./configure —with-apr=/usr/lib/apr</p>  <p>#make</p>  <p>#make install</p>  <p>（3）、在tomcat的启动文件（$TOMCAt_HOME/bin/catalina.sh）中加入环境变量：</p>  <p>CATALINA_OPTS=-Djava.library.path=/usr/local/apr/lib</p>  <p>或在操作系统的环境变量（/etc/profile）中添加</p>  <p>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib </p>  <p>（4）、重新启动计算机或使用命令source /etc/profile使其即时生效。</p>  <p>（5）、查看启动日志，如出现如下信息表示APR启动成功：</p>  <p>#vi $TOMCAT_HOME/logs/catalina.......log</p>  <p>信息如下：</p>  <p>启动时发现日志中有：   <br />Sep 30, 2008 4:32:55 PM org.apache.coyote.http11.Http11AprProtocol start    <br />INFO: Starting Coyote HTTP/1.1 on http-8080    <br />Sep 30, 2008 4:32:55 PM org.apache.coyote.ajp.AjpAprProtocol start    <br />INFO: Starting Coyote AJP/1.3 on ajp-8009</p>  <p>停止时发现日志中有：   <br />Sep 30, 2008 4:27:06 PM org.apache.coyote.http11.Http11AprProtocol destroy    <br />INFO: Stopping Coyote HTTP/1.1 on http-8080    <br />Sep 30, 2008 4:27:06 PM org.apache.coyote.ajp.AjpAprProtocol destroy    <br />INFO: Stopping Coyote AJP/1.3 on ajp-8009</p>  <p><b>三、对</b><b>Tomcat</b><b>的初始内存等进行优化</b><b></b></p>  <p>JAVA_OPTS=&quot;-server -Xms2048M -Xmx2048M -Xss128k -XX:+AggressiveOpts -XX:+UseParallelGC -XX:+UseBiasedLocking&quot;</p>  <p>参数详解：</p>  <p>（1）、-Xms2048M</p>  <p>JAVA虚拟机初始化时使用的内存大小，为了减少tomcat频繁的申请内存，此参数</p>  <p>应该和Xmx设置的参数一样大。</p>  <p>（2）、-Xmx2048M</p>  <p>JAVA虚拟机可以使用的最大内存，此参数的最大设置不允许超过物理内存的90%。</p>  <p>（3）、-XX:+AggressiveOpts</p>  <p>加快编译</p>  <p>（4）、-Xss128k</p>  <p>设置tomcat每增加一个线程（Thread）就会立即消耗128K内存，最佳值应该是128，</p>  <p>默认值是512K。见意256K大小，这个对性能影响较大，需要多次测试。减少这个值可</p>  <p>以增加一个进程内的线程数量。</p>  <p>（5）、-XX:+UseParallelGC</p>  <p>一些测试表明当非64位系统，并且非高性能服务器时，这个选项会造成垃圾回收</p>  <p>变慢。（此选项决定对垃圾回收是否采用多线程）</p>  <p>（6）、-XX:+UseBiasedLocking&quot;</p>  <p>非竞争性的同步选项，锁机制的性能改善。</p>  <p>（7）、-XX:PermSize=256m </p>  <p>最小堆大小，一般把内存不足时就是把这个空间不足。默认为物理内存的1／4。</p>  <p>（8）、-XX:+<em>DisableExplicitGC</em></p>  <p>禁止System.gc()，免得程序员误调用gc方法影响性能。</p>  <p>（9）、-XX:MaxNewSize=256m</p>  <p>（10）、-XX:MaxPermSize=256m</p>  <p>下面给出见意设置：</p>  <p>JAVA_OPTS=&quot;-server -Xms512M -Xmx512M -Xss256k -XX:PermSize=128M -XX:MaxNewSize=256m -XX:MaxPermSize=256m -XX:+AggressiveOpts -XX:+UseBiasedLocking&quot;</p>  <p><b>四、</b><b>Tomcat6</b><b>的配置优化（修改</b><b>tomcat</b><b>配置文件）</b><b> </b></p>  <p>&lt;Connector port=&quot;80&quot; protocol=&quot;HTTP/1.1&quot;</p>  <p>maxHttpHeaderSize=&quot;8192&quot;</p>  <p>maxThreads=&quot;512&quot; </p>  <p>minSpareThreads=&quot;100&quot; </p>  <p>maxSpareThreads=&quot;200&quot;</p>  <p>enableLookups=&quot;false&quot; </p>  <p>redirectPort=&quot;8443&quot; </p>  <p>acceptCount=&quot;500&quot;</p>  <p>connectionTimeout=&quot;30000&quot; </p>  <p>disableUploadTimeout=&quot;true&quot;/&gt;</p>  <p>参数分析:</p>  <p>（1）、maxHttpHeaderSize=”8192”</p>  <p>此选项用于配置：来自于客户端请求的Request和Response的HTTP header</p>  <p>的最大长度，以字节计算。如果不设置，该属性为4096（4K）。</p>  <p>（2）、maxThreads=&quot;512&quot;</p>  <p>Connector创建的请求处理线程的最大值，它决定了能够同时处理并发请求的最</p>  <p>大值。如果不指定，该属性值为200。Tomcat的线程数量太多会导致切换过多，性能</p>  <p>下降严重。这个数量应该是你单个机器的承载能力，压力测试下得出的结果。不可任意</p>  <p>加大。一般情况下，256-512个已经非常高的数值了。</p>  <p>（3）、minSpareThreads=&quot;100&quot; </p>  <p>tomcat初始化时创建的线程数，即最小工作线程数目。</p>  <p>（4）、maxSpareThreads=&quot;300&quot;</p>  <p>tomcat所允许的最大线程数，一旦创建的线程超过这个数，Tomcat就将关闭不</p>  <p>再需要的Socket线程。</p>  <p>（5）、enableLookups=&quot;false&quot;</p>  <p>使用允许DNS查询，通常情况下设置为false。如果为true则tomcat会损耗一</p>  <p>部分系统性能。</p>  <p>（6）、redirectPort=&quot;8443&quot; </p>  <p>这里系统默认的，它指定转发端口，如果当前只支持non-SSL请求，在需要安全</p>  <p>通信的场所，将把客户请求转发至SSL的redirectPort端口。</p>  <p>（7）、acceptCount＝“200”</p>  <p>当所有请求处理线程都被占用时，允许接收请求队列的最大长度。当队列已满时，</p>  <p>任何收到的请求都将被拒绝。缺省值为10。</p>  <p>（8）、connectionTimeout=&quot;50000&quot; </p>  <p>Connector接收连接后，等待提供请求URI的时间，缺省值为60000（60秒）。</p>  <p>（9）、disableUploadTimeout=&quot;true&quot;</p>  <p>该标志位表明当执行servlet时，是否允许servlet容器使用一个不同的、更长的</p>  <p>连接超时。启用该标志位将导致在上传数据时，要么使用更长的时间完成上传，要么</p>  <p>出现更长的超时。如果不指定，该属性为“false”。</p>  <p>（10）、有时不光要优化tomcat，同时还需要更改Linux的一些系统参数。如果WEB</p>  <p>服务器进行压力测试时报socket不足，则些可以对/etc/security/limits.conf进行相</p>  <p>应修改：</p>  <p>* soft nofile 57766</p>  <p>* hard nofile 65535</p>  <p>推荐设置：</p>  <p>&lt;Connector port=&quot;8080&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</p>  <p>maxHttpHeaderSize=&quot;8192&quot;</p>  <p>minProcessors=&quot;100&quot;</p>  <p>maxProcessors=&quot;5000&quot;</p>  <p>maxThreads=&quot;5000&quot;</p>  <p>minSpareThreads=&quot;1000&quot;</p>  <p>maxSpareThreads=&quot;4000&quot;</p>  <p>enableLookups=&quot;false&quot;</p>  <p>acceptCount=&quot;3500&quot;</p>  <p>disableUploadTimeout=&quot;true&quot;</p>  <p>connectionTimeout=&quot;20000&quot;</p>  <p>debug=&quot;0&quot;</p>  <p>redirectPort=&quot;8443&quot; /&gt;</p>','2011-12-27 22:32:22','2011-12-27 22:32:22',NULL,NULL,'publish',NULL,'Tomcat6生产优化方案','/post/2012/7/14/1344938586418.html',1,0),(198,0,'open','<p><strong>ClassLoader</strong> 提供了两个方法用于从装载的类路径中取得资源：    <br />public URL <strong>getResource</strong> (String name);    <br />public InputStream <strong>getResourceAsStream</strong> (String name);    <br />这里name是资源的类路径，它是相对与“/”根路径下的位置。getResource得到的是一个URL对象来定位资源，而getResourceAsStream取得该资源输入流的引用保证程序可以从正确的位置抽取数据。    <br />但是真正使用的不是ClassLoader的这两个方法，而是Class的 getResource和getResourceAsStream方法，因为Class对象可以从你的类得到（如YourClass.class或 YourClass.getClass()），而ClassLoader则需要再调用一次YourClass.getClassLoader()方法，不过根据JDK文档的说法，Class对象的这两个方法其实是“委托”（delegate）给装载它的ClassLoader来做的，所以只需要使用 Class对象的这两个方法就可以了。    <br />因此，直接调用 <strong>this.getClass().getResourceAsStream(String name) </strong>;获取流，</p>  <p>静态化方法中则使用<strong>ClassLoader.getSystemResourceAsStream (String name) </strong>; 。    <br />下面是一些得到classpath和当前类的绝对路径的一些方法。你可能需要使用其中的一些方法来得到你需要的资源的绝对路径。    <br />1.<strong>this.getClass().getResource（&quot;&quot;） </strong>    <br />得到的是当前类class文件的URI目录。不包括自己！    <br />如：file：/D：/workspace/jbpmtest3/bin/com/test/    <br />2.<strong>this.getClass().getResource（&quot;/&quot;） </strong>    <br />得到的是当前的classpath的<strong>绝对URI路径</strong> 。    <br />如：file：/D：/workspace/jbpmtest3/bin/    <br />3.<strong>this.getClass() </strong>.<strong>getClassLoader().getResource（&quot;&quot;）</strong>    <br />得到的也是当前ClassPath的<strong>绝对URI路径</strong> 。    <br />如：file：/D：/workspace/jbpmtest3/bin/    <br />4.<strong>ClassLoader.getSystemResource（&quot;&quot;） </strong>    <br />得到的也是当前ClassPath的<strong>绝对URI路径</strong> 。    <br />如：file：/D：/workspace/jbpmtest3/bin/    <br />5.<strong>Thread.currentThread().getContextClassLoader </strong><strong>().getResource（&quot;&quot;）</strong>    <br />得到的也是当前ClassPath的<strong>绝对URI路径</strong> 。    <br />如：file：/D：/workspace/jbpmtest3/bin/    <br />6.<strong>ServletActionContext.getServletContext().getRealPath(“/”) </strong>    <br /><strong>Web应用程序</strong> 中，得到Web应用程序的根目录的绝对路径。这样，我们只需要提供相对于Web应用程序根目录的路径，就可以构建出定位资源的绝对路径。    <br />如：file：/D:/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/WebProject    <br />注意点：    <br />1.尽量不要使用相对于System.getProperty（&quot;user.dir&quot;）当前用户目录的相对路径。这是一颗定时炸弹，随时可能要你的命。    <br />2.尽量使用URI形式的绝对路径资源。它可以很容易的转变为URI，URL，File对象。    <br />3.尽量使用相对classpath的相对路径。不要使用绝对路径。使用上面ClassLoaderUtil类的public static URL getExtendResource（String relativePath）方法已经能够使用相对于classpath的相对路径定位所有位置的资源。    <br />4.绝对不要使用硬编码的绝对路径。因为，我们完全可以使用ClassLoader类的getResource（&quot;&quot;）方法得到当前classpath的绝对路径。如果你一定要指定一个绝对路径，那么使用配置文件，也比硬编码要好得多！    <br />获得CLASSPATH之外路径的方法：    <br />URL base = this.getClass（）.getResource（&quot;&quot;）； //先获得本类的所在位置，如/home/popeye/testjava/build/classes/net/    <br />String path = new File（base.getFile（）， &quot;……/……/……/&quot;+name）.getCanonicalPath（）； //就可以得到/home/popeye/testjava/name    <br />另外，如果从ANT启动程序，this.getClass().getResource(&quot;&quot;)取出来的比较怪，直接用JAVA命令行调试就可成功。</p>','2011-12-22 23:32:15','2011-12-22 23:32:15',NULL,NULL,'publish',NULL,'JAVA获取CLASSPATH路径','/post/2012/7/14/1344938586478.html',1,0),(199,0,'open','<p>&#160;</p>  <p><font size=\"2\">更新内容</font></p>  <blockquote>   <p><font size=\"2\">1，添加自定义菜单功能。</font></p>    <p><font size=\"2\">2，添加Image Lazy Load功能，并可以在后台设置是否启用该功能。</font></p>    <p><font size=\"2\">3，添加文章列表显示方式，是全文显示还是摘要显示，并且可设置摘要长度。</font></p>    <p><font size=\"2\">4，添加文章列表缩略图功能。</font></p>    <p><font size=\"2\">5，可在文章内容页添加文章版权信息。</font></p>    <p><font size=\"2\">6，更新主题后台管理界面，后台管理界面更加美观。</font></p> </blockquote>  <p><font size=\"2\">主题下载地址：<a title=\"http://115.com/file/aqvc1dqb\" href=\"http://115.com/file/aqvc1dqb\">http://115.com/file/aqvc1dqb</a></font></p>  <p><font size=\"2\">主题预览：<a href=\"http://www.mspring.org\">http://www.mspring.org</a></font></p>','2011-11-12 07:54:24','2011-11-12 07:54:24',NULL,NULL,'publish',NULL,'wordpress主题color-cloud v1.4发布','/post/2012/7/14/1344938586535.html',1,0),(200,0,'open','<blockquote>   <p>某姐招亲：今年谁愿陪姐过2011/11/11特大豹子号光棍节，姐让他明年过父亲节” </p>    <p>单位同僚一个个蠢蠢欲动，唯某人巍然不动！ </p>    <p>一哥们试探道：哥哥为何如此淡定？ </p>    <p>某人嫣然一笑解析道：从11.11到明年父亲节期间隔仅剩7个多月，这爹当的冤啊！ </p>    <p>&#160;</p>    <p>众棍猛悟，齐声道：这真是一个坑爹的时代啊！</p></blockquote>','2011-11-10 07:20:24','2011-11-10 07:20:24',NULL,NULL,'publish',NULL,'坑爹的时代 坑爹的光棍节','/post/2012/7/14/1344938586591.html',1,0),(201,0,'open','<p><img title=\"Img324819927.jpg\" alt=\"Img324819927.jpg\" src=\"http://www.segang.org/data/attachment/forum/201111/08/0955407r0ea7wrvtlcc0dt.jpg\" width=\"450\" /><img title=\"xinsrc_393110807075392130461.jpg\" alt=\"xinsrc_393110807075392130461.jpg\" src=\"http://www.segang.org/data/attachment/forum/201111/08/095536aeyaae5ef3deb33a.jpg\" width=\"371\" /></p>  <p>&#160;&#160;&#160; 日前日本出现了一群“美魔女”，意指年龄都在35岁以上但是依旧看起来很年轻的女性。不过其中一位43岁的美魔女水古雅子，因为长的实在太童颜，自从登上女性杂志后就一举成名，甚至还成为许多熟龄妇女们的偶像。</p>  <p> 目前居住在名古屋的水古雅子，是一位不折不扣的家庭主妇，不过她的外表却看不出她的实际年龄。先前日本杂志举办“美魔女”的千人海选，参与的女性全都是30多岁的妇女，而水古雅子凭藉着亮丽的外表脱颖而出。</p>  <p> 据悉，现职为家庭主妇的水古雅子，今年即将满43岁，育有2个小孩，且大女儿明年就要满20岁。她入选美魔女后，开始当起该杂志的专用模特儿，也经常在自己的部落格中介绍保养品、衣服等配件，短时间内名气大增，只要是出现在部落格的商品，都会被熟龄女性抢购一空，甚至每天点阅人数高达3万多人。</p>','2011-11-08 02:00:24','2011-11-08 02:00:24',NULL,NULL,'publish',NULL,'日本不老仙妻掀&ldquo;美魔女&rdquo;热潮','/post/2012/7/14/1344938586653.html',1,0),(202,0,'open','<p>这两天一直在修改我的color-cloud主题， 想给我的主题也添加自定义导航菜单功能。 </p>  <p>下面是函数wp_nav_menu使用的详细注释</p>  <pre class=\"brush: php\">&lt;?php\n$menu_args = array(\n	//最外层容器的标签名，默认div\n	\'container\' =&gt; \'div\',\n	//最外层容器的class名\n	\'container_class\' =&gt; \'nav\',\n	//最外层容器的id名\n	\'container_id\' =&gt; \'menu\',\n	//导航菜单ul标签的class名\n	//\'menu_class\' =&gt; \'mainNav\',\n	//导航菜单ul标签的id名\n	\'menu_id\' =&gt; \'menu-primary-items\',\n	//是否打印，默认是true，如果想将导航的代码作为赋值使用，可设置为false\n	\'echo\' =&gt; true,\n	//备用的导航菜单函数，用于没有在后台设置导航时调用\n	\'fallback_cb\' =&gt; \'the_main_nav\',\n	//显示在导航a标签之前\n	\'before\' =&gt; \'&lt;p&gt;\',\n	//显示在导航a标签之后\n	\'after\' =&gt; \'&lt;/p&gt;\',\n	//显示在导航链接名之前\n	\'link_before\' =&gt; \'&lt;em&gt;\',\n	//显示在导航链接名之后\n	\'link_after\' =&gt; \'&lt;/em&gt;\',\n	//显示的菜单层数，默认0，0是显示所有层\n	\'depth\' =&gt; 0,\n	//调用一个对象定义显示导航菜单\n	\'walker\' =&gt; new Walker_Nav_Menu(),\n	//指定显示的导航名，如果没有设置，则显示第一个\n	\'theme_location\' =&gt; \'primary\',\n	);\n\nwp_nav_menu( $menu_args );\n?&gt;</pre>','2011-10-31 07:33:11','2011-10-31 07:33:11',NULL,NULL,'publish',NULL,'wordpress wp_nav_menu函数的使用','/post/2012/7/14/1344938586710.html',1,0),(203,0,'open','<p>更新内容：</p>  <p>&#160; 1，支持Ajax-comment</p>  <p>&#160; 2，支持ctrl+enter发表评论</p>  <p>&#160; 3，支持wp-postviews插件</p>  <p>&#160; 4，支持wp-pagenavi插件</p>  <p>&#160; 5，模板样式修改，字体调大</p>  <p>为了更好的用户体验请将该主题配合一下插件使用</p>  <p>wp-postviews(<a href=\"http://wordpress.org/extend/plugins/wp-postviews/\">http://wordpress.org/extend/plugins/wp-postviews/</a>)&#160; 记录文章点击数</p>  <p>wp-pagenavi(<a href=\"http://wordpress.org/extend/plugins/wp-pagenavi/\">http://wordpress.org/extend/plugins/wp-pagenavi/</a>) 文章分页功能扩展</p>  <p>color-cloud v1.1下载地址：<a title=\"http://115.com/file/aqau7yz5#\" href=\"http://115.com/file/aqau7yz5#\">http://115.com/file/aqau7yz5#</a></p>  <p>color-cloud v1.0 发布地址：<a href=\"http://www.mspring.org/index.php/archives/713.html\">http://www.mspring.org/index.php/archives/713.html</a></p>  <p>下步更新计划： 添加主题自定义二级菜单支持</p>','2011-10-19 07:44:48','2011-11-11 02:16:06',NULL,NULL,'publish',NULL,'Color-cloud主题更新','/post/2012/7/14/1344938586768.html',1,0),(204,0,'open','<p>首先在%db_home%/NETWORK/ADMIN下找到listener.ora文件。</p>  <p>进入使用记事本打开</p>  <blockquote>   <p># listener.ora Network Configuration File: E:\\app\\Administrator\\product\\11.1.0\\db_2\\network\\admin\\listener.ora     <br /># Generated by Oracle configuration tools. </p>    <p>LISTENER =     <br />&#160; (DESCRIPTION_LIST =      <br />&#160;&#160;&#160; (DESCRIPTION =      <br />&#160;&#160;&#160;&#160;&#160; (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))      <br />&#160;&#160;&#160;&#160;&#160; (ADDRESS = (PROTOCOL = TCP)(HOST = mspring)(PORT = <font color=\"#ff0000\">1521</font>))      <br />&#160;&#160;&#160; )      <br />&#160; ) </p> </blockquote>  <p>红色部分即为你现在的oracle端口，将其修改成需要的端口，如果修改成如下</p>  <blockquote>   <p># listener.ora Network Configuration File: E:\\app\\Administrator\\product\\11.1.0\\db_2\\network\\admin\\listener.ora     <br /># Generated by Oracle configuration tools. </p>    <p>LISTENER =     <br />&#160; (DESCRIPTION_LIST =      <br />&#160;&#160;&#160; (DESCRIPTION =      <br />&#160;&#160;&#160;&#160;&#160; (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))      <br />&#160;&#160;&#160;&#160;&#160; (ADDRESS = (PROTOCOL = TCP)(HOST = mspring)(PORT = <font color=\"#ff0000\">1522</font>))      <br />&#160;&#160;&#160; )      <br />&#160; ) </p> </blockquote>  <p>然后进入windows命令行</p>  <p>执行 lsnrctl stop </p>  <p>执行成功之后，然后执行 lsnrctl start</p>  <p>然后重启 oracle监听服务（OracleOraDb11g_home1TNSListener）和 oracle实例服务（OracleServiceORCL）</p>  <p>到这里就算修改成功了， 可以自己测试一下。</p>','2011-10-18 04:09:35','2011-10-18 04:09:35',NULL,NULL,'publish',NULL,'修改Oracle监听端口号','/post/2012/7/14/1344938586888.html',1,0),(205,0,'open','<p>这里有几个JavaScript方法，将其复制到head部分即可</p>  <p>然后可以在页面中添加一个按钮调用JavaScript方法changeBackgroundColor(颜色)进行切换颜色。</p>  <p>然后在body标签中加上事件<font color=\"#ff0000\">onload=&quot;getbgColor();&quot;</font> 这样切换之后下次进入网页将自动显示上次选择的颜色。</p>  <pre class=\"brush: javascript; toolbar: false\">//该方法为切换颜色的方法\nfunction changeBackgroundColor(colorRGB) {\n    document.body.style.backgroundColor=colorRGB;\n    var postentry = document.getElementById(\'postentryID\');\n    if(postentry)\n        postentry.style.background=colorRGB;\n    setCookie(&quot;bgColor&quot;,colorRGB,365);\n}\n//获取上次选择的颜色\nfunction getCookie(c_name) {\n    if (document.cookie.length&gt;0)\n    {\n        c_start=document.cookie.indexOf(c_name + &quot;=&quot;);\n        if (c_start!=-1)\n        {\n            c_start=c_start + c_name.length+1 ;\n            c_end=document.cookie.indexOf(&quot;;&quot;,c_start);\n            if (c_end==-1)\n                c_end=document.cookie.length;\n            return unescape(document.cookie.substring(c_start,c_end));\n        }\n    }\n    return &quot;&quot;\n}\n//设置cookie，颜色发生变化之后会将变化保存到cookie中，下次进入网页时，会将自动显示上次选择的颜色\nfunction setCookie(c_name,value,expiredays) {\n    var exdate=new Date();\n    exdate.setDate(exdate.getDate()+expiredays);\n    document.cookie=c_name+ &quot;=&quot; +escape(value)+((expiredays==null) ? &quot;&quot; : &quot;;expires=&quot;+exdate.toGMTString());\n}\n//获取背景颜色\nfunction getbgColor() {\n    changeBackgroundColor(getCookie(&quot;bgColor&quot;));\n}</pre>','2011-10-17 04:51:30','2011-10-17 04:58:11',NULL,NULL,'publish',NULL,'动态切换博客背景颜色','/post/2012/7/14/1344938586941.html',1,0),(206,0,'open','<blockquote>   <p> 双休日在家没事儿一如既往的折腾起了我的博客。然后该主题就光荣的问世了。 </p>    <p>这个是我第一次做wordpress主题，我的PHP只能算半票水中的半瓢水，而且wordpress的API我也不了解。 </p>    <p>如果现在让我单独写一个wordpress主题，恐怕有些困难的。 </p>    <p>我不叫喜欢简洁、大方且强大的主题，于是乎我在家就开始在网上翻阅资料开始修改我之前使用的主题 <a href=\"http://srinig.com/wordpress/themes/fluid-blue/\">fluid-blue</a></p> </blockquote>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 我修改了原主题的大部分样式，并且在原主题的基础上添加上了底部工具条，工具条可以在后台进行设置。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 先来看图，主题顶部的云彩是可以飘动哇。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 喜欢的朋友可以下载使用的</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 下载地址：<a title=\"http://115.com/file/e6rdbw2n#\" href=\"http://115.com/file/e6rdbw2n#\">http://115.com/file/e6rdbw2n#</a></p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 演示站点即为本站。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a href=\"http://www.mspring.org/wp-content/uploads/2011/10/colorcloud.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"color-cloud\" border=\"0\" alt=\"color-cloud\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/colorcloud_thumb.png\" width=\"804\" height=\"367\" /></a></p>  <p></p>  <p>&#160;</p>  <p></p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a href=\"http://www.mspring.org/wp-content/uploads/2011/10/colorcloudsetting.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"color-cloud-setting\" border=\"0\" alt=\"color-cloud-setting\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/colorcloudsetting_thumb.png\" width=\"804\" height=\"351\" /></a></p>  <p>&#160;</p>  <blockquote>   <p> 主题还在后续完善更新中。。。敬请期待。</p></blockquote>','2011-10-17 04:20:37','2011-11-01 01:16:51',NULL,NULL,'publish',NULL,'wordpress主题color-cloud发布','/post/2012/7/14/1344938586995.html',1,0),(207,0,'open','<p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 恭喜我下个月终于要辞职了。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 这里应该算是我第一份工作吧，刚毕业的时候去了一家公司干了没多久我就走了。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 在这里做了这么久也烦了，有句话说的好哇，当你不能改变现状的时候，要么忍、要么滚。 所以，哥滚了。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 在这里多少学了点东西，下次工作应该不会再遇到这么多的麻烦事情了哈。 </p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 感觉还听欣慰滴， 听说我要辞职了，还有不少朋友要给我引荐一下，帮我找工作。。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 等哥先回家办完正事儿再说哈。 <a href=\"http://www.mspring.org/wp-content/uploads/2011/10/14.gif\"><img style=\"display: inline\" title=\"14\" alt=\"14\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/14_thumb.gif\" width=\"24\" height=\"24\" /></a></p>','2011-10-14 20:56:02','2011-10-14 20:56:02',NULL,NULL,'publish',NULL,'恭喜我下个月终于要辞职了。。','/post/2012/7/14/1344938587051.html',1,0),(208,0,'open','<span style=\"direction: ltr;\">本站长期出租广告位。现有如下广告位：</span>\n\n首页横幅图片广告位：width*150 一个\n\n侧边栏图片、文字广告位：200*height 若干\n\n文章顶部巨幅图片、文字广告位\n\n文章底部巨幅图片、文字广告位\n\n另：本站长期出售友情链接及全站链接\n\n博客更新快，百度次日快照\n\n<span style=\"color: #ff0000;\">有意者请在本页面留言或者按照一下方式联系站长</span>\n\n<span style=\"color: #ff0000;\">QQ：330721072</span>\n\n<span style=\"color: #ff0000;\">E-mail：gaoyoubo@mspring.org</span>\n\n<strong><span style=\"text-decoration: underline; color: #000080;\">（此页为特殊用途，请不要留下不相关的信息，谢谢你的来访！）</span></strong> <!--EndFragment-->','2011-10-11 10:55:04','2011-10-11 10:59:13',NULL,NULL,'publish',NULL,'广告合作','/post/2012/7/14/1344938587106.html',1,2),(209,0,'open','<h5>申请友情链接前请看：</h5>\n<ul>\n	<li>一、在您申请本站友情链接之前请先做好本站链接，否则可能不会通过，谢谢！</li>\n	<li>二、长期不更新的博客以及免费域名和空间不接受友情链接，主要是不稳定。</li>\n	<li>三、本站目前只招优秀个人博客，网站和BBS等商业网站暂不交换友链。当然如果你站确实优秀的话我会考虑添加的。</li>\n	<li>四、如果您的站还未被baidu或google收录，申请链接暂不予受理！</li>\n	<li>五、如果您的站原创内容少之又少，申请连接不予受理！</li>\n	<li>六、其他暂且保留，有想到的再添加。</li>\n</ul>','2011-10-11 09:54:28','2012-07-11 12:15:47',NULL,NULL,'publish',NULL,'友情链接','/post/2012/7/14/1344938587157.html',1,1),(210,0,'open','<p>在GXT中，官方已经给了我们一个MVC设计模型。我们只需要了解他，然后使用它就行了。   <br />其主要的代码中: com.extjs.gxt.ui.client.mvc包中。</p>  <p>&#160;</p>  <p>包括以下几个类：   <br />AppEvent 事件类    <br />Dispatcher 负责应用程序的事件转发    <br />DispatcherListener 事件转发监听器    <br />Controller&#160; MVC模型中的C 控制器    <br />View MVC模型中的V 视图</p>  <p>&#160;</p>  <p>Dispatcher是一个单例，负责整个应用程序中的所有事件的分发。   <br />以下是分发事件的方法：</p>  <pre class=\"brush: java; toolbar: false\">private void dispatch(AppEvent event, boolean createhistory) {  \n<br />  MvcEvent e = new MvcEvent(this, event);  \n<br />  e.setAppEvent(event);  \n<br />  if (fireEvent(BeforeDispatch, e)) {  \n<br />    List&lt;Controller&gt; copy = new ArrayList&lt;Controller&gt;(controllers);  \n<br />    for (Controller controller : copy) {  \n<br />      if (controller.canHandle(event)) {  \n<br />        if (!controller.initialized) {  \n<br />          controller.initialized = true;  \n<br />          controller.initialize();  \n<br />        }  \n<br />        controller.handleEvent(event);  \n<br />      }  \n<br />    }  \n<br />    fireEvent(AfterDispatch, e);  \n<br />  }  \n<br />  if (createhistory &amp;&amp; event.isHistoryEvent()) {  \n<br />    String token = event.getToken();  \n<br />    if (token == null) {  \n<br />      token = &quot;&quot; + new Date().getTime();  \n<br />    }  \n<br />    history.put(token, event);  \n<br />    if (supportsHistory()) {  \n<br />      History.newItem(token, false);  \n<br />    }  \n<br />  }  \n<br />}  </pre>\n\n<p>这个方法有2个参数，第一个是要分发到事件，第二个是指定要不要记录历史(即是否添加记录点，在浏览器的前进后退按钮中生效)；</p>\n\n<p>下面看看Controller的部分代码</p>\n\n<pre class=\"brush: java; toolbar: false\">protected void registerEventTypes(EventType... types) {  \n  if (supportedEvents == null) {  \n    supportedEvents = new ArrayList&lt;EventType&gt;();  \n  }  \n  if (types != null) {  \n    for (EventType type : types) {  \n      if (!supportedEvents.contains(type)) {  \n        supportedEvents.add(type);  \n      }  \n    }  \n  }  \n}  \n  \npublic boolean canHandle(AppEvent event) {  \n  if (supportedEvents != null &amp;&amp; supportedEvents.contains(event.getType())) return true;  \n  if (children != null) {  \n    for (Controller c : children) {  \n      if (c.canHandle(event)) return true;  \n    }  \n  }  \n  return false;  \n}  </pre>\n\n<p>这里有贴了2个方法，一个是registerEventTypes(),表示注册事件。\n  <br />如果我们要对初始化事件INIT进行处理，我们要先注册这个事件registerEventTypes(INIT);\n\n  <br />那么当这个事件发生时，Controller就会接收到，可以进行相应的处理.\n\n  <br />canHandle这个方法就是判断能否处理的，当你注册INIT事件后，他会把这个INIT对象放进supportedEvents 里面，canHandle里面迭代这个集合，如果存在，返回true表示需要处理，如果不存在，返回false表示不需要处理。\n\n  <br />回头再看之前的Dispatcher类里面的dispatch方法，他会迭代controllers这个集合，调用它们的 canHandler()方法，如果需要处理，则调用controller的handleEvent方法来处理。\n\n  <br />为了把我们自己的controller添加到Dispathcer的controllers里面，我们还需要调用以下方法：</p>\n\n<pre class=\"brush: java; toolbar: false\">public void addController(Controller controller) {  \n  if (!controllers.contains(controller)) {  \n    controllers.add(controller);  \n  }  \n}  \n\n\nDispathcher.get().addController(controller); </pre>','2011-10-11 02:21:12','2011-10-11 02:25:15',NULL,NULL,'publish',NULL,'GXT中的MVC','/post/2012/7/14/1344938587211.html',1,0),(211,0,'open','<p>要说GXT里面的事件Event，就必须先了解一下GWT提供的事件系统    <br />GWT中基础的事件类是:com.google.gwt.user.client.Event     <br />在这里GWT给我们提供了浏览器原生的20种左右的事件，每一个事件都用一个Int整数类型表示     <br />如：</p>  <p>public static final int ONCLICK = 0x00001;</p>  <p>GWT只提供了原生的事件，实际GXT中需要很多的自定义事件，GXT是如何扩展事件系统的呢？    <br />GXT中创建了一个:com.extjs.gxt.ui.client.event.EventType 类，通过创建这个类的实例来表示一种事件（对比GWT中是用int整数来表示一种事件）。     <br />GWT中通过int类型来区别不同的事件，而GXT的 EventType则是通过比较内存地址来判断是否为不同的事件。</p>  <p>com.extjs.gxt.ui.client.event.Events 类列出了GXT提供的所有事件类型，截取片段代码如下:</p>  <p></p>  <pre class=\"brush: java; toolbar: false\">public class Events {\n<br />	public static final EventType Activate = new EventType();\n<br />	public static final EventType Add = new EventType();\n<br />	public static final EventType Adopt = new EventType();  </pre>\n\n<p>因为这些事件类型是带有逻辑的自定义的事件，数量上远远大于浏览器的原生事件。目前GXT2.1的事件就达到145种，未来应该还会添加！\n  <br />这样说来GXT与GWT采用了2套事件系统，会不会有冲突呢？\n\n  <br />比如GWT捕获到一个Event.ONCLICK的单击事件，通知给GXT，因为这是一个int数据，而GXT识别的是EventType类型的 事件，GXT如何来识别GWT的事件并转化为自己能够认识的EventType事件呢？\n\n  <br />解决方法是GXT将GWT提供的原生事件与GXT中的事件进行了绑定。参考代码：</p>\n\n<pre class=\"brush: java; toolbar: false\">private static Map&lt;String, EventType&gt; browserEvents = new FastMap&lt;EventType&gt;();  \n  \nstatic {  \n  browserEvents.put(String.valueOf(Event.ONBLUR), OnBlur);  \n  browserEvents.put(String.valueOf(Event.ONCHANGE), OnChange);  \n  browserEvents.put(String.valueOf(Event.ONCLICK), OnClick);  \n  browserEvents.put(String.valueOf(Event.ONCONTEXTMENU), OnContextMenu);  \n  browserEvents.put(String.valueOf(Event.ONDBLCLICK), OnDoubleClick);  \n  browserEvents.put(String.valueOf(Event.ONERROR), OnError);  \n  browserEvents.put(String.valueOf(Event.ONFOCUS), OnFocus);  \n  browserEvents.put(String.valueOf(Event.ONKEYDOWN), OnKeyDown);  \n  browserEvents.put(String.valueOf(Event.ONKEYPRESS), OnKeyPress);  \n  browserEvents.put(String.valueOf(Event.ONKEYUP), OnKeyUp);  \n  browserEvents.put(String.valueOf(Event.ONLOAD), OnLoad);  \n  browserEvents.put(String.valueOf(Event.ONLOSECAPTURE), OnLoseCapture);  \n  browserEvents.put(String.valueOf(Event.ONMOUSEDOWN), OnMouseDown);  \n  browserEvents.put(String.valueOf(Event.ONMOUSEUP), OnMouseUp);  \n  browserEvents.put(String.valueOf(Event.ONMOUSEOVER), OnMouseOver);  \n  browserEvents.put(String.valueOf(Event.ONMOUSEOUT), OnMouseOut);  \n  browserEvents.put(String.valueOf(Event.ONMOUSEMOVE), OnMouseMove);  \n  browserEvents.put(String.valueOf(Event.ONMOUSEWHEEL), OnMouseWheel);  \n  browserEvents.put(String.valueOf(Event.ONPASTE), OnPaste);  \n  browserEvents.put(String.valueOf(Event.ONSCROLL), OnScroll);  \n}  </pre>\n\n<p>browserEvents 这个map对象绑定了GWT事件与GXT的EventType事件\n  <br />当GXT接收到GWT传递过来的一个int类型的事件时，GXT会调用：</p>\n\n<pre class=\"brush: java; toolbar: false\">public static EventType lookupBrowserEvent(int browserEventType) {  \n  EventType type = browserEvents.get(String.valueOf(browserEventType));  \n  assert type != null;  \n  return type;  \n} </pre>\n\n<p>方法来查找对应的EventType事件,找到后以自己的一套事件系统来传递和处理这个事件</p>','2011-10-11 02:16:54','2011-10-11 02:17:29',NULL,NULL,'publish',NULL,'GXT Event事件系统','/post/2012/7/14/1344938587265.html',1,0),(212,0,'open','<p>（1）EventSinks－－接收Events</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderEventSink.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"JSpiderEventSink\" border=\"0\" alt=\"JSpiderEventSink\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderEventSink_thumb.jpg\" width=\"700\" height=\"469\" /></a>&#160; </p>  <p>&#160;</p>  <p>（2）Rules</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderRules.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"JSpiderRules\" border=\"0\" alt=\"JSpiderRules\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderRules_thumb.jpg\" width=\"578\" height=\"590\" /></a> </p>  <p>（3）Resources</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderResources.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"JSpiderResources\" border=\"0\" alt=\"JSpiderResources\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderResources_thumb.jpg\" width=\"561\" height=\"428\" /></a></p>  <p>&#160;</p>  <p>&#160;</p>  <p>原文地址：</p>','2011-10-08 10:55:42','2011-10-08 10:55:42',NULL,NULL,'publish',NULL,'JSpider（5）：EventSinks,Rules&amp;Resources','/post/2012/7/14/1344938587323.html',1,0),(213,0,'open','<p>（1）Tasks－－引擎调度，网页解析应该都是通过Tasks实现的</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/JspiderTasks.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"JspiderTasks\" border=\"0\" alt=\"JspiderTasks\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/JspiderTasks_thumb.jpg\" width=\"669\" height=\"360\" /></a> </p>  <p>（2）CoreEvents 与 CoreEvents\' Visitor－－一些核心Event和一个Agent</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/CoreEvent.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"CoreEvent\" border=\"0\" alt=\"CoreEvent\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/CoreEvent_thumb.jpg\" width=\"685\" height=\"498\" /></a> </p>  <p>（3）JSpiderEvents 与 JSpiderEvents\' visitors－－扩展JSpider最需要了解这一块。JSpider提供了3种Visitor，对于特定的应用，需要扩展现有Visitor或者实现自己的Visitor。</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/EventLayers.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"EventLayers\" border=\"0\" alt=\"EventLayers\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/EventLayers_thumb.jpg\" width=\"778\" height=\"597\" /></a> </p>  <p>&#160;</p>  <p>原文地址：<a href=\"http://www.cnblogs.com/xiaotie/archive/2005/10/07/249774.html\">http://www.cnblogs.com/xiaotie/archive/2005/10/07/249774.html</a></p>','2011-10-08 10:52:40','2011-10-08 10:52:40',NULL,NULL,'publish',NULL,'JSpider（4）：Tasks，Events&amp;Visitors','/post/2012/7/14/1344938587427.html',1,0),(214,0,'open','<p>（本系列文章主要是阅读笔记，描述偶的阅读过程，看起来可能比较杂乱，缺乏逻辑性－－等偶把JSpider弄明白后会出修改版的。:P&#160; JSpider有数万行代码，又没有开发手册，只能瞎子摸象般的看了）</p>  <p>JSpider用户手册里面有这样一张结构图：</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderModel.jpg\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"JSpiderModel\" border=\"0\" alt=\"JSpiderModel\" src=\"http://www.mspring.org/wp-content/uploads/2011/10/JSpiderModel_thumb.jpg\" width=\"579\" height=\"308\" /></a> </p>  <p>结合代码，可以看出JSpider大概组成如下：   <br />（1）JSpider的核心：装载插件，获取配置信息，初始化调度器。机制比较复杂，具体的代码没细看。    <br />（2）Dispatcher：dispatch tasks，触发Events，通知Visitors。    <br />（3）Events：JSpider定义了一系列的Events，采用Visitor模式提供行为扩展。    <br />（4）Rules：定义规则吧，具体的代码没看    <br />（5）Event Filters：顾名思义，具体的代码没看。    <br />（6）Model：没细看    <br />（7）Storage：顾名思义，具体的代码没看。</p>  <p>&#160;</p>  <p>&#160;</p>  <p>原文地址：<a href=\"http://www.cnblogs.com/xiaotie/archive/2005/10/07/249769.html\">http://www.cnblogs.com/xiaotie/archive/2005/10/07/249769.html</a></p>','2011-10-08 10:23:15','2011-10-08 10:23:15',NULL,NULL,'publish',NULL,'JSpider（3）：JSpider的结构','/post/2012/7/14/1344938587479.html',1,0),(215,0,'open','<p>从名字可以看出，JSpider是一个用Java实现的Web Spider。JSpider官方网站这样说的：</p>  <blockquote>   <p>JSpider is:&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; A highly configurable and customizable Web Spider engine.&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; Developed under the LGPL Open Source license&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; In 100% pure Java&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />You can use it to :&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; Check your site for errors (internal server errors, <img src=\"http://www.cnblogs.com/Images/dot.gif\" />)&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; Outgoing and/or internal link checking&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; Analyze your site structure (creating a sitemap, <img src=\"http://www.cnblogs.com/Images/dot.gif\" />)&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; Download complete web sites&#160; <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />•&#160;&#160;&#160; Any task you want, if you write a JSpider plugin. </p> </blockquote>  <p>JSpider的执行格式如下：   <br />jspider [URL] [ConfigName]</p>  <p>URL一定要加上协议名称，如：http://，否则会报错。如果省掉ConfigName，则采用默认配置。</p>  <p>JSpider的行为是由配置文件具体配置的，比如采用什么插件，结果存储方式等等都在conf\\[ConfigName]\\目录下设置。JSpider默认的配置种类很少，用途也不大。但是JSpider非常容易扩展，可以利用它开发强大的网页抓取与数据分析工具。要做到这些，需要对JSpider的原理有深入的了解，然后根据自己的需求开发插件，撰写配置文件。</p>  <p>原文地址：<a href=\"http://www.cnblogs.com/xiaotie/archive/2005/10/07/249761.html\">http://www.cnblogs.com/xiaotie/archive/2005/10/07/249761.html</a></p>','2011-10-08 10:20:25','2011-10-08 10:20:25',NULL,NULL,'publish',NULL,'JSpider（2）：JSpider是什么？','/post/2012/7/14/1344938587534.html',1,0),(216,0,'open','<p>运行:</p>  <p>1,下载jspider-0.5.0-dev.zip,解压缩.</p>  <p>2,开始-&gt;运行-&gt;cmd,进入命令行窗口,进入jspider-0.5.0-dev/bin目录</p>  <p>3, 试着抓取网站http: //j-spider.sourceforge.net的内容:</p>  <blockquote>   <p>jspider <a href=\"http://j-spider.sourceforge.net\">http://j-spider.sourceforge.net</a> &gt;&gt; out.txt</p> </blockquote>  <p>可以看见屏幕上显示:</p>  <blockquote>   <p>JSpider v0.5.0 DEV (http://j-spider.sourceforge.net)     <br />Build: 20030502      <br />Started from .      <br />[Engine] jspider.home=..      <br />[Engine] default output folder=..\\output      <br />[Engine] starting with configuration \'default\'</p> </blockquote>  <p>bin目录下多了两个文件,out.txt, velocity.log.</p>  <p>out.txt内容如下:</p>  <blockquote>   <p>&#160;</p>    <p>------------------------------------------------------------     <br />JSpider startup script      <br />JSPIDER_HOME=..      <br />------------------------------------------------------------      <br />INFO&#160; [core.impl.PluginFactory] Loading 4 plugins.      <br />INFO&#160; [core.impl.PluginFactory] Loading plugin configuration \'console\'<img src=\"http://www.cnblogs.com/Images/dot.gif\" />      <br />INFO&#160; [mod.plugin.console.ConsolePlugin] Prefix set to \'[Plugin] \'      <br />INFO&#160; [core.impl.PluginFactory] Plugin not configured for local event filtering      <br />INFO&#160; [core.impl.PluginFactory] Plugin Name&#160;&#160;&#160; : Console writer JSpider module      <br />INFO&#160; [core.impl.PluginFactory] Plugin Version : v1.0      <br />INFO&#160; [core.impl.PluginFactory] Plugin Vendor&#160; : http://www.javacoding.net      <br />INFO&#160; [core.impl.PluginFactory] Loading plugin configuration \'velocity\'<img src=\"http://www.cnblogs.com/Images/dot.gif\" />      <br />INFO&#160; [core.impl.PluginFactory] Plugin uses local event filtering      <br />INFO&#160; [core.impl.PluginFactory] Plugin Name&#160;&#160;&#160; : Velocity Template JSpider module      <br />INFO&#160; [core.impl.PluginFactory] Plugin Version : v1.0      <br />INFO&#160; [core.impl.PluginFactory] Plugin Vendor&#160; : http://www.javacoding.net      <br />INFO&#160; [core.impl.PluginFactory] Loading plugin configuration \'statusbasedfilewriter\'<img src=\"http://www.cnblogs.com/Images/dot.gif\" />      <br />INFO&#160; [mod.plugin.statusbasedfilewriter.StatusBasedFileWriterPlugin] initialized.      <br />INFO&#160; [core.impl.PluginFactory] Plugin not configured for local event filtering      <br />INFO&#160; [core.impl.PluginFactory] Plugin Name&#160;&#160;&#160; : Status based&#160; Filewriter JSpider plugin      <br />INFO&#160; [core.impl.PluginFactory] Plugin Version : v1.0      <br />INFO&#160; [core.impl.PluginFactory] Plugin Vendor&#160; : http://www.javacoding.net      <br />INFO&#160; [core.impl.PluginFactory] Loading plugin configuration \'xmldump\'<img src=\"http://www.cnblogs.com/Images/dot.gif\" />      <br />INFO&#160; [core.impl.PluginFactory] Plugin uses local event filtering      <br />INFO&#160; [core.impl.PluginFactory] Plugin Name&#160;&#160;&#160; : Velocity Template JSpider module      <br />INFO&#160; [core.impl.PluginFactory] Plugin Version : v1.0      <br />INFO&#160; [core.impl.PluginFactory] Plugin Vendor&#160; : http://www.javacoding.net      <br />INFO&#160; [core.impl.PluginFactory] Loaded 4 plugins.      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] writing trace file: true      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] writing dump file: true      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] Velocity template folder : velocity      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] Writing to trace file: ./velocity-trace.out      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] Writing to dump file: ./velocity-dump.out      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] writing trace file: false      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] writing dump file: true      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] Velocity template folder : xmldump      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] Writing to dump file: ./xml-dump.xml      <br />INFO&#160; [core.storage.StorageFactory] Storage provider class is \'class net.javacoding.jspider.core.storage.memory.InMemoryStorageProvider\'      <br />INFO&#160; [core.SpiderContext] default user Agent is \'JSpider v0.5.0-dev (http://j-spider.sourceforge.net)\'      <br />INFO&#160; [core.task.SchedulerFactory] TaskScheduler provider class is \'class net.javacoding.jspider.core.task.impl.DefaultSchedulerProvider\'      <br />INFO&#160; [core.Spider] Spider born - threads: spiders: 5, thinkers: 1      <br />[Plugin] Module : Console writer JSpider module      <br />[Plugin] Version: v1.0      <br />[Plugin] Vendor : http://www.javacoding.net      <br />[Plugin] Spidering Started, baseURL = http://j-spider.sourceforge.net      <br />INFO&#160; [core.SpiderContext] using userAgent \'JSpider v0.5.0-dev (http://j-spider.sourceforge.net)\' for site \'http://j-spider.sourceforge.net\'      <br />[Plugin] site discovered : http://j-spider.sourceforge.net      <br />[Plugin] resource discovered: http://j-spider.sourceforge.net      <br />INFO&#160; [core.throttle.ThrottleFactory] Throttle provider class is \'class net.javacoding.jspider.core.throttle.impl.DistributedLoadThrottleProvider\'      <br />[Plugin] Job monitor: 0% (0/1)&#160; [S:0% (0/1) | T:0% (0/0)] [blocked:1] [assigned:1]      <br />[Plugin] resource discovered: http://j-spider.sourceforge.net/robots.txt      <br />[Plugin] 200 - http://j-spider.sourceforge.net/robots.txt - text/plain 527 461 ms      <br />INFO&#160; [mod.plugin.statusbasedfilewriter.StatusBasedFileWriterPlugin] creating file for status \'200\'      <br />[Plugin] robots.txt fetched from site [Site: http://j-spider.sourceforge.net - ROBOTSTXT_HANDLED *]      <br />[Plugin] net.javacoding.jspider.api.event.site.UserAgentObeyedEvent obeyed rules for useragent \'JSpider\' as found in robots.txt on site http://j-spider.sourceforge.net      <br />[Plugin] ThreadPool Thinkers occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 1      <br />[Plugin] ThreadPool Spiders occupation:20% [idle: 80%, blocked: 20%, busy: 0%], size: 5      <br />[Plugin] Job monitor: 66% (2/3)&#160; [S:50% (1/2) | T:100% (1/1)] [blocked:0] [assigned:1]      <br />[Plugin] ThreadPool Thinkers occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 1      <br />[Plugin] ThreadPool Spiders occupation:20% [idle: 80%, blocked: 0%, busy: 20%], size: 5      <br />……      <br />[Plugin] Job monitor: 66% (2/3)&#160; [S:50% (1/2) | T:100% (1/1)] [blocked:0] [assigned:1]      <br />[Plugin] ThreadPool Thinkers occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 1      <br />[Plugin] ThreadPool Spiders occupation:20% [idle: 80%, blocked: 0%, busy: 20%], size: 5      <br />[Plugin] 200 - http://j-spider.sourceforge.net - text/html 5687 9673 ms      <br />[Plugin] resource discovered: http://j-spider.sourceforge.net/css/ie.css      <br />[Plugin] resource discovered: http://j-spider.sourceforge.net/img/grey.gif      <br />……      <br />[Plugin] resource discovered: http://j-spider.sourceforge.net/img/title_information.gif      <br />INFO&#160; [core.SpiderContext] site http://www.sourceforge.net must not be handled.      <br />[Plugin] site discovered : http://www.sourceforge.net      <br />……      <br />[Plugin] http://j-spider.sourceforge.net parsed (handled)      <br />[Plugin] 200 - http://j-spider.sourceforge.net/css/ie.css - text/css 114 440 ms      <br />[Plugin] http://j-spider.sourceforge.net/css/ie.css - Ignored for parsing      <br />[Plugin] Job monitor: 58% (29/50)&#160; [S:12% (3/24) | T:100% (26/26)] [blocked:0] [assigned:6]      <br />[Plugin] ThreadPool Thinkers occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 1      <br />[Plugin] ThreadPool Spiders occupation:100% [idle: 0%, blocked: 100%, busy: 0%], size: 5      <br />[Plugin] 200 - http://j-spider.sourceforge.net/img/grey.gif - image/gif 49 441 ms      <br />[Plugin] http://j-spider.sourceforge.net/img/grey.gif - Ignored for parsing      <br />[Plugin] Job monitor: 60% (31/51)&#160; [S:16% (4/24) | T:100% (27/27)] [blocked:0] [assigned:6]      <br />[Plugin] ThreadPool Thinkers occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 1      <br />[Plugin] ThreadPool Spiders occupation:100% [idle: 0%, blocked: 100%, busy: 0%], size: 5      <br />ERROR [core.task.work.SpiderHttpURLTask] exception during spidering      <br />java.io.IOException      <br />&#160;&#160;&#160; at sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)      <br />&#160;&#160;&#160; at net.javacoding.jspider.core.task.work.SpiderHttpURLTask.execute(Unknown Source)      <br />&#160;&#160;&#160; at net.javacoding.jspider.core.threading.WorkerThread.run(Unknown Source)      <br />Caused by: java.io.FileNotFoundException: http://j-spider.sourceforge.net/img/logo.gif      <br />&#160;&#160;&#160; at sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)      <br />&#160;&#160;&#160; at java.net.HttpURLConnection.getResponseCode(Unknown Source)      <br /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /> 2 more      <br />[Plugin] 404 - ERROR !!!http://j-spider.sourceforge.net/img/logo.gif      <br />INFO&#160; [mod.plugin.statusbasedfilewriter.StatusBasedFileWriterPlugin] creating file for status \'404\'      <br />[Plugin] Job monitor: 62% (32/51)&#160; [S:20% (5/24) | T:100% (27/27)] [blocked:0] [assigned:6]      <br />……      <br />[Plugin] 200 - http://j-spider.sourceforge.net/img/title_other.gif - image/gif 1044 9403 ms      <br />[Plugin] http://j-spider.sourceforge.net/img/title_other.gif - Ignored for parsing      <br />INFO&#160; [core.Spider] Stopped spider workers<img src=\"http://www.cnblogs.com/Images/dot.gif\" />      <br />INFO&#160; [core.Spider] Stopped thinker workers<img src=\"http://www.cnblogs.com/Images/dot.gif\" />      <br />[Plugin]      <br />SPIDERING SUMMARY :&#160; <br />known urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : 47      <br />&#160; visited urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />.. : 27      <br />&#160;&#160;&#160; parsed urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /> : 11      <br />&#160;&#160;&#160; parse ignored urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" />.. : 16      <br />&#160;&#160;&#160; parse error urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : 0      <br />&#160; not visited urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : 20      <br />&#160;&#160;&#160; fetching ignored urls .. : 19      <br />&#160;&#160;&#160; forbidden urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /> : 0      <br />&#160;&#160;&#160; fetch error urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : 1      <br />&#160; not yet&#160; visited urls .. : 0      <br />[Plugin] Spidering Stopped      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] writing dump - this could take a while      <br />INFO&#160; [mod.plugin.velocity.VelocityPlugin] writing dump - this could take a while      <br />[Plugin] Job monitor: 100% (92/92)&#160; [S:100% (28/28) | T:100% (64/64)] [blocked:0] [assigned:0]      <br />INFO&#160; [core.Spider] Spidering done!      <br />INFO&#160; [core.Spider] Elapsed time : 46127      <br />[Plugin] ThreadPool Thinkers occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 1      <br />[Plugin] ThreadPool Spiders occupation:0% [idle: 100%, blocked: 0%, busy: 0%], size: 5</p> </blockquote>  <p>可以看出，具体的spider，parse,dump动作都是由插件实现的。velocity.log是velocity插件的日志。</p>  <p>默认输出目录是output,进去可以看见7个文件: 200.out, 404.out, log4j.out, README.txt, velocity-dump.out, velocity-trace.out, xml-dump.xml;这些文件记录的就是扫描结果。*.out是文本文件,可以用文本编辑器打开.output里面没有http页面,也就是说默认配置不保存抓取下来的页面.</p>  <p>配置文件在conf目录下.配置文件有两种：</p>  <p>(1)*.properties――程序配置文件，配置程序的行为</p>  <p>如conf\\default\\plugins\\download\\sites.properties文件内容：</p>  <blockquote>   <p># -----------------------------------------------------------------------------     <br /># Websites configuration file      <br /># -----------------------------------------------------------------------------      <br />#      <br /># $Id: sites.properties,v 1.4 2003/04/25 21:28:55 vanrogu Exp $      <br />#      <br /># -----------------------------------------------------------------------------      <br />jspider.site.config.base=base      <br />jspider.site.config.default=skip</p> </blockquote>  <p>(2)*.vm――输出格式配置文件，配置程序的输出。JSpider采用的是第三方工具velocity。</p>  <p>*.vm是velocity模板文件。如，conf\\default\\plugins\\velocity\\engineSpideringStoppedEvent.vm：</p>  <p>&#160;</p>  <blockquote>   <p>[${eventName}]     <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; known urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : ${event.summary.known}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; visited urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />.. : ${event.summary.visited}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; parsed urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /> : ${event.summary.parsed}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; parse ignored urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" />.. : ${event.summary.ignoredForParsing}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; parse error urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : ${event.summary.parseErrors}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; not visited urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : ${event.summary.notVisited}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; fetching ignored urls .. : ${event.summary.ignoredForFetching}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; forbidden urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" /> : ${event.summary.forbidden}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; fetch error urls <img src=\"http://www.cnblogs.com/Images/dot.gif\" /><img src=\"http://www.cnblogs.com/Images/dot.gif\" />. : ${event.summary.fetchErrors}      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />      <br /><img align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/None.gif\" />&#160; not yet&#160; visited urls .. : ${event.summary.unvisited}</p> </blockquote>  <p>&#160;</p>  <p>原文地址：<a href=\"http://www.cnblogs.com/xiaotie/archive/2005/10/07/249747.html\">http://www.cnblogs.com/xiaotie/archive/2005/10/07/249747.html</a></p>','2011-10-08 10:18:01','2011-10-08 10:18:26',NULL,NULL,'publish',NULL,'JSpider（1）：配置与运行','/post/2012/7/14/1344938587598.html',1,0),(217,0,'open','<blockquote>   <p>作为一个技术博客怎么能够没有代码高亮插件了。 推荐两款我认为不错的。 </p>    <p>1. 如果你喜欢使用windows live writer写作的话， 那么推荐你使用 SyntaxHighlighter Evolved（wordpress插件） 配合 Syntax4Writer（Windows live writer插件）</p>    <p>&#160; SyntaxHighlighter Evolved下载地址：<a href=\"http://wordpress.org/extend/plugins/syntaxhighlighter/\">http://wordpress.org/extend/plugins/syntaxhighlighter/</a></p>    <p>&#160; Syntax4Writer下载地址：<a href=\"http://plugins.live.com/writer/detail/syntax4writer-for-alex-gorbatchevs-syntaxhighlighter\">http://plugins.live.com/writer/detail/syntax4writer-for-alex-gorbatchevs-syntaxhighlighter</a></p>    <p>分别安装这两个插件，然后启用， 就可以进行代码高亮了。 比较好的是SyntaxHighlighter Evolved插件可以在wordpress后台设置比较好看的样式。</p>    <p>2. 如果你喜欢在wordpress后台写作， 那么推荐你使用WP SyntaxHighlighter</p>    <p>&#160;&#160; 下载地址： <a href=\"http://wordpress.org/extend/plugins/wp-syntaxhighlighter/\">http://wordpress.org/extend/plugins/wp-syntaxhighlighter/</a></p>    <p>&#160; 该插件和上面提到的SyntaxHighlighter Evolved插件一样， 也可以设置很炫酷的样式，并且该插件会在wordpress文章写作页面富文本编辑器上添加几个按钮，点击按钮弹出对话框，复制你要高亮的代码，然后选择代码类型就可以高亮了</p></blockquote>','2011-10-08 02:49:09','2011-10-08 02:50:53',NULL,NULL,'publish',NULL,'wordpress代码高亮设置。','/post/2012/7/14/1344938587663.html',1,0),(218,0,'open','<p>支持MyEclipse6.5 和 MyEclipse7.0的注册。 直接编译可以运行。</p>  <p>&#160;</p>  <pre class=\"brush: java\">import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \npublic class MyEclipseGen { \nprivate static final String LL = &quot;Decompiling this copyrighted software is a violation of both your license agreement and the Digital Millenium Copyright Act of 1998 (http://www.loc.gov/copyright/legislation/dmca.pdf). Under section 1204 of the DMCA, penalties range up to a $500,000 fine or up to five years imprisonment for a first offense. Think about it; pay for a license, avoid prosecution, and feel better about yourself.&quot;; \n      public String getSerial(String userId, String licenseNum) { \n          java.util.Calendar cal = java.util.Calendar.getInstance(); \n         cal.add(1, 3); \n         cal.add(6, -1); \n         java.text.NumberFormat nf = new java.text.DecimalFormat(&quot;000&quot;); \n         licenseNum = nf.format(Integer.valueOf(licenseNum)); \n         String verTime = new StringBuilder(&quot;-&quot;).append( \n                 new java.text.SimpleDateFormat(&quot;yyMMdd&quot;).format(cal.getTime())) \n                 .append(&quot;0&quot;).toString(); \n         String type = &quot;YE3MP-&quot;; \n         String need = new StringBuilder(userId.substring(0, 1)).append(type) \n                 .append(&quot;300&quot;).append(licenseNum).append(verTime).toString(); \n         String dx = new StringBuilder(need).append(LL).append(userId) \n                 .toString(); \n         int suf = this.decode(dx); \n         String code = new StringBuilder(need).append(String.valueOf(suf)) \n                 .toString(); \n         return this.change(code); \n     } \n     private int decode(String s) { \n         int i; \n         char[] ac; \n         int j; \n         int k; \n         i = 0; \n         ac = s.toCharArray(); \n         j = 0; \n         k = ac.length; \n         while (j &lt; k) { \n             i = (31 * i) + ac[j]; \n             j++; \n         } \n         return Math.abs(i); \n     } \n     private String change(String s) { \n         byte[] abyte0; \n         char[] ac; \n         int i; \n         int k; \n         int j; \n         abyte0 = s.getBytes(); \n         ac = new char[s.length()]; \n         i = 0; \n         k = abyte0.length; \n         while (i &lt; k) { \n             j = abyte0[i]; \n             if ((j &gt;= 48) &amp;&amp; (j &lt;= 57)) { \n                 j = (((j - 48) + 5) % 10) + 48; \n             } else if ((j &gt;= 65) &amp;&amp; (j &lt;= 90)) { \n                 j = (((j - 65) + 13) % 26) + 65; \n             } else if ((j &gt;= 97) &amp;&amp; (j &lt;= 122)) { \n                 j = (((j - 97) + 13) % 26) + 97; \n             } \n             ac[i] = (char) j; \n             i++; \n         } \n         return String.valueOf(ac); \n     } \n     public MyEclipseGen() { \n         super(); \n     } \n     public static void main(String[] args) { \n         try { \n             System.out.println(&quot;please input register name:&quot;); \n             BufferedReader reader = new BufferedReader(new InputStreamReader( \n                     System.in)); \n             String userId = null; \n             userId = reader.readLine(); \n             MyEclipseGen myeclipsegen = new MyEclipseGen(); \n             String res = myeclipsegen.getSerial(userId, &quot;5&quot;); \n             System.out.println(&quot;Serial:&quot; + res); \n             reader.readLine(); \n         } catch (IOException ex) { \n         } \n     } \n}</pre>','2011-10-07 22:35:40','2011-10-08 22:46:47',NULL,NULL,'publish',NULL,'MyEclipse注册机源码','/post/2012/7/14/1344938587716.html',1,0),(219,0,'open','','2011-10-05 22:23:22','2011-10-05 22:23:22',NULL,NULL,'publish',NULL,'涩港社区','/post/2012/7/14/1344938587774.html',1,0),(220,0,'open','<p>&#160;&#160;&#160;&#160; 北京时间10月6日消息，据国外媒体报道，PC产业的先驱、改变了世人对科技看法的苹果董事会主席、联合创始人史蒂夫·乔布斯（Steven P. Jobs）周三逝世，享年56岁。</p>  <p>&#160;&#160;&#160;&#160;&#160; 苹果在周三在声明中表示，“史蒂夫的光辉、激情和活力是无穷的创新的来源，他丰富并改变了我们所有人的生活。世界因为乔布斯而变得更好。”</p>  <p>&#160;</p>  <p>&#160;&#160;&#160;&#160;&#160; 乔布斯的家人在一份单独的声明中表示，“乔布斯周三在家人的陪伴中安静的离开……我们知道，许多人将与我们一样忧伤，但是在这一悲痛时期，我们希望你们能够尊重我们的隐私。”</p>','2011-10-05 22:08:00','2011-10-05 22:08:00',NULL,NULL,'publish',NULL,'苹果联合创始人、董事会主席乔布斯逝世','/post/2012/7/14/1344938587829.html',1,0),(221,0,'open','之前一直在用MyEclipse做Java开发, 但是MyEclipse收费的, 而且我的喜欢使用最新版本的软件,MyEclipse中带的eclipse版本又不是最新的. 于是我换用最新版本的eclipse3.7+Jboss Tools做开发, 这个也都能够满足我的日常开发要求.\n\n之前使用MyEclipse时,有一个小插件Open in explorer,该插件就是将选择的文件夹或者文件在资源管理器中打开,插件虽然小, 但是用着方便. 用的时候还挺多的. 换做eclipse的时候没有了该插件,需要用的时候还真的挺不方便的. 于是在网上搜索了一些资料自己编写了这样一个插件.\n\n首先创建一个插件项目. Plug-in Project\n\n <a href=\"http://www.mspring.org/wp-content/uploads/2011/09/1.png\"><img class=\"alignnone size-medium wp-image-611\" title=\"1\" src=\"http://www.mspring.org/wp-content/uploads/2011/09/1-300x283.png\" alt=\"创建项目\" width=\"300\" height=\"283\" /></a>\n\n然后输入项目名称,其他的都默认就行.\n\n插件就两个Java类, 下面直接贴代码了. 具体的会在代码中添加注释.\n\n&nbsp;\n\n1.Activator.java\n\npackage org.mspring.eclipse.explorer;\n\nimport org.eclipse.jface.resource.ImageDescriptor;\nimport org.eclipse.ui.plugin.AbstractUIPlugin;\nimport org.osgi.framework.BundleContext;\n\n/**\n * The activator class controls the plug-in life cycle\n */\npublic class Activator extends AbstractUIPlugin {\n\n    // The plug-in ID\n    public static final String PLUGIN_ID = \"org.mspring.eclipse.explorer\"; //$NON-NLS-1$\n\n    // The shared instance\n    private static Activator plugin;\n\n    /**\n     * The constructor\n     */\n    public Activator() {\n    }\n\n    /*\n     * (non-Javadoc)\n     *\n     * @see\n     * org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext\n     * )\n     */\n    public void start(BundleContext context) throws Exception {\n        super.start(context);\n        plugin = this;\n    }\n\n    /*\n     * (non-Javadoc)\n     *\n     * @see\n     * org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext\n     * )\n     */\n    public void stop(BundleContext context) throws Exception {\n        plugin = null;\n        super.stop(context);\n    }\n\n    /**\n     * Returns the shared instance\n     *\n     * @return the shared instance\n     */\n    public static Activator getDefault() {\n        return plugin;\n    }\n\n    /**\n     * Returns an image descriptor for the image file at the given plug-in\n     * relative path\n     * \n     * @param path\n     *            the path\n     * @return the image descriptor\n     */\n    public static ImageDescriptor getImageDescriptor(String path) {\n        return imageDescriptorFromPlugin(PLUGIN_ID, path);\n    }\n}\n\n&nbsp;\n\n2.  ExplorerAction.java\n\n/**\n *\n */\npackage org.mspring.eclipse.explorer.actions;\n\nimport org.eclipse.core.resources.IFile;\nimport org.eclipse.core.resources.IResource;\nimport org.eclipse.jdt.core.IJavaElement;\nimport org.eclipse.jface.action.IAction;\nimport org.eclipse.jface.dialogs.MessageDialog;\nimport org.eclipse.jface.viewers.ISelection;\nimport org.eclipse.jface.viewers.TreePath;\nimport org.eclipse.jface.viewers.TreeSelection;\nimport org.eclipse.ui.IWorkbenchWindow;\nimport org.eclipse.ui.IWorkbenchWindowActionDelegate;\n\n/**\n * @author gaoyb\n * @since 2011-9-29\n */\npublic class ExplorerAction implements IWorkbenchWindowActionDelegate {\n   \n    private IWorkbenchWindow window;\n    private ISelection selection = null;\n    private String os = null;\n    private String explorer = null;\n   \n    /**\n     *\n     */\n    public ExplorerAction() {\n        // TODO Auto-generated constructor stub\n        this.os = System.getProperty(\"osgi.os\");   //获取当前操作系统\n        if (\"win32\".equalsIgnoreCase(this.os)) {  //如果操作系统为windows\n            this.explorer = \"explorer\";\n        }\n    }\n\n    /* (non-Javadoc)\n     * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)\n     */\n    @Override\n    public void run(IAction action) {\n        // TODO Auto-generated method stub\n        if (this.explorer == null) {\n            MessageDialog.openWarning(this.window.getShell(), \"Warning\", \"unsupported os \'\" + this.os + \"\'\");\n        }\n        \n        else if((this.selection != null) &amp;&amp; (this.selection instanceof TreeSelection)){\n            TreeSelection tree = (TreeSelection) this.selection;\n            if (!(tree.isEmpty())) {\n                TreePath path = tree.getPaths()[0];\n                IResource resource = null;\n                Object segment = path.getLastSegment();\n               \n                if (segment instanceof IResource)\n                    resource = (IResource) segment;\n                else if(segment instanceof IJavaElement)\n                    resource = ((IJavaElement)segment).getResource();\n               \n                if (resource != null) {\n                    String url = resource.getLocation().toOSString();\n                    if(resource instanceof IFile)\n                        url = ((IFile)resource).getParent().getLocation().toOSString();\n                   \n                    try {\n\n                        //这里其实调用的是windows的命令行, 前面的代码都是生成命令行语句的生成之后就类似这样 explorer E:\\\n                        Runtime.getRuntime().exec(this.explorer + \" \" + url);  \n                    } catch (Exception e) {\n                        // TODO: handle exception\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n    }\n\n    /* (non-Javadoc)\n     * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)\n     */\n    @Override\n    public void selectionChanged(IAction action, ISelection selection) {\n        // TODO Auto-generated method stub\n        this.selection = selection;\n    }\n\n    /* (non-Javadoc)\n     * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()\n     */\n    @Override\n    public void dispose() {\n        // TODO Auto-generated method stub\n\n    }\n\n    /* (non-Javadoc)\n     * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)\n     */\n    @Override\n    public void init(IWorkbenchWindow window) {\n        // TODO Auto-generated method stub\n        this.window = window;\n    }\n\n}\n\n下面我们找到META-INF\\MANIFEST.MF打开该文件.\n\n&nbsp;\n\n然后我们可以在项目上单击右键.选择Run As &gt; Eclipse Application\n\n切换到plugin.xml标签. 然后我们会看到这样一段xml代码\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;?eclipse version=\"3.4\"?&gt;\n&lt;plugin&gt;\n\n   &lt;extension\n         point=\"org.eclipse.ui.actionSets\"&gt;\n\n      &lt;!-- 这里就是定义我们在代码中编写的action的. --&gt;\n      &lt;actionSet\n            label=\"M-Spring Tools\"\n            visible=\"true\"\n            id=\"org.mspring.eclipse.explorer.actionSet\"&gt;\n\n         &lt;!-- 定义menu菜单, 这个菜单会在eclipse的工具菜单中显示 --&gt;\n         &lt;menu label=\"M-Spring\" id=\"mspringMenu\"&gt;\n            &lt;separator name=\"sampleGroup\"&gt;\n            &lt;/separator&gt;\n         &lt;/menu&gt;\n         &lt;action\n               label=\"&amp;amp;Resource Explorer\"\n               icon=\"icons/explorer.gif\"\n              \n               toolbarPath=\"sampleGroup\"\n               tooltip=\"Open in explorer\"\n               menubarPath=\"mspringMenu/sampleGroup\" \n               id=\"org.mspring.eclipse.explorer.actions.ExplorerAction\"&gt;\n         &lt;/action&gt;\n      &lt;/actionSet&gt;\n   &lt;/extension&gt;\n\n&lt;/plugin&gt;\n\n&nbsp;\n\n然后我们在插件项目上单击右键Run As &gt; Eclipse Application就可以预览我们编写的插件了.\n\n <a href=\"http://www.mspring.org/wp-content/uploads/2011/09/2.png\"><img class=\"alignnone size-full wp-image-613\" title=\"2\" src=\"http://www.mspring.org/wp-content/uploads/2011/09/2.png\" alt=\"\" width=\"299\" height=\"62\" /></a>   <a href=\"http://www.mspring.org/wp-content/uploads/2011/09/3.png\"><img class=\"alignnone size-full wp-image-614\" title=\"3\" src=\"http://www.mspring.org/wp-content/uploads/2011/09/3.png\" alt=\"\" width=\"117\" height=\"29\" /></a>\n\n下面就是打包插件了. 项目上单击右键&gt;Export&gt;Plug-in Development&gt;Deployable plug-ins and fragments 然后一路next就可以了.\n\n插件打包成功之后我们将它copy到eclipse/plugins/目录下然后重启eclipse就可以使用了','2011-09-29 03:05:01','2011-09-29 03:06:21',NULL,NULL,'publish',NULL,'eclipse插件开发例子','/post/2012/7/14/1344938587884.html',1,0),(222,0,'open','Ctrl+1 快速修复(最经典的快捷键,就不用多说了)\nCtrl+D: 删除当前行\nCtrl+Alt+↓ 复制当前行到下一行(复制增加)\nCtrl+Alt+↑ 复制当前行到上一行(复制增加)\nAlt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)\nAlt+↑ 当前行和上面一行交互位置(同上)\nAlt+← 前一个编辑的页面\nAlt+→ 下一个编辑的页面(当然是针对上面那条来说了)\nAlt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性\nShift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)\nShift+Ctrl+Enter 在当前行插入空行(原理同上条)\nCtrl+Q 定位到最后编辑的地方\nCtrl+L 定位在某行 (对于程序超过100的人就有福音了)\nCtrl+M 最大化当前的Edit或View (再按则反之)\nCtrl+/ 注释当前行,再按则取消注释\nCtrl+O 快速显示 OutLine\nCtrl+T 快速显示当前类的继承结构\nCtrl+W 关闭当前Editer\nCtrl+K 参照选中的Word快速定位到下一个\nCtrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)\nCtrl+/(小键盘) 折叠当前类中的所有代码\nCtrl+×(小键盘) 展开当前类中的所有代码\nCtrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)\nCtrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)\nCtrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)\nCtrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)\nCtrl+Shift+F4 关闭所有打开的Editer\nCtrl+Shift+X 把当前选中的文本全部变味小写\nCtrl+Shift+Y 把当前选中的文本全部变为小写\nCtrl+Shift+F 格式化当前代码\nCtrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)\n\n下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了)\nAlt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力)\nAlt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)\nAlt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)\nAlt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)\nAlt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)\nAlt+Shift+I 合并变量(可能这样说有点不妥Inline)\nAlt+Shift+V 移动函数和变量(不怎么常用)\nAlt+Shift+Z 重构的后悔药(Undo)\n\n编辑\n作用域 功能 快捷键\n全局 查找并替换 Ctrl+F\n文本编辑器 查找上一个 Ctrl+Shift+K\n文本编辑器 查找下一个 Ctrl+K\n全局 撤销 Ctrl+Z\n全局 复制 Ctrl+C\n全局 恢复上一个选择 Alt+Shift+↓\n全局 剪切 Ctrl+X\n全局 快速修正 Ctrl1+1\n全局 内容辅助 Alt+/\n全局 全部选中 Ctrl+A\n全局 删除 Delete\n全局 上下文信息 Alt+？\nAlt+Shift+?\nCtrl+Shift+Space\nJava编辑器 显示工具提示描述 F2\nJava编辑器 选择封装元素 Alt+Shift+↑\nJava编辑器 选择上一个元素 Alt+Shift+←\nJava编辑器 选择下一个元素 Alt+Shift+→\n文本编辑器 增量查找 Ctrl+J\n文本编辑器 增量逆向查找 Ctrl+Shift+J\n全局 粘贴 Ctrl+V\n全局 重做 Ctrl+Y\n\n\n查看\n作用域 功能 快捷键\n全局 放大 Ctrl+=\n全局 缩小 Ctrl+-\n\n\n窗口\n作用域 功能 快捷键\n全局 激活编辑器 F12\n全局 切换编辑器 Ctrl+Shift+W\n全局 上一个编辑器 Ctrl+Shift+F6\n全局 上一个视图 Ctrl+Shift+F7\n全局 上一个透视图 Ctrl+Shift+F8\n全局 下一个编辑器 Ctrl+F6\n全局 下一个视图 Ctrl+F7\n全局 下一个透视图 Ctrl+F8\n文本编辑器 显示标尺上下文菜单 Ctrl+W\n全局 显示视图菜单 Ctrl+F10\n全局 显示系统菜单 Alt+-\n\n\n导航\n作用域 功能 快捷键\nJava编辑器 打开结构 Ctrl+F3\n全局 打开类型 Ctrl+Shift+T\n全局 打开类型层次结构 F4\n全局 打开声明 F3\n全局 打开外部javadoc Shift+F2\n全局 打开资源 Ctrl+Shift+R\n全局 后退历史记录 Alt+←\n全局 前进历史记录 Alt+→\n全局 上一个 Ctrl+,\n全局 下一个 Ctrl+.\nJava编辑器 显示大纲 Ctrl+O\n全局 在层次结构中打开类型 Ctrl+Shift+H\n全局 转至匹配的括号 Ctrl+Shift+P\n全局 转至上一个编辑位置 Ctrl+Q\nJava编辑器 转至上一个成员 Ctrl+Shift+↑\nJava编辑器 转至下一个成员 Ctrl+Shift+↓\n文本编辑器 转至行 Ctrl+L\n\n\n搜索\n作用域 功能 快捷键\n全局 出现在文件中 Ctrl+Shift+U\n全局 打开搜索对话框 Ctrl+H\n全局 工作区中的声明 Ctrl+G\n全局 工作区中的引用 Ctrl+Shift+G\n\n\n文本编辑\n作用域 功能 快捷键\n文本编辑器 改写切换 Insert\n文本编辑器 上滚行 Ctrl+↑\n文本编辑器 下滚行 Ctrl+↓\n\n\n文件\n作用域 功能 快捷键\n全局 保存 Ctrl+X\nCtrl+S\n全局 打印 Ctrl+P\n全局 关闭 Ctrl+F4\n全局 全部保存 Ctrl+Shift+S\n全局 全部关闭 Ctrl+Shift+F4\n全局 属性 Alt+Enter\n全局 新建 Ctrl+N\n\n\n项目\n作用域 功能 快捷键\n全局 全部构建 Ctrl+B\n\n\n源代码\n作用域 功能 快捷键\nJava编辑器 格式化 Ctrl+Shift+F\nJava编辑器 取消注释 Ctrl+\\\nJava编辑器 注释 Ctrl+/\nJava编辑器 添加导入 Ctrl+Shift+M\nJava编辑器 组织导入 Ctrl+Shift+O\nJava编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。\n也可以使用Ctrl+1自动修正。\n\n\n运行\n作用域 功能 快捷键\n全局 单步返回 F7\n全局 单步跳过 F6\n全局 单步跳入 F5\n全局 单步跳入选择 Ctrl+F5\n全局 调试上次启动 F11\n全局 继续 F8\n全局 使用过滤器单步执行 Shift+F5\n全局 添加/去除断点 Ctrl+Shift+B\n全局 显示 Ctrl+D\n全局 运行上次启动 Ctrl+F11\n全局 运行至行 Ctrl+R\n全局 执行 Ctrl+U\n\n\n重构\n作用域 功能 快捷键\n全局 撤销重构 Alt+Shift+Z\n全局 抽取方法 Alt+Shift+M\n全局 抽取局部变量 Alt+Shift+L\n全局 内联 Alt+Shift+I\n全局 移动 Alt+Shift+V\n全局 重命名 Alt+Shift+R\n全局 重做 Alt+Shift+Y','2011-09-27 03:48:26','2011-09-27 03:48:26',NULL,NULL,'publish',NULL,'eclipse快捷键大全','/post/2012/7/14/1344938588008.html',1,0),(223,0,'open','<blockquote>爱编程，爱分享，爱咖啡可乐\n\n爱尝试，爱跨越，也爱享受生活\n\n我擅长技术，崇尚简单的快乐和幸福\n\n我不是什么工程师，我是程序员\n\n我和你一样，为理想而奋斗\n\n用键盘和思想，构造起一个又一个世界\n\nJava、Hibernate、Spring、Sturts、Lucene、Axis，我会\n\nC#、Javascript、Jquery、ExtJs、GWT，Android我会\n\n但这些都是工具\n\n经验是我的沉淀，想象与创造才是我的能力。</blockquote>\n<p style=\"text-align: left;\">地址：北京市海淀区圆明园东路</p>\n<p style=\"text-align: left;\">电话：18601067708</p>\n<p style=\"text-align: left;\">QQ：330721072</p>\n<p style=\"text-align: left;\">Email: gaoyoubo@mspring.org</p>','2011-09-21 12:01:17','2012-03-09 07:05:50',NULL,NULL,'publish',NULL,'关于我','/post/2012/7/14/1344938588061.html',1,0),(224,0,'open','<p><a href=\"http://www.mspring.org/wp-content/uploads/2011/09/13080704_4PnC.gif\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"13080704_4PnC\" border=\"0\" alt=\"13080704_4PnC\" src=\"http://www.mspring.org/wp-content/uploads/2011/09/13080704_4PnC_thumb.gif\" width=\"244\" height=\"178\"/></a>  </p><p>程序员节日是俄罗斯官方的节日，每年的第256(0x100th)天，通常是9月13日，如果是闰年就是9月12日。\" </p><p>亲爱的开发者们(Dear Hackers/Engineers/Programmers)距离上一次程序员节又是一年了， 这一年中我们辛苦的编写着代码，我们为无数死气沉沉的软件注入灵魂，我们(Programmer)在无数的夜晚编写着代码，我们(Engineer)为了 软件架构的问题(选择适合的自由软件代码和思考是否亲自实现某些模块)绞尽脑汁，当然我们也和酱缸教的老板们展开了有趣的博弈。不管怎么样，过去一年的经 历让我们变得更加的强壮。在过去的一年里Linux kernel走过了20年，id software也走过了20年(无数的hacker正在等着Doom III源代码去创造更多的游戏)，Phrack走过了25年...但愿在新的一年里我们继续沿着代码和框架的hacking之路前进，不论前方的敌人有多么强大，创造强大敌人的设计者会站在我们的一边。外星人说:”程序设计是神圣的职业，因为是我们为地球人创造了她。</p>','2011-09-19 22:18:27','2011-09-19 22:18:27',NULL,NULL,'publish',NULL,'程序员节快乐','/post/2012/7/14/1344938588112.html',1,0),(225,0,'open','<p>时光匆匆过，童年的糖果罐，已经快溶化完，缤纷的气球，在骊歌中飘散...成长之初，曾以为世界充满爱与美好，童话中王子公主幸福的生活就是未来的模样。长大后，伪装的美丽面纱渐渐破败，现实呈现出它真实的冰冷与残酷，过往纯真的日子愈显珍贵，却恍然明白原来早已回不去了。那些成长的时光，满是无法替代的美好，然而只能在忙碌生活中偶尔的闲暇时分，翻翻旧照片，记起曾经单纯的自己和儿时的梦想。百度MP3和音乐陪你一起，回味那年的孩子气。 </p> <p>&nbsp;</p> <h6>长大后发现 原来童话都是骗人的</h6> <p>天使的木马没有翅膀，人鱼的眼泪只是泡沫，摩天轮象征着幸福依旧日复一日孤单地旋转，流星承载了太多心愿却注定只能划过天际。童话，或许真的只是小时候的的美丽幻想。 <ul> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">旋木</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CD%F5%B7%C6&amp;lm=-1&amp;li=300\">王菲</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">游乐场</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D0%BB%F6%AA%B7%E6&amp;lm=-1&amp;li=300\">谢霆锋</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">人鱼的眼泪</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C4%CF%C8%AD%C2%E8%C2%E8&amp;lm=-1&amp;li=300\">南拳妈妈</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">李雷和韩梅梅</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D0%EC%D3%FE%EB%F8&amp;lm=-1&amp;li=300\">徐誉滕</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">风筝</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CB%EF%D1%E0%D7%CB&amp;lm=-1&amp;li=300\">孙燕姿</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">秋千</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%B3%C2%D9%BB%D9%BB&amp;lm=-1&amp;li=300\">陈倩倩</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">灰姑娘的眼泪</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CD%F5%D0%C4%C1%E8&amp;lm=-1&amp;li=300\">王心凌</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">摩天轮</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CC%EF%F0%A5%D5%E7&amp;lm=-1&amp;li=300\">田馥甄</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">气球</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D0%ED%D5%DC%C5%E5&amp;lm=-1&amp;li=300\">许哲佩</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">天使与海豚</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C1%BA%D3%BD%E7%F7&amp;lm=-1&amp;li=300\">梁咏琪</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">王子公主</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D5%C5%D0%C5%D5%DC&amp;lm=-1&amp;li=300\">张信哲</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">失眠的睡美人</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D1%EE%D8%A9%C1%D5&amp;lm=-1&amp;li=300\">杨丞琳</a>）</li></ul> <h6>童年在那里 却只是回不去的美好</h6> </p><p>一岁岁的年华流逝，曾经捧在手中不肯放下的童话书，早已不知踪影。不想长大，时光又匆匆，于是怀念过去，过去却只存在回忆中，来不了，回不去。 <ul> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">不想长大</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=s.h.e&amp;lm=-1&amp;li=300\">S.H.E</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">越长大越孤单</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C5%A3%C4%CC%BF%A7%B7%C8&amp;lm=-1&amp;li=300\">牛奶咖啡</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">纸飞机</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C1%D6%D2%E4%C1%AB&amp;lm=-1&amp;li=300\">林忆莲</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">我们小时候</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=tank&amp;lm=-1&amp;li=300\">Tank</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">同桌的你</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C1%F5%C8%F4%D3%A2&amp;lm=-1&amp;li=300\">刘若英</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">少年</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%B9%E2%C1%BC&amp;lm=-1&amp;li=300\">光良</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">那年夏天</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D0%ED%B7%C9&amp;lm=-1&amp;li=300\">许飞</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">二十二</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CC%D5%86%B4&amp;lm=-1&amp;li=300\">陶喆</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">再见了单纯</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D0%A15&amp;lm=-1&amp;li=300\">小5</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">我还记得</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C1%BA%BE%B2%C8%E3&amp;lm=-1&amp;li=300\">梁静茹</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">little boy</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%B7%BF%D7%E6%C3%FB&amp;lm=-1&amp;li=300\">房祖名</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">于是长大了以后</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D0%BB%BA%CD%CF%D2&amp;lm=-1&amp;li=300\">谢和弦</a>）</li></ul> </p><p>&nbsp;</p> <h6>带着这份孩子气 再见小时候</h6> <p>故事书泛黄的纸张，祭奠着童年，缅怀了纯真。勇敢地挥手，和那段天真的时光说再见，却保有真实简单的自己，心里住着个孩子，谁说这样不是一种幸福呢。 <ul> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">笨小孩</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C1%F5%B5%C2%BB%AA&amp;lm=-1&amp;li=300\">刘德华</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">还能孩子多久</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D4%F8%E9%F3%BF%C9&amp;lm=-1&amp;li=300\">曾轶可</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">倔强</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CE%E5%D4%C2%CC%EC&amp;lm=-1&amp;li=300\">五月天</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">孩子的眼睛</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D5%C5%F6%A6%D3%B1&amp;lm=-1&amp;li=300\">张靓颖</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">越单纯越幸福</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%CD%F5%F3%DD&amp;lm=-1&amp;li=300\">王筝</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">我的骄傲无可救药</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%B3%C2%E7%B2%D5%EA&amp;lm=-1&amp;li=300\">陈绮贞</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">在树上唱歌</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%B9%F9%BE%B2&amp;lm=-1&amp;li=300\">郭静</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">小手拉大手</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C1%BA%BE%B2%C8%E3&amp;lm=-1&amp;li=300\">梁静茹</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">稻香</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%D6%DC%BD%DC%C2%D7&amp;lm=-1&amp;li=300\">周杰伦</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">简单</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%B4%F7%C5%E5%C4%DD&amp;lm=-1&amp;li=300\">戴佩妮</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">fly away</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=f.i.r.&amp;lm=-1&amp;li=300\">F.I.R.</a>）</li> <li><a href=\"http://list.mp3.baidu.com/zt/2011/young/index.html#\">再见小时候</a>（<a href=\"http://mp3.baidu.com/m?tn=baidump3&amp;ct=134217728&amp;lf=&amp;rn=&amp;word=%C4%CF%C8%AD%C2%E8%C2%E8&amp;lm=-1&amp;li=300\">南拳妈妈</a>）</li></ul></p>','2011-09-08 12:55:17','2011-09-08 12:55:17',NULL,NULL,'publish',NULL,'百度MP3推荐&mdash;&mdash;回不去的小时候','/post/2012/7/14/1344938588167.html',1,0),(226,0,'open','<p>如果有一天，当你跟爱的人发生争执，你就让他赢，他又能赢到什么？</p> <p>所谓的输，你又输掉了什么？ 这个赢跟输，只是文字上罢了，我们大部分的生命都浪费在语言的纠葛中。</p> <p>其实，争执在很多时候，并没有留下任何输赢，却失去了很多本应珍惜的感情！</p> <p>我每次都是这么想的，不知道他每次是怎么想。。。</p>','2011-09-07 13:05:10','2011-09-07 13:05:10',NULL,NULL,'publish',NULL,'如果你跟爱的人发生争执','/post/2012/7/14/1344938588228.html',1,0),(227,0,'open','<p>首先安装JDK，比如我的机器上将JDK安装到 D:\\Program Files\\Java\\jdk1.6.0</p> <p>然后在我的电脑上单机右键-》属性-》切换到高级面板</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/09/image.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/09/image_thumb.png\" width=\"407\" height=\"432\"/></a> </p> <p>点击环境变量按钮，系统会弹出如下窗体。</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/09/image1.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/09/image_thumb1.png\" width=\"388\" height=\"398\"/></a> </p> <p>&nbsp;</p> <p>然后在系统变量那里点击新建</p> <p>1、新建变量JAVA_HOME</p> <p>变量名：JAVA_HOME （据有人说这里必须是大写的，但是我用小写的时候也是可以用的，为了保险起见建议大写吧。）</p> <p>变量值：D:\\Program Files\\Java\\jdk1.6.0&nbsp; （这里就是你JDK的安装路径，根据你自身的情况定。）</p> <p></p> <p>2、新建变量CLASSPATH</p> <p>变量名：CLASSPATH</p> <p>变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar（注意前面有个点。不能少）</p> <p>3，找到变量path，点击编辑</p> <p>在path的变量值最前面加上%JAVA_HOME%\\bin;（注意后面有一个分号，不能少）</p> <p>&nbsp;</p> <p>好了环境变量创建成功了，下面测试。win键+R 运行 cmd 调出命令行窗口，然后输入javac 回车。 如果配置正确系统会有相应的显示</p>','2011-09-07 03:53:49','2011-09-07 03:53:49',NULL,NULL,'publish',NULL,'JDK环境变量设置','/post/2012/7/14/1344938588281.html',1,0),(228,0,'open','<p>十年后，我希望我身边有这样一个朋友，没有名利的牵绊 </p><p>可以踢开我家的门，招呼也不打随意开我的冰箱 </p><p>对着一屋子的狼藉说“这次别想我替你收拾” </p><p>喝我喝过的可乐催我做饭，把我推进厨房，开始没心没肺的开我玩笑 </p><p>骂我是白痴笨蛋，最后替我收拾了房间不问我最近过得好么 </p><p>然后两个人一起傻笑</p>','2011-09-06 03:35:46','2011-10-05 21:18:33',NULL,NULL,'publish',NULL,'十年后，我希望身边有这样一个朋友','/post/2012/7/14/1344938588337.html',1,1),(229,0,'open','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我一直觉得我不是个懒人，但是这个博客系统我从毕业到现在一直在写，但是一直没有一个成型一点的版本，我也是一边学习，一边进行开发的，慢慢的往博客系统里面加入我所学习到的新技术，中途写烦了，放弃了好几次。 这几个月，实在无聊，所以想着给自己找点事情做，于是又将它拾起来，决定好好的出一个可以使用的版本。以前也提到过这个事情<a href=\"http://www.mspring.org/index.php/archives/456.html\">http://www.mspring.org/index.php/archives/456.html</a>。</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该项目基于JDK5.0+，系统由Spring2.5，hibernate3.5，Struts2，Lucene，Freemarker搭建，支持动态生成静态页，动态换肤，伪静态，支持基于metaWeblog协议的离线写作。</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 目前该版本还不是很完善，等完善之后，我会开放源代码，提供下载滴。</p> <p>代码结构：</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb.png\" width=\"204\" height=\"504\"/></a> <a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image1.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb1.png\" width=\"206\" height=\"532\"/></a> <a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image2.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb2.png\" width=\"203\" height=\"504\"/></a> </p> <p>&nbsp;</p> <p></p> <p></p> <p>功能展示：</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/MSpringJava.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"M Spring Java\" border=\"0\" alt=\"M Spring Java\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/MSpringJava_thumb.png\" width=\"561\" height=\"772\"/></a> </p> <p>这是该博客系统的首页，皮肤是由一款wordpress博客皮肤翻译过来，个人很喜欢这样简介的皮肤，所以就用它做默认皮肤了。</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/MSpringJavapost.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"M Spring Java-post\" border=\"0\" alt=\"M Spring Java-post\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/MSpringJavapost_thumb.png\" width=\"229\" height=\"772\"/></a> </p> <p></p> <p>这是文章页面。</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image3.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb3.png\" width=\"1028\" height=\"488\"/></a> </p> <p>这是搜索页面，这里可不是SQL语句 select * from gblog_article where title like ‘%java%’实现的哦， 这里用了Lucene搜索引擎的哇。</p> <p>&nbsp;</p> <p>下面看一下后台页面</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image4.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb4.png\" width=\"1028\" height=\"464\"/></a> </p> <p>后台滴样式用的是zblog的，因为一时没有比较合适、好看的样式，所以直接拿过来用了，等到正式发布的时候我会换掉的。 </p> <p>下面直接放图吧。。 你们懂滴。。可能我说的口干舌燥，还没有一张图直接了当。</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image5.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb5.png\" width=\"1028\" height=\"479\"/></a> </p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image6.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb6.png\" width=\"1028\" height=\"480\"/></a> </p> <p></p> <p></p> <p></p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image7.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb7.png\" width=\"1028\" height=\"469\"/></a>&nbsp;</p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image8.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb8.png\" width=\"1028\" height=\"471\"/></a> </p> <p></p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image9.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb9.png\" width=\"1028\" height=\"475\"/></a> </p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image10.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb10.png\" width=\"1028\" height=\"474\"/></a> </p> <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/07/image11.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.mspring.org/wp-content/uploads/2011/07/image_thumb11.png\" width=\"1028\" height=\"476\"/></a> </p> <p></p> <p></p> <p></p> <p>引用管理，附件管理，插件管理，用户管理还没有实现的哇，等这些功能基本都是先了，我会把源码给大家分享的。</p>','2011-07-25 02:49:20','2011-07-25 02:49:20',NULL,NULL,'publish',NULL,'G-Blog个人博客','/post/2012/7/14/1344938590348.html',1,0),(230,0,'open','<p>在Weblogic中部署Hibernate的项目启动WebLogic时一直提示：<b>ClassNotFoundException: org.hibernate.hql.ast.HqlToken</b> </p><p><b>错误原因：</b> </p><p>在hibernate3中需要用到antlr，然而这个包在weblogic.jar中已经包含了antrl类库，就会产生一些类加载的错误，无法找到在war或者ear中的hibernate3.jar。<br />出现这个错误之后，antlr会调用System.exit()，这样weblogic就会中止服务。 </p><p>废话少说，解决办法：三个步骤 </p><p>1：在用户工程代码web-inf下建立xml文件：weblogic.xml </p><p>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br />&lt;!DOCTYPE weblogic-web-app PUBLIC \"-//BEA Systems, Inc.//DTD Web Application 8.1//EN\" \"http://www.bea.com/servers/wls810/dtd/weblogic810-web-jar.dtd\"&gt;<br />&lt;weblogic-web-app&gt;&nbsp; <br />&nbsp;&nbsp;&nbsp; &lt;container-descriptor&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;prefer-web-inf-classes&gt;true&lt;/prefer-web-inf-classes&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/container-descriptor&gt;<br />&lt;/weblogic-web-app&gt; </p><p>2:拷贝用户工程里的antlr-2.7.6rc1.jar到weblogic10目录：D:\\bea\\wlserver_10.0\\server\\lib </p><p>3：改造当前weblogic用户的startWebLogic.cmd<br />set PRE_CLASSPATH=%WL_HOME%\\server\\lib\\antlr-2.7.6rc1.jar <br />set CLASSPATH=%SAVE_CLASSPATH%—————————原来的<br />set CLASSPATH=%PRE_CLASSPATH%;%CLASSPATH% </p><p>网上有说： </p><p>在hibernate.properties文件中增加属性：hibernate.query.factory_class，属性的值是org.hibernate.hql.classic.ClassicQueryTranslatorFactory，这样就可以解决问题了。<br />但是部分功能会有问题，譬如<br />但在批量删除和更新会有问题</p>','2011-07-20 03:57:04','2011-07-20 03:57:04',NULL,NULL,'publish',NULL,'weblogic10和hibernate3 冲突解决方案','/post/2012/7/14/1344938590412.html',1,0),(231,0,'open','','2011-07-06 08:44:44','2011-10-05 22:23:20',NULL,NULL,'publish',NULL,'首页','/post/2012/7/14/1344938590517.html',1,0),(232,0,'open','','2011-07-06 04:07:25','2011-10-05 22:23:22',NULL,NULL,'publish',NULL,'站点地图','/post/2012/7/14/1344938590579.html',1,0),(233,0,'open','<p><img alt=\"Google PageRank\" src=\"http://tool.114la.com/static/images/pr/pagerank_1_2.gif\"/>&nbsp;</p> <p>看看，多么激动人心的图标，</p> <p>今天去查了一下，</p> <p>哥的网站PR终于摆脱零蛋了… </p> <p>没有浪费我这么久的努力，希望越来越好</p>','2011-07-05 07:41:25','2011-07-05 07:41:25',NULL,NULL,'publish',NULL,'摆脱PR0','/post/2012/7/14/1344938590628.html',1,0),(234,0,'open','<h3>&#160;</h3>  <p>我从一位乡下的远房亲戚那儿弄来了一叠厚厚的资料，据说是我们家族一位唐朝的祖先留下来的遗物。亲戚千叮咛万嘱咐一定不能弄坏，更也不能弄丢，否则祖宗的在天之灵饶不了他。</p>  <p>我小心地打开了一这堆纸，一阵陈年累月的霉味便直串我的鼻孔，令人作呕。从纸质来看似乎已有千百年的历史了，黄色的宣纸，如同那种祭祀死人的放在火里烧化的纸张。这纸张很脆，有种一碰就要碎成粉末的感觉，我极其小心地掀动着，于是我的整个房间都被这种古老的氛围缠绕着了。</p>  <p>全是书信，一封又一封，那种直版的从上到下，从右到左的楷书。非常美的毛笔字，既不象颜体，更不是柳体，而是一种我从未见过的风格，也许这种风格早已失传了吧。但这美丽的楷书象是一个女孩子写的，不会是我的那位祖先吧，或许是他的夫人，甚至是情人？不，我细细地看才发现不是，这是一个男人写的，三十多岁的男人。他的字迹既绵软又不失潇洒，但我能隐隐约约地看出一种奇怪的气氛，从他的字里行间，从他的每一撇，每一捺，都深深地潜藏着一种——恐惧。</p>  <p>是的，我是经过了整整一天才看出来的，这种恐惧隐藏地很深，我当时没有看信的具体内容，我只是从他的笔迹中才悟出了什么。我仿佛可以感觉到，他在写信的时候，浑身都充满了一种惊恐，从他的周围，也从他的内心深处。但他的手并没有象普通人那样发抖，他的笔触依然有力，只是在毛笔尖上蕴藏了些许的寒意，冰冷的寒意，也许他自己都没有发觉。</p>  <p>这不是我的那位先祖写的，是另一个人写给我的先祖的信。全都是文言文，我尝试着把第一封信翻译成了现代白话文。</p>  <p>“进德吾兄：</p>  <p>从长安一别已经十年了吧。我现在才突然给你来信，请不要见怪。你知道，朝廷赏赐给我一栋豪华的宅邸在长安，以及关中的千顷良田，和江淮节度使的官职。可我从第一天起就辞官不做了，我离开了豪宅与良田，独自一人回到了坤州，住在当年我的刺史宅邸里。一晃十年就过去了，我独自一人，孤独地虚度年华。我时常回想起当年安史贼党作乱之际，我是坤州的刺史，你在我麾下为将，你我死守坤州三年，使史思明的数万大军始终无法陷坤州而下江淮。最终我们等来了援兵，立下了大功一件。进德兄，我越来越想念你们，和当年与我一同出生入死的官兵们。这次给你写信，就是想告诉你一件事———我家正在闹鬼。</p>  <p>段路 ”</p>  <p>我没有想到，我的这位叫进德的祖先原来还是安史之乱中唐朝的一员大将，与这位叫段路的刺史一同死守坤州。但问题是，我的历史知识告诉我，根本就没有坤州这座城池，在安史之乱中，也从没有过段路死守坤州这么一档子事。我有些疑惑，于是打电话给我的另一位远房堂兄，他是我们家族中最有学问的人，目前在攻读历史研究生。</p>  <p>他在电话里听到了我的提问，然后他沉默了半晌，才慢慢地说：“是的，你现在看的这叠信我在一年前也看过，我立刻就完全地陷了进去，我查找了各种资料，甚至到安徽与江苏的北部做过实地考察，但另我失望的是，没有，什么都没有，也许历史遗忘了我们的这位祖先还有段路。但我请专家鉴定过，这些信的确是唐朝人的真迹，绝不是后人的伪造。听我说，你不要再看了，你也会陷进去的，这些信很可怕，蕴藏着鲜血，历史的鲜血，你好自为之吧，再见。”</p>  <p>我长久地呆坐着，仔细回味着这位历史研究生的话，他从小就有些神秘感，喜欢说一些别人听不懂的话。什么历史的鲜血，我看他是在故弄玄虚，这只是一叠古人的通信罢了，难道那些早已成为枯骨的人会伤害到我吗？但我仍不得不提高了警惕，我开始打算把这些信还掉。但我已欲罢不能了，也许是因为段路最后的那一句话“我家正在闹鬼”。</p>  <p>我继续打开了第二封信，把它译成了白话文。</p>  <p>“进德吾兄：</p>  <p>见到你的信，我万分高兴，原来你也早已解甲归田了，这是好事。上次我说，我家正在闹鬼，是的，这鬼一直纠缠着我。我隐隐约约觉得从我十年前从长安搬回坤州的那天起，这鬼就在这间古宅里出没了，只是我当时没有意识到，这就是鬼。但是今年，它越来越频繁地活动着，其实我向来都不害怕鬼，但是这回我真的有些恐惧了。你也知道，当年坤州的刺史府是一间很破旧的古宅，战争结束后，新来的刺史新建了一个刺史府，而我则独自居住在这栋旧宅里。这间宅子很大，也很破，你不知道，我没有雇佣一个仆人，诺大的宅子里，只有我一个人，我靠着我在关中拥有的那千顷良田度日，每个月，我在那儿的代理人都会给我带来粮食和钱。我一个人过惯了，朋友们劝我再续铉一个妻子，我也拒绝了。你续铉了吗？天哪，现在鬼又来了，它折磨着我，我不能再写了，就到这吧。</p>  <p>段路 ”</p>  <p>&#160;</p>  <p>这封信没有什么新的东西，但至少可以告诉我，我的祖先做过鳏夫。窗外的阳光异常的强烈，我在家里胡思乱想着，我想到了坤州。</p>  <p>坤州，这个我从来没有听说过的城池，但我宁可相信它存在过，因为在历史上，象这样因为种种原因被遗忘的例子实在太多了。可我难以理解的是段路和我的这位叫蔡进德的祖先是如何在坤州死守三年，抵挡住史思明的数万大军的。在安史之乱中，张巡和许远死守睢阳，最终还是城破身亡，段路难道比张巡的本事还要大？这种疑问困扰着我，促使我打开了第三封信。</p>  <p>“进德吾兄：</p>  <p>你在信中说你早已续铉，并已有三个儿子，实在可贺，想想我，可能真的要孑然一身一辈子了。是的，你信中的猜测没错，我永远都忘不了月香，她的眼睛，她的笑，她的身体，十年前她死在坤州，就在这间房间里，我永远都无法摆脱她，永远。这十年来，虽然我一个人过，但是我养了许多猫，二十多只，其中还有波斯商人高价卖给我的那种两只眼球不同颜色的猫。这些猫陪伴了我十年，就好象是我的爱人，和这二十多只猫在一起，我有一种妻妾成群的感觉。是的，我爱她们，我把她们当作了一群美丽的女人。但自从我家里闹了鬼，奇怪的事情就不断发生了。昨天我的一只白猫失踪了，无论如何也找不到，后来我发现我的厨房里传出了一阵肉香，我已经十年没吃肉了，自从战争结束以来，我就成了一个素食者，过着和尚般的生活。我非常惊讶，我从没煮过肉，我揭开了锅，天哪，里面是我的那只失踪的猫。这只猫被大卸八块，毛全拔光了，内脏也清理了出来，肉都被煮熟了，我当即晕了过去。虽然我当年也在坤州血战三年，见到无数血腥的场面，但这十年来，我几乎从未见过来血，而且我与猫的感情也越来越深，见到如此惨状，我象死了妻子一样嚎啕大哭。我明白，这一定是那鬼的所为，因为，我的宅邸过去是刺史府，有非常高的围墙，并且由于我家闹鬼的传闻全城皆知，没人敢闯进来的。我痛苦万分。进德，这是报应，十年前的报应，你应该明白这句话的意思。</p>  <p>段路”</p>  <p>“报应”是什么意思，我无法理解，而且他说我的先祖也是明白的，究竟有什么事？我从来不相信世界上有什么鬼魂，至于鬼魂杀猫并把猫给煮了则更是天方夜潭了，也许段路得了精神分裂症，产生了幻觉，没错，一个人在这样一栋阴森恐怖的古宅中独自生活十年，精神肯定会崩溃的。他还提到了“月香”，明显是个女人，也许是他过去的妻子，可以肯定的是，他深爱着月香，但他后来又失去了月香，于是他为了追悼亡妻，一直住在了妻子死去的那间房间里，并且以素食吃斋度日，放弃了荣华富贵，真是个难得的有情郎啊。</p>  <p>已经是夕阳西下了，黄昏的阳光洒满了我的房间，也洒到了这些古老的信纸上，涂上了一层鲜血般的颜色。我知道阳光对文物有破坏作用，急忙把信都移到了阴暗处，在阴暗的光线中，我打开了第四封信。</p>  <p>“进德吾兄：</p>  <p>在短短的十天之内，我有六只猫被杀并给煮熟了，尽管我把厨房的柴伙连同灶上的锅全搬走了，天天到城里的寺庙吃素斋，但那个无孔不入的鬼仍然不知从哪而弄来了柴和锅。我恐惧极了，每天晚上，我都把所有的猫都聚集到我的床上，与我睡在一起。这张床在十年前是我和月香睡的，非常宽大，睡在这张床上，我几乎每晚都能梦见她，她还和十年前一样年轻美丽，永远是二十岁。你一定不会忘记吧，当年我和月香是多么恩爱，成为你们这些将领和军官们羡慕的对象。是的，月香是个才女，她作诗的才华不在我之下，每天晚上，她为我掌烛，我作一首诗，然后我再为她掌烛，她再作一首诗，每次她的诗都比我好。只可惜她生来就是个女人啊，如果月香是个男子，做官肯定能做到宰相，做文人也一定会流芳百世。可她又具有女人的一切优点，美丽贤淑，对我体贴入微，在当年坤州所有的官员家眷中，她的女红也是最好的，我清楚地记得，进德兄，你的妻子还曾专门向月香请教锈锦屏的技巧。如今，一切都过去了，她们都已经不在人世了，你我也都不问政事了。当年她睡的位置上正睡着一群猫，尽管它们在夜里是极不安分的，真是世事难料啊。我真怕它们都被那鬼掳去做成了猫肉汤，它们是我生命里最后的希望了，进德兄，你看我该怎么办呢？请给我指点迷津。</p>  <p>段路 ”</p>  <p>我忘了吃晚饭，尽管我肚子的确饿了，可我不得不承认，我被这些信深深地吸引住了。段路的这些文字有一股不可抗拒的魔力，就象加了某种咒语，你一旦打开它就再也关不上了。从段路的文字里，我似乎看见了那个叫月香的女人，如果段路的描述属实，那么我真的感到很后悔，后悔自己为什么会生在二十世纪，而不是公元八世纪，我非常想见一见月香。我明白我走火入魔了，我这才相信了我的那位历史研究生堂兄的话。天色渐暗，在我打开了灯的同时，我也打开了第五封信。</p>  <p>&#160;</p>  <p>“进德吾兄：</p>  <p>看了你的信，非常感谢你给我出的这些主意，但恐怕我都办不到。首先，我不会离开坤州的，因为月香和我在坤州度过了一生中最美好的时光，当然也包括一生中最悲惨的时光。我想如果离开了坤州和这座宅邸，我立刻就会死的。第二，我也不会去请驱鬼的和尚道士来的，如果把他们请来的话，一定会打扰月香在天之灵的安息的。所以，我只能继续留下来，与鬼周旋到底，告诉你，现在我的猫只剩下最后五只了，其余的都被鬼害死了。进德兄，你不会明白的，这座古宅中，到处都残留着月香的气味，十年了，这种气味不但没有消散，反而更加浓烈。我时时刻刻地感到月香还没有死，她就在我的身边，她陪伴着，一同度过了十年的光阴。我现在每天晚上仍在作诗，作怀念她的诗，有时第二天早上，我居然会发现在我作的诗下面还多了一首诗，那是月香的笔迹，还是写得那样好，与我写的那首是对应的。月香就在我身边，不管你相信不相信，她就在我身边看着我，是的，现在，我在给你写信，她在我旁边，她正告诉我该怎么写，确切的说现在是她口述，我执笔。十年前，她的确死了，但十年后，她又的确活着，天哪，让我怎么才能说清楚，总之你是不会相信的。此外，还告诉你一件事，现在的坤州城，几乎每一户人家都在闹鬼，每个人都惶惶不可终日。坤州城象大海里漂泊的一叶扁舟，甚至比安史之乱我们被围困了三年那会儿还要恐慌，当年的敌人毕竟还是人，而现在坤州的敌人则是鬼。</p>  <p>段路”</p>  <p>我感到了一种恐惧，从这些古老的纸张里汹涌而出，紧紧地抱着我。我似乎看见在我读信的同时，月香就在我旁边和我一起读着信，我抬起头来，看到了她的脸，很美。从她的身上，发出一股肉香，我这才明白为什么段路说十年来月香的气味一直挥之不去。因为这股肉香，从她的肉体深处发出的香味，对，月香就是肉香，在古汉语中，月与肉的意思相同，肺、肝、胆、肠、脾、脑、腿等等都是月字旁。</p>  <p>我不知道自己还有没有勇气看下去。电话铃突然响了，是我的那位历史研究生的堂兄：“看到第几封信了？我知道你现在很犹豫，一年前我也和你一样，我现在能从电话听筒里嗅到你那里的血腥味，真的，既然你看了那么多，那就继续把它给看完吧，明天早上到我的研究所里来一趟吧。再见。”</p>  <p>我握着电话，一句话也没说，听他说了那么多话。挂了电话，我感到这间屋子的气氛有些不对，我突然觉得我现在就是段路了，我和段路一样独自生活在一个大房间里，真的，我就是段路，段路就是我，这些信全是我写的。是吗？我问着自己，然后我发疯似地摇着头。我打开了第六封信。</p>  <p>“进德吾兄：</p>  <p>刚看完你来的信，你说当年随我死守坤州并一同受到朝廷赏赐的十二位将领和军官已在今年全部意外地死亡了，这真的很让我心痛。你说刘将军是在成都喝醉了酒掉进河里淹死了，真不可思议，我清楚地记得刘将军的水性非常好，是长江里的浪里白跳。还有李将军在他儿子的婚礼中无缘无故地上吊自杀，这也是不可能的，他那种开朗乐观的性格，还会自杀？而且是在那种大好的日子里。更有甚者是张将军被他的家人砍死做成了人肉馒头给煮了吃了。其他人的死状也是非常奇怪，他们当年在坤州的尸山血海中打仗都没有死，怎么会现在却接二连三地出事，而且几乎是在同一个月里。进德，我非常担心你，你不会有事的吧。现在我也要告诉你一个坏消息，我的猫只剩下最后一只了，但它活得很好，是一只美丽的波斯猫。我要用我的生命来保护它，我发誓。</p>  <p>段路”</p>  <p>夜很深了，我困了，于是我捧着这些信慢慢地在沙发上睡着了。睡了一会儿，我突然闻到了一种奇怪的气味，这气味带着浓烈的馨香，发疯似地直往我鼻孔里钻。我受不了了，我循着香味，到了我的厨房，不知是谁在煤气灶上点着大火烧着一个不锈钢锅子。我揭开了锅盖，里面是一锅肉，确切的说是肉汤。汤面上漂浮着一层厚厚的油，我用调羹喝了一口，这是一种我从未喝过的汤，味道非常美妙，这一调羹的汤从我的舌头滑到咽喉，再进入食道，最后流进了我的胃，我的胃很贪婪，把这些美味的汤都搜刮殆尽了。我还没吃晚饭，也就顾不得许多了，我又用筷子夹了一块肉放进嘴里咀嚼起来，肉丝被我的牙齿嚼碎，然后我舌尖上的味觉器官又得到了一次刺激，是的，从小到大，我从没吃过那么好吃的肉，是谁煮的呢？很快，我就带着疑问，把一锅肉差不多全扫进肚子了。最后，我在锅里发现了一样东西———手指头，人的手指头。</p>  <p>我哇地一口吐了出来，然后我惊醒了，原来这是一个梦。</p>  <p>&#160;</p>  <p>我刚才睡着了，竟做了这样一个奇怪的梦。我心惊肉跳着，浑身冒着虚汗，一时间睡意全消了，现在已是半夜两点，我强打着精神打开了第七封信。</p>  <p>“进德吾兄：</p>  <p>坤州城已经陷于一种巨大的恐怖中了，不断有人奇怪地死去，城外到处都是新坟，而且死的都是男人。全城充满了死人的臭味，和尚与道士都忙着做法事。但没有任何证据表明坤州流行了瘟疫，唯一的解释就是鬼魂作祟。但我还活着，还有我的最后一只猫，它活得很好，每晚都睡在我怀中，就象月香。经过这些天来，我渐渐地觉得月香的确还活着，就活在这只美丽的波斯猫身上，是的，所以现在我可以说，我又重新得到月香了，她永远都不会和我分离的，我们永远在一起。起风了，带着坤州城里死亡的气息的风贯穿了我的房间，席卷过我们的身体，虽是盛夏季节，我却感到了一种冰凉彻骨的感觉。报应，这是因果报应，谁都逃不了。</p>  <p>段路”</p>  <p>看到这儿，一阵风穿过了我窗户打在我的额头，我望望窗外，下半夜的月亮却特别圆。我开始明白段路所说的报应的意思了，我能想象坤州城一定是遭到了某种灾难，这种灾难是人类自身造成的，我一向不相信有鬼魂存在，但灾难肯定有，只是通过了某种特殊的方式。这使我增加了读下去的勇气。我打开了第八封信。</p>  <p>“进德吾兄：</p>  <p>今天是七月十日，你还记得十年前的七月十日吗？相信这一天你我都永生难忘的。七月十日，每年这个日子，我们的心中都隐隐作痛。我说过报应，今天就是报应的日子。当年我们死守坤州，全城只有五千士兵和两万百姓。我们的粮食准备很充分，但没想到安史叛军的准备更充分，终于两年过去了，重围中的我们吃光了全部粮食，包括所有的老鼠、猫、狗、甚至战马，所有能吃的东西都吃光了，全城人都在挨饿，这样用不了十天，坤州城就会不攻自破，睢阳也已经失守了，我们如果完了，叛军就会长驱直入地攻入江淮地区，大唐也就完了。我们永远都不会忘记，那天我给你们煮了一锅肉，你们都很惊讶哪来的肉，我没有说，只是让你们先尝尝。你们吃了，你们吃得很香，你们说这是你们一生中最好吃的肉。最后我告诉你们，这是月香的肉。你们都吐了，然后，你们都哭了，你们这群大男人象女人一样流下了眼泪。是的，是我亲手杀了月香，那天月光皎洁，月香依然美丽动人，尽管她已经有三天粒米未进了。我的手里拿了一把刀，我站在她面前，看着她，许久，但是我终究没有勇气，我的刀掉在了地上，我放弃了，我决心和她一起死。但是绝顶聪明的月香看出了我拿刀的意图，她轻轻地对我说，杀了我吧，女人对战争没有用，杀了我吧，把我的肉吃了，我总之是要给饿死的，不如死在我爱人的手里，让我的肉体进入你的肉体之内，让我成为你的一部分，从此，我们就永远都不会分开了。来，动手吧，象个男子汉那样，如果你还是我丈夫，动手吧。不，我下不了手，但月香夺过了刀子，她把刀子刺入了她自己的心口。她微笑着，对我微笑着死去，胸口还插着那把刀。那时我痛苦万分，真想自己也一死了之，但最后我还是无法控制住自己，我疯了，那夜我真的疯了。我想到了段家的荣誉，我想到了死守坤州的誓言，我把月香肢解了。我说过，那夜我疯了，我爱她，所以肢解她，这就是理由，这理由你们永远都不会理解的，因为你们没有那种刻骨铭心的爱。是的，我把她肢解了，完成了她死前交代我的事，我把她的肉剁下来，她的肉充满了香味，天生的香味，她是个绝代佳人，就算变成了一堆锅里的肉。当时我干这事的时候，一点都没有罪恶感和恐惧感，那夜我真的疯了，我只想永远地和她在一起。我把她的肉给煮了，煮了几大锅，我自己先吃了一锅，那味道美极了，其实我内心也痛苦极了。然后，我把其他的几锅分给了你们。爱一个人有许多方式，在那种特殊的情况下，我想这是最合理的方式了。进德兄，接下来就是你，你哭完了之后，立刻回到了家里，把你的妻子和小妾也给杀了，煮成了一锅肉。于是，所有的将领和军官都开始吃自己家眷的肉。后来我们干脆把全城的女人都关了起来，总共一万人左右，我们每天吃三十个女人，全城的男人居然没有一个反对。有的人眼睁睁看着自己的妻子被人吃了都无动于衷，自己还吃得最多。为了养活这些女人，我们还安排了女人吃女人，当然她们不知道自己吃的是人肉，还以为是猪肉。于是，我们就靠着吃人肉熬过了将近一年，这一年的坤州是恐怖的世界。终于我们等来了救兵，坤州守住了。十年了，我终于把这些话说出口了，七月十日，今天是七月十日，我想这该是我生命中的最后一天。我们的罪过是无法饶恕的，天哪，我看见月香了，真的是她，她微笑着来了，她是来带我离开这个世界的。进德兄，如果你能收到这封信，那一定是月香带给你的，请千万不要害怕，珍重啊，进德，你要当心——幽灵的报复。</p>  <p>段路”</p>  <p>&#160;</p>  <p>这是最后一封信，我颤抖着看完了它，我不相信这是真的，即便是唐朝想必也不会发生这种事的。段路一定有精神分裂症，一切都是他臆想出来的，就象唐人的传奇，总有些不可思议的事。可我不能自拔，尽管我不相信，但从这古老的纸张和字迹中传出的气息却又强迫着我相信。我又隐隐约约地发现这最后一封信上有许多浅红色的斑点，很淡，但却很密集，这是什么？是血迹？难道是段路的血，经过了一千多年，永不磨灭地保留在这纸上。也许这就是堂兄所说的历史的鲜血？</p>  <p>天色渐渐地亮了，我茫然地坐了很久，直到阳光洒满了我的房间，驱除了那股唐朝的气味。我把信全都放好，带着信赶往我堂兄所在的研究所。</p>  <p>堂兄早已等着我了，他以一种奇怪的眼神看着我：“你的脸色的真难看，一夜没睡？是不是，你一定把信全看完了，你相信吗？”</p>  <p>“我不知道。”</p>  <p>“可我知道，昨天晚上我对你说什么都没有，是我骗了你，我不愿你看下去，但是现在我必须告诉你真相。这是真的，坤州的确存在过，乾为男，坤为女，顾名思义，坤州是一座以女人为主的城市。在安史之乱后的第十年，突然全城发生了巨大的灾难，男人几乎全死光了，于是这座城市成了死城，被放弃，如今只剩下一堆田野中的废墟，在史书上也没有留下任何记载，我花了整整一年才研究出成果的。事实上，被围困的城市中发生吃人肉的事情在中国历史上绝不止一次。”</p>  <p>“那么我们的那位祖先呢？”</p>  <p>“这位名讳蔡进德的先人在收到段路给他的最后一封信的当天晚上，举火自焚，没人知道原因，而这些信却都奇迹般地保存了下来。”</p>  <p>“那么说真的是有鬼？”</p>  <p>“不，根本就不存在什么世俗认为的鬼魂，那的确是段路的臆想，是他长期自我封闭的结果，他一直有一种强烈的罪恶感，他独自忏悔了十年，内心充满了痛苦和对爱人的思念。于是在精神上他产生了幻觉，这是一个人心灵深处不断斗争的结果，他失败了，他败给了他自己的灵魂，于是他的灵魂就不属于他自己了，所谓的鬼魂，其实就是他自己，他的另一个自我，另一个代表爱人的自我。由于深深的爱，他已与月香无论在肉体上，还是精神上都合二为一。所以，他说月香还活在他身边，其实就是他自己———他的另一半，他的精神已经一分为二，也就是所谓的双重人格，一切都源自他内心，一切都源自对月香的爱。他在写完最后一封信以后，就死了，死因不明。但对他来说，这却是最好的解脱。”</p>  <p>“那么他养的那么多猫是怎么死的，也是幻觉吗？还有他的那些战友，包括我们的那位祖先，还有坤州全城的男子，他们为什么会死？”</p>  <p>“冥冥之中，自有一股神秘的力量在操纵，但不是我们所一般理解的复仇的鬼魂。也许那些猫根本就是段路自己亲手杀的，通过潜意识驱使他重复了当年的那种恐怖行为，这是双重人格的典型病例，他写信时的正常人格却对自己的行为浑然不知。我说过一切罪恶都源自内心，我们的那位祖先其实想必也有过与段路一样的心理过程。你是否注意到了信中反复提到的报应二字，这不是简单的佛教意义上的因果报应，而是他们的内心对自我的报复，从这个意义来说，他们在劫难逃。”</p>  <p>“谢谢你，堂兄。”</p>  <p>“你认为我刚才说的是标准答案吗？不，每个人心中都会有自己的答案，我真不该说这么多，也许你自己的理解比我的更好呢？”</p>  <p>我离开了堂兄的研究所，回到了家里，并归还了那些信，象是扔掉了一个沉重的负担。</p>  <p>晚上，妈妈为我烧了一锅肉汤。妈妈没有察觉到我的眉头掠过了一丝恐惧。</p>  <p>肉香，真的很香。</p>','2011-06-23 01:11:22','2011-06-23 01:11:22',NULL,NULL,'publish',NULL,'肉香','/post/2012/7/14/1344938592001.html',1,0),(235,0,'open','我只想好好的谈次恋爱，怎么就这么困难呢？\n\n我讨厌距离。','2011-06-08 04:44:03','2011-10-05 21:18:35',NULL,NULL,'publish',NULL,'我只想好好的谈个恋爱','/post/2012/7/14/1344938592068.html',1,0),(236,0,'open','<p>【一】   <br />每个人都有一个死角，    <br />自己走不出来，别人也闯不进去。    <br />我把最深沉的秘密放在那里。    <br />你不懂我，我不怪你。    <br />【二】    <br />每个人都有一道伤口，    <br />或深或浅，盖上布，以为不存在。    <br />我把最殷红的鲜血涂在那里。    <br />你不懂我，我不怪你。    <br />【三】    <br />每个人都有一场爱恋，    <br />用心、用情、用力，感动也感伤。    <br />我把最炙热的心情藏在那里。    <br />你不懂我，我不怪你。    <br />【四】    <br />每个人都有一行眼泪，    <br />喝下的冰冷的水，酝酿成的热泪。    <br />我把最心酸的委屈汇在那里。    <br />你不懂我，我不怪你。    <br />【五】    <br />每个人都有一段告白，    <br />忐忑、不安，却饱含真心和勇气。    <br />我把最抒情的语言用在那里。    <br />你不懂我，我不怪你。    <br />【六】    <br />你永远也看不见我最爱你的时候，    <br />因为我只有在看不见你的时候，才最爱你。    <br />同样，    <br />你永远也看不见我最寂寞的时候，    <br />因为我只有在你看不见我的时候，我才最寂寞。    <br />【七】    <br />也许，我太会隐藏自己的悲伤。    <br />也许，我太会安慰自己的伤痕。    <br />也许，你眼中的我，太会照顾自己，    <br />所以，你从不考虑我的感受。    <br />【八】    <br />你以为，我可以很迅速的恢复过来，有些自私的以为。    <br />从阴雨走到艳阳，我路过泥泞、路过风。    <br />一路走来，你不曾懂我，我亦不曾怪你。    <br />我不是为了显示自己的大度，    <br />也不是为了体现自己的大方。    <br />只想让你知道，感情不在，责备也不存在。</p>','2011-06-08 04:10:05','2011-10-05 21:18:37',NULL,NULL,'publish',NULL,'每个人都有一个死角','/post/2012/7/14/1344938592122.html',1,0),(237,0,'open','<p>在oracle中，不同的用户，使用不同的schema.所以，如果schema管理不当会出现异常。在hibernate的POJO中，会指定了schema</p>  <div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\">   <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">     <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> <span style=\"color: #0000ff\">&lt;?</span><span style=\"color: #800000\">xml</span> <span style=\"color: #ff0000\">version</span><span style=\"color: #0000ff\">=&quot;1.0&quot;</span> <span style=\"color: #ff0000\">encoding</span><span style=\"color: #0000ff\">=&quot;utf-8&quot;</span>?<span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum2\">   2:</span> <span style=\"color: #0000ff\">&lt;!</span><span style=\"color: #800000\">DOCTYPE</span> <span style=\"color: #ff0000\">hibernate-mapping</span> <span style=\"color: #ff0000\">PUBLIC</span> <span style=\"color: #0000ff\">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum3\">   3:</span> <span style=\"color: #0000ff\">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum4\">   4:</span> <span style=\"color: #008000\">&lt;!-- </span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum5\">   5:</span> <span style=\"color: #008000\">    Mapping file autogenerated by MyEclipse Persistence Tools</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum6\">   6:</span> <span style=\"color: #008000\">--&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum7\">   7:</span> <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">hibernate-mapping</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum8\">   8:</span>     <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">class</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;com.csc.poimanager.dao.Poi&quot;</span> <span style=\"color: #ff0000\">table</span><span style=\"color: #0000ff\">=&quot;POI&quot;</span> <span style=\"color: #ff0000\">schema</span><span style=\"color: #0000ff\">=&quot;P_BEIJING&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum9\">   9:</span>         <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">id</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;poiId&quot;</span> <span style=\"color: #ff0000\">type</span><span style=\"color: #0000ff\">=&quot;java.lang.Long&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum10\">  10:</span>             <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">column</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;POI_ID&quot;</span> <span style=\"color: #ff0000\">precision</span><span style=\"color: #0000ff\">=&quot;10&quot;</span> <span style=\"color: #ff0000\">scale</span><span style=\"color: #0000ff\">=&quot;0&quot;</span> <span style=\"color: #0000ff\">/&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum11\">  11:</span>             <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">generator</span> <span style=\"color: #ff0000\">class</span><span style=\"color: #0000ff\">=&quot;increment&quot;</span> <span style=\"color: #0000ff\">/&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum12\">  12:</span>         <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">id</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum13\">  13:</span>         <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">property</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;cnName&quot;</span> <span style=\"color: #ff0000\">type</span><span style=\"color: #0000ff\">=&quot;java.lang.String&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum14\">  14:</span>             <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">column</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;CN_NAME&quot;</span> <span style=\"color: #ff0000\">length</span><span style=\"color: #0000ff\">=&quot;1000&quot;</span> <span style=\"color: #0000ff\">/&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum15\">  15:</span>         <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum16\">  16:</span>     <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">class</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum17\">  17:</span> <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">hibernate-mapping</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF--></div>\n</div>\n\n<p>上面的代码部分，就指定了Schema.</p>\n\n<p>如果在操作的时候想切换Schema.操作如下：</p>\n\n<p>默认的配置</p>\n\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">property</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;hibernate.default_schema&quot;</span><span style=\"color: #0000ff\">&gt;</span>POI_BEIJING<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF--></div>\n</div>\n\n<p></p>\n\n<p>上面的映射文件改为：</p>\n\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> <span style=\"color: #0000ff\">&lt;?</span><span style=\"color: #800000\">xml</span> <span style=\"color: #ff0000\">version</span><span style=\"color: #0000ff\">=&quot;1.0&quot;</span> <span style=\"color: #ff0000\">encoding</span><span style=\"color: #0000ff\">=&quot;utf-8&quot;</span>?<span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum2\">   2:</span> <span style=\"color: #0000ff\">&lt;!</span><span style=\"color: #800000\">DOCTYPE</span> <span style=\"color: #ff0000\">hibernate-mapping</span> <span style=\"color: #ff0000\">PUBLIC</span> <span style=\"color: #0000ff\">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum3\">   3:</span> <span style=\"color: #0000ff\">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum4\">   4:</span> <span style=\"color: #008000\">&lt;!-- </span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum5\">   5:</span> <span style=\"color: #008000\">    Mapping file autogenerated by MyEclipse Persistence Tools</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum6\">   6:</span> <span style=\"color: #008000\">--&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum7\">   7:</span> <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">hibernate-mapping</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum8\">   8:</span>     <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">class</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;com.csc.poimanager.dao.Poi&quot;</span> <span style=\"color: #ff0000\">table</span><span style=\"color: #0000ff\">=&quot;POI&quot;</span> <span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum9\">   9:</span>         <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">id</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;poiId&quot;</span> <span style=\"color: #ff0000\">type</span><span style=\"color: #0000ff\">=&quot;java.lang.Long&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum10\">  10:</span>             <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">column</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;POI_ID&quot;</span> <span style=\"color: #ff0000\">precision</span><span style=\"color: #0000ff\">=&quot;10&quot;</span> <span style=\"color: #ff0000\">scale</span><span style=\"color: #0000ff\">=&quot;0&quot;</span> <span style=\"color: #0000ff\">/&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum11\">  11:</span>             <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">generator</span> <span style=\"color: #ff0000\">class</span><span style=\"color: #0000ff\">=&quot;increment&quot;</span> <span style=\"color: #0000ff\">/&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum12\">  12:</span>         <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">id</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum13\">  13:</span>         <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">property</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;cnName&quot;</span> <span style=\"color: #ff0000\">type</span><span style=\"color: #0000ff\">=&quot;java.lang.String&quot;</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum14\">  14:</span>             <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">column</span> <span style=\"color: #ff0000\">name</span><span style=\"color: #0000ff\">=&quot;CN_NAME&quot;</span> <span style=\"color: #ff0000\">length</span><span style=\"color: #0000ff\">=&quot;1000&quot;</span> <span style=\"color: #0000ff\">/&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum15\">  15:</span>         <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">property</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum16\">  16:</span>     <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">class</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum17\">  17:</span> <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">hibernate-mapping</span><span style=\"color: #0000ff\">&gt;</span></pre>\n<!--CRLF--></div>\n</div>\n\n<p></p>\n\n<p>在操作的，可以用下面的方法来重新build你的SessionFactory</p>\n\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">static</span> <span style=\"color: #0000ff\">void</span> rebuildSessionFactoryForChangeSchema(String newSchema){</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum2\">   2:</span>         <span style=\"color: #0000ff\">try</span> {</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum3\">   3:</span>          </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum4\">   4:</span>             Properties p = configuration.getProperties();</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum5\">   5:</span>             System.out.println(<span style=\"color: #006080\">&quot;---&quot;</span> + p);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum6\">   6:</span>             p.put(<span style=\"color: #006080\">&quot;hibernate.default_schema&quot;</span>, newSchema);       </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum7\">   7:</span>             sessionFactory = configuration.buildSessionFactory();            </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum8\">   8:</span>             System.out.println(<span style=\"color: #006080\">&quot; change schema successfully ......... &quot;</span>);            </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum9\">   9:</span>         } <span style=\"color: #0000ff\">catch</span> (Exception e) {</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum10\">  10:</span>             System.err</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum11\">  11:</span>                     .println(<span style=\"color: #006080\">&quot;%%%% rebuild session factory failed for changing schema %%%%&quot;</span>);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum12\">  12:</span>             e.printStackTrace();</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum13\">  13:</span>         }</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum14\">  14:</span>     }</pre>\n<!--CRLF--></div>\n</div>\n\n<p></p>\n\n<p>如果需要改变Schema,就需要在需要的时候调用此方法</p>\n\n<p>比如在SchemaAction中，</p>\n\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> HibernateSessionFactory.rebuildSessionFactoryForChangeSchema(<span style=\"color: #006080\">&quot;POI_SHANGHAI&quot;</span>);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum2\">   2:</span>         </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum3\">   3:</span>         System.out.println(<span style=\"color: #006080\">&quot; change successfully  ---&quot;</span>);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum4\">   4:</span>&#160; </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum5\">   5:</span>         </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum6\">   6:</span>&#160; </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum7\">   7:</span>         PoiDAO pd = <span style=\"color: #0000ff\">new</span> PoiDAO();</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum8\">   8:</span>         Transaction t =pd.getSession().beginTransaction();</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum9\">   9:</span>         </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum10\">  10:</span>         pd.save(<span style=\"color: #0000ff\">new</span> Poi(<span style=\"color: #006080\">&quot;jsfjksdf&quot;</span>));</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum11\">  11:</span>         t.commit();</pre>\n<!--CRLF--></div>\n</div>\n\n<p>那么，原来，是向POI_BEIJING中插入数据的，变成了向POI_SHANGHAI中插入一条数据了。</p>\n\n<p>通过这种方法，可以实现在操作不同的Schema的时候实现切换。</p>','2011-05-30 02:51:05','2011-05-30 02:51:05',NULL,NULL,'publish',NULL,'Hibernate动态切换schema','/post/2012/7/14/1344938592178.html',1,0),(238,0,'open','<p><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"1\" border=\"0\" alt=\"1\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/1.jpg\" width=\"604\" height=\"454\" /></p>  <p align=\"center\"><strong>随着人一天天成长，那最初的纯洁与美好，会逐渐淡化成飘渺的情怀或久远的梦想，与童年的记忆一起埋藏。而因为有了“儿童节”这个灿烂的节日，怀旧的情绪让记忆变得清晰，寻梦的奇思妙想再次萌生——让我们藉此良机，放松心情，停留一下脚步，做一次“超龄儿童”，寻找遗失在成长路途中的点点滴滴</strong></p>  <p align=\"center\"><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"2\" border=\"0\" alt=\"2\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/2.jpg\" width=\"404\" height=\"404\" /></p>  <p align=\"center\"><strong>你有多久没有感受过儿童节的欢乐气氛了？ 你中意的漂亮幼儿园老师送给你的小红花如今被遗忘在哪个角落？ 现在的你，是被老板的唠叨与唾沫所淹没，还是被如小山堆积的课本打败？ 如果，只是如果，你仍然保存着一颗垂死挣扎的童心， 那么—— 就请加入进来吧！ 让我们每个人，在6.1这天，都再变回那个倔强的方枪枪！=）</strong></p>  <p align=\"center\"><strong><font color=\"#008000\">马上儿童节来了，让我们集体装嫩一回！ “其实，在大多数成年人心中都拥有一个儿童梦。”让我们借光六一，集体装嫩！</font></strong></p>  <p align=\"center\"><strong></strong></p>  <p align=\"center\"><strong>装嫩手册</strong></p>  <p><strong>第一式：吃儿童套餐 约上三五个年龄相仿的好友，肆无忌惮地点上一个儿童套餐，心满意足地拿着套餐赠送的礼品，旁若无人地大舔甜筒，唧唧喳喳地说着各自儿时的趣事。 </strong>    </p><p>第二式：看老动画片 《蓝精灵》、《聪明的一休》、《圣斗士 》……挑选几部童年时看得入迷的动画片，一个人静静地观赏，细细回味。 </p>    <p>第三式：畅游游乐园 拿着硕大的粉红色棉花糖，抱着一只比你还胖的维尼熊 ，洋洋得意地走在游乐园当中。 </p>    <p>第四式：说话娇滴滴 “你这个包包好漂亮”、“你这双鞋好Q哦”、“这个东西好好玩”，用这种方式来说话吧……男士就不要学习了。 </p>    <p>第五式：棒棒糖在手 一个圆球棒棒糖，足以让你装嫩至极点，走到哪里，叼到哪里，不管你是外表清纯的MM，或者造型酷酷的帅哥。 </p>    <p>第六式：见人低三分 无论见了同辈还是长辈，男性统一叫大叔，女性叫阿姨，把一切的语言都表达成童言无忌的话语。 </p>    <p>第七式：玩具满身挂 无论是双肩背包、斜挎包、挎包还是手提包，包上挂上各式各样的卡通小饰物。装嫩必备。 </p>    <p>第八式：扮嫩着装 女性超短小花裙，男士嘛，颜色鲜艳即可，当然大家都可以穿上中学时的背带裤，喜欢什么就穿什么，喜欢怎么打扮就怎么打扮，好好放纵自己一天。 </p>    <p>第九式：用用小奶瓶 装嫩必不可少的物件——奶瓶，没有的就去买一个吧。 </p>    <p>第十式：做做小游戏 找几个儿时的玩伴、召集他们一起玩老鹰抓小**，回味一下幼时的那种感觉，肆无忌惮地大笑吧、玩乐吧。</p>    <p>&#160;</p>    <p><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"3\" border=\"0\" alt=\"3\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/3.jpg\" width=\"564\" height=\"44\" /></p>    <p></p>   <p>·70年代铁皮玩具风头正劲 从上世纪70年代开始，儿童玩具慢慢发生了变化，木头玩具少了，占主导地位的成了各种各样的铁皮玩具。 铁皮玩具的制作原料俗称“马口铁”，是一种镀锡薄铁皮。“马口铁”比木头轻便，可塑性强，能做出各种造型的玩具，因此，铁皮玩具前后风靡了将近20年，几乎每一个“70后”都有一个无法释怀的铁皮玩具情结节。</p>  <p><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"4\" border=\"0\" alt=\"4\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/4.jpg\" width=\"598\" height=\"141\" /></p>  <p>&#160;</p>  <p>80后的童年生活 80后是改革开放后的第一代独生子女，比起70后、甚至于60后的物质匮乏，80后幸福许多。从零食，玩具到书籍，比起之前的几代，都有了质的突破。 而今，这幸福的一代有的也已到而已之年，成家，立业，婚姻。曾经的调皮、青涩都已蜕变成了稳重、成熟，可时代的烙印却始终深深刻在这一代的心里。他们是创新的一代，也是最喜欢怀旧的一代人，从衣着到生活方式，一边在感慨岁月的无情，一边在搜集记忆中的点滴。</p>  <p><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"5\" border=\"0\" alt=\"5\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/5.jpg\" width=\"598\" height=\"321\" /></p>  <p></p>  <p>&#160;</p>  <p>&#160;</p>  <p>&#160;</p>  <p><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"6\" border=\"0\" alt=\"6\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/6.jpg\" width=\"564\" height=\"44\" /></p>  <p>儿时看动画片时会搬着小板凳等着动画片开演，或者在吃饭时看的津津有味，饭粒掉得到处都是，还被妈妈骂，那些触动内心最深处那一根神经的儿时动画你还记得多少？齐心协力的葫芦娃、所向无敌的铁臂阿童木、捣蛋可爱的阿拉蕾、无所不能的哆啦A梦、团结友爱的蓝精灵、聪明孝顺的一休、搞笑有趣的猫和老鼠还有风靡一时的圣斗士星矢……</p>  <p><img style=\"border-bottom: 0px; border-left: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px\" title=\"7\" border=\"0\" alt=\"7\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/7.jpg\" width=\"600\" height=\"473\" /></p>  <p align=\"center\"><strong><font color=\"#8000ff\" size=\"6\">让我们一起过个成年儿童节       <br />让我们在空闲时，讲讲童年的趣事吧！</font></strong></p>  <p>&#160;</p>  <p>&#160;</p>  <p>原文地址：<a href=\"http://dzh.mop.com/ttq/20110526/0/5OSSOgI26a14f1FO.shtml\">http://dzh.mop.com/ttq/20110526/0/5OSSOgI26a14f1FO.shtml</a></p>','2011-05-27 04:28:44','2011-10-05 21:18:38',NULL,NULL,'publish',NULL,'成人儿童节 回忆往昔追逐快乐','/post/2012/7/14/1344938592256.html',1,0),(239,0,'open','今天翻看MSN相册，突然发现了零八年奥运会的时候我照的相片，现在看，我那时候好小啊。零八年，我还十九岁，还有人叫我小朋友，看起来还很不成熟，会玩劲舞团，跑跑卡丁车，魔兽，CS…   会看着快乐大本营然后傻笑，会喝酒，会夜里两点睡觉然后上午11点起床，偶尔还能通宵，也会一大帮人满北京城的瞎转悠，疯玩。\n\n\n才三年，我上班了，会觉得玩游戏很无聊，没事也不喜欢出去逛，懂得生活了，不会那么晚睡觉了，知道关心身边的人了。 现在不会有人叫我小朋友了，所有的小朋友都开始叫我叔叔了。\n\n\n说了这些，其实我最想表达的是，哥曾经也年轻过，纯过，嫩过，玩过。三年时间过得好快，哥也成熟了，我要做个成熟，有情调，懂生活的小男人，要让我爱的和爱我的人快乐幸福！  一定会的！！加油！！！','2011-05-24 02:13:44','2011-10-05 21:18:38',NULL,NULL,'publish',NULL,'在北京的这些年…','/post/2012/7/14/1344938592327.html',1,0),(240,0,'open','<p><strong>如何定义个XML模块文件</strong></p>  <p>模块是被定义于名为 gwt.xml.ModulName 的文件中。这个文件应改被放在你的工程的根目录。如果你的工程使用的GWT标准工程文件夹的结构，那么你的配置文件应该向下面那样简单。</p>  <p><a name=\"Defining_a_module:_format_of_module_XML_\">&lt;module&gt;</a></p>  <p>&lt;inherits name=&quot;com.google.gwt.user.User&quot; /&gt;</p>  <p>&lt;entry-point class=&quot;com.example.cal.client.CalendarApp&quot; /&gt;</p>  <p>&lt;/module&gt;</p>  <p><a name=\"Loading_modules\"></a></p>  <p><strong>加载模块</strong></p>  <p>模块配置的XML文件应该在JAVA的类加载路径里面。模块总是通过他们的逻辑名被引用。模</p>  <p>块的逻辑名是这样的：包名1.包名2.模块名。逻辑名并不用反映实际的文件系统路径和文件扩展名。如下，假如一个模块的XML文件：</p>  <p>~/src/com/example/cal/Calendar.gwt.xml</p>  <p>那么对应的逻辑名可以是：</p>  <p>com.example.cal.Calendar</p>  <p><a name=\"Renaming_modules\"></a></p>  <p><strong>重命名模块</strong></p>  <p>模块配置文件的&lt;module&gt;元素有一个可选的属性 rename-to 。这个属性可以让JAVA -&gt; JavaScript的编译器把对应模组按照重命名之后的名字来处理。重命名一个模块可以带来如下好处：</p>  <ul>   <li>可以使用一个不反应实际包结构的短名</li>    <li>to create a &quot;working module&quot; to speed up development time by restricting the number of permutations （这个不知道该怎么译， 所以把原文放在这里。permutations 是排列组合的意思。）</li> </ul>  <p>com.foo.WorkingModule.gwt.xml:</p>  <p>&lt;module rename-to=&quot;com.foo.MyModule&quot;&gt;</p>  <p>&lt;inherits name=&quot;com.foo.MyModule&quot; /&gt;</p>  <p>&lt;set-property name=&quot;user.agent&quot; value=&quot;ie6&quot; /&gt;</p>  <p>&lt;set-property name=&quot;locale&quot; value=&quot;default&quot; /&gt;</p>  <p>&lt;/module&gt;</p>  <p>对应如上的配置文件，当WorkingModule.gwt.xml被编译的时候，默认情况下将仅仅产生一个用于ie6的版本。这种方式可以帮助你提高开发时的编译速度。这时编译器的输出将是以重名后的包名产生的。</p>  <p>但是，在主机（Host）模式下，需要使用实际的XML文件名对应的模块名，即物理名。总之</p>  <p>主机模式下，GWT（谷歌网站工具）只会按照物理名去查找对应的模块。</p>  <p><a name=\"Dividing_code_into_multiple_modules\"></a></p>  <p><strong>使用多个模块</strong></p>  <p>大多数情况下，你可能会打算创建一个可以在其他GWT工程中重用的模块。创建这类模块的时候并不意味着该模块必须要定义一个入口(entryPoint)。实际上， GALGWT（Google API Library for Google Web Toolkit ）中Gears对GWT的绑定中就有这种情况。你可以在jar包中的gwt-google-apis/com/google/gwt/gears/ Gears.gwt.xml 中看到，那里并没有定义入口。所以任何想要在GWT工程中使用Gears for GWT的模块都需要在其模块配置文件中继承Gears.gwt.xml module。例如： 一个名为 Foo 的模块项使用GALGWT, 则其模块配置文件中应该有一个&lt;inherits&gt; 元素。</p>  <pre>&lt;module&gt;</pre>\n\n<pre>...</pre>\n\n<pre>&#160;&#160;&#160; &lt;inherits name=&quot;com.google.gwt.gears.Gears&quot; /&gt;<br />     <br /><br /><p><strong>在同一个超文本文件中加载多个模块</strong></p><br /><p>如果你的应用程序需要多个GWT模块， 那么你有两种方式加载它们。</p><br /><p>1. 分别编译各个模块，然后应用程序的主页面中单独的在不同的&lt;script&gt;中去指定每个模块。</p><br /><p>2.创建一个顶层的模块的XML配置文件，在其中包含所有你打算包含的模块。然后编译顶层模块，<br />进而只产生单个的js 输出结果。</p><br /><p>   第一种方法单独编译每个模块的方法似乎看起来更像是一种编译模块的方法。但是不幸的是，</p><p>在GWT中，这回引起应用程序开始的时候需要加载多个模块， 而多个模块这件会有大量的冗余</p><p>数据， 例如相同GWT库的文件，甚至还有可能遇到冲突。基于这些原因， 推荐使用第二种方式。</p><p><br /></p><p>&#160;</p><p><strong>重载一个实现</strong></p><p>&lt;super-source&gt;标签告诉编译器将一个目录作为源码的根目录。当你想在一个GWT工程中重用一个java的</p><p>api，而原先的源码路径又没法编译这个类的时候这个标签就有用武之地了(这句没有译出原话的意思来，</p><p>看后面的意思，等我都搞懂了再回来改)。这个功能多的时候用来模拟一个尚未被GWT实现的JRE的功能。</p><p>请看下面这个例子，</p><p>假设你打算实现JRE 下面java.util 下面的UUID 类， 你的工程的模块是：</p><p>com/example/myproject/MyProject.gwt.xml.</p><p>那么你可以把UUID 类放到      com/example/myproject/jre/java/util/UUID.java.</p><p>然后在MyProject.gwt.xml 中加入&lt;super-source path=&quot;jre&quot; /&gt;</p><p>这就告诉编译器将com/example/myproject/jre 加到源码路径下面，但是去掉，并且包括jre，之前的部分。</p><p>这样做的实际效果是， com/google/myproject/gwt/jre/java/util/UUID.java 将会被视作java/util/UUID.java 。</p><p>看到了吧， 这样实际上你为GWT的jre增加了一个类的实现。<br /><br />基于GWT的工程内在的使用了这种技术来实现对JRE的模拟。必须指出是，</p><p>以这种对JRE类进行的重载实际上并不能被用于主机（host）模式。主机模式中， 本地的jre总是替代了</p><p>源码编译而来的类。<br />&lt;super－source&gt; 标签支持基于模式的过滤，这个特性使得你可以在更细的粒度上控制编译是那个资源被复制</p><p>到输出目录。</p></pre>\n\n<p>XML配置文件参考\n  <br />这一节列出了模块配置文件中最常用的元素。\n\n  <br />&lt;inherits name=&quot;logical-module-name&quot; /&gt; :&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 从指定的模块继承所有的设置。这样做时间上是将所有的设置都复制的当前的这个文件。可以继承的模块数量不限。\n\n  <br />&lt;entry-point class=&quot;classname&quot; /&gt; :\n\n  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 定义一个入口类。可以定义任意数量的入口，当然被继承过来的入口同样有效。同一个有效域内的所有的入口都被编译到同一个代码库。并且，被按照出现在配置文件中的顺序依次的被各自的onModuleLoad()方法加载。\n\n  <br />&lt;source path=&quot;path&quot; /&gt; :&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 每个&lt;source&gt;标签都通过合并其所指定的路径到模块配置XML文件所指定的包中去的方法，加入了一个包到编译器的源码路径内。所有出现在包中的java文件或者其子包都会被编译。同样，基于模式匹配的过滤也是支持的，以便于为你提供对编译输出，主要是对那些资源将被复制编译输出目录，提供细粒度的控制。如果整个模块配置文件都没有&lt;source&gt;标签被定义，那么client包将被隐式的加入到源码路径中去，这个动作等同于&lt;source path = &quot;client&quot;&gt;.这个默认设置可以帮助大家使用google推荐的标准工程文件夹的组织方式。\n\n  <br />&lt;public path = &quot;path&quot; /&gt;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 这个标签用于将一个包加入到public path 路径下面。所有出现于public path路径下面的资源将被所有的客户端代码访问。和source一样， &lt;public&gt; 也有一个默认的指向，模块根目录，就是模块配置文件所在的目录，下的public 文件夹。\n\n  <br />&lt;servlet path=&quot;url-path&quot; class=&quot;classname&quot; /&gt; :\n\n  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 为了便于RPC测试，这个标签定义了一个servlet并将之绑定到一个URL，但是请注意，和在web.xml中定义不同， 1。此处要求URL的末尾必须是一个目录而不是”/”。在客户端代码中，你可以指定一个调用位置，用ServiceDefTarget.setServiceEntryPoint(String).这里对加载的servlet 的数量没有限制。2。这个地方的定义只对GWT的内置服务器的服务器端的调试起作用。\n\n  <br />&lt;script src =&quot;js-url&quot; /&gt; :&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 在中用模块的主页中引入js文件或者文件夹，这个效果等同于你在HTML 页面中使用 script 。\n\n  <br />&lt;stylesheet src=&quot;css-url&quot; /&gt; :\n\n  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 在中用模块的主页中引入css文件或者文件夹，这个效果等同于你在HTML 页面中使用 script 。\n\n  <br />&lt;extend-property name=&quot;client-property-name&quot; values=&quot;comma-separated-values&quot; /&gt; :\n\n  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 这个使用来定义本地化参数的，也可以用来定义其他的一些属性</p>','2011-05-20 05:25:31','2011-05-20 05:25:31',NULL,NULL,'publish',NULL,'GWT 中文文档之gwt.xml模块配置','/post/2012/7/14/1344938592438.html',1,0),(241,0,'open','<blockquote>   <p>歌手<a href=\"http://baike.baidu.com/view/23875.htm\">范晓萱</a>唱过一首《数字恋爱》，歌词里数字520喻成“<a href=\"http://baike.baidu.com/view/3231.htm\">我爱你</a>”，这三个数字已被赋予了爱的含义，每年的5月20日是网友们自发兴起的<a href=\"http://baike.baidu.com/view/22934.htm\">节日</a>——520网络情人节。520 ，简单的网络流行语言，表达的<img style=\"border-bottom: 0px; border-left: 0px; display: inline; margin-left: 0px; border-top: 0px; margin-right: 0px; border-right: 0px\" title=\"520\" border=\"0\" alt=\"520\" align=\"right\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/520.jpg\" width=\"204\" height=\"150\" />是人们对爱情的美好向往。</p>    <p>相信这些数字一定会为你的520增色不少：     <br /> 20105201314 爱你要你，我爱你一生一世      <br /> 5201314 我爱你一生一世      <br /> 1314 一生一世      <br /> 740 气死你      <br /> 596 我走了      <br />&#160;&#160; 网络情人节456 是我啦      <br /> 7998 去走走吧      <br /> 53770 我想亲亲你      <br /> 53719 我深情依旧      <br /> 25184 爱我一辈子<a href=\"http://www.flickr.com/photos/47141198@N02/5738175867/\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; margin-left: 0px; border-top: 0px; margin-right: 0px; border-right: 0px\" title=\"aiq\" border=\"0\" alt=\"aiq\" align=\"right\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/aiq.jpg\" width=\"204\" height=\"181\" /></a>      <br /> 1392010 一生就爱你一人      <br /> 0594184 你我就是一辈子      <br /> 220225 爱爱你爱爱我      <br /> 584520 我发誓我爱你      <br /> 246437 爱是如此神奇      <br /> 1314920 一生一世就爱你      <br /> 594230 我就是爱想你&#160; 网络情人节壁纸360 想念你      <br /> 2010000 爱你一万年      <br /> 1372 一厢情愿      <br /> 259695 爱我就了解我      <br /> 078 你去吧      <br /> 74839 其实不想走      <br /> 20999 爱你久久久      <br /> 5871 我不介意      <br /> 829475 被爱就是幸福      <br /> 7758520 亲亲我吧 我爱你</p>    <p>&#160;</p>    <p>很郁闷的是，我们今天貌似闹了点不愉快…</p></blockquote>','2011-05-20 01:56:36','2011-10-05 21:18:40',NULL,NULL,'publish',NULL,'5.20网络情人节？','/post/2012/7/14/1344938592492.html',1,0),(242,0,'open','<blockquote>   <p>六年前 你问我：“如果有一天我和别人结婚了，你怎么办？”      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; “你敢，弄死你，哈哈”       <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 你搂过我，亲了一下      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 笑着说：“我哪可能娶别人啊”       <br />四年前 你又问：“如果有一天我和别人结婚了，你怎么办？”       <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; “如果有那天，我一辈子不嫁，一直等你”       <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 你搂过我，抱的很紧。       <br />七年后的今天&#160; 你又问：“如果有一天我和别人结婚了，你怎么办？”       <br />我坐在你腿上，看着你的眼睛，很平静的说：“找个人嫁了，结婚。”&#160;&#160;&#160;&#160; <br />你却说：“你不爱我了？”       <br />“对，你都跟别人结婚了，都不要我了，我还爱你干什么，爱和不爱有区别吗？”       <br />你看着我，突然很紧张。拉着我的手说：“我只是随便问问，每个人的答案肯定都不一样，你别多想，我说着玩的。”       <br />末了，我还说了句：“我没多想，放心，如果有那一天，我肯定不等你&quot;      <br />然后淡然一笑，起身，穿好大衣，和你一起出去。       <br />你不再像往常一样走的很快，让我在后边紧跟着。而是站在那等我，让我挽着你胳膊，一起下了楼。       <br />时间变了，同一个问题，答案也变了，不是不爱，而是自己长大了……       <br />曾经的我走了……现在的我发现、不是当初爱错了、而是时间变了。       <br />相爱真的没想像中那么简单…不是守着空荡荡的誓言就能够地老天荒……       <br />突然想起安妮宝贝写的一句话：“任何一个人，失去了另一个人，都会活得一如既往。” </p>    <p>也许…这就是答案。</p></blockquote>','2011-05-12 06:16:28','2011-10-05 21:18:40',NULL,NULL,'publish',NULL,'这就是答案','/post/2012/7/14/1344938592543.html',1,0),(243,0,'open','<p><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"其实快乐很简单\" border=\"0\" alt=\"其实快乐很简单\" src=\"http://www.mspring.org/wp-content/uploads/2011/05/ad06379572eb.jpg\" width=\"370\" height=\"264\" /></p>  <p>这个图片是在别人QQ空间里面看到的，感触很深呀，希望我也能简简单单的快乐幸福。。</p>','2011-05-11 08:23:03','2011-05-11 08:23:03',NULL,NULL,'publish',NULL,'其实快乐很简单&hellip;','/post/2012/7/14/1344938592599.html',1,0),(244,0,'open','<p>错误描述：本地计算机上的<b>OracleOraDb10g_home1TNSListener服务</b>启动后又停止了。一些服务自动停止，如果它们没有什么可做的，例如 &quot;性能日志和警报 &quot;服务。</p>  <p>出错原因：由于本地的IP地址是自动获取的，每次获取的IP地址基本不同，而安装10g是，默认的把当时的IP地址写在了监听配置文件%ORACLE_HOME%\\db_1\\NETWORK\\ADMIN\\listener.ora</p>  <p>解决办法：%ORACLE_HOME%\\db_1\\NETWORK\\ADMIN\\listener.ora把这这文件里的内容改下 HOST=你的计算机名字，重启下便可。</p>  <p>其他错误信息及解决办法:</p>  <p>1,ORA:-12545:因目标主机和对象不存在，连接失败</p>  <p>错误代码ORA-12545表示网络连接串（即tnsnames.ora文件中的HOST处）中使用的机器名和IP地址不存在，重新修改和重新连接即可。</p>  <p>2,ORA-12651:TNS:没有监听器</p>  <p>该信息说明所要连接的服务器没有启动监听进程Listener（该进程为Oracle服务器上操作系统进程，监听进程没有启动时，服务器可以正常进行，但是客户端不能与服务器产生连接。这时可以在服务器使用操作系统命令lsnrctl正常起启动监听进程）</p>  <p>3,ORA-00600:internal error code,arguments:[num],[?],[?],[?],[?]   <br />产生原因：这种错误通常为ORACLE的内部错误，只对OSS和ORACLE开发有用。ORA-600的错误经常伴随跟踪文件的状态转储（系统状态和进程 状态），系统状态存储将包括ORACLE RDBMS持有的当前对象的信息，进程状态转储则将显示特殊进程持有的对象，当进程符合了某错误条件时，经常是由于一些信息取自它持有的一个块，如果我们 知道这些错误进程持有的块，就容易跟踪问题的来源。    <br /> 解决方法：一般来说出现这个错误我们本身是无法解决的，只有从提高系统本身各方面来解决这个内部问题，如增加硬件设备，调整系统性能，使用OPS（当 然OPS从某种意义上说并不是一种好的解决方式）等。ORA-600错误的第一个变量用于标记代码中错误的位置（代码中的每个部分的第一变量都不一样）， 从第二个到第五个变量显示附加信息，告诉OSS代码在哪里出现了错误</p>  <p>4,ORA－12560 协议适配器错误：   <br />有关ORA-12560: TNS:协议适配器错误 的问题</p>  <p>①.检查Terminal Service, 远程桌面是不是起因   <br />②.环境变量set oracle_sid=需要的服务名    <br />③.listener.ora, tnsnames.ora等内机器名或者IP地址是否正确    <br />④.netstat –a检查端口是否被占用    <br />⑤.检查注册表HKEY_LOCAL_MACHINE\\Software\\Oracle\\Home0新增字符串USE_SHARED_SOCKET=TRUE, 重新启动服务</p>  <p>5,ORA-28595: Invalid DLL Path&#160;&#160; 调用外部DLL出错</p>  <p>原因:A setting in Oracle\'s LISTENER.ORA file on the server hosting the RDBMS is missing.</p>  <p>解决办法:</p>  <p>(1).Locate the active LISTENER.ORA file on the server. By default, it will be on the Oracle RDBMS drive in the path..\\ora92\\network\\admin.   <br />(2).Inspect the file and locate all entries associated with &quot;SID_DESC&quot;. Each such entry should have the following option associated with it:    <br />(ENVS = &quot;EXTPROC_DLLS=ANY&quot;)    <br />(3).Add the above line to any entry where it is missing.    <br />(4).Restart the Oracle Listener Service (or reboot the server which will in turn restart Oracle).</p>  <p>例子:</p>  <p>The example LISTENER.ORA file below shows a valid configuration for the server named &quot;WOODY&quot; (using TCP/IP on Port 1521) with the correct ENVS entries highlighted:</p>  <p># LISTENER.ORA Network Configuration File: C:\\oracle\\ora92\\network\\admin\\listener.ora   <br /># Generated by Oracle configuration tools.    <br />LISTENER =    <br />(DESCRIPTION_LIST =    <br />&#160;&#160;&#160; (DESCRIPTION =    <br />&#160;&#160;&#160;&#160;&#160; (ADDRESS_LIST =    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC0))    <br />&#160;&#160;&#160;&#160;&#160; )    <br />&#160;&#160;&#160;&#160;&#160; (ADDRESS_LIST =    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; (ADDRESS = (PROTOCOL = TCP)(HOST = woody)(PORT = 1521))    <br />&#160;&#160;&#160;&#160;&#160; )    <br />&#160;&#160;&#160; )    <br />)    <br />SID_LIST_LISTENER =    <br />(SID_LIST =    <br />&#160;&#160;&#160; (SID_DESC =    <br />&#160;&#160;&#160;&#160;&#160; (SID_NAME = PLSExtProc)    <br />&#160;&#160;&#160;&#160;&#160; (ORACLE_HOME = C:\\oracle\\ora92)    <br />&#160;&#160;&#160;&#160;&#160; (PROGRAM = extproc)    <br />&#160;&#160;&#160;&#160;&#160; (ENVS = &quot;EXTPROC_DLLS=ANY&quot;)    <br />&#160;&#160;&#160; )    <br />&#160;&#160;&#160; (SID_DESC =    <br />&#160;&#160;&#160;&#160;&#160; (GLOBAL_DBNAME = WOODY)    <br />&#160;&#160;&#160;&#160;&#160; (ORACLE_HOME = C:\\oracle\\ora92)    <br />&#160;&#160;&#160;&#160;&#160; (SID_NAME = WOODY)    <br />&#160;&#160;&#160;&#160;&#160; (ENVS = &quot;EXTPROC_DLLS=ANY&quot;)    <br />&#160;&#160;&#160; )    <br />)</p>  <p>6.在控制面板中启动服务，出现以下错误   <br />服务：在本地计算机 <a name=\"baidusnap0\"></a><b>无法启动</b> OracleOraDb10g_home1TNSListener 服务。    <br />错误3：系统找不到指定的路径    <br />查看属性发现,OracleOraDb10g_home1TNSListener 服务的可执行文件的路径为空。</p>  <p>解决办法：</p>  <p>开始--&gt;运行REGEDIT --&gt;进入注册表找到HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\OracleOraDb10g_home1TNSListener   <br />发现ImagePath关键值没有了，新建一个名为ImagePath的可扩充字符串值，编辑字符串的数值数据为：Oracle安装路径\\BIN\\TNSLSNR</p>  <p>7<a name=\"baidusnap6\"></a><b>.错误</b>描述：本地计算机上的<b>OracleOraDb10g_home1TNSListener服务</b>启动后又停止了。一些服务自动停止，如果它们没有什么可做的，例如 &quot;性能日志和警报 &quot;服务。</p>  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160; 出错原因：由于本地的IP地址是自动获取的，每次获取的IP地址基本不同，而安装10g是，默认的把当时的IP地址写在了监听配置文件%ORACLE_HOME%\\db_1\\NETWORK\\ADMIN\\listener.ora   <br />&#160;&#160;&#160;&#160;&#160; 解决办法：%ORACLE_HOME%\\db_1\\NETWORK\\ADMIN\\listener.ora把这这文件里的内容改下 HOST=你的计算机名字。</p>','2011-05-10 04:42:48','2011-05-10 04:42:48',NULL,NULL,'publish',NULL,'OracleOraDb10g_home1TNSListener服务启动后又停止','/post/2012/7/14/1344938592649.html',1,0),(245,0,'open','<p>刚正在上班，努力写代码中。。    <br />突然有个女的昵称叫笨丫头，加我的QQ。     <br />这个是聊天纪律。 </p>  <blockquote>   <p>Ｍe疯子_(~ 15:10:24      <br />你是？       <br />Ｍe疯子_(~ 15:12:52       <br />你是哪个？       <br />笨丫头 15:14:25       <br />许欣       <br />笨丫头 15:14:26       <br />你呢       <br />笨丫头 15:14:29       <br />不在上班吗       <br />Ｍe疯子_(~ 15:14:55       <br />哦， 在上上班呀&#160; 我高尤波， 我以为你认识我呢。       <br />笨丫头 15:17:24       <br />呵呵你是做什么的啊辛苦吗       <br />笨丫头 15:17:30       <br />今天冷注意保暖啊       <br />Ｍe疯子_(~ 15:18:12       <br />呵呵， 谢谢哈。 今天天气还好， 明天要升温了。 要升6度。       <br />Ｍe疯子_(~ 15:18:33       <br />我呀， 写软件的。 你呢， 你是做什么的？       <br />笨丫头 15:22:24       <br />网络啊       <br />笨丫头 15:22:32       <br />你家是哪里的啊       <br />Ｍe疯子_(~ 15:23:18       <br />哦， 同行呀， 我这边也是写网站的， 我老家河南的。 现在北京的干活。。       <br />笨丫头 15:25:41       <br />出门在要好好照顾你自己啊 </p>    <p>笨丫头 15:28:16      <br />你用座机打我办公室电话96257873&#160;&#160; 我叫许欣 </p>    <p>Ｍe疯子_(~ 15:28:41      <br />打你电话干什么？       <br />笨丫头 15:28:42       <br />我不方便网聊啊       <br />Ｍe疯子_(~ 15:29:00       <br />呵呵， 我这边不方便打电话呀。       <br />笨丫头 15:31:09       <br />只是想和你交个朋友啊</p> </blockquote>  <p>然后我上网查了一下这个号码， 原来还有人也遇到了这种情况，也是这个号码。 </p>  <p>这个女的肯定是骗子， 大家注意点哈， 被骗色还无所谓， 千万不要被骗财呀。。。 </p>','2011-04-26 07:44:41','2011-04-26 09:30:23',NULL,NULL,'publish',NULL,'96257873肯定是个骗子','/post/2012/7/14/1344938592726.html',1,0),(246,0,'open','<p>此次叶伟信版的《倩女幽魂》除了在造型、场景、特效上的突破外，剧情中还加入了现代人对于感情的思考，聂小倩、燕赤霞和宁采臣之间的感情纠葛势必会引起更多的共鸣。该片前不久已卖出1200万美金的海外版权，业内对其的期待值不断增高，大有称霸四月票房的气势。   <br />中文名：&#160;&#160;&#160;&#160; 倩女幽魂    <br />其它译名：&#160;&#160;&#160;&#160; 新倩女幽魂    <br />出品时间：&#160;&#160;&#160;&#160; 2010年    <br />制片地区：&#160;&#160;&#160;&#160; 中国香港    <br />导演：&#160;&#160;&#160; 叶伟信    <br />主演：&#160;&#160;&#160; 古天乐 刘亦菲 余少群 惠英红 巩新亮 樊少皇    <br />类型：&#160;&#160;&#160;&#160; 魔幻    <br />片长：&#160;&#160;&#160;&#160; 90分    <br />上映时间：&#160;&#160;&#160;&#160; 2011年4月19日（内地） </p>  <p>基本信息   <br /> 导演：叶伟信     <br /> 演员表：    <br />《倩女幽魂》    <br />古天乐——燕赤霞（男一号）    <br /> 刘亦菲——聂小倩（女一号）    <br /> 余少群——宁采臣     <br /> 惠英红——姥姥    <br /> 巩新亮——青蛇    <br /> 林鹏——白蛇    <br /> 樊少皇---夏雪风雷    <br /> 徐锦江——村长    <br /> 王丹怡栗——夏冰    <br /> （男女配角也都活跃在荧屏一线像樊少皇，徐锦江，还有金像奖影后惠英红、新人巩新亮、王丹怡栗、李菁）    <br /> 新版《倩女》将在2011年4月19日上映。这又将是一部万众期待的魔幻爱情电影。    <br />主题曲    <br /> 《倩女幽魂》主题曲《还泪》    <br /> 唱：林鹏 曲：伍乐城 词：林夕    <br /> 怀了爱 赎了罪    <br /> 心里还有鬼    <br /> 昨天错 何时对    <br /> 到底谁把谁连累    <br /> 天网中 向人间 寻觅是非    <br /> 欠你一笑还你一身眼泪    <br /> 有情 无理 有愧 无悔    <br /> 似有 还无 有我不该有谁    <br /> 有心 无意 有去 无回    <br /> 真情需要谁的假慈悲    <br /> 一时 冒昧 一夜 暧昧    <br /> 一般 愚昧 你我是谁傀儡    <br /> 一番 体会 一场 误会    <br /> 一朝化灰谁写纪念碑    <br /> 怀了爱 赎了罪    <br /> 心里还有鬼    <br /> 昨天错 何时对    <br /> 到底谁把谁连累    <br /> 有情人 离恨天 惹甚是非    <br /> 欠你一笑还你一身眼泪    <br /> 欠你今生还尽来生的眼泪 </p>  <p>剧情简介 </p>  <p> 很多年以前,他就立志要成为一名优秀的猎妖师,他选择了黑山做他修行和圆梦之旅的起点。   <br /> 那时,燕赤霞很年轻,黑山已经是一座很老的大山,那里有更老的精灵妖圣,它们过着原始的生活,精糙简单却充满杀戮气息.他在黑山经历一场又一场的凶险恶斗,村民们都害怕进入黑山和这间寺院被称为“兰若寺”。他的剑变得更加可怕，他的力量也更强大，他自信可以战胜一切，直到那一天，他遇上了她和他们悲痛故事由此开始。    <br /> 很多年以后，黑山山下所有河流突然发生干涸，人们猝然面对干旱的生存危机，为了拯救生计，大家决定组成开山队到黑山上游开垦水源，于是文明的人类要跟古老的灵怪展开碰撞，而一段浪温的传奇就此诞生......</p>  <p>&#160;</p>  <p>下载地址：<a href=\"http://u.115.com/file/f49a5ff65\">http://u.115.com/file/f49a5ff65</a></p>  <p><font color=\"#ff0000\">注意：该下载链接为种子链接，种子下载完成之后使用讯雷打开种子，然后进行电影的下载。</font></p>','2011-04-22 05:03:22','2011-04-22 05:03:22',NULL,NULL,'publish',NULL,'新倩女幽魂下载地址','/post/2012/7/14/1344938592783.html',1,0),(247,0,'open','<p>&#160;</p>  <p>1，泰国潘婷广告</p>  <p><object width=\"480\" height=\"385\"><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"wmode\" value=\"window\"></param><param name=\"movie\" value=\"http://6.cn/p/GkiynIraf_h6u39YTjQmxA.swf\"></param><embed src=\"http://6.cn/p/GkiynIraf_h6u39YTjQmxA.swf\" width=\"480\" height=\"385\" allowscriptaccess=\"always\" wmode=\"window\" type=\"application/x-shockwave-flash\"></embed></object></p>  <p>&#160;</p>  <p>虽然是很久以前就看过了，但到今天为止仍然没有一个广告能拍的如此让我心动！</p>  <p>听过好多版本的卡农，在广告最后这个版本的卡农我最喜欢，最让我震撼的。我曾经在很</p>  <p>长一段时间里都把它当作手机铃声。</p>  <p>&#160;</p>  <p>2 ，I always online (我一直在线)</p>  <p><object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" id=\"object_flash_player\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0\" width=\"600\" height=\"495\"><param name=\"movie\" value=\"http://www.56.com/flashApp/v_player_common.11.04.20.swf\"></param><param name=\"quality\" value=\"high\"></param><param name=\"wmode\" value=\"opaque\"></param><param name=\"allowScriptAccess\" value=\"always\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"FlashVars\" value=\"&amp;img_host=v156.56.com&amp;host=c60.56.com&amp;pURL=28&amp;sURL=20&amp;user=dcl0709&amp;user_id=dcl0709&amp;URLid=130018529991hd&amp;tag=001,002,003,004,005,Always Online&amp;channel=41&amp;Subject=Always Online&amp;totaltimes=360599&amp;key=e0c1c75bc9cbde774b4de94ef248dc98&amp;effectID=0&amp;flvid=58950175&amp;start_sec=0&amp;show_mode=normal&amp;opera_id=-4&amp;56.swf\"><embed id=\"embed_flash_player\" allowscriptaccess=\"always\" src=\"http://www.56.com/flashApp/v_player_common.11.04.20.swf\" flashvars=\"&amp;img_host=v156.56.com&amp;host=c60.56.com&amp;pURL=28&amp;sURL=20&amp;user=dcl0709&amp;user_id=dcl0709&amp;URLid=130018529991hd&amp;tag=001,002,003,004,005,Always Online&amp;channel=41&amp;Subject=Always Online&amp;totaltimes=360599&amp;key=e0c1c75bc9cbde774b4de94ef248dc98&amp;effectID=0&amp;flvid=58950175&amp;start_sec=0&amp;show_mode=normal&amp;opera_id=-4&amp;56.swf\" quality=\"high\" wmode=\"opaque\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" type=\"application/x-shockwave-flash\" allowfullscreen=\"true\" width=\"600\" height=\"495\"></embed></param></object></p>  <p>唯一一点不喜欢的就是林俊杰陪的音乐....</p>','2011-04-21 08:26:37','2011-04-21 08:34:16',NULL,NULL,'publish',NULL,'那些曾经让我感动的广告','/post/2012/7/14/1344938592838.html',1,0),(248,0,'open','<blockquote style=\"margin-right: 0px\" dir=\"ltr\">   <p>前天还在说，微软在为Windows7打广告，提倡使用正版Windows7操作系统，今天早上打开我的本本，Windows7突然给我弹出一个框框提示我激活系统。</p>    <p><font style=\"background-color: #f9f9f9\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"激活windows7\" border=\"0\" alt=\"激活windows7\" src=\"http://www.mspring.org/wp-content/uploads/2011/04/windows7.png\" width=\"621\" height=\"356\" /></font></p>    <p><font style=\"background-color: #f9f9f9\" color=\"#333333\">相当郁闷的了，我记得以前是激活了的。。。。</font></p>    <p><font style=\"background-color: #f9f9f9\" color=\"#333333\">不过这个是难不倒中国万能的网民们， 我立即在百度上搜索出了一大串的激活号码， 然后激活成功 o(∩_∩)o 哈哈</font></p>    <p><font style=\"background-color: #f9f9f9\" color=\"#333333\">留下激活码，有需要的来拿哈</font></p>    <p>STARTER     <br />(OEM-8992752) (OEM-8992707)       <br />===================== </p>    <p>RDJXR-3M32B-FJT32-QMPGB-GCFF6 --- XXXXX-OEM-8992752-30004 --- ACER/GATEWAY/PACKARD BELL     <br />6K6WB-X73TD-KG794-FJYHG-YCJVG --- XXXXX-OEM-8992752-30005 --- ASUS (Eee)      <br />36Q3Y-BBT84-MGJ3H-FT7VD-FG72J --- XXXXX-OEM-8992707-00082 --- DELL      <br />RH98C-M9PW4-6DHR7-X99PJ-3FGDB --- XXXXX-OEM-8992752-30008 --- HP      <br />273P4-GQ8V6-97YYM-9YTHF-DC2VP --- XXXXX-OEM-8992752-30169 --- LENOVO/IBM      <br />2XGHP-9TQK2-8CF28-BM2P2-8FRX8 --- XXXXX-OEM-8992752-30269 --- NOKIA      <br />PV9BD-YBRX6-CTMG6-CCMJY-X8XG7 --- XXXXX-OEM-8992752-30013 --- SAMSUNG      <br />32J2V-TGQCY-9QJXP-Q3FVT-X8BQ7 --- XXXXX-OEM-8992707-00016 --- SONY      <br />TGBKB-9KBGJ-3Y3J6-K8M2F-J2HJQ --- XXXXX-OEM-8992752-30015 --- TOSHIBA </p>    <p>HOME BASIC     <br />(OEM-8992752)      <br />===================== </p>    <p>MB4HF-2Q8V3-W88WR-K7287-2H4CP --- XXXXX-OEM-8992752-50004 --- ACER/GATEWAY/PACKARD BELL     <br />89G97-VYHYT-Y6G8H-PJXV6-77GQM --- XXXXX-OEM-8992752-50005 --- ASUS       <br />36T88-RT7C6-R38TQ-RV8M9-WWTCY --- XXXXX-OEM-8992752-50258 --- DELL      <br />DX8R9-BVCGB-PPKRR-8J7T4-TJHTH --- XXXXX-OEM-8992752-50008 --- HP      <br />22MFQ-HDH7V-RBV79-QMVK9-PTMXQ --- XXXXX-OEM-8992752-50213 --- LENOVO/IBM      <br />2P6PB-G7YVY-W46VJ-BXJ36-PGGTG --- XXXXX-OEM-8992752-50013 --- SAMSUNG </p>    <p>HOME PREM     <br />(OEM-8992687)      <br />=====================      <br />VQB3X-Q3KP8-WJ2H8-R6B6D-7QJB7 --- XXXXX-OEM-8992687-00006 --- ACER/GATEWAY/PACKARD BELL      <br />38JTJ-VBPFW-XFQDR-PJ794-8447M --- XXXXX-OEM-8992687-00304 --- ADVENT      <br />2QDBX-9T8HR-2QWT6-HCQXJ-9YQTR --- XXXXX-OEM-8992687-00007 --- ASUS      <br />7JQWQ-K6KWQ-BJD6C-K3YVH-DVQJG --- XXXXX-OEM-8992687-00118 --- ASUS (Eee)      <br />6RBBT-F8VPQ-QCPVQ-KHRB8-RMV82 --- XXXXX-OEM-8992687-00095 --- DELL      <br />C6MHH-TRRPT-74TDC-FHRMV-XB88W --- XXXXX-OEM-8992687-00009 --- FUJITSU      <br />4FG99-BC3HD-73CQT-WMF7J-3Q6C9 --- XXXXX-OEM-8992687-00010 --- HP      <br />27GBM-Y4QQC-JKHXW-D9W83-FJQKD --- XXXXX-OEM-8992687-00249 --- LENOVO/IBM      <br />38GRR-KMG3D-BTP99-TC9G4-BBDJJ --- XXXXX-OEM-8992687-00174 --- LG      <br />2P2P9-CM3F8-FTV6P-PC7CX-8TFF7 --- XXXXX-OEM-8992687-00093 --- MEDION      <br />4G3GR-J6JDJ-D96PV-T9B9D-M8X2Q --- XXXXX-OEM-8992687-00246 --- MSI      <br />CQBVJ-9J697-PWB9R-4K7W4-2BT4J --- XXXXX-OEM-8992687-00015 --- SAMSUNG      <br />HWDFB-YVFG4-3TJ7F-Q3WMT-7B6PH --- XXXXX-OEM-8992687-00138 --- SIRAGON      <br />H4JWX-WHKWT-VGV87-C7XPK-CGKHQ --- XXXXX-OEM-8992687-00016 --- SONY      <br />6B88K-KCCWY-4F8HK-M4P73-W8DQG --- XXXXX-OEM-8992687-00057 --- TOSHIBA      <br />6GF36-P4HWR-BFF84-6GFC2-BWX77 --- XXXXX-OEM-8992687-00017 --- TOSHIBA      <br />2XPWB-Q64BJ-W8CT3-WJTWT-4DQ99 --- XXXXX-OEM-8992687-00267 --- ????? </p>    <p>PROFESSIONAL     <br />(OEM-8992671)      <br />===================== </p>    <p>YKHFT-KW986-GK4PY-FDWYH-7TP9F --- XXXXX-OEM-8992671-00004 --- ACER/GATEWAY/PACKARD BELL     <br />2WCJK-R8B4Y-CWRF2-TRJKB-PV9HW --- XXXXX-OEM-8992671-00407 --- ASUS      <br />32KD2-K9CTF-M3DJT-4J3WC-733WD --- XXXXX-OEM-8992671-00524 --- DELL      <br />PT9YK-BC2J9-WWYF9-R9DCR-QB9CK --- XXXXX-OEM-8992671-00007 --- FUJITSU      <br />74T2M-DKDBC-788W3-H689G-6P6GT --- XXXXX-OEM-8992671-00008 --- HP      <br />237XB-GDJ7B-MV8MH-98QJM-24367 --- XXXXX-OEM-8992671-00437 --- LENOVO/IBM      <br />GMJQF-JC7VC-76HMH-M4RKY-V4HX6 --- XXXXX-OEM-8992671-00013 --- SAMSUNG      <br />H9M26-6BXJP-XXFCY-7BR4V-24X8J --- XXXXX-OEM-8992671-00014 --- SONY      <br />2V8P2-QKJWM-4THM3-74PDB-4P2KH --- XXXXX-OEM-8992671-00137 --- TOSHIBA      <br />862R9-99CD6-DD6WM-GHDG2-Y8M37 --- XXXXX-OEM-8992671-00205 --- ????? </p>    <p>ULTIMATE     <br />(OEM-8992662)      <br />===================== </p>    <p>FJGCP-4DFJD-GJY49-VJBQ7-HYRR2 --- XXXXX-OEM-8992662-00006 --- ACER/GATEWAY/PACKARD BELL     <br />VQ3PY-VRX6D-CBG4J-8C6R2-TCVBD --- XXXXX-OEM-8992662-00008 --- ALIENWARE      <br />2Y4WT-DHTBF-Q6MMK-KYK6X-VKM6G --- XXXXX-OEM-8992662-00173 --- ASUS      <br />342DG-6YJR8-X92GV-V7DCV-P4K27 --- XXXXX-OEM-8992662-00400 --- DELL      <br />22TKD-F8XX6-YG69F-9M66D-PMJBM --- XXXXX-OEM-8992662-00497 --- LENOVO/IBM (Old)      <br />6K2KY-BFH24-PJW6W-9GK29-TMPWP --- XXXXX-OEM-8992662-00537 --- LENOVO/IBM (New)      <br />49PB6-6BJ6Y-KHGCQ-7DDY6-TF7CD --- XXXXX-OEM-8992662-00015 --- SAMSUNG </p></blockquote>','2011-04-15 01:59:06','2011-04-15 01:59:06',NULL,NULL,'publish',NULL,'windows7激活','/post/2012/7/14/1344938592897.html',1,0),(249,0,'open','<p>Spring的SimpleJdbcTemplate将存储过程的调用进行了良好的封装，但可惜只能用于jdk1.5的环境，无法再jdk1.4环境下使用，而JdbcTemplate则完全适用于jdk1.4下的环境，下面列出使用JdbcTemplate调用Oracle存储过程的一些方法：    <br /><strong>一) 无返回值的存储过程调用      <br /></strong>存储过程：&#160;&#160; </p>  <div id=\"codeSnippetWrapper\">   <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">     <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> <span style=\"color: #0000ff\">CREATE</span> <span style=\"color: #0000ff\">OR</span> REPLACE <span style=\"color: #0000ff\">PROCEDURE</span> TESTPRO(PARAM1 <span style=\"color: #0000ff\">IN</span> VARCHAR2,PARAM2 <span style=\"color: #0000ff\">IN</span> VARCHAR2) <span style=\"color: #0000ff\">AS</span> </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum2\">   2:</span> <span style=\"color: #0000ff\">BEGIN</span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum3\">   3:</span>      INSERT <span style=\"color: #0000ff\">INTO</span> TESTTABLE (ID,NAME) <span style=\"color: #0000ff\">VALUES</span> (PARAM1, PARAM2);</pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum4\">   4:</span> <span style=\"color: #0000ff\">END</span> TESTPRO;</pre>\n</div>\n</div>\n\n<p>Java代码：&#160;&#160;&#160; <br /></p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum1\">   1:</span> <span style=\"color: #0000ff\">package</span> com.dragon.test; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum2\">   2:</span> <span style=\"color: #0000ff\">import</span> org.springframework.jdbc.core.JdbcTemplate; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum3\">   3:</span> <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> JdbcTemplateTest { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum4\">   4:</span>   <span style=\"color: #0000ff\">private</span> JdbcTemplate jdbcTemplate; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum5\">   5:</span>   <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> setJdbcTemplate(JdbcTemplate jdbcTemplate) { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum6\">   6:</span>   <span style=\"color: #0000ff\">this</span>.jdbcTemplate = jdbcTemplate; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum7\">   7:</span>   } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum8\">   8:</span>   <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> test(){ </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum9\">   9:</span>      <span style=\"color: #0000ff\">this</span>.jdbcTemplate.execute(<span style=\"color: #006080\">&quot;call testpro(\'p1\',\'p2\')&quot;</span>); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum10\">  10:</span>   } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #606060\" id=\"lnum11\">  11:</span> } </pre>\n</div>\n</div>\n\n<p>注:存储过程TESTPRO中用到了表TESTTABLE(ID, NAME),需事先建好. \n  <br /><strong>二)有返回值的存储过程（非结果集）</strong> \n\n  <br />存储过程：&#160;&#160;&#160; <br /></p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">CREATE</span> <span style=\"color: #0000ff\">OR</span> REPLACE <span style=\"color: #0000ff\">PROCEDURE</span> TESTPRO(PARAM1 <span style=\"color: #0000ff\">IN</span> VARCHAR2,PARAM2 <span style=\"color: #0000ff\">OUT</span> VARCHAR2) <span style=\"color: #0000ff\">AS</span>   </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">BEGIN</span>    </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">SELECT</span> <span style=\"color: #0000ff\">INTO</span> PARAM2 <span style=\"color: #0000ff\">FROM</span> TESTTABLE <span style=\"color: #0000ff\">WHERE</span> ID= PARAM1;    </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">END</span> TESTPRO; </pre>\n</div>\n</div>\n\n<p>Java代码： \n  <br /></p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> test() { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  String param2Value = (String) jdbcTemplate.execute( </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     <span style=\"color: #0000ff\">new</span> CallableStatementCreator() { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">        <span style=\"color: #0000ff\">public</span> CallableStatement createCallableStatement(Connection con) <span style=\"color: #0000ff\">throws</span> SQLException { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           String storedProc = <span style=\"color: #006080\">&quot;{call testpro(?,?)}&quot;</span>;<span style=\"color: #008000\">// 调用的sql </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           CallableStatement cs = con.prepareCall(storedProc); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           cs.setString(1, <span style=\"color: #006080\">&quot;p1&quot;</span>);<span style=\"color: #008000\">// 设置输入参数的值 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           cs.registerOutParameter(2, OracleTypes.VARCHAR);<span style=\"color: #008000\">// 注册输出参数的类型 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           <span style=\"color: #0000ff\">return</span> cs; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">        } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     }, <span style=\"color: #0000ff\">new</span> CallableStatementCallback() { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">         <span style=\"color: #0000ff\">public</span> Object doInCallableStatement(CallableStatement cs) <span style=\"color: #0000ff\">throws</span> SQLException, DataAccessException { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           cs.execute(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           <span style=\"color: #0000ff\">return</span> cs.getString(2);<span style=\"color: #008000\">// 获取输出参数的值 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  }); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">} </pre>\n</div>\n</div>\n\n<p>注：cs.getString(2)中的数值2是存储过程中的out列对应的索引值(第一个参数索引为1,如此类推) \n  <br /><strong>三)有返回值的存储过程（结果集）</strong> \n\n  <br />因oracle存储过程所有返回值都是通过out参数返回的,列表同样也不例外,但由于是集合,所以不能用一般的参数,必须要用pagkage,分两部分:&#160;&#160; <br />1.建一个程序包,如下： \n\n  <br /></p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">CREATE</span> <span style=\"color: #0000ff\">OR</span> REPLACE PACKAGE TESTPACKAGE <span style=\"color: #0000ff\">AS</span> </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  TYPE TEST_CURSOR <span style=\"color: #0000ff\">IS</span> <span style=\"color: #0000ff\">REF</span> <span style=\"color: #0000ff\">CURSOR</span>; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">END</span> TESTPACKAGE; </pre>\n</div>\n</div>\n\n<p>2.建立存储过程,如下： \n  <br /></p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">CREATE</span> <span style=\"color: #0000ff\">OR</span> REPLACE <span style=\"color: #0000ff\">PROCEDURE</span> TESTPRO(PARAM1 <span style=\"color: #0000ff\">IN</span> VARCHAR2,test_cursor <span style=\"color: #0000ff\">out</span> TESTPACKAGE.TEST_CURSOR) <span style=\"color: #0000ff\">IS</span> </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">BEGIN</span> </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     <span style=\"color: #0000ff\">OPEN</span> test_cursor <span style=\"color: #0000ff\">FOR</span> <span style=\"color: #0000ff\">SELECT</span> * <span style=\"color: #0000ff\">FROM</span> TESTTABLE; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">END</span> TESTPRO; </pre>\n</div>\n</div>\n\n<p>可以看到，列表是通过把游标作为一个out参数来返回的。&#160;&#160; <br />Java代码： </p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> test() { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  List resultList = (List) jdbcTemplate.execute( </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     <span style=\"color: #0000ff\">new</span> CallableStatementCreator() { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">        <span style=\"color: #0000ff\">public</span> CallableStatement createCallableStatement(Connection con) <span style=\"color: #0000ff\">throws</span> SQLException { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           String storedProc = <span style=\"color: #006080\">&quot;{call testpro(?,?)}&quot;</span>;<span style=\"color: #008000\">// 调用的sql </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           CallableStatement cs = con.prepareCall(storedProc); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           cs.setString(1, <span style=\"color: #006080\">&quot;p1&quot;</span>);<span style=\"color: #008000\">// 设置输入参数的值 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           cs.registerOutParameter(2, OracleTypes.CURSOR);<span style=\"color: #008000\">// 注册输出参数的类型 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           <span style=\"color: #0000ff\">return</span> cs; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">        } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     }, <span style=\"color: #0000ff\">new</span> CallableStatementCallback() { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">        <span style=\"color: #0000ff\">public</span> Object doInCallableStatement(CallableStatement cs) <span style=\"color: #0000ff\">throws</span> SQLException,DataAccessException { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           List resultsMap = <span style=\"color: #0000ff\">new</span> ArrayList(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           cs.execute(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           ResultSet rs = (ResultSet) cs.getObject(2);<span style=\"color: #008000\">// 获取游标一行的值 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           <span style=\"color: #0000ff\">while</span> (rs.next()) {<span style=\"color: #008000\">// 转换每行的返回值到Map中 </span></pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">              Map rowMap = <span style=\"color: #0000ff\">new</span> HashMap(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">              rowMap.put(<span style=\"color: #006080\">&quot;id&quot;</span>, rs.getString(<span style=\"color: #006080\">&quot;id&quot;</span>)); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">              rowMap.put(<span style=\"color: #006080\">&quot;name&quot;</span>, rs.getString(<span style=\"color: #006080\">&quot;name&quot;</span>)); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">              resultsMap.add(rowMap); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           rs.close(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">           <span style=\"color: #0000ff\">return</span> resultsMap; </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">        } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  }); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  <span style=\"color: #0000ff\">for</span> (<span style=\"color: #0000ff\">int</span> i = 0; i &lt; resultList.size(); i++) { </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     Map rowMap = (Map) resultList.get(i); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     String id = rowMap.get(<span style=\"color: #006080\">&quot;id&quot;</span>).toString(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     String name = rowMap.get(<span style=\"color: #006080\">&quot;name&quot;</span>).toString(); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">     System.out.println(<span style=\"color: #006080\">&quot;id=&quot;</span> + id + <span style=\"color: #006080\">&quot;;name=&quot;</span> + name); </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">  } </pre>\n\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">} </pre>\n</div>\n</div>','2011-04-13 08:20:48','2011-04-14 05:35:33',NULL,NULL,'publish',NULL,'使用Spring JdbcTemplate调用存储过程','/post/2012/7/14/1344938593012.html',1,0),(250,0,'open','<p>Oracle 存储过程返回结果集用 ref cursor 实现。试验步骤如下：</p>  <p><strong>1. 建立 ref cursor 类型和过程</strong>    <br />CREATE OR REPLACE PACKAGE types    <br />AS    <br />&#160;&#160;&#160; TYPE ref_cursor IS REF CURSOR;    <br />END;    <br />/    <br />CREATE TABLE STOCK_PRICES(    <br />&#160;&#160;&#160; RIC VARCHAR(6) PRIMARY KEY,    <br />&#160;&#160;&#160; PRICE NUMBER(7,2),    <br />&#160;&#160;&#160; UPDATED DATE );    <br />/    <br />CREATE OR REPLACE FUNCTION sp_get_stocks(v_price IN NUMBER)&#160; <br />&#160;&#160;&#160; RETURN types.ref_cursor    <br />AS    <br />&#160;&#160;&#160; stock_cursor types.ref_cursor;    <br />BEGIN    <br />&#160;&#160;&#160; OPEN stock_cursor FOR&#160; <br />&#160;&#160;&#160; SELECT ric,price,updated FROM stock_prices WHERE price &lt; v_price;    <br />&#160;&#160;&#160; RETURN stock_cursor;    <br />END;    <br /><strong>2. 用 sqlplus 测试过程</strong>    <br />SQL&gt; var results refcursor    <br />SQL&gt; exec :results := sp_get_stocks(20.0)    <br />SQL&gt; print results    <br /><strong>3. 从 Java 调用</strong>    <br />import java.sql.*;    <br />import java.io.*;    <br />import oracle.jdbc.driver.*;    <br />public class JDBCDemo {    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Compile-time flag for deciding which query to use    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private boolean useOracleQuery = true;    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Class name of Oracle JDBC driver    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private String driver = &quot;oracle.jdbc.driver.OracleDriver&quot;;    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Initial url fragment    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private String url = &quot;jdbc:oracle:thin:@&quot;;    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Standard Oracle listener port    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private String port = &quot;1521&quot;;    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Oracle style of calling a stored procedure    <br />&#160;&#160;&#160; */    <br /><strong>private String oracleQuery = &quot;begin ? := sp_get_stocks(?); end;&quot;;</strong>    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * JDBC style of calling a stored procedure    <br />&#160;&#160;&#160; */    <br /><strong>private String genericQuery = &quot;{ call ? := sp_get_stocks(?) }&quot;;</strong>    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Connection to database    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private Connection conn = null;    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Constructor. Loads the JDBC driver and establishes a connection    <br />&#160;&#160;&#160; *    <br />&#160;&#160;&#160; * @param host the host the db is on    <br />&#160;&#160;&#160; * @param db the database name    <br />&#160;&#160;&#160; * @param user user\'s name    <br />&#160;&#160;&#160; * @param password user\'s password    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; public JDBCDemo(String host, String db, String user, String password)    <br />&#160;&#160;&#160; throws ClassNotFoundException, SQLException {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // construct the url    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; url = url + host + &quot;:&quot; + port + &quot;:&quot; + db;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // load the Oracle driver and establish a connection    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Class.forName(driver);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; conn = DriverManager.getConnection(url, user, password);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; catch (ClassNotFoundException ex) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;Failed to find driver class: &quot; + driver);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; throw ex;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; catch (SQLException ex) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;Failed to establish a connection to: &quot; + url);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; throw ex;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Execute the stored procedure    <br />&#160;&#160;&#160; *    <br />&#160;&#160;&#160; * @param price price parameter for stored procedure    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private void execute(float price)    <br />&#160;&#160;&#160; throws SQLException {    <br /><strong>String query = useOracleQuery ? oracleQuery : genericQuery;     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;Query: &quot; + query + &quot;n&quot;);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CallableStatement stmt = conn.prepareCall(query);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // register the type of the out param - an Oracle specific type      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.registerOutParameter(1, OracleTypes.CURSOR);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // set the in param      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.setFloat(2, price);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // execute and retrieve the result set      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.execute();      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; ResultSet rs = (ResultSet)stmt.getObject(1);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // print the results      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; while (rs.next()) {      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(rs.getString(1) + &quot;t&quot; +      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; rs.getFloat(2) + &quot;t&quot; +      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; rs.getDate(3).toString());      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }</strong>    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; rs.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.close();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Cleanup the connection    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; private void cleanup() throws SQLException {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (conn != null)    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; conn.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Prints usage statement on stdout    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; static private void usage() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;java com.enterprisedt.demo.oracle.JDBCDemo &quot; +    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot; host db user password price&quot;);    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; /**    <br />&#160;&#160;&#160; * Runs the class    <br />&#160;&#160;&#160; */    <br />&#160;&#160;&#160; public static void main(String[] args) throws Exception {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (args.length != 5) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; JDBCDemo.usage();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.exit(1);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; else {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; // assign the args to sensible variables for clarity    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String host = args[0];    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String db = args[1];    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String user = args[2];    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String password = args[3];    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; float price = Float.valueOf(args[4]).floatValue();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; // and execute the stored proc    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; JDBCDemo jdbc = new JDBCDemo(host, db, user, password);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; jdbc.execute(price);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; jdbc.cleanup();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; catch (ClassNotFoundException ex) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;Demo failed&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; catch (SQLException ex) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;Demo failed: &quot; + ex.getMessage());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />}</p>  <p>&#160;</p>  <p>&#160;</p>  <p>原文地址:<a href=\"http://blog.csdn.net/xzyrose/archive/2008/04/10/2277261.aspx\">http://blog.csdn.net/xzyrose/archive/2008/04/10/2277261.aspx</a></p>','2011-04-13 06:56:32','2011-04-13 06:56:32',NULL,NULL,'publish',NULL,'Java 调用 Oracle 存储过程返回结果集','/post/2012/7/14/1344938593084.html',1,0),(251,0,'open','<p>1、什么是存储过程。存储过程是数据库服务器端的一段程序，它有两种类型。一种类似于SELECT查询，用于检索数据，检索到的数据能够以数据集的形式返回给客户。另一种类似于INSERT或DELETE查询，它不返回数据，只是执行一个动作。有的服务器允许同一个存储过程既可以返回数据又可以执行动作。   <br />2、什么时候需要用存储过程    <br /> 如果服务器定义了存储过程，应当根据需要决定是否要用存储过程。存储过程通常是一些经常要执行的任务，这些任务往往是针对大量的记录而进行的。在服务器上执行存储过程，可以改善应用程序的性能。这是因为：    <br />.服务器往往具有强大的计算能力和速度。    <br />.避免把大量的数据下载到客户端，减少网络上的传输量。    <br /> 例如，假设一个应用程序需要计算一个数据，这个数据需要涉及到许多记录。如果不使用存储过程的话，把这些数据下载到客户端，导致网络上的流量剧增。    <br /> 不仅如此，客户端可能是一台老掉牙的计算机，它的运算速度很慢。而改用存储过程后，服务器会很快地把数据计算出来，并且只需传递一个数据给客户端，其效率之高是非常明显的。    <br />3、存储过程的参数    <br /> 要执行服务器上的存储过程，往往要传递一些参数。这些参数分为四种类型：    <br /> 第一种称为输入参数，由客户程序向存储过程传递值。    <br /> 第二种称为输出参数，由存储过程向客户程序返回结果。    <br /> 第三种称为输入/输出参数，既可以由客户程序向存储过程传递值，也可以由存储过程向客户程序返回结果。    <br /> 第四种称为状态参数，由存储过程向客户程序返回错误信息。    <br /> 要说明的是，并不是所有的服务器都支持上述四种类型的参数，例如，InterBase就不支持状态参数。    <br />4、oracle 存储过程的基本语法    <br />&#160; 1.基本结构</p>  <blockquote>CREATE OR REPLACEPROCEDURE 存储过程名字   <br />(    <br />&#160;&#160;&#160; 参数1 IN NUMBER,    <br />&#160;&#160;&#160; 参数2 IN NUMBER    <br />) IS    <br />变量1 INTEGER :=0;    <br />变量2 DATE;    <br />BEGIN    <br />END 存储过程名字</blockquote>  <br />2.SELECT INTO STATEMENT  <br />&#160; 将select查询的结果存入到变量中，可以同时将多个列存储多个变量中，必须有一条  <br />&#160; 记录，否则抛出异常(如果没有记录抛出NO_DATA_FOUND)  <br />&#160; 例子：  <blockquote>&#160; BEGIN   <br />&#160; SELECT col1,col2 into 变量1,变量2 FROM typestruct where xxx;    <br />&#160; EXCEPTION    <br />&#160; WHEN NO_DATA_FOUND THEN    <br />&#160;&#160;&#160;&#160;&#160; xxxx;    <br />&#160; END;</blockquote>  <br />一：无返回值的存储过程  <br />存储过程为：  <blockquote>CREATE OR REPLACE PROCEDURE TESTA(PARA1 IN VARCHAR2,PARA2 IN VARCHAR2) AS   <br />BEGIN    <br />&#160; INSERT INTO HYQ.B_ID (I_ID,I_NAME) S (PARA1, PARA2);    <br />END TESTA;</blockquote> 然后呢，在java里调用时就用下面的代码：  <blockquote>package com.hyq.src;   <br />import java.sql.*;    <br />import java.sql.ResultSet;    <br />public class TestProcedureOne {    <br />public TestProcedureOne() {    <br />}    <br />public static void main(String[] args ){    <br />&#160;&#160;&#160; String driver = &quot;oracle.jdbc.driver.OracleDriver&quot;;    <br />&#160;&#160;&#160; String strUrl = &quot;jdbc:oracle:thin:@127.0.0.1:1521: hyq &quot;;    <br />&#160;&#160;&#160; Statement stmt = null;    <br />&#160;&#160;&#160; ResultSet rs = null;    <br />&#160;&#160;&#160; Connection conn = null;    <br />&#160;&#160;&#160; CallableStatement cstmt = null;    <br />&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160; Class.forName(driver);    <br />&#160;&#160;&#160;&#160;&#160; conn = DriverManager.getConnection(strUrl, &quot; hyq &quot;, &quot; hyq &quot;);    <br />&#160;&#160;&#160;&#160;&#160; CallableStatement proc = null;    <br />&#160;&#160;&#160;&#160;&#160; proc = conn.prepareCall(&quot;{ call HYQ.TESTA(?,?) }&quot;);    <br />&#160;&#160;&#160;&#160;&#160; proc.setString(1, &quot;100&quot;);    <br />&#160;&#160;&#160;&#160;&#160; proc.setString(2, &quot;TestOne&quot;);    <br />&#160;&#160;&#160;&#160;&#160; proc.execute();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; catch (SQLException ex2) {    <br />&#160;&#160;&#160;&#160;&#160; ex2.printStackTrace();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; catch (Exception ex2) {    <br />&#160;&#160;&#160;&#160;&#160; ex2.printStackTrace();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; finally{    <br />&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(rs != null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; rs.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(stmt!=null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(conn!=null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; conn.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160; catch (SQLException ex1) {    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />}    <br />}</blockquote> 当然了，这就先要求要建张表TESTTB,里面两个字段（I_ID，I_NAME）。  <br />二：有返回值的存储过程（非列表）  <br />存储过程为：  <blockquote>CREATE OR REPLACE PROCEDURE TESTB(PARA1 IN VARCHAR2,PARA2 OUT VARCHAR2) AS   <br />BEGIN    <br />&#160; SELECT INTO PARA2 FROM TESTTB WHERE I_ID= PARA1;    <br />END TESTB;</blockquote> 在java里调用时就用下面的代码：  <blockquote>package com.hyq.src;   <br />public class TestProcedureTWO {    <br />public TestProcedureTWO() {    <br />}    <br />public static void main(String[] args ){    <br />&#160;&#160;&#160; String driver = &quot;oracle.jdbc.driver.OracleDriver&quot;;    <br />&#160;&#160;&#160; String strUrl = &quot;jdbc:oracle:thin:@127.0.0.1:1521:hyq&quot;;    <br />&#160;&#160;&#160; Statement stmt = null;    <br />&#160;&#160;&#160; ResultSet rs = null;    <br />&#160;&#160;&#160; Connection conn = null;    <br />&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160; Class.forName(driver);    <br />&#160;&#160;&#160;&#160;&#160; conn = DriverManager.getConnection(strUrl, &quot; hyq &quot;, &quot; hyq &quot;);    <br />&#160;&#160;&#160;&#160;&#160; CallableStatement proc = null;    <br />&#160;&#160;&#160;&#160;&#160; proc = conn.prepareCall(&quot;{ call HYQ.TESTB(?,?) }&quot;);    <br />&#160;&#160;&#160;&#160;&#160; proc.setString(1, &quot;100&quot;);    <br />&#160;&#160;&#160;&#160;&#160; proc.registerOutParameter(2, Types.VARCHAR);    <br />&#160;&#160;&#160;&#160;&#160; proc.execute();    <br />&#160;&#160;&#160;&#160;&#160; String testPrint = proc.getString(2);    <br />&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;=testPrint=is=&quot;+testPrint);    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; catch (SQLException ex2) {    <br />&#160;&#160;&#160;&#160;&#160; ex2.printStackTrace();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; catch (Exception ex2) {    <br />&#160;&#160;&#160;&#160;&#160; ex2.printStackTrace();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; finally{    <br />&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(rs != null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; rs.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(stmt!=null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(conn!=null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; conn.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160; catch (SQLException ex1) {    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />}    <br />}    <br />}</blockquote> 注意，这里的proc.getString(2)中的数值2并非任意的，而是和存储过程中的out列对应的，如果out是在第一个位置，那就是proc.getString(1)，如果是第三个位置，就是proc.getString(3)，当然也可以同时有多个返回值，那就是再多加几个out参数了。  <br />三：返回列表  <br />由于oracle存储过程没有返回值，它的所有返回值都是通过out参数来替代的，列表同样也不例外，但由于是集合，所以不能用一般的参数，必须要用pagkage了.所以要分两部分，  <br />1， 建一个程序包。如下：  <blockquote>CREATE OR REPLACE PACKAGE TESTPACKAGE&#160; AS   <br />TYPE Test_CURSOR IS REF CURSOR;    <br />end TESTPACKAGE;</blockquote> 2，建立存储过程，存储过程为：  <blockquote>CREATE OR REPLACE PROCEDURE TESTC(p_CURSOR out TESTPACKAGE.Test_CURSOR) IS   <br />BEGIN    <br />&#160;&#160;&#160; OPEN p_CURSOR FOR SELECT * FROM HYQ.TESTTB;    <br />END TESTC;</blockquote> 可以看到，它是把游标（可以理解为一个指针），作为一个out 参数来返回值的。  <br />在java里调用时就用下面的代码：  <blockquote>package com.hyq.src;   <br />import java.sql.*;    <br />import java.io.OutputStream;    <br />import java.io.Writer;    <br />import java.sql.PreparedStatement;    <br />import java.sql.ResultSet;    <br />import oracle.jdbc.driver.*;    <br />public class TestProcedureTHREE {    <br />public TestProcedureTHREE() {    <br />}    <br />public static void main(String[] args ){    <br />&#160;&#160;&#160; String driver = &quot;oracle.jdbc.driver.OracleDriver&quot;;    <br />&#160;&#160;&#160; String strUrl = &quot;jdbc:oracle:thin:@127.0.0.1:1521:hyq&quot;;    <br />&#160;&#160;&#160; Statement stmt = null;    <br />&#160;&#160;&#160; ResultSet rs = null;    <br />&#160;&#160;&#160; Connection conn = null;    <br />&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160; Class.forName(driver);    <br />&#160;&#160;&#160;&#160;&#160; conn = DriverManager.getConnection(strUrl, &quot;hyq&quot;, &quot;hyq&quot;);    <br />&#160;&#160;&#160;&#160;&#160; CallableStatement proc = null;    <br />&#160;&#160;&#160;&#160;&#160; proc = conn.prepareCall(&quot;{ call hyq.testc(?) }&quot;);    <br />&#160;&#160;&#160;&#160;&#160; proc.registerOutParameter(1,oracle.jdbc.OracleTypes.CURSOR);    <br />&#160;&#160;&#160;&#160;&#160; proc.execute();    <br />&#160;&#160;&#160;&#160;&#160; rs = (ResultSet)proc.getObject(1);    <br />&#160;&#160;&#160;&#160;&#160; while(rs.next())    <br />&#160;&#160;&#160;&#160;&#160; {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;&lt;tr&gt;&lt;td&gt;&quot; + rs.getString(1) + &quot;&lt;/td&gt;&lt;td&gt;&quot;+rs.getString(2)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;);    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; catch (SQLException ex2) {    <br />&#160;&#160;&#160;&#160;&#160; ex2.printStackTrace();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; catch (Exception ex2) {    <br />&#160;&#160;&#160;&#160;&#160; ex2.printStackTrace();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; finally{    <br />&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(rs != null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; rs.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(stmt!=null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; stmt.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if(conn!=null){    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; conn.close();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160; catch (SQLException ex1) {    <br />&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />}    <br />}</blockquote> 在这里要注意，在执行前一定要先把oracle的驱动包放到class路径里，否则会报错。','2011-04-13 05:44:01','2011-04-13 05:44:01',NULL,NULL,'publish',NULL,'Oracle存储过程,以及使用Java调用.','/post/2012/7/14/1344938593141.html',1,0),(252,0,'open','<blockquote>   <p>昨天晚上在家里面看电视，看到微软在为windows7 打广告， 广告的意思是，盗版系统不稳定，要支持正版。。。</p>    <p>今天早上乘地铁，领了一份免费发放的信报，在报纸上又看到的windows7的正版广告。。。</p>    <p>在中国，使用盗版windows好像是一件理所当然的事情，如果使用正版那才是一件稀奇的事情呢。。。</p>    <p>中国人写软件不牛，但是破解软件的技术堪称世界一流。 </p>    <p>估计微软是让中国那帮搞破解的弄怕了， 所以来个广告呼吁用户购买正版windows。</p>    <p>现在好多国外的软件都不对中国用户开放下载了，封了中国的IP，也不知道我们应该是感到悲哀呢，还是悲哀呢。。。。</p></blockquote>','2011-04-13 01:47:11','2011-04-13 01:47:11',NULL,NULL,'publish',NULL,'Windows 7正版广告?','/post/2012/7/14/1344938593201.html',1,0),(253,0,'open','<p>在写系统尤其是在写课程系统是经常会遇到类似如下纵-横转换，在使用group by ... with cube/rollup + grouping() 来实现是非常容易做到的。</p>  <p><img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" border=\"0\" alt=\"sql_纵--横\" src=\"http://farm6.static.flickr.com/5030/5611805181_d75e2e698e.jpg\" /></p>  <p>1. 用于测试的数据如下：</p>  <div id=\"codeSnippetWrapper\">   <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">     <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">declare</span> @tab <span style=\"color: #0000ff\">table</span>(<span style=\"color: #0000ff\">Class</span> <span style=\"color: #0000ff\">varchar</span>(20),Student <span style=\"color: #0000ff\">varchar</span>(20),Course <span style=\"color: #0000ff\">varchar</span>(50),Grades <span style=\"color: #0000ff\">decimal</span>(7,2));</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'A班\'</span>,<span style=\"color: #006080\">\'张三\'</span>,<span style=\"color: #006080\">\'语文\'</span>,60);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'A班\'</span>,<span style=\"color: #006080\">\'张三\'</span>,<span style=\"color: #006080\">\'数学\'</span>,70);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'A班\'</span>,<span style=\"color: #006080\">\'张三\'</span>,<span style=\"color: #006080\">\'英语\'</span>,80);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'A班\'</span>,<span style=\"color: #006080\">\'李四\'</span>,<span style=\"color: #006080\">\'语文\'</span>,30);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'A班\'</span>,<span style=\"color: #006080\">\'李四\'</span>,<span style=\"color: #006080\">\'数学\'</span>,40);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'A班\'</span>,<span style=\"color: #006080\">\'李四\'</span>,<span style=\"color: #006080\">\'英语\'</span>,50);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'B班\'</span>,<span style=\"color: #006080\">\'王五\'</span>,<span style=\"color: #006080\">\'语文\'</span>,65);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'B班\'</span>,<span style=\"color: #006080\">\'王五\'</span>,<span style=\"color: #006080\">\'数学\'</span>,75);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'B班\'</span>,<span style=\"color: #006080\">\'王五\'</span>,<span style=\"color: #006080\">\'英语\'</span>,85);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'B班\'</span>,<span style=\"color: #006080\">\'赵六\'</span>,<span style=\"color: #006080\">\'语文\'</span>,35);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'B班\'</span>,<span style=\"color: #006080\">\'赵六\'</span>,<span style=\"color: #006080\">\'数学\'</span>,45);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">insert <span style=\"color: #0000ff\">into</span> @tab(<span style=\"color: #0000ff\">Class</span>,Student,Course,Grades) <span style=\"color: #0000ff\">values</span>(<span style=\"color: #006080\">\'B班\'</span>,<span style=\"color: #006080\">\'赵六\'</span>,<span style=\"color: #006080\">\'英语\'</span>,55);</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">&#160;</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">select</span> * <span style=\"color: #0000ff\">from</span> @tab</pre>\n<!--CRLF--></div>\n</div>\n\n<p>2. 实现此效果的SQL语句如下：</p>\n\n<div id=\"codeSnippetWrapper\">\n  <div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">select</span> </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    (<span style=\"color: #0000ff\">case</span> <span style=\"color: #0000ff\">when</span> <span style=\"color: #0000ff\">Grouping</span>(<span style=\"color: #0000ff\">Class</span>)=1 <span style=\"color: #0000ff\">then</span> <span style=\"color: #006080\">\'总平均\'</span> <span style=\"color: #0000ff\">when</span> <span style=\"color: #0000ff\">Grouping</span>(Student)=1 <span style=\"color: #0000ff\">then</span> <span style=\"color: #006080\">\'\'</span> <span style=\"color: #0000ff\">else</span> <span style=\"color: #0000ff\">Class</span> <span style=\"color: #0000ff\">end</span> ) <span style=\"color: #0000ff\">as</span> <span style=\"color: #0000ff\">Class</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,(<span style=\"color: #0000ff\">case</span> <span style=\"color: #0000ff\">when</span> <span style=\"color: #0000ff\">Grouping</span>(<span style=\"color: #0000ff\">Class</span>)=1 <span style=\"color: #0000ff\">then</span> <span style=\"color: #006080\">\'\'</span> <span style=\"color: #0000ff\">when</span> <span style=\"color: #0000ff\">Grouping</span>(Student)=1 <span style=\"color: #0000ff\">then</span> <span style=\"color: #006080\">\'平均\'</span> <span style=\"color: #0000ff\">else</span> Student <span style=\"color: #0000ff\">end</span>) <span style=\"color: #0000ff\">as</span> Student</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,<span style=\"color: #0000ff\">cast</span>(<span style=\"color: #0000ff\">avg</span>(语文) <span style=\"color: #0000ff\">as</span> <span style=\"color: #0000ff\">decimal</span>(7,2)) <span style=\"color: #0000ff\">as</span> 语文</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,<span style=\"color: #0000ff\">cast</span>(<span style=\"color: #0000ff\">avg</span>(数学) <span style=\"color: #0000ff\">as</span> <span style=\"color: #0000ff\">decimal</span>(7,2)) <span style=\"color: #0000ff\">as</span> 数学</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,<span style=\"color: #0000ff\">cast</span>(<span style=\"color: #0000ff\">avg</span>(英语) <span style=\"color: #0000ff\">as</span> <span style=\"color: #0000ff\">decimal</span>(7,2)) <span style=\"color: #0000ff\">as</span> 英语 </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,<span style=\"color: #0000ff\">cast</span>(<span style=\"color: #0000ff\">avg</span>(总分) <span style=\"color: #0000ff\">as</span> <span style=\"color: #0000ff\">decimal</span>(7,2)) <span style=\"color: #0000ff\">as</span> 总分</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">from</span> (</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">select</span> <span style=\"color: #0000ff\">Class</span>,Student</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,(<span style=\"color: #0000ff\">select</span> isnull(<span style=\"color: #0000ff\">sum</span>(Grades),0) <span style=\"color: #0000ff\">from</span> @tab <span style=\"color: #0000ff\">where</span> <span style=\"color: #0000ff\">Class</span>=t.<span style=\"color: #0000ff\">Class</span> <span style=\"color: #0000ff\">and</span> Student=t.Student <span style=\"color: #0000ff\">and</span> Course=<span style=\"color: #006080\">\'语文\'</span>) <span style=\"color: #0000ff\">as</span> <span style=\"color: #006080\">\'语文\'</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,(<span style=\"color: #0000ff\">select</span> isnull(<span style=\"color: #0000ff\">sum</span>(Grades),0) <span style=\"color: #0000ff\">from</span> @tab <span style=\"color: #0000ff\">where</span> <span style=\"color: #0000ff\">Class</span>=t.<span style=\"color: #0000ff\">Class</span> <span style=\"color: #0000ff\">and</span> Student=t.Student <span style=\"color: #0000ff\">and</span> Course=<span style=\"color: #006080\">\'数学\'</span>) <span style=\"color: #0000ff\">as</span> <span style=\"color: #006080\">\'数学\'</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,(<span style=\"color: #0000ff\">select</span> isnull(<span style=\"color: #0000ff\">sum</span>(Grades),0) <span style=\"color: #0000ff\">from</span> @tab <span style=\"color: #0000ff\">where</span> <span style=\"color: #0000ff\">Class</span>=t.<span style=\"color: #0000ff\">Class</span> <span style=\"color: #0000ff\">and</span> Student=t.Student <span style=\"color: #0000ff\">and</span> Course=<span style=\"color: #006080\">\'英语\'</span>) <span style=\"color: #0000ff\">as</span> <span style=\"color: #006080\">\'英语\'</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ,(<span style=\"color: #0000ff\">select</span> isnull(<span style=\"color: #0000ff\">sum</span>(Grades),0) <span style=\"color: #0000ff\">from</span> @tab <span style=\"color: #0000ff\">where</span> <span style=\"color: #0000ff\">Class</span>=t.<span style=\"color: #0000ff\">Class</span> <span style=\"color: #0000ff\">and</span> Student=t.Student) <span style=\"color: #0000ff\">as</span> <span style=\"color: #006080\">\'总分\'</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">from</span> @tab <span style=\"color: #0000ff\">as</span> t</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">group</span> <span style=\"color: #0000ff\">by</span> <span style=\"color: #0000ff\">Class</span>,Student</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    ) <span style=\"color: #0000ff\">as</span> tempTab</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">group</span> <span style=\"color: #0000ff\">by</span> <span style=\"color: #0000ff\">Class</span>,Student,语文,数学,英语,总分 <span style=\"color: #0000ff\">with</span> <span style=\"color: #0000ff\">rollup</span></pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">having</span> <span style=\"color: #0000ff\">Grouping</span>(语文)=1 </pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">and</span> <span style=\"color: #0000ff\">Grouping</span>(数学)=1</pre>\n<!--CRLF-->\n\n    <pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">and</span> <span style=\"color: #0000ff\">Grouping</span>(英语)=1</pre>\n<!--CRLF--></div>\n</div>\n\n<p>&#160;</p>\n\n<p>原文地址:<a href=\"http://www.cnblogs.com/jelea/archive/2010/06/29/1766930.html\">http://www.cnblogs.com/jelea/archive/2010/06/29/1766930.html</a></p>','2011-04-12 04:53:32','2011-04-12 04:53:32',NULL,NULL,'publish',NULL,'Sql纵向表转为横向表，并分组统计。','/post/2012/7/14/1344938593259.html',1,0),(254,0,'open','<blockquote>   <p>我的博客貌似好久没有更新了，一直都是这种无聊到蛋疼的生活，我也不知道要去写什么。</p>    <p>我喜欢折腾，不上班的时候总是蜗在家里面写代码，一直都想写个blog程序，这个程序已经写了有一年了吧，一直都没写完，写过N个 .NET版的，N个Java版的，甚至还写过WinForm版的，都是因为中途放弃了，才没写下来。其实有好几个版本，博客的基本功能都已经完成了，但是还是觉得不完美，然后放弃了。</p>    <p>我现在正在写一个Java版本的，大概的框架已经完成了吧，这次决定了，不过放弃了，管他怎么样呢，先写出来，不完美就留到以后慢慢升级。我是一边学习一边写博客程序的。以前只会用Struts1然后在项目里面使用struts1，最后会struts2了，觉得struts2比struts2配置方便多了，然后就把以前的程序扔了，又使用struts2搭了一个程序。之后有会了Lucene，Freemarker..&#160; </p>    <p>写到现在我都不明白我到底要写什么，想表达什么， 文章的题目还没想好。。。。。。</p>    <p>无聊的日子呀。。。</p></blockquote>','2011-04-02 04:54:56','2011-04-02 04:54:56',NULL,NULL,'publish',NULL,'取什么标题好呢？','/post/2012/7/14/1344938593326.html',1,0),(255,0,'open','<blockquote>   <p> 第零步，确定系统是刚刚安装好的，用 Administrator 登录。</p>    <p> 第一步，复制 ProgramData 目录，假设要从 C 盘移动到 D 盘：</p>    <p>xcopy C:\\ProgramData D:\\ProgramData\\ /E /H /K /X /Y /B /C</p>    <p> 第二步，修改注册表：</p>    <p>[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList] 下的 ProgramData 数据原为 %SystemDrive%\\ProgramData，改为 D:\\ProgramData。</p>    <p>[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders] 下的 &quot;Common Administrative Tools&quot;、&quot;Common AppData&quot;、&quot;Common Programs&quot;、&quot;Common Startup&quot;、&quot;OEM Links&quot;、&quot;Common Templates&quot; 等值的数据也相应地改改。如下：</p>    <p>Windows Registry Editor Version 5.00</p>    <p>[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders]     <br />&quot;Common Start Menu&quot;=&quot;D:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu&quot;      <br />&quot;Common Programs&quot;=&quot;D:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs&quot;      <br />&quot;Common Administrative Tools&quot;=&quot;D:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Administrative Tools&quot;      <br />&quot;Common Startup&quot;=&quot;D:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup&quot;      <br />&quot;OEM Links&quot;=&quot;D:\\\\ProgramData\\\\OEM Links&quot;      <br />&quot;Common Templates&quot;=&quot;D:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Templates&quot;      <br />&quot;Common AppData&quot;=&quot;D:\\\\ProgramData&quot;</p>    <p> 第三步，重启，注销的话需要多加 net stop iphlpsvc 和 net stop BITS。</p>    <p> 第四步，删除 C:\\ProgramData 目录，其中有两个无法直接删除的文件要先取得所有权，添加改写权限后才可以删除。</p>    <p> 第五步，创建 Junction 文件夹映射，把 C:\\ProgramData 指向 D:\\ProgramData，这是为了防止一些硬编码的程序不由分说地往 &quot;C:\\ProgramData&quot; 里写东西。</p>    <p>mklink /J C:\\ProgramData D:\\ProgramData</p></blockquote>','2011-03-30 04:05:12','2011-03-30 04:05:12',NULL,NULL,'publish',NULL,'把 C:\\ProgramData 目录移动到非系统盘','/post/2012/7/14/1344938593378.html',1,0),(256,0,'open','<p>开源一只跟微软没什么关系的，刚在网上看到了微软的一个开源的程序OXite。于是就在网上搜索了一下。</p>  <blockquote>   <p>Oxite平台使用微软公共许可(Microsoft Public License)授权方式，这是微软经过开放源代码促进会(OIS)认证的开源许可之一。     <br />微软称，Oxite是一种具有可拓展性的、标准兼容的内容管理系统，旨在支持博客或更大型的网 站，能支持广播、引用通告、匿名或验证评论、个人全球统一标识(Gravatar)头像及在任何页面级别输出RSS Feed等功能。用户可在某一站点上创建和编辑一整套页面，并可在页面中定制HTML代码，而且还可在单个站点上创建多个博客。      <br />微软称，开发Oxite平台的最初目的就是向开发者展示ASP.Net MVC的功能。      <br />微软使用Oxite创建了Mix Online网站，并向开发者提供了该站点的源代码以供学习。Mix Online是一个网络社区，其中心内容是微软的Mix网络开发者会议。      <br />微软Oxite项目负责人埃里克·波特尔(Erik Porter)称，Oxite并非现有的、已经确立的博客系统的直接竞争者，也无意挑战微软自身的SharePoint工具，后者也带有内容管理系统的功能。他表示，Oxite平台目前的对象仅为开发者，但最终可能适用于全体公众。      <br />埃里克·波特尔(Erik Porter)在一个Oxite论坛上写道：“我们对Oxite平台没有任何其他计划，只是希望为开发者提供一个能运行任何站点的范本。也就是说，到目前为止它只是一个社区项目，但如果社区决定要把它带往其他方向，我们也不会加以阻止。”</p>    <p><strong>所需环境</strong> </p>    <p>1. Visual Studio 2008 SP1， </p>    <p>2. ASP.Net MVC 1.0 </p>    <p>3. xunit-1.5 </p>    <p>4. AntiXssLibraryV1.5Installer.msi </p>    <p>5. Enterprise Library 4.1 - October 2008.msi </p>    <p>6. Microsoft SQL Server 2005 </p>    <p>7. BlogML 2.zip </p>    <p>&#160;</p>    <p><strong>项目结构</strong><strong></strong> </p>    <p>Oxite解决方案由5个项目组成： </p>    <p>1. Oxite； （核心基础项目） </p>    <p>2. Oxite.LinqToSqlDataProvider；（数据基础项目依赖于Oxite） </p>    <p>3. Oxite.Mvc；（相当于MVC中的C层，Controllers层的作用，依赖于Oxite） </p>    <p>4. Oxite.Mvc.Tests；（测试层） </p>    <p><strong>5. </strong>OxiteSite；（显示层）</p> </blockquote>  <p>&#160;</p>  <p>&#160;</p>  <p>这个貌似写的挺好的，于是将源码下载先来，研究中。。。。说不定过一点时间我的博客系统就换成这个了。 o(∩_∩)o </p>','2011-03-29 05:01:07','2011-03-29 05:06:34',NULL,NULL,'publish',NULL,'微软也玩开源?','/post/2012/7/14/1344938593434.html',1,0),(257,0,'open','<p>compass.cfg.xml</p>  <p>====================================================================</p>  <p>&lt;compass-core-config xmlns=&quot;http://www.compass-project.org/schema/core-config&quot;   <br />&#160;&#160;&#160; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;    <br />&#160;&#160;&#160; xsi:schemaLocation=&quot;http://www.compass-project.org/schema/core-config http://www.compass-project.org/schema/compass-core-config-2.2.xsd&quot;&gt;    <br />&#160;&#160;&#160; &lt;compass name=&quot;default&quot;&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;connection&gt;</p>  <p>配置索引存储的路径   <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;file path=&quot;target/test-index&quot; /&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;/connection&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;transaction&#160; &gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;processors&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;readCommitted transLog=&quot;ram://&quot; /&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;/processors&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;/transaction&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;cache&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;firstLevel type=&quot;org.compass.core.cache.first.NullFirstLevelCache&quot; /&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;/cache&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;searchEngine useCompoundFile=&quot;true&quot;&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;optimizer schedule=&quot;false&quot; /&gt;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;/searchEngine&gt;    <br />&#160;&#160;&#160; &lt;/compass&gt;    <br />&lt;/compass-core-config&gt;</p>  <p>=====================================================================</p>  <p>package org.jixiuf.compass.pojo;   <br />import java.util.Date;    <br />import org.compass.annotations.Index;    <br />import org.compass.annotations.Searchable;    <br />import org.compass.annotations.SearchableId;    <br />import org.compass.annotations.SearchableProperty;    <br />import org.compass.annotations.SearchableReference;    <br />import org.compass.annotations.Store;    <br />@Searchable    <br />public class Author {    <br />&#160;&#160;&#160; String id;    <br />&#160;&#160;&#160; String name;    <br />&#160;&#160;&#160; Book book;    <br />&#160;&#160;&#160; Date date;    <br />&#160;&#160;&#160; @SearchableId(store=Store.YES,index=Index.UN_TOKENIZED,name=&quot;id&quot;)    <br />&#160;&#160;&#160; public String getId() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return id;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setId(String id) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.id = id;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableProperty(index = Index.TOKENIZED, store = Store.YES)    <br />&#160;&#160;&#160; public String getName() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return name;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setName(String name) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.name = name;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableReference    <br />&#160;&#160;&#160; public Book getBook() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return book;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setBook(Book book) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.book = book;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableProperty(store=Store.YES,index=Index.NOT_ANALYZED,format=&quot;yyyy-MM-dd HH:mm:ss&quot;)    <br />&#160;&#160;&#160; public Date getDate() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return date;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setDate(Date date) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.date = date;    <br />&#160;&#160;&#160; }    <br />}</p>  <p>package org.jixiuf.compass.pojo;   <br />import java.util.Date;    <br />import java.util.List;    <br />import org.compass.annotations.Index;    <br />import org.compass.annotations.Searchable;    <br />import org.compass.annotations.SearchableId;    <br />import org.compass.annotations.SearchableProperty;    <br />import org.compass.annotations.SearchableReference;    <br />import org.compass.annotations.Store;    <br />@Searchable    <br />public class Author2 {    <br />&#160;&#160;&#160; String id;    <br />&#160;&#160;&#160; String name;    <br /> List&lt;Book&gt; books;    <br />&#160;&#160;&#160; Date date;    <br />&#160;&#160;&#160; @SearchableId(store=Store.YES,index=Index.UN_TOKENIZED,name=&quot;id&quot;)    <br />&#160;&#160;&#160; public String getId() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return id;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setId(String id) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.id = id;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableProperty(index = Index.TOKENIZED, store = Store.YES)    <br />&#160;&#160;&#160; public String getName() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return name;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setName(String name) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.name = name;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableReference    <br />&#160;&#160;&#160; public List&lt;Book&gt; getBooks() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return books;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setBooks(List&lt;Book&gt; books) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.books = books;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableProperty(store=Store.YES,index=Index.NOT_ANALYZED,format=&quot;yyyy-MM-dd HH:mm:ss&quot;)    <br />&#160;&#160;&#160; public Date getDate() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return date;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setDate(Date date) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.date = date;    <br />&#160;&#160;&#160; }    <br />}</p>  <p>package org.jixiuf.compass.pojo;   <br />import org.compass.annotations.Index;    <br />import org.compass.annotations.Searchable;    <br />import org.compass.annotations.SearchableId;    <br />import org.compass.annotations.SearchableProperty;    <br />import org.compass.annotations.SearchableReference;    <br />import org.compass.annotations.Store;    <br />@Searchable    <br />public class Book {    <br />&#160;&#160;&#160; String id;    <br />&#160;&#160;&#160; String name;    <br />&#160;&#160;&#160; Author2 author;    <br />&#160;&#160;&#160; @SearchableReference    <br />&#160;&#160;&#160; public Author2 getAuthor() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return author;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setAuthor(Author2 author) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.author = author;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableId(name=&quot;id&quot;,store=Store.YES,index=Index.UN_TOKENIZED)    <br />&#160;&#160;&#160; public String getId() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return id;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setId(String id) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.id = id;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @SearchableProperty(index = Index.TOKENIZED, store = Store.YES)    <br />&#160;&#160;&#160; public String getName() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return name;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public void setName(String name) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.name = name;    <br />&#160;&#160;&#160; }    <br />}</p>  <p>===============================================================</p>  <p>package org.jixiuf.compass;   <br />import java.text.SimpleDateFormat;    <br />import java.util.ArrayList;    <br />import java.util.Date;    <br />import java.util.List;    <br />import org.compass.core.CompassException;    <br />import org.compass.core.CompassHighlighter;    <br />import org.compass.core.CompassHits;    <br />import org.compass.core.CompassQuery;    <br />import org.compass.core.CompassQueryBuilder;    <br />import org.compass.core.CompassSession;    <br />import org.compass.core.CompassTransaction;    <br />import org.compass.core.CompassQueryBuilder.CompassBooleanQueryBuilder;    <br />import org.jixiuf.compass.pojo.Author;    <br />import org.jixiuf.compass.pojo.Author2;    <br />import org.jixiuf.compass.pojo.Book;    <br />import org.jixiuf.compass.util.CompassUtil;    <br />import org.junit.Test;    <br />public class Test1 {    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testSave() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassTransaction tac = session.beginTransaction();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author author = new Author();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book book = new Book();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setName(&quot;bookName&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setName(&quot;中文作者名纪秀峰&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setBook(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setDate(new Date());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(author);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; tac.commit();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (CompassException ce) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;error==============&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.rollback();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testSaveList() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassTransaction tac = session.beginTransaction();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author2 author = new Author2();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setName(&quot;中文作者名纪秀峰&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; List&lt;Book&gt; books = new ArrayList&lt;Book&gt;();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book book = new Book();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setName(&quot;bookName&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setAuthor(author);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; books.add(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book= new Book();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setId(&quot;wq&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setName(&quot;mameaaaaaaa&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; books.add(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setBooks(books);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setDate(new Date());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(author);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; tac.commit();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (CompassException ce) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;error==============&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.rollback();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testCascade() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassTransaction tac = session.beginTransaction();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; try {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author2 author = new Author2();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setName(&quot;中文作者名纪秀峰&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book book = new Book();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setName(&quot;bookName&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; book.setAuthor(author);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; author.setDate(new Date());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(book);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.save(author);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; tac.commit();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (CompassException ce) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;error==============&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.rollback();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testFind() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery queryAuthor = session.queryBuilder().alias(&quot;Book&quot;);    <br />&#160;&#160;&#160;&#160; CompassQuery id = session.queryBuilder().term(&quot;id&quot;, &quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = session.queryBuilder().bool().addMust(queryAuthor).addShould(id)    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .toQuery().hits();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book a =&#160; (Book) hits.data(0);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.name:&quot; + a.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.id:&quot; + a.getId());    <br />&#160;&#160;&#160; //&#160;&#160;&#160; System.out.println(a.getBook().getId());    <br />System.out.println(a.getAuthor().getId());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testFindBookByauthor() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery queryAuthor = session.queryBuilder().alias(&quot;Book&quot;);    <br />&#160;&#160;&#160;&#160; CompassQuery id = session.queryBuilder().term(&quot;book.author.id&quot;, &quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = session.queryBuilder().bool().addMust(queryAuthor).addShould(id)    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .toQuery().hits();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book a =&#160; (Book) hits.data(0);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.name:&quot; + a.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.id:&quot; + a.getId());    <br />&#160;&#160;&#160; //&#160;&#160;&#160; System.out.println(a.getBook().getId());    <br />System.out.println(a.getAuthor().getId());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testFindList() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery queryAuthor = session.queryBuilder().alias(&quot;Author2&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery id = session.queryBuilder().term(&quot;id&quot;, &quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = session.queryBuilder().bool().addMust(queryAuthor).addShould(id)    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .toQuery().hits();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author2 a =&#160; (Author2) hits.data(0);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.name:&quot; + a.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.id:&quot; + a.getId());    <br />List&lt;Book&gt; books = a.getBooks();    <br />System.out.println(books.size());    <br />for(Book b :books) {    <br />&#160;&#160;&#160; System.out.println(b.getId());    <br />}    <br />&#160;&#160;&#160; //&#160;&#160;&#160; System.out.println(a.getBook().getId());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testFindDate() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery queryAuthor = session.queryBuilder().alias(&quot;Author&quot;);    <br />&#160;&#160;&#160;&#160; CompassQuery id = session.queryBuilder().term(&quot;date&quot;, &quot;2010-04-23 23:35:22&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = session.queryBuilder().bool().addMust(queryAuthor).addMust(id)    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .toQuery().hits();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author a =&#160; (Author) hits.data(0);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(a.getDate()));    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.name:&quot; + a.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;author.id:&quot; + a.getId());    <br />&#160;&#160;&#160; //&#160;&#160;&#160; System.out.println(a.getBook().getId());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testDelete() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book a = new Book();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; a.setId(&quot;你好&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.delete(a);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testReIndex() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; testDelete();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; testSave();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; // 高亮显示    <br />&#160;&#160;&#160; public void testHighLight() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = session.find(&quot;纪秀峰&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author a = (Author) hits.data(0);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHighlighter hll = hits.highlighter(0);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // hll.setHighlighter(&quot;jixiuf&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; String ht = hll.fragment(&quot;a&quot;, &quot;纪safsdfa&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(ht);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(hll.fragment(&quot;name&quot;));    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; // 相对于 testQueryUs 过滤了Book&#160; ,只搜book 类型    <br />&#160;&#160;&#160; public void testQueryBookByUseBoolean() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQueryBuilder qb = session.queryBuilder();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassBooleanQueryBuilder boo = qb.bool();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery bookQuery = qb.alias(Book.class.getSimpleName());// 只查alias    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQuery us = qb.queryString(&quot;我们&quot;).toQuery();// 只查有&quot;我们&quot;关键字的    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = boo.addMust(bookQuery).addMust(us).toQuery().hits();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; for (int i = 0; i &lt; hits.length(); i++) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book b = (Book) hits.data(i);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;book.id=&quot; + b.getId() + &quot;&#160;&#160;&#160;&#160; book.name&quot;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; + b.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; @Test    <br />&#160;&#160;&#160; public void testQueryUs() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassSession session = CompassUtil.getCompassSession();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassQueryBuilder qb = session.queryBuilder();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassHits hits = qb.queryString(&quot;我们&quot;).toQuery().hits();// 只查有&quot;我们&quot;关键字的    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; for (int i = 0; i &lt; hits.length(); i++) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Object o = hits.data(i);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (o instanceof Book) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;= a book ==============&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Book b = (Book) o;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;book.id=&quot; + b.getId() + &quot;&#160;&#160;&#160;&#160; book.name&quot;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; + b.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; } else if (o instanceof Author) {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Author a = (Author) o;    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;=a author==============&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(a.getName());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(a.getId());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(a.getBook());    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; session.commit();    <br />&#160;&#160;&#160; }    <br />}</p>  <p>===============</p>  <p>package org.jixiuf.compass.util;   <br />import org.compass.annotations.config.CompassAnnotationsConfiguration;    <br />import org.compass.core.Compass;    <br />import org.compass.core.CompassSession;    <br />import org.compass.core.config.CompassConfiguration;    <br />public class CompassUtil {    <br />&#160;&#160;&#160; public static Compass getCompass() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // CompassConfiguration conf = new    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // CompassAnnotationsConfiguration().addScan(&quot;org/jixiuf/compass/pojo&quot;).configure();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; CompassConfiguration conf = new CompassAnnotationsConfiguration()    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .addScan(&quot;org/jixiuf/compass/pojo&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // CompassConfiguration conf= new CompassAnnotationsConfiguration()    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // 注意这里的配置可以从compass reference 中查看到，其中的default 字为默认的highlighter    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // ,也可以是你自定认一个    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // compass.engine.highlighter.jixiufffffffffffffff.formatter.simple.pre    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; // CompassHighlighterInstance.setHighlighter(&quot;jixiufffffffffffffff&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; conf.setSetting(    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;compass.engine.highlighter.default.formatter.simple.pre&quot;,    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;&lt;span&#160;&#160;&#160; style=\' color:red\'&gt;&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; conf.setSetting(    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;compass.engine.highlighter.default.formatter.simple.post&quot;,    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;&lt;/span&gt;&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; conf.setSetting(    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;compass.engine.highlighter.jixiuf.formatter.simple.pre&quot;,    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;&lt;span name=\'jixiuf\' ,style=\' color:red\'&gt;&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; conf.setSetting(    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;compass.engine.highlighter.jixiuf.formatter.simple.post&quot;,    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;&lt;/span&gt;&quot;);    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; conf.configure();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Compass compass = conf.buildCompass();    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return compass;    <br />&#160;&#160;&#160; }    <br />&#160;&#160;&#160; public static CompassSession getCompassSession() {    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; return getCompass().openSession();    <br />&#160;&#160;&#160; }    <br />}</p>','2011-03-28 04:06:40','2011-03-28 04:06:40',NULL,NULL,'publish',NULL,'Lucene compass','/post/2012/7/14/1344938593493.html',1,0),(258,0,'open','<p>TinyMCE Compressor将所有TinyMCE使用的JavaScript压缩成一个(gzip格式)流文件。这使数据量减少了75%，请求数量也同样减少。如果你使用压缩器TinyMCE初始化需要的时间会明显减少。</p>  <p>安装GZip compressor的步骤：</p>  <p>1.拷贝tiny_mce_gzip.js 和 tiny_mce_gzip.jsp到tinymce目录，也就是包含tiny_nce.js文件的目录。</p>  <p>2.移除当前的脚本标签：&lt;script type=”text/javascript” src=”tinymce/jscripts/tiny_mce/tiny_mce.js”&gt;&lt;/script&gt; 。</p>  <p>3.添加新的 GZip 脚本： &lt;script type=”text/javascript” src=”tinymce/jscripts/tiny_mce/tiny_mce_gzip.js”&gt;&lt;/script&gt; 。</p>  <p>4.添加新的GZip初始化调用，它告诉压缩器包含哪些输出。这个包括页面所用所有主题和插件等。</p>  <p>例子：</p>  <p>&lt;script type=”text/javascript” src=”tinymce/jscripts/tiny_mce/tiny_mce_gzip.js”&gt;&lt;/script&gt;   <br />&lt;script type=”text/javascript”&gt;    <br />tinyMCE_GZ.init({    <br />plugins : ‘style,layer,table,save,advhr,advimage,advlink,emotions,iespell,insertdatetime,preview,media,searchreplace,print,contextmenu’,    <br />themes : ‘simple,advanced’,    <br />languages : ‘en’,    <br />disk_cache : true,    <br />debug : false    <br />});    <br />&lt;/script&gt;    <br />&lt;script type=”text/javascript”&gt;    <br />tinyMCE.init({    <br />.. your normal init ..    <br />});    <br />&lt;/script&gt;</p>  <p>原文地址：&#160; <a href=\"http://wiki.moxiecode.com/index.php/TinyMCE:Compressor/JSP\">http://wiki.moxiecode.com/index.php/TinyMCE:Compressor/JSP</a></p>','2011-03-23 01:51:22','2011-03-23 01:51:22',NULL,NULL,'publish',NULL,'TinyMCE Compressor JSP','/post/2012/7/14/1344938593638.html',1,0),(259,0,'open','<p>适配器:基于现有类所提供的服务，向客户提供接口，以满足客户的期望</p>  <p><strong>类适配器</strong>    <br />客户的开发人员定义了一个接口，期望用这个接口来完成整数的求和操作，接口定义如下：</p>  <pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">interface</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/rmi/server/Operation.html\"><span style=\"color: #003399; font-weight: bold\">Operation</span></a><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> add<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.108 seconds at 630 B/s</div></pre>\n\n<p></p>\n\n<p>开发人员在了解这个接口的定义后，发现一个第三方类，里面有一个方法能实现他们期望的功能，其代码如下：</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> OtherOperation<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> otherAdd<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> a + b<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.095 seconds at 1.12 KB/s</div></pre>\n\n<p></p>\n\n<p>以上第三方类<strong>OtherOperation</strong>的方法<strong>public int otherAdd(int a,int b)</strong>所提供的功能，完全能符合客户的期望，所以只需要想办法把<strong>OtherOperation</strong>的<strong>otherAdd(int a,int b)</strong>和客户的<strong>Operation</strong>接口联系起来，让这个第三方类来为客户提供他们期望的服务就行了，这样就避免了开发人员再度去研究类似<strong>OtherOperation</strong>的<strong>otherAdd(int a,int b)</strong>方法的实现（利用已有的轮子，避免重复发明），这方法之一，就是用适配器模式：</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> AdapterOperation <span style=\"color: #000000; font-weight: bold\">extends</span> OtherOperation <span style=\"color: #000000; font-weight: bold\">implements</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/rmi/server/Operation.html\"><span style=\"color: #003399; font-weight: bold\">Operation</span></a><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> add<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> otherAdd<span style=\"color: #009900\">(</span>a,b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.114 seconds at 1.36 KB/s</div></pre>\n\n<p></p>\n\n<p>以上就是适配器的实现方法之一，类适配器，在以上实现中存在着三中角色分别是：\n  <br />1：适配目标角色：Operation。\n\n  <br />2：适配类（原）角色：OtherOperation。\n\n  <br />3：适配器角色：AdapterOperation。\n\n  <br />其中适配器角色是适配器模式的核心。\n\n  <br />适配器的主要工作就是通过封装现有的功能，使他满足需要的接口。</p>\n\n<p>&#160;</p>\n\n<p><strong>对象适配器</strong>\n\n  <br />我们再来看看另一种情况：\n\n  <br />假如客户接口期望的功能不止一个，而是多个：</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">interface</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/rmi/server/Operation.html\"><span style=\"color: #003399; font-weight: bold\">Operation</span></a><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> add<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> minus<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> multiplied<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.107 seconds at 1.36 KB/s</div></pre>\n\n<p></p>\n\n<p>而能提供这些实现的原可能不止一个：</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> OtherAdd<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> otherAdd<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> a + b<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> OtherMinus<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> minus<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> a - b<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> OtherMultiplied<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> multiplied<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> a <span style=\"color: #339933\">*</span> b<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.123 seconds at 2.54 KB/s</div></pre>\n\n<p></p>\n\n<p>由于java是不能实现多继承的，所以我们不能通过构建一个适配器，让他来继承所有原以完成我们的期望，这时候怎么办呢?只能用适配器的另一种实现--对象适配器：</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> AdapterOperation <span style=\"color: #000000; font-weight: bold\">implements</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/rmi/server/Operation.html\"><span style=\"color: #003399; font-weight: bold\">Operation</span></a><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">private</span> OtherAdd add<span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">private</span> OtherMinus minus<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">private</span> OtherMultiplied multiplied<span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> setAdd<span style=\"color: #009900\">(</span>OtherAdd add<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">            <span style=\"color: #000000; font-weight: bold\">this</span>.<span style=\"color: #006633\">add</span> = add<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> setMinus<span style=\"color: #009900\">(</span>OtherMinus minus<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">            <span style=\"color: #000000; font-weight: bold\">this</span>.<span style=\"color: #006633\">minus</span> = minus<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> setMultiplied<span style=\"color: #009900\">(</span>OtherMultiplied multiplied<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">            <span style=\"color: #000000; font-weight: bold\">this</span>.<span style=\"color: #006633\">multiplied</span> = multiplied<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"font-style: italic; color: #666666\">//适配加法运算</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> add<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> add.<span style=\"color: #006633\">otherAdd</span><span style=\"color: #009900\">(</span>a,b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"font-style: italic; color: #666666\">//适配减法运算</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> minus<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">          <span style=\"color: #000000; font-weight: bold\">return</span> minus.<span style=\"color: #006633\">minus</span><span style=\"color: #009900\">(</span>a,b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"font-style: italic; color: #666666\">//适配乘法运算</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> multiplied<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">         <span style=\"color: #000000; font-weight: bold\">return</span> multiplied.<span style=\"color: #006633\">multiplied</span><span style=\"color: #009900\">(</span>a,b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.189 seconds at 4.14 KB/s</div></pre>\n\n<p>上面代码很明显，适配器并不是通过继承来获取适配类（原）的功能的，而是通过适配类的对象来获取的，这就解决了java不能多继承所带来的不便了。这也是java提倡的编程思想之一，即尽量使用聚合不要使用继承。\n  <br />还有一种情况是需要使用对象适配器的。我们来看看，\n\n  <br />单我们的客户提供的需求并不是一个明确的接口，而是一个类，并没有定义期望的方法，如下</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> A<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">   <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> add<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">return</span> a + b<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">   <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.092 seconds at 873 B/s</div></pre>\n\n<p>现在客户要一个新类B，要求能在保留类A功能的情况下增加一个运算减法的功能，并要求B能随时替换掉A但不能对已有系统造成影响。这样我们只能新建一个类B，并让B继承A。</p>\n\n<p>&#160;</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> B <span style=\"color: #000000; font-weight: bold\">extends</span> A<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    b<span style=\"color: #009900\">(</span><span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">super</span><span style=\"color: #009900\">(</span><span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> minus<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"font-style: italic; color: #666666\">//待实现的减法运算函数..</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.101 seconds at 1.50 KB/s</div></pre>\n\n<p>这时候，我们发现类C已经提供了实现减法的函数，</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> C<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> minus<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> a - b<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.093 seconds at 956 B/s</div></pre>\n\n<p></p>\n\n<p>为了避免重复去设计该函数，我们决定引入C类，通过适配C类来达到我们的期望，但问题是A和C都是一个具体类，我们无法让B同时继承这个两个类，而B继承A又是必须的，所以我们只能考虑把C给内聚到B内部，对象适配器又得派上用场了。</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">class</span> B <span style=\"color: #000000; font-weight: bold\">extends</span> A<span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #000000; font-weight: bold\">private</span> C c<span style=\"color: #339933\">;</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    B<span style=\"color: #009900\">(</span><span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">      <span style=\"color: #000000; font-weight: bold\">super</span><span style=\"color: #009900\">(</span><span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> setMinus<span style=\"color: #009900\">(</span>C c<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">         <span style=\"color: #000000; font-weight: bold\">this</span>.<span style=\"color: #006633\">c</span>= c<span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">int</span> minus<span style=\"color: #009900\">(</span><span style=\"color: #006600; font-weight: bold\">int</span> a,<span style=\"color: #006600; font-weight: bold\">int</span> b<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">           <span style=\"color: #000000; font-weight: bold\">return</span> c.<span style=\"color: #006633\">minus</span><span style=\"color: #009900\">(</span>a,b<span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">    <span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.112 seconds at 1.96 KB/s</div></pre>\n\n<p></p>\n\n<p>这样，在需要A类的地方都能用B类来代替，同时又保证了新的功能的引入。</p>\n\n<p>&#160;</p>\n\n<p>&#160;</p>\n\n<p><strong>更灵活的实现--隐藏目标接口的抽象适配器</strong>\n\n  <br />做java 桌面应用的都知道WindowListener接口，</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">interface</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowListener.html\"><span style=\"color: #003399; font-weight: bold\">WindowListener</span></a> <span style=\"color: #000000; font-weight: bold\">extends</span> <a href=\"http://www.google.com/search?sitesearch=java.sun.com&amp;q=allinurl%3Aj2se%2F1+5+0%2Fdocs%2Fapi+EventListener\"><span style=\"color: #003399; font-weight: bold\">EventListener</span></a><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowActivated<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">);</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowClosed<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span>;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowClosing<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span>;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowDeactivated<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span>;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowDeiconified<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span>;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowIconified<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span>;</div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowOpened<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span>;</div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.165 seconds at 2.32 KB/s</div></pre>\n\n<p></p>\n\n<p>要实现这个接口，我们就必须实现它所定义的所有方法，但是实际上，我们很少需要同时用到所有的方法，我们要的只是其中的两三个。为了不使我们实现多余的方法，\n  <br />jdk WindowListener提供了一个WindowListener的默认实现类WindowAdapter类，这是一个抽象类，</p>\n\n<pre style=\"font-family: consolas,; font-size: 14px\" class=\"java5\" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\"><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Java(TM) 2 Platform Standard Edition 5.0</div><ol><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #000000; font-weight: bold\">abstract</span> <span style=\"color: #000000; font-weight: bold\">class</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowAdapter.html\"><span style=\"color: #003399; font-weight: bold\">WindowAdapter</span></a> <span style=\"color: #000000; font-weight: bold\">implements</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowListener.html\"><span style=\"color: #003399; font-weight: bold\">WindowListener</span></a><span style=\"color: #009900\">{</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowActivated<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowClosed<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowClosing<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowDeactivated<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowDeiconified<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowIconified<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"> <span style=\"color: #000000; font-weight: bold\">public</span> <span style=\"color: #006600; font-weight: bold\">void</span> windowOpened<span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/event/WindowEvent.html\"><span style=\"color: #003399; font-weight: bold\">WindowEvent</span></a> e<span style=\"color: #009900\">)</span><span style=\"color: #009900\">{</span><span style=\"color: #009900\">}</span></div></li><li><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div></li><li style=\"background-color: #f4f4f4\"><div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; font: 1em/1.2em monospace; background: none transparent scroll repeat 0% 0%; vertical-align: top; padding-top: 0px\">&#160;</div></li></ol><div style=\"text-align: center; background-color: #4bacc6; color: #ffffff; font-weight: bold\">Parsed in 0.175 seconds at 2.19 KB/s</div></pre>','2011-03-22 07:09:17','2011-03-22 07:09:17',NULL,NULL,'publish',NULL,'适配器模式（adapter）','/post/2012/7/14/1344938593690.html',1,0),(260,0,'open','<p>从追MM谈Java的23种设计模式</p>  <p> 1、FACTORY—追MM少不了请吃饭了，麦当劳的鸡翅和肯德基的鸡翅都是MM爱吃的东西，虽然口味有所不同，但不管你带MM去麦当劳或肯 德基，只管向服务员说“来四个鸡翅”就行了。麦当劳和肯德基就是生产鸡翅的Factory.</p>  <p> 工厂模式：客户类和工厂类分开。消费者任何时候需要某种产品，只需向工厂请求即可。消费者无须修改就可以接纳新产品。缺点 是当产品修改时，工厂类也要做相应的修改。如：如何创建及如何向客户端提供。</p>  <p> 程序代码</p>  <p> 以下是引用片段：</p>  <p>以下是引用片段：   <br />public class Factory{    <br /> public String Boy = &quot;boy&quot; ;    <br /> public String Girl = &quot;girl&quot; ;    <br /> public People getPeople (String people){    <br /> if (people.equals(&quot;boy&quot;)){    <br /> return new Boy();    <br /> }else if(people.equals(&quot;girl&quot;)){    <br /> return new Girl();    <br /> }    <br /> }    <br /> }</p>  <p> 2、BUILDER—MM最爱听的就是“我爱你”这句话了，见到不同地方的MM,要能够用她们的方言跟她说这句话哦，我有一个多种语言翻译 机，上面每种语言都有一个按键，见到MM我只要按对应的键，它就能够用相应的语言说出“我爱你”这句话了，国外的MM也可以轻松搞掂，这 就是我的“我爱你”builder。(这一定比美军在伊拉克用的翻译机好卖)</p>  <p> 建造模式：将产品的内部表象和产品的生成过程分割开来，从而使一个建造过程生成具有不同的内部表象的产品对象。建造模式使得 产品内部表象可以独立的变化，客户不必知道产品内部组成的细节。建造模式可以强制实行一种分步骤进行的建造过程。</p>  <p> 3、FACTORY METHOD—请MM去麦当劳吃汉堡，不同的MM有不同的口味，要每个都记住是一件烦人的事情，我一般采用Factory Method模 式，带着MM到服务员那儿，说“要一个汉堡”，具体要什么样的汉堡呢，让MM直接跟服务员说就行了。</p>  <p> 工厂方法模式：核心工厂类不再负责所有产品的创建，而是将具体创建的工作交给子类去做，成为一个抽象工厂角色，仅负责给出 具体工厂类必须实现的接口，而不接触哪一个产品类应当被实例化这种细节。</p>  <p> 4、PROTOTYPE—跟MM用QQ聊天，一定要说些深情的话语了，我搜集了好多肉麻的情话，需要时只要copy出来放到QQ里面就行了，这就是 我的情话prototype了。(100块钱一份，你要不要)</p>  <p> 原始模型模式：通过给出一个原型对象来指明所要创建的对象的类型，然后用复制这个原型对象的方法创建出更多同类型的对象。 原始模型模式允许动态的增加或减少产品类，产品类不需要非得有任何事先确定的等级结构，原始模型模式适用于任何的等级结构。缺点是每 一个类都必须配备一个克隆方法。</p>  <p> 5、SINGLETON—俺有6个漂亮的老婆，她们的老公都是我，我就是我们家里的老公Sigleton，她们只要说道“老公”，都是指的同一个 人，那就是我(刚才做了个梦啦，哪有这么好的事)</p>  <p> 单例模式：单例模式确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例单例模式。单例模式只应在有真正的 “单一实例”的需求时才可使用。</p>  <p> 以下是引用片段：</p>  <p>以下是引用片段：   <br /> public class SingLeton{    <br /> private static SingLeton instance = new SingLeton();    <br /> public static SingLeton getInstance(){    <br /> return instance;    <br /> }    <br /> }</p>  <p> 6、ADAPTER—在朋友聚会上碰到了一个美女Sarah，从香港来的，可我不会说粤语，她不会说普通话，只好求助于我的朋友kent了，他 作为我和Sarah之间的Adapter，让我和Sarah可以相互交谈了(也不知道他会不会耍我)</p>  <p> 适配器(变压器)模式：把一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口原因不匹配而无法一起工作的两个类 能够一起工作。适配类可以根据参数返还一个合适的实例给客户端。</p>  <p> 7、BRIDGE—早上碰到MM，要说早上好，晚上碰到MM，要说晚上好;碰到MM穿了件新衣服，要说你的衣服好漂亮哦，碰到MM新做的发型， 要说你的头发好漂亮哦。不要问我“早上碰到MM新做了个发型怎么说”这种问题，自己用BRIDGE组合一下不就行了</p>  <p> 桥梁模式：将抽象化与实现化脱耦，使得二者可以独立的变化，也就是说将他们之间的强关联变成弱关联，也就是指在一个软件系统的 抽象化和实现化之间使用组合/聚合关系而不是继承关系，从而使两者可以独立的变化。</p>  <p> 8、COMPOSITE—Mary今天过生日。“我过生日，你要送我一件礼物。”“嗯，好吧，去商店，你自己挑。”“这件T恤挺漂亮，买，这 条裙子好看，买，这个包也不错，买。”“喂，买了三件了呀，我只答应送一件礼物的哦。”“什么呀，T恤加裙子加包包，正好配成一套呀， 小姐，麻烦你包起来。”“……”，MM都会用Composite模式了，你会了没有?</p>  <p> 合成模式：合成模式将对象组织到树结构中，可以用来描述整体与部分的关系。合成模式就是一个处理对象的树结构的模式。合成 模式把部分与整体的关系用树结构表示出来。合成模式使得客户端把一个个单独的成分对象和由他们复合而成的合成对象同等看待。</p>  <p> 9、DECORATOR—Mary过完轮到Sarly过生日，还是不要叫她自己挑了，不然这个月伙食费肯定玩完，拿出我去年在华山顶上照的照 片， 在背面写上“最好的的礼物，就是爱你的Fita”，再到街上礼品店买了个像框(卖礼品的MM也很漂亮哦)，再找隔壁搞美术设计的Mike设计了一 个漂亮的盒子装起来……，我们都是Decorator，最终都在修饰我这个人呀，怎么样，看懂了吗?</p>  <p> 装饰模式：装饰模式以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案，提供比继承更多的灵活性。动态给一个 对象增加功能，这些功能可以再动态的撤消。增加由一些基本功能的排列组合而产生的非常大量的功能。</p>  <p> 10、FAÇADE—我有一个专业的Nikon<a href=\"http://dc.yesky.com/\">相机</a>，我就喜欢自己手动调光圈、快门，这样照出来的照片才专业，但MM可不懂这些，教了半天也 不会。幸好相机有Façade设计模式，把相机调整到自动档，只要对准目标按快门就行了，一切由相机自动调整，这样MM也可以用这个相机给我 拍张照片了。</p>  <p> 门面模式：外部与一个子系统的通信必须通过一个统一的门面对象进行。门面模式提供一个高层次的接口，使得子系统更易于使用 。每一个子系统只有一个门面类，而且此门面类只有一个实例，也就是说它是一个单例模式。但整个系统可以有多个门面类。</p>  <p> 11、FLYWEIGHT—每天跟MM发短信，手指都累死了，最近买了个新手机，可以把一些常用的句子存在手机里，要用的时候，直接拿出来 ，在前面加上MM的名字就可以发送了，再不用一个字一个字敲了。共享的句子就是Flyweight，MM的名字就是提取出来的外部特征，根据上下文 情况使用。</p>  <p> 享元模式：FLYWEIGHT在拳击比赛中指最轻量级。享元模式以共享的方式高效的支持大量的细粒度对象。享元模式能做到共享的关 键是区分内蕴状态和外蕴状态。内蕴状态存储在享元内部，不会随环境的改变而有所不同。外蕴状态是随环境的改变而改变的。外蕴状态不能 影响内蕴状态，它们是相互独立的。将可以共享的状态和不可以共享的状态从常规类中区分开来，将不可以共享的状态从类里剔除出去。客户 端不可以直接创建被共享的对象，而应当使用一个工厂对象负责创建被共享的对象。享元模式大幅度的降低内存中对象的数量。</p>  <p> 12、PROXY—跟MM在网上聊天，一开头总是“hi,你好”,“你从哪儿来呀?”“你多大了?”“身高多少呀?”这些话，真烦人，写个程序 做为我的Proxy吧，凡是接收到这些话都设置好了自动的回答，接收到其他的话时再通知我回答，怎么样，酷吧。</p>  <p> 代理模式：代理模式给某一个对象提供一个代理对象，并由代理对象控制对源对象的引用。代理就是一个人或一个机构代表另一个 人或者一个机构采取行动。某些情况下，客户不想或者不能够直接引用一个对象，代理对象可以在客户和目标对象直接起到中介的作用。客户 端分辨不出代理主题对象与真实主题对象。代理模式可以并不知道真正的被代理对象，而仅仅持有一个被代理对象的接口，这时候代理对象不 能够创建被代理对象，被代理对象必须有系统的其他角色代为创建并传入。</p>  <p>以下是引用片段：   <br /> public interface FactoryProxy{    <br /> public People createBoy();    <br /> public People creteGirl();    <br /> }</p>  <p> 13、CHAIN OF RESPONSIBLEITY—晚上去上英语课，为了好开溜坐到了最后一排，哇，前面坐了好几个漂亮的MM哎，找张纸条，写上 “Hi,可以做我的女朋友吗?如果不愿意请向前传”，纸条就一个接一个的传上去了，糟糕，传到第一排的MM把纸条传给老师了，听说是个老处 女呀，快跑!</p>  <p> 责任链模式：在责任链模式中，很多对象由每一个对象对其下家的引用而接</p>  <p> 起来形成一条链。请求在这个链上传递，直到链上的某一个对象决定处理此请求。客户并不知道链上的哪一个对象最终处理这个请 求，系统可以在不影响客户端的情况下动态的重新组织链和分配责任。处理者有两个选择：承担责任或者把责任推给下家。一个请求可以最终 不被任何接收端对象所接受。</p>  <p> 14、COMMAND—俺有一个MM家里管得特别严，没法见面，只好借助于她弟弟在我们俩之间传送信息，她对我有什么指示，就写一张纸条 让她弟弟带给我。这不，她弟弟又传送过来一个COMMAND，为了感谢他，我请他吃了碗杂酱面，哪知道他说：“我同时给我姐姐三个男朋友送 COMMAND，就数你最小气，才请我吃面。”，</p>  <p> 命令模式：命令模式把一个请求或者操作封装到一个对象中。命令模式把发出命令的责任和执行命令的责任分割开，委派给不同的 对象。命令模式允许请求的一方和发送的一方独立开来，使得请求的一方不必知道接收请求的一方的接口，更不必知道请求是怎么被接收，以 及操作是否执行，何时被执行以及是怎么被执行的。系统支持命令的撤消。</p>  <p> 15、INTERPRETER—俺有一个《泡MM真经》，上面有各种泡MM的攻略，比如说去吃西餐的步骤、去看电影的方法等等，跟MM约会时，只 要做一个Interpreter，照着上面的脚本执行就可以了。</p>  <p> 解释器模式：给定一个语言后，解释器模式可以定义出其文法的一种表示，并同时提供一个解释器。客户端可以使用这个解释器来 解释这个语言中的句子。解释器模式将描述怎样在有了一个简单的文法后，使用模式设计解释这些语句。在解释器模式里面提到的语言是指任 何解释器对象能够解释的任何组合。在解释器模式中需要定义一个代表文法的命令类的等级结构，也就是一系列的组合规则。每一个命令对象 都有一个解释方法，代表对命令对象的解释。命令对象的等级结构中的对象的任何排列组合都是一个语言。</p>  <p> 16、ITERATOR—我爱上了Mary，不顾一切的向她求婚。</p>  <p> Mary：“想要我跟你结婚，得答应我的条件”</p>  <p> 我：“什么条件我都答应，你说吧”</p>  <p> Mary：“我看上了那个一克拉的钻石”</p>  <p> 我：“我买，我买，还有吗?”</p>  <p> Mary：“我看上了湖边的那栋别墅”</p>  <p> 我：“我买，我买，还有吗?”</p>  <p> Mary：“我看上那辆法拉利跑车”</p>  <p> 我脑袋嗡的一声，坐在椅子上，一咬牙：“我买，我买，还有吗?”</p>  <p> ……</p>  <p> 迭代子模式：迭代子模式可以顺序访问一个聚集中的元素而不必暴露聚集的内部表象。多个对象聚在一起形成的总体称之为聚集， 聚集对象是能够包容一组对象的容器对象。迭代子模式将迭代逻辑封装到一个独立的子对象中，从而与聚集本身隔开。迭代子模式简化了聚集 的界面。每一个聚集对象都可以有一个或一个以上的迭代子对象，每一个迭代子的迭代状态可以是彼此独立的。迭代算法可以独立于聚集角色 变化。</p>  <p> 17、MEDIATOR—四个MM打麻将，相互之间谁应该给谁多少钱算不清楚了，幸亏当时我在旁边，按照各自的筹码数算钱，赚了钱的从我这 里拿，赔了钱的也付给我，一切就OK啦，俺得到了四个MM的电话。</p>  <p> 调停者模式：调停者模式包装了一系列对象相互作用的方式，使得这些对象不必相互明显作用。从而使他们可以松散偶合。当某些 对象之间的作用发生改变时，不会立即影响其他的一些对象之间的作用。保证这些作用可以彼此独立的变化。调停者模式将多对多的相互作用 转化为一对多的相互作用。调停者模式将对象的行为和协作抽象化，把对象在小尺度的行为上与其他对象的相互作用分开处理。</p>  <p> 18、MEMENTO—同时跟几个MM聊天时，一定要记清楚刚才跟MM说了些什么话，不然MM发现了会不高兴的哦，幸亏我有个备忘录，刚才与 哪个MM说了什么话我都拷贝一份放到备忘录里面保存，这样可以随时察看以前的记录啦。</p>  <p> 备忘录模式：备忘录对象是一个用来存储另外一个对象内部状态的快照的对象。备忘录模式的用意是在不破坏封装的条件下，将一 个对象的状态捉住，并外部化，存储起来，从而可以在将来合适的时候把这个对象还原到存储起来的状态。</p>  <p> 19、OBSERVER—想知道咱们公司最新MM情报吗?加入公司的MM情报邮件组就行了，<a href=\"http://com.chinabyte.com/tom/\">tom</a>负责搜集情报，他发现的新情报不用一个一个通知 我们，直接发布给邮件组，我们作为订阅者(观察者)就可以及时收到情报啦</p>  <p> 观察者模式：观察者模式定义了一种一队多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主题对象在状态上发生 变化时，会通知所有观察者对象，使他们能够自动更新自己。</p>  <p> 20、STATE—跟MM交往时，一定要注意她的状态哦，在不同的状态时她的行为会有不同，比如你约她今天晚上去看电影，对你没兴趣的 MM就会说“有事情啦”，对你不讨厌但还没喜欢上的MM就会说“好啊，不过可以带上我同事么?”，已经喜欢上你的MM就会说“几点钟?看完电 影再去泡吧怎么样?”，当然你看电影过程中表现良好的话，也可以把MM的状态从不讨厌不喜欢变成喜欢哦。</p>  <p> 状态模式：状态模式允许一个对象在其内部状态改变的时候改变行为。这个对象看上去象是改变了它的类一样。状态模式把所研究 的对象的行为包装在不同的状态对象里，每一个状态对象都属于一个抽象状态类的一个子类。状态模式的意图是让一个对象在其内部状态改变 的时候，其行为也随之改变。状态模式需要对每一个系统可能取得的状态创立一个状态类的子类。当系统的状态变化时，系统便改变所选的子 类。</p>  <p> 21、STRATEGY—跟不同类型的MM约会，要用不同的策略，有的请电影比较好，有的则去吃小吃效果不错，有的去海边浪漫最合适，单目 的都是为了得到MM的芳心，我的追MM锦囊中有好多Strategy哦。</p>  <p> 策略模式：策略模式针对一组算法，将每一个算法封装到具有共同接口的独立的类中，从而使得它们可以相互替换。策略模式使得 算法可以在不影响到客户端的情况下发生变化。策略模式把行为和环境分开。环境类负责维持和查询行为类，各种算法在具体的策略类中提供 。由于算法和环境独立开来，算法的增减，修改都不会影响到环境和客户端。</p>  <p> 22、TEMPLATE METHOD——看过《如何说服女生上床》这部经典文章吗?女生从认识到上床的不变的步骤分为巧遇、打破僵局、展开追求 、接吻、前戏、动手、爱抚、进去八大步骤(Template method)，但每个步骤针对不同的情况，都有不一样的做法，这就要看你随机应变啦(具 体实现);</p>  <p> 模板方法模式：模板方法模式准备一个抽象类，将部分逻辑以具体方法以及具体构造子的形式实现，然后声明一些抽象方法来迫使 子类实现剩余的逻辑。不同的子类可以以不同的方式实现这些抽象方法，从而对剩余的逻辑有不同的实现。先制定一个顶级逻辑框架，而将逻 辑的细节留给具体的子类去实现。</p>  <p> 23、VISITOR—情人节到了，要给每个MM送一束鲜花和一张卡片，可是每个MM送的花都要针对她个人的特点，每张卡片也要根据个人的 特点来挑，我一个人哪搞得清楚，还是找花店老板和礼品店老板做一下Visitor，让花店老板根据MM的特点选一束花，让礼品店老板也根据每个 人特点选一张卡，这样就轻松多了; </p>  <p> 访问者模式：访问者模式的目的是封装一些施加于某种数据结构元素之上的操作。一旦这些操作需要修改的话，接受这个操作的数 据结构可以保持不变。访问者模式适用于数据结构相对未定的系统，它把数据结构和作用于结构上的操作之间的耦合解脱开，使得操作集合可 以相对自由的演化。访问者模式使得增加新的操作变的很容易，就是增加一个新的访问者类。访问者模式将有关的行为集中到一个访问者对象 中，而不是分散到一个个的节点类中。当使用访问者模式时，要将尽可能多的对象浏览逻辑放在访问者类中，而不是放到它的子类中。访问者 模式可以跨过几个类的等级结构访问属于不同的等级结构的成员类。</p>','2011-03-22 01:37:56','2011-03-22 01:44:39',NULL,NULL,'publish',NULL,'从追MM谈Java的23种设计模式','/post/2012/7/14/1344938593773.html',1,0),(261,0,'open','<p>现在才知道希望越大失望也越大是什么感觉了。 </p>  <p>   <br />现在离我想要的生活越来越远了。</p>','2011-03-21 05:50:28','2011-03-21 05:50:28',NULL,NULL,'publish',NULL,'傻。。','/post/2012/7/14/1344938593836.html',1,0),(262,0,'open','<p>日本在如此紧急关头，奥特曼竟然没有出现，高达也无动于衷，被人们寄予众望的圣斗士也消失了。    <br />美国表示不会派变形金刚去日本参与救助，但是不排除派遣忍者神龟的可能。     <br />中方表示，葫芦娃已在赶赴日本的途中，孙悟空和黑猫警长暂时还没联系上。 </p>  <p>日本都地震了，美少女战士还没变身;    <br />核电站都泄露了，奥特曼还不出现;     <br />木叶镇都被淹了，火影忍者也没有出现;都被海啸吞了，孩子们还没有骑着数码宝贝拯救地球;     <br />甚至甚至……连正在工作的波多野结衣莫名死了，都没人找全七龙珠让她复活，我TMD再也不相信什么正义和平了！     <br />童话里的世界都是骗人的。</p>  <p><a href=\"http://www.mspring.org/wp-content/uploads/2011/03/21.gif\"><img title=\"21\" style=\"display: inline\" height=\"24\" alt=\"21\" src=\"http://www.mspring.org/wp-content/uploads/2011/03/21_thumb.gif\" width=\"24\" /></a>太有才了。。。</p>','2011-03-17 05:17:43','2011-03-17 05:17:43',NULL,NULL,'publish',NULL,'。。。','/post/2012/7/14/1344938593891.html',1,0),(263,0,'open','<p></p>  <p>利用Javascript取和设FCKeditor值也是非常容易的，如下：   <br />// 获取编辑器中HTML内容    <br />function getEditorHTMLContents(EditorName) {    <br />&#160;&#160;&#160; var oEditor = FCKeditorAPI.GetInstance(EditorName);    <br />&#160;&#160;&#160; return(oEditor.GetXHTML(true));    <br />}    <br />// 获取编辑器中文字内容    <br />function getEditorTextContents(EditorName) {    <br />&#160;&#160;&#160; var oEditor = FCKeditorAPI.GetInstance(EditorName);    <br />&#160;&#160;&#160; return(oEditor.EditorDocument.body.innerText);    <br />}    <br />// 设置编辑器中内容    <br />function SetEditorContents(EditorName, ContentStr) {    <br />&#160;&#160;&#160; var oEditor = FCKeditorAPI.GetInstance(EditorName) ;    <br />&#160;&#160;&#160; oEditor.SetHTML(ContentStr) ;    <br />}    <br />FCKeditorAPI是FCKeditor加载后注册的一个全局对象，利用它我们就可以完成对编辑器的各种操作。    <br />在当前页获得 FCK 编辑器实例：    <br />var Editor = FCKeditorAPI.GetInstance(\'InstanceName\');    <br />从 FCK 编辑器的弹出窗口中获得 FCK 编辑器实例：    <br />var Editor = window.parent.InnerDialogLoaded().FCK;    <br />从框架页面的子框架中获得其它子框架的 FCK 编辑器实例：    <br />var Editor = window.FrameName.FCKeditorAPI.GetInstance(\'InstanceName\');    <br />从页面弹出窗口中获得父窗口的 FCK 编辑器实例：    <br />var Editor = opener.FCKeditorAPI.GetInstance(\'InstanceName\');    <br />获得 FCK 编辑器的内容：    <br />oEditor.GetXHTML(formatted); // formatted 为：true|false，表示是否按HTML格式取出    <br />也可用：    <br />oEditor.GetXHTML();    <br />设置 FCK 编辑器的内容：    <br />oEditor.SetHTML(&quot;content&quot;, false); // 第二个参数为：true|false，是否以所见即所得方式设置其内容。此方法常用于&quot;设置初始值&quot;或&quot;表单重置&quot;哦作。    <br />插入内容到 FCK 编辑器：    <br />oEditor.InsertHtml(&quot;html&quot;); // &quot;html&quot;为HTML文本    <br />检查 FCK 编辑器内容是否发生变化：    <br />oEditor.IsDirty();    <br />在 FCK 编辑器之外调用 FCK 编辑器工具条命令：    <br />命令列表如下：    <br />DocProps, Templates, Link, Unlink, Anchor, BulletedList, NumberedList, About, Find, Replace, Image, Flash, SpecialChar, Smiley, Table, TableProp, TableCellProp, UniversalKey, Style, FontName, FontSize, FontFormat, Source, Preview, Save, NewPage, PageBreak, TextColor, BGColor, PasteText, PasteWord, TableInsertRow, TableDeleteRows, TableInsertColumn, TableDeleteColumns, TableInsertCell, TableDeleteCells, TableMergeCells, TableSplitCell, TableDelete, Form, Checkbox, Radio, TextField, Textarea, HiddenField, Button, Select, ImageButton, SpellCheck, FitWindow, Undo, Redo    <br />使用方法如下：    <br />oEditor.Commands.GetCommand(\'FitWindow\').Execute();    <br />= FCKConfig.BasePath + \'plugins/\'    <br />// FCKConfig.Plugins.Add( \'placeholder\', \'en,it\' ) ;    <br />去掉//后，就相当于把placeholder这个插件功能加上了，fckeditor的插件文件都在/editor/plugins/文件夹下分类按文件夹放置的，对于fckeditor2.0来说，里面有两个文件夹，也就是有两个官方插件，placeholder这个文件夹就是我们刚才加上去的，主要用于多参数或单参数自定义标签的匹配，这个在制作编辑模板时非常管用，要想看具体实例的话，大家可以去下载acms 这个系统查看学习，另一个文件夹tablecommands就是编辑器里的表格编辑用到的了。当然，如果你想制作自己其它用途的插件，那就只要按照 fckeidtor插件的制作规则制作完放置在/editor/plugins/下就行，然后再在fckeidtor.js里再添加 FCKConfig.Plugins.Add(\'Plugin Name\',\',lang,lang\');就可以了。    <br />第二部分 ，如何让编辑器一打开的时候，编辑工具条不出现，等点“展开工具栏”时才出现？Easy，FCKeditor本身提供了这个功能啦，打开fckconfig.js，找到    <br />FCKConfig.ToolbarStartExpanded = true ;改成    <br />FCKConfig.ToolbarStartExpanded = false ;    <br />就可以啦！    <br />第三部分，使用自己的表情图标，同样打开fckcofnig.js到最底部那一段    <br />FCKConfig.SmileyPath = FCKConfig.BasePath + \'images/smiley/msn/\' ;    <br />FCKConfig.SmileyImages = [\'regular_smile.gif\',\'sad_smile.gif\',\'wink_smile.gif\'] ;    <br />FCKConfig.SmileyColumns = 8 ;    <br />FCKConfig.SmileyWindowWidth&#160;&#160;&#160; = 320 ;    <br />FCKConfig.SmileyWindowHeight = 240 ;    <br />上面这段已经是我修改过的了，为了我发表此文的版面不会被撑得太开，我把FCKConfig.SmileyImages那一行改得只有三个表情图了。    <br />第一行，当然是表情图标路径的设置，第二行是相关表情图标文件名的一个List，第三行是指弹出的表情添加窗口最每行的表情数，下面两个参数是弹出的模态窗口的宽和高喽。    <br />第四部分，文件上传管理部分    <br />此部分可能是大家最为关心的，上一篇文章简单的讲了如何修改来上传文件以及使用fckeidtor2.0才提供的快速上传功能。再我们继续再深层次的讲解上传功能    <br />FCKConfig.LinkBrowser = true ;    <br />FCKConfig.ImageBrowser = true ;    <br />FCKConfig.FlashBrowser = true ;在fckconfig.js找到这三句，这三句不是连着的哦，只是我把他们集中到这儿来了，设置为true的意思就是允许使用fckeditor来浏览服务器端的文件图像以及flash等，这个功能是你插入图片时弹出的窗口上那个“浏览服务器”按钮可以体现出来，如果你的编辑器只用来自己用或是只在后台管理用，这个功能无疑很好用，因为他让你很直观地对服务器的文件进行上传操作。但是如果你的系统要面向前台用户或是像blog这样的系统要用的话，这个安全隐患可就大了哦。于是我们把其一律设置为false;如下    <br />FCKConfig.LinkBrowser = false ;    <br />FCKConfig.ImageBrowser = false ;    <br />FCKConfig.FlashBrowser = false ;    <br />这样一来，我们就只有快速上传可用了啊，好！接下来就来修改，同样以asp为范例进行，进入/editor/filemanager/upload/asp/打开config.asp，修改    <br />ConfigUserFilesPath = &quot;/UserFiles/&quot;这个设置是上传文件的总目录，我这里就不动了，你想改自己改了好，再打开此目录下的upload.asp文件，找到下面这一段    <br />Dim resourceType    <br />If ( Request.QueryString(&quot;Type&quot;)    <br />&amp;lt;&amp;gt;&quot;&quot; ) Then    <br />resourceType = Request.QueryString(&quot;Type&quot;)    <br />Else    <br />resourceType = &quot;File&quot;    <br />End If    <br />然后再在其后面添加    <br />ConfigUserFilesPath = ConfigUserFilesPath &amp; resourceType &amp;&quot;/&quot;&amp; Year(Date()) &amp;&quot;/&quot;&amp; Month(Date()) &amp;&quot;/&quot;    <br />这样的话，上传的文件就进入“/userfiles/文件类型（如image或file或flash)/年/月/”这样的文件夹下了，这个设置对单用户来用已经足够了，如果你想给多用户系统用，那就这样来改    <br />ConfigUserFilesPath = ConfigUserFilesPath &amp; Session(&quot;username&quot;) &amp; resourceType &amp;&quot;/&quot;&amp; Year(Date()) &amp;&quot;/&quot;&amp; Month(Date()) &amp;&quot;/&quot;    <br />这样上传的文件就进入“/userfiles/用户目录/文件类型/年/月/”下了，当然如果你不想这么安排也可以修改成别的，比如说用户目录再深一层等，这里的Session(&quot;username&quot;)请根据自己的需要进行修改或换掉。    <br />上传的目录设置完了，但是上传程序还不会自己创建这些文件夹，如果不存在的话，上传不会成功的，那么我们就得根据上面的上传路径的要求进行递归来生成目录了。    <br />找到这一段    <br />Dim sServerDir    <br />sServerDir = Server.MapPath( ConfigUserFilesPath )    <br />If ( Right( sServerDir, 1 )    <br />&amp;lt;&amp;gt;&quot;\\&quot; ) Then    <br />&#160;&#160;&#160; sServerDir = sServerDir &amp; &quot;\\&quot;    <br />End If    <br />把它下面的这两行    <br />Dim oFSO    <br />Set oFSO = Server.CreateObject( &quot;Scripting.FileSystemObject&quot; )    <br />用下面这一段代码来替换    <br />dim arrPath,strTmpPath,intRow    <br />strTmpPath = &quot;&quot;    <br />arrPath = Split(sServerDir, &quot;\\&quot;)    <br />Dim oFSO    <br />Set oFSO = Server.CreateObject( &quot;Scripting.FileSystemObject&quot; )    <br />for intRow = 0 to Ubound(arrPath)    <br />&#160;&#160;&#160; strTmpPath = strTmpPath &amp; arrPath(intRow) &amp; &quot;\\&quot;    <br />&#160;&#160;&#160; if oFSO.folderExists(strTmpPath)=false then    <br />&#160;&#160;&#160;&#160; oFSO.CreateFolder(strTmpPath)    <br />&#160;&#160;&#160; end if    <br />next    <br />用这段代码就可以生成你想要的文件夹了，在上传的时候自动生成。    <br />好了，上传文件的修改到现在可以暂时告一段落了，但是，对于中文用户还存在这么个问题，就是fckeditor的文件上传默认是不改名的，同时还不支持中文文件名，这样一来是上传的文件会变成“.jpg”这样的无法读的文件，再就是会有重名文件，当然重名这点倒没什么，因为fckeditor会自动改名，会在文件名后加（1）这样来进行标识。但是，我们通常的习惯是让程序自动生成不重复的文件名在刚才那一段代码的下面紧接着就是    <br />\' Get the uploaded file name.    <br />sFileName = oUploader.File( &quot;NewFile&quot; ).Name    <br />看清楚了，这个就是文件名啦，我们来把它改掉，当然得有个生成文件名的函数才行，改成下面这样    <br />\'//取得一个不重复的序号    <br />Public Function GetNewID()    <br />dim ranNum    <br />dim dtNow    <br />randomize    <br />dtNow=Now()    <br />ranNum=int(90000*rnd)+10000    <br />GetNewID=year(dtNow) &amp; right(&quot;0&quot; &amp; month(dtNow),2) &amp; right(&quot;0&quot; &amp; day(dtNow),2) &amp; right(&quot;0&quot; &amp; hour(dtNow),2) &amp; right(&quot;0&quot; &amp; minute(dtNow),2) &amp; right(&quot;0&quot; &amp; second(dtNow),2) &amp; ranNum    <br />End Function    <br />\' Get the uploaded file name.    <br />sFileName = GetNewID() &amp;&quot;.&quot;&amp; split(oUploader.File( &quot;NewFile&quot; ).Name,&quot;.&quot;)(1)    <br />这样一来，上传的文件就自动改名生成如20050802122536365.jpg这样的文件名了，是由年月日时分秒以及三位随机数组成的文件名了    <br />利用Javascript取和设FCKeditor值也是非常容易的，如下：    <br />// 获取编辑器中HTML内容    <br />function getEditorHTMLContents(EditorName) {    <br />&#160;&#160;&#160; var oEditor = FCKeditorAPI.GetInstance(EditorName);    <br />&#160;&#160;&#160; return(oEditor.GetXHTML(true)); }    <br />// 获取编辑器中文字内容    <br />function getEditorTextContents(EditorName) {    <br />&#160;&#160;&#160; var oEditor = FCKeditorAPI.GetInstance(EditorName);    <br />&#160;&#160;&#160; return(oEditor.EditorDocument.body.innerText);    <br />}    <br />// 设置编辑器中内容    <br />function SetEditorContents(EditorName, ContentStr) {    <br />&#160;&#160;&#160; var oEditor = FCKeditorAPI.GetInstance(EditorName) ;    <br />&#160;&#160;&#160; oEditor.SetHTML(ContentStr) ;    <br />}    <br />FCKeditorAPI是FCKeditor加载后注册的一个全局对象，利用它我们就可以完成对编辑器的各种操作。在当前页获得 FCK 编辑器实例：    <br />var Editor = FCKeditorAPI.GetInstance(\'InstanceName\');    <br />从 FCK 编辑器的弹出窗口中获得 FCK 编辑器实例：    <br />var Editor = window.parent.InnerDialogLoaded().FCK;    <br />从框架页面的子框架中获得其它子框架的 FCK 编辑器实例：    <br />var Editor = window.FrameName.FCKeditorAPI.GetInstance(\'InstanceName\');    <br />从页面弹出窗口中获得父窗口的 FCK 编辑器实例：    <br />var Editor = opener.FCKeditorAPI.GetInstance(\'InstanceName\');    <br />获得 FCK 编辑器的内容：    <br />oEditor.GetXHTML(formatted); // formatted 为：true|false，表示是否按HTML格式取出    <br />也可用：    <br />oEditor.GetXHTML();    <br />设置 FCK 编辑器的内容：    <br />oEditor.SetHTML(&quot;content&quot;, false); // 第二个参数为：true|false，是否以所见即所得方式设置其内容。此方法常用于&quot;设置初始值&quot;或&quot;表单重置&quot;哦作。    <br />插入内容到 FCK 编辑器：    <br />oEditor.InsertHtml(&quot;html&quot;); // &quot;html&quot;为HTML文本    <br />检查 FCK 编辑器内容是否发生变化：    <br />oEditor.IsDirty();    <br />在 FCK 编辑器之外调用 FCK 编辑器工具条命令：    <br />命令列表如下：    <br />DocProps, Templates, Link, Unlink, Anchor, BulletedList, NumberedList, About, Find, Replace, Image, Flash, SpecialChar, Smiley, Table, TableProp, TableCellProp, UniversalKey, Style, FontName, FontSize, FontFormat, Source, Preview, Save, NewPage, PageBreak, TextColor, BGColor, PasteText, PasteWord, TableInsertRow, TableDeleteRows, TableInsertColumn, TableDeleteColumns, TableInsertCell, TableDeleteCells, TableMergeCells, TableSplitCell, TableDelete, Form, Checkbox, Radio, TextField, Textarea, HiddenField, Button, Select, ImageButton, SpellCheck, FitWindow, Undo, Redo    <br />使用方法如下：    <br />oEditor.Commands.GetCommand(\'FitWindow\').Execute();</p>','2011-03-17 04:17:40','2011-03-17 04:17:40',NULL,NULL,'publish',NULL,'FCKEditor API','/post/2012/7/14/1344938593944.html',1,0),(264,0,'open','<blockquote>   <p>&#160;&#160;&#160;&#160;&#160;&#160; 昨天我媳妇儿给我说有人给她打电话让她去买盐，好多超市都买不到了。我当时还不了解是什么情况，我们就猜，可能是日本地震核电站爆炸，怕核污染沿着海水飘到中国的盐场，造成污染。 没想到还真让我猜到了，今天早上查了一下，果真是这个情况。 我还跟我媳妇儿开玩笑说，浙江那边买不到盐没关系，我在北京给你买点，快递过去。 没想到，刚刚我妈给她打电话，让她赶紧买盐，说我爸跑了好几个超市都没有买到。。。。 </p> </blockquote>  <p>---------辟谣分割线----------- </p>  <p>【辟谣】嘉兴盐业公司负责人紧急辟谣：我们的食盐储备可保证嘉兴三个月的用量。晚上，我们已安排值班人员给各家超市补货，明早也将提前开门供应。我们肯定能够确保市民的正常用盐需求，大家不必恐慌。 </p>  <p>两个误区：一是盐碘能防辐射。二是海水被核污染，晒出的盐不安全。浙江省核学会秘书长夏元初说，两种说法都不科学：1，日本核污染范围有限，要流到中国近海产盐区可能性极低。2，碘片可以阻隔甲状腺吸收碘131，但一颗碘片约100MG，相当5公斤盐碘量，短期食用等量盐足以致人脱水而死。 </p>  <p>省盐业集团：按照国家法律规定，囤积食盐是违法行为，一旦掌握线索，将移交给物价、工商等部门严肃处理。 </p>  <p>---------辟谣分割线----------- </p>  <p>从昨天下午开始（3月15日），市区内部分超市开始出现小包装碘盐抢购苗头。目前已形成一定范围内的抢购风。 </p>  <p>经了解和分析，引起此次食盐抢购的原因主要有两点：一是近期媒体宣传及民间盛传补碘可防止核辐射；二是认为海水质量将受到核污染，今后生产的海盐不安全，不能食用。 </p>  <p>为此，我市盐业部门积极做好食盐供应和宣传解释工作。 </p>  <p>一、是目前我市各类小包装碘盐库存充足，常规情况下可满足全市2个月的供应量。同时，当前全国盐产大于销，不存在食盐短缺的问题。且全市供应的食盐品种以井矿盐为主，不存在海水污染的问题。而市区内设有国家食盐定点生产企业，可连续生产，能够保障全市各类盐产品正常供应。 </p>  <p>二、是食盐是国家定价产品，目前我市盐产品价格稳定，不会涨价。对于少数零售网点趁机囤积居奇、哄抬盐价的行为，我们将配合物价部门严厉打击。 </p>  <p>三、是由于部分居民听信传言，集中采购，导致在盐的配送运输方面存在一定难度，可能导致部分零售网点无法正常及时送达。呼吁广大群众不要听信传言，根据实际需要理性采购食盐。</p>','2011-03-17 02:54:14','2011-10-05 21:18:41',NULL,NULL,'publish',NULL,'抢盐啦。。。。','/post/2012/7/14/1344938594004.html',1,0),(265,0,'open','<p>某两会委员发言：“上海是全世界的上海,上海的房价应该和国际接轨,我觉得80后男孩子如果买不起房子,80后女孩子可以嫁给40岁的男人。80后的男人如果有条件了,到40岁再娶20岁的女孩子也是不错的选择。”</p>  <p>2楼回复： 我终于到40岁了,找到一个年轻貌美的20岁女友 去她家见家长 开门的是当年读大学时相处了几年的初恋女友 新女友喊了一声：妈~</p>  <p>3楼补充：她妈看到我,惊得倒吸一口冷气。没等我反应过来,然后把女儿拉进房间里,对女儿说“你不能和他在一起,他是你亲生父亲啊！”</p>  <p>4楼继续补充： 女儿：我已经有了他的骨肉……</p>  <p>【5楼】 这时女孩的60多岁的父亲走出来看见了女孩的男友,小声的对他说：“你怎么来了,给你妈和你的生活费不是每月都按时打去的吗？</p>  <p>【6楼】这时&quot;叮咚&quot;,女孩男友的妈来见亲家,见到女孩的父亲:&quot;怎么是你...&quot;</p>  <p>【7楼】女孩男友的父亲停完车也上楼了,一见女孩的父亲马上内流满面:&quot;你不就是我失散多年的弟弟吗?&quot;</p>  <p>【8楼】女孩母亲见到男友母亲:&quot;妈!&quot;</p>  <p>【9楼】女孩母亲见到男友他爸,叫了一声“爹！”</p>  <p>请问: 1、你能理解到几楼？</p>  <p>2、男友他妈的妈见到女友他妈的爸叫什么?</p>  <p>----------------------------------------------------------------------------------------------------------------------</p>  <p>允许某些专业路过人员路过，如果表示鸭梨不大，请按标准格式回答。</p>  <p>例如：</p>  <p>1、8楼</p>  <p>2、儿子</p>','2011-03-08 07:25:48','2011-03-08 07:25:48',NULL,NULL,'publish',NULL,'程序员必做题-世界最高级逻辑学测试题【转载】','/post/2012/7/14/1344938594060.html',1,0),(266,0,'open','<p>FreeMarker 是一个采用 Java 开发的模版引擎，是一个基于模版生成文本的通用工具。 FreeMarker 被设计用来生成 HTML Web 页面，特别是基于 MVC 模式的应用程序。虽然 FreeMarker 具有一些编程的能力，但通常由 Java 程序准备要显示的数据，由 FreeMarker 生成页面，并通过模板显示准备的数据（如下图）。</p>  <p><a name=\"N10057\"><b>图 1. FreeMarker 工作原理</b></a>    <br /><img height=\"191\" alt=\"FreeMarker 工作原理\" src=\"http://www.ibm.com/developerworks/cn/java/j-lo-freemarker/image001.png\" width=\"416\" /></p>  <p>FreeMarker 非常简单，只需要一个 Freemarker.jar 文件（无需任何配置文件）即可包含所有的功能。但 FreeMarker 的功能却是非常的强大，相比较另外一个非常著名的 Java 模版引擎 —— Velocity 来说，FreeMarker 的功能让您惊叹，但其学习的曲线也较 Velocity 要长很多。</p>  <p>本文主要介绍如何利用 FreeMarker 强大的可扩展性来输出各种文本信息，这不是 FreeMarker 的入门学习材料，如果您尚未对 FreeMarker 有所了解，或者还没有使用过 FreeMarker 的话，那不妨先上手后再来阅读本文。</p>  <p>FreeMarker 主要提供了如下几个方面的扩展性功能：</p>  <ol>   <li>自定义宏 </li>    <li>自定义函数 </li>    <li>自定义模版文件加载器 </li>    <li>缓存处理 </li>    <li>异常处理</li> </ol>  <p><a name=\"2.FreeMarker 自定义宏|outline\">FreeMarker 自定义宏</a></p>  <p>FreeMarker 和 Velocity 都提供可自定义宏的功能，但 FreeMarker 的宏功能更加强大，包括允许通过名称和参数的位置进行参数传递；允许设置参数的默认值；支持宏的嵌套；宏可以先使用再声明；支持命名空间等。</p>  <p>下面我们针对这些功能给出一个简单但是完整的演示例子，先看看代码：</p>  <p><a name=\"N10091\"><b>清单 1. 宏定义文件 ( html.ftl )</b></a></p>  <pre>				\n&lt;#macro html title charset=&quot;utf-8&quot; lang=&quot;zh-CN&quot;&gt; \n &lt;html&gt; \n &lt;head&gt; \n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=${charset}&quot; /&gt; \n  &lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;${lang}&quot;/&gt; \n  &lt;title&gt;${title}&lt;/title&gt; \n &lt;/head&gt; \n &lt;body&gt; \n    &lt;#nested&gt; \n &lt;/body&gt; \n &lt;/html&gt; \n &lt;/#macro&gt;</pre>\n\n<p>在这个宏定义文件中，我们声明了一个名为 html 的宏，该宏是为了生成一个 HTML 页面的框架。它具有三个参数分别是 title 、charset 和 lang ，其中 charset 和 lang 分别指定了默认的值。</p>\n\n<p>再来看看如何调用该宏：</p>\n\n<p><a name=\"N100A1\"><b>清单 2. 调用宏</b></a></p>\n\n<pre>				\n&lt;#include &quot;html.ftl&quot;&gt; \n &lt;@html title=&quot;FreeMarker 宏测试 &quot;&gt; \n	欢迎使用 FreeMarker 模版引擎\n &lt;/@html&gt;</pre>\n\n<p>在 FreeMarker 中，用户自定义的宏必须以 @ 开头来调用，并传入页面标题 title 的参数。而 &lt;@html&gt; 标签中包含的文本“欢迎使用 FreeMarker 模版引擎”将替换宏定义中的 &lt;#nested&gt; 标签。因此这个模版将会生成如下的 HTML 信息：</p>\n\n<p><a name=\"N100AE\"><b>清单 3. 模版生成结果</b></a></p>\n\n<pre>				\n&lt;html&gt; \n &lt;head&gt; \n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; \n  &lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;zh-CN&quot;/&gt; \n  &lt;title&gt;FreeMarker 宏测试 &lt;/title&gt; \n &lt;/head&gt; \n &lt;body&gt; \n	欢迎使用 FreeMarker 模版引擎\n &lt;/body&gt; \n &lt;/html&gt;</pre>\n\n<p>而 Velocity 本身并不提供嵌套模版的功能，它必须依赖 Velocity-Tools 这个项目来实现。另外对于一些需要实现更复杂逻辑的宏，还可以通过 Java 类来进行定义。 FreeMarker 提供了一个 TemplateDirectiveModel 接口，通过实现该接口可以实现自定义宏的功能，这样可以更好的跟应用逻辑进行集成，不过需要注意的是暂不支持通过参数的位置来调用宏，调用时必须指定参数名，该问题将在 FreeMarker 2.4 中得以解决。下面是一个简单的例子：</p>\n\n<p><a name=\"N100BB\"><b>清单 4. 自定义宏功能的例子</b></a></p>\n\n<pre>				\n/**\n * 将标签中的代码全部转为大写并输出\n * @author Winter Lau (javayou@gmail.com)\n * 使用方法：\n * &lt;@upper&gt;Welcome to http://www.oschina.net&lt;/@upper&gt;\n */\npublic class UpperDirective implements TemplateDirectiveModel {\n	\n    public void execute(Environment env,\n            Map params, TemplateModel[] loopVars,\n            TemplateDirectiveBody body)\n            throws TemplateException, IOException {\n        // Check if no parameters were given:\n        if (!params.isEmpty()) {\n            throw new TemplateModelException(\n                    &quot;This directive doesn\'t allow parameters.&quot;);\n        }\n        if (loopVars.length != 0) {\n                throw new TemplateModelException(\n                    &quot;This directive doesn\'t allow loop variables.&quot;);\n        }\n        \n        // If there is non-empty nested content:\n        if (body != null) {\n            // Executes the nested body. Same as &lt;#nested&gt; in FTL, except\n            // that we use our own writer instead of the current output writer.\n            body.render(new UpperCaseFilterWriter(env.getOut()));\n        } else {\n            throw new RuntimeException(&quot;missing body&quot;);\n        }\n    }\n    \n    /**\n     * A {@link Writer} that transforms the character stream to upper case\n     * and forwards it to another {@link Writer}.\n     */ \n    private static class UpperCaseFilterWriter extends Writer {\n       \n        private final Writer out;\n           \n        UpperCaseFilterWriter (Writer out) {\n            this.out = out;\n        }\n\n        public void write(char[] cbuf, int off, int len)\n                throws IOException {\n            char[] transformedCbuf = new char[len];\n            for (int i = 0; i &lt; len; i++) {\n                transformedCbuf[i] = Character.toUpperCase(cbuf[i + off]);\n            }\n            out.write(transformedCbuf);\n        }\n\n        public void flush() throws IOException {\n            out.flush();\n        }\n\n        public void close() throws IOException {\n            out.close();\n        }\n    }\n\n}</pre>\n\n<p>接下来我们需要重载 FreemarkerServlet ，植入该指令扩展，代码如下：</p>\n\n<p><a name=\"N100C8\"><b>清单 5. 重载 FreemarkerServlet</b></a></p>\n\n<pre>				\n@Override\nprotected Configuration createConfiguration() {\n	Configuration cfg = super.createConfiguration();\n	cfg.setSharedVariable(&quot;upper&quot;, new UpperDirective());\n	return cfg;\n}</pre>\n\n<p>在页面模版中使用<code>&lt;@upper&gt;Welcome to http://www.oschina.net&lt;/@upper&gt;</code>试试吧。</p>\n\n<p><a name=\"N100D6\">FreeMarker 自定义函数</a></p>\n\n<p>与宏不同，宏一般用来执行某个过程，而函数可以定义返回值，例如对一组数据求和、平均值、最大值、最小值等等运算。 FreeMarker 的函数支持可变个数的参数。例如下面定义了一个求平均值的函数：</p>\n\n<p><a name=\"N100E3\"><b>清单 6. 求平均值的函数例子</b></a></p>\n\n<pre>				\n&lt;#function avg nums...&gt; \n  &lt;#local sum = 0&gt; \n  &lt;#list nums as num&gt; \n    &lt;#local sum = sum + num&gt; \n  &lt;/#list&gt; \n  &lt;#if nums?size != 0&gt; \n    &lt;#return sum / nums?size&gt; \n  &lt;/#if&gt; \n &lt;/#function&gt;</pre>\n\n<p>其中函数名为 avg ，支持可变个数的参数 nums 。可用下面的代码来要调用该函数：</p>\n\n<pre>${avg(3,5,100,3453)}</pre>\n\n<p>跟宏相同，FreeMarker 也可以用 Java 来编写自定义函数。例如我们用 Java 代码来生成一个随机的整数，其代码如下：</p>\n\n<p><a name=\"N100F7\"><b>清单 7. 使用 Java 编写的自定义函数</b></a></p>\n\n<pre>				\n/**\n * 生成一个随机的整数\n * @author Winter Lau (javayou@gmail.com)\n * @url http://www.oschina.net\n */\npublic class RandomFunction implements TemplateMethodModel {\n\n	final static Random rnd_seed = new Random(System.currentTimeMillis());\n	\n	/* (non-Javadoc)\n	 * @see freemarker.template.TemplateMethodModel#exec(java.util.List)\n	 */\n	@SuppressWarnings(&quot;unchecked&quot;)\n	public Object exec(List args) throws TemplateModelException {\n		return rnd_seed.nextInt(Integer.parseInt((String)args.get(0)));\n	}\n\n}</pre>\n\n<p>同样的，需要将该函数的定义植入 FreeMarker ：</p>\n\n<pre>cfg.setSharedVariable(&quot;rand&quot;,<strong>new</strong>RandomFunction());</pre>\n\n<p>使用方法：${rand(1000)} 。</p>\n\n<p><a name=\"4.FreeMarker 自定义模版文件加载器|outline\">FreeMarker 自定义模版文件加载器</a></p>\n\n<p>模版文件加载器用来告诉 FreeMarker 引擎到什么地方去加载模版文件。 FreeMarker 自带了三种文件加载器，分别是：文件目录加载器、类路径加载器以及 Web 上下文加载器。当在 Web 环境中使用 FreemarkerServlet 来加载模版文件时，默认使用第三种加载器，并通过 Servlet 的配置 TemplatePath 来指定模版文件所存放的路径，该路径是相对于 Web 的根目录的。</p>\n\n<p>在某种情况下，我们可能会希望把模版文件的源码进行加密处理，例如我们使用 DES 加密方式将模版源文件加密后进行存储，然后我们通过自行实现一个加密的模版文件加载器来读取这些模版文件，解密后交给 FreeMarker 引擎解释执行并得到执行的结果。 FreeMarker 为模版文件加载器定义了一个统一的接口 —— TemplateLoader ，该接口有以下四个方法：</p>\n\n<p>closeTemplateSource\n  <br />关闭模版资源</p>\n\n<p>findTemplateSource\n  <br />根据名称返回指定的模版资源</p>\n\n<p>getLastModified\n  <br />返回模版资源最后一次修改的时间</p>\n\n<p>getReader\n  <br />返回读取模版资源的 Reader</p>\n\n<p>为了简单起见，我们可以在 FreeMarker 自带的加载器上进行扩展，重写 getReader 方法对读取到的模版文件内容进行解密后生成一个新的 Reader 实例并返回（详细过程不再叙述）。</p>\n\n<p>FreeMarker 自带的几个 TemplateLoader 分别是：</p>\n\n<ol>\n  <li>ClassTemplateLoader ：基于类路径的模版加载器 </li>\n\n  <li>FileTemplateLoader ：基于文件目录的模版加载器 </li>\n\n  <li>MultiTemplateLoader ：多种加载器的混合 </li>\n\n  <li>StringTemplateLoader ：基于字符串的模版加载器 </li>\n\n  <li>URLTemplateLoader ：基于 URL 的模版加载器 </li>\n\n  <li>WebappTemplateLoader ：基于 Web 上下文的模版加载器</li>\n</ol>\n\n<p>重载模版加载器后通过下面代码使之生效：</p>\n\n<pre>cfg.setTemplateLoader(loader)</pre>\n\n<p><a name=\"5.FreeMarker 缓存处理|outline\">FreeMarker 缓存处理</a></p>\n\n<p>FreeMarker 的缓存处理主要用于模版文件的缓存，一般来讲，模版文件改动不会很频繁，在一个流量非常大的网站中，如果频繁的读取模版文件对系统的负担还是很重的，因此 FreeMarker 通过将模版文件的内容进行缓存，来降低模版文件读取的频次，降低系统的负载。</p>\n\n<p>当处理某个模版时，FreeMarker 直接从缓存中返回对应的 Template 对象，并有一个默认的机制来保证该模版对象是跟模版文件同步的。如果使用的时候 FreemarkerServlet 时，有一个配置项 template_update_delay 用来指定更新模版文件的间隔时间，相当于多长时间检测一下是否有必要重新加载模版文件，0 表示每次都重新加载，否则为多少毫秒钟检测一下模版是否更改。</p>\n\n<p>FreeMarker 定义了一个统一的缓存处理接口 CacheStorage ，默认的实现是 MruCacheStorage 最近最少使用的缓存策略。一般情况下，很少需要对缓存进行扩展处理。您可以通过下面的代码指定最大缓存的模版数：</p>\n\n<pre>cfg.setCacheStorage(new freemarker.cache.MruCacheStorage(20, 250))</pre>\n\n<p>其中第一个参数是最大的强引用对象数，第二个为最大的弱引用对象数。这两个值 FreeMarker 默认的是 0 和 Integer.MAX_VALUE，表明模版缓存数是无限的。</p>\n\n<p><a name=\"6.FreeMarker 异常处理|outline\">FreeMarker 异常处理</a></p>\n\n<p>当使用 FreeMarker 做为模版引擎的时候，可能发生的异常包括：</p>\n\n<p><strong>配置异常</strong>：配置异常指的是 FreeMarker 初始化时发生的异常，例如错误的配置导致，该异常时由 FreeMarker 的 API 抛出来的。</p>\n\n<p><strong>模版加载异常</strong>：模版加载异常可能是模版不存在或者没有读权限，或者是解析模版时发生错误，例如模版语法错误等。</p>\n\n<p><strong>模版执行异常</strong>：模版执行异常是指模版已经成功的加载但在执行过程中由于代码执行错误所抛出的异常，这类异常一般都是用户的代码导致。</p>\n\n<p>正常情况下，前两种异常会在开发过程中就会发现并得以解决，而第三种异常往往跟实际的运行环境和数据有关，例如由于某些数据不存在导致的空指针异常等等。因此第三种异常才是我们真正需要关心以及监控的。</p>\n\n<p>为此，FreeMarker 定义了一个统一的异常处理接口 TemplateExceptionHandler 。该接口只有一个方法如下：</p>\n\n<pre>void handleTemplateException(TemplateException te,\n    Environment env,\n    java.io.Writer out)</pre>\n\n<p>通过调用 cfg.setTemplateExceptionHandler 来使用自定义的异常处理方法。下面是一个简单的异常处理扩展的例子：</p>\n\n<p><a name=\"N101B4\"><b>清单 8. 异常处理扩展的例子</b></a></p>\n\n<pre>				\nclass MyTemplateExceptionHandler implements TemplateExceptionHandler {\n    \n    public void handleTemplateException(TemplateException te, \n        Environment env, java.io.Writer out) \n		throws TemplateException {\n        try {\n            out.write(&quot;[ERROR: &quot; + te.getMessage() + &quot;]&quot;);\n        } catch (IOException e) {\n            throw new TemplateException(\n                &quot;Failed to print error message. Cause: &quot; + e, env);\n        }\n    }\n    \n}\n\n...\n\ncfg.setTemplateExceptionHandler(new MyTemplateExceptionHandler());</pre>\n\n<p><a name=\"7.Eclipse 的 FreeMarker 插件|outline\">Eclipse 的 FreeMarker 插件</a></p>\n\n<p>为了方便编写 FreeMarker 模版，您可以使用 FreeMarker IDE 这个 Eclipse 插件。该插件具有语法高亮、错误提示等功能。虽然该插件还有很多问题，而且已经很久没更新了，但也能很好地使用。</p>\n\n<p><a name=\"8.总结|outline\">总结</a></p>\n\n<p>从上面对于 FreeMarker 的可扩展性的介绍来看，FreeMarker 确实是一个功能非常之强大的模版引擎，可以说远在 Velocity 之上。不过从使用的直观程度以及上手的时间来看，其复杂度也大大的超过了 Velocity 。当我们在面临这两个模版引擎的选择时，不能只是从功能或者容易上手的角度来决定，更应该根据业务本身的需要综合进行比较。</p>','2011-03-08 05:49:26','2011-03-08 05:49:26',NULL,NULL,'publish',NULL,'全面探索 FreeMarker 模版引擎的扩展性','/post/2012/7/14/1344938594115.html',1,0),(267,0,'open','<p>这是别人给陆首群的一封信。</p>  <p>陆首群：教授，曾任国务院信息化联席会议办公室常务副主任、吉通公司董事长，主持首都电子商务工程的研究与实践， 发表了许多有影响的网络与信息化前 陆首群沿技术、电子商务、电子政务方面的论文 。</p>  <blockquote>   <p>陆主席：</p>    <p>2月28日联通正式发布其自主研发的智能手机操作系统平台“沃Phone”，我们有一些疑问，您是业界泰斗，提出来向您请教，望予赐教。</p>    <p>1、沃Phone是开放平台吗？据说沃Phone不是基于Linux内核的开放平台，实际上它是基于Linux内核的封闭系统（联通要向每个手机终端厂商收取30元/部专利授权费）。     <br />2、沃Phone能说是自主研发的吗？基于的“Linux内核”，当然不是自主开发的；沃Phone没有自主开发的打包格式，而是采用Android的打包格式（APK）。      <br />3、联通自主开发方式可以外包吗？联通说“组织全智达、科泰世纪……自主开发”，实际上联通主要外包给全智达（一家民企）开发沃Phone。      <br />4、沃Phone平台能吸引、支持大批智能手机在其上流畅运行吗？联通谈将邀请摩托罗拉、三星、HTC、华为、中兴、TCL、天宇、英华达等国内外手机厂商合作，但尚未见到其产品运行，至于样机也只看到天语U2、英华达C580几张截图，提出摩托、三星、HTC、华为、中兴等手机是不是用来虚晃一招的？所以运行效果现在似还不好说。      <br />5、联通有人说“当前世界主导开发操作系统有两种途径：①基于Google Android操作系统进行二次开发，②基于Linux内核自主开发”。前者，“无法掌握核心技术，被动跟随”，后者，“开放、安全、稳定、自主发展，及时满足市场”。这种说法是不是对着中国移动Ophone/OMS来说的，是否有点贬低别人，抬高自己之嫌，是否言之不当或言之过早？      <br />6、当代智能手机市场的竞争归根到底主要体现在其价值链生态系统的竞争。在由平台提供商、手机及其元器件制造商、网络运营商、应用软件开发者、消费者用户等构成的生态系统中，作为定位于网络运营商的联通，挟持其推出的封闭的沃Phone平台，要坐大当核心，可行吗？似应质疑。      <br />7、听联通技术部经理张智江说:“沃Phone与Android毫无关系”，“因为在别人操作系统的基础上开发会很麻烦，别人升级，你还得跟着升级”。这里要问，沃Phone是基于Linux内核的，而Linux内核每年是要进行3～4次升级的，这时候你那个沃Phone跟着升级吗？如果跟，不是很麻烦吗？如果不跟，这样行吗？      <br />8、说沃Phone是基于Linux内核的原生态操作系统，话说得不伦不类，如果不是基于Linux内核，说是原生态操作系统还可以，既然是基于Linux内核，那就谈不上是“原生态”操作系统。</p>    <p>智能手机爱好者</p>    <p>××，×××，××，</p>    <p>×××，××，</p>    <p>2011年3月1日</p>    <p>&#160;</p>    <p>陆主席回答：</p>    <p>COPU秘书处将这封信转给陆主席，陆主席批复：对有关沃Phone的信息现在我知之还不多，不能作出具体评论。对于收到的有关质疑信件，可隐去读者具体名字，以“智能手机爱好者”名义在我博客上刊登，供大家评论参考。</p> </blockquote>  <p>&#160;</p>  <p>Android火了，所以中国移动来了个ophone，说是自主研发、原生态。我自学过Android开发，也折腾过ophone，其实ophone也是在Android的基础上进行修改的。。。。&#160; </p>  <p>中国什么时候能够不抄袭，能真正的出一个自己的手机操作系统呢。。。</p>','2011-03-08 03:59:24','2011-03-08 03:59:24',NULL,NULL,'publish',NULL,'ophone之后又来个沃phone','/post/2012/7/14/1344938594257.html',1,0),(268,0,'open','<p>本来想换个联通的号码的，我媳妇儿用的移动的号码，她说，我每个月还有200条免费网内短信呢，你换号了，我那两百条短信发给谁呀。。。&#160; 于是乎俺就不换了，疼媳妇儿。</p>','2011-03-07 08:36:05','2011-03-07 08:36:05',NULL,NULL,'publish',NULL,'2010-03-07','/post/2012/7/14/1344938594307.html',1,0),(269,0,'open','<p><a title=\"有一句话女人一辈子都听不腻~\" href=\"http://www.flickr.com/photos/47141198@N02/5495907960/\"><img height=\"577\" alt=\"有一句话女人一辈子都听不腻~\" src=\"http://farm6.static.flickr.com/5258/5495907960_b0500c043b.jpg\" width=\"300\" border=\"0\" /></a></p>  <p>我也给我媳妇儿将过这些，不过我是真心的，她身材很好不胖。现在的女的，身材再好也都要减肥。。。。</p>','2011-03-04 01:34:10','2011-10-05 21:18:42',NULL,NULL,'publish',NULL,'有一句话女人一辈子都听不腻~','/post/2012/7/14/1344938594356.html',1,0),(270,0,'open','<p>今天想要在Freemarker模版文件里使用HttpServletResponse对象的encodeURL方法，对页面链接的URL进行Encode。据我所知，在Freemarker模版文件里是可以使用scriptlet和其他第三方标签的，可是当我直接在&lt;%%&gt;里书写scriptlet时，却被原封不动地输了出来，于是就尝试引入JSTL，以便使用其中的&lt;c:url value=&quot;&quot;/&gt;标签来达到同样目的：</p>  <div class=\"java5\" style=\"font-size: small; font-family: \" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\">   <div style=\"font-weight: bold; color: #ffffff; background-color: #4bacc6; text-align: center\">Java(TM) 2 Platform Standard Edition 5.0, using GeSHi 1.0.8.8</div>    <ol>     <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #339933\">&lt;</span>#assing c=JspTaglibs<span style=\"color: #009900\">[</span><span style=\"color: #0000ff\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span><span style=\"color: #009900\">]</span><span style=\"color: #339933\">&gt;</span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #339933\">&lt;</span>@c.<span style=\"color: #006633\">out</span> value=<span style=\"color: #0000ff\">&quot;url&quot;</span>/<span style=\"color: #339933\">&gt;</span></div>     </li>   </ol>    <div style=\"font-weight: bold; color: #ffffff; background-color: #4bacc6; text-align: center\">Parsed in 0.088 seconds at 919 B/s</div> </div>  <p></p>  <p>同时将JSTL所需.jar文件都放置在/WEB-INF/lib目录下以及将c.tld文件放置在/WEB-INF目录下，结果却一直报错。在网上到处搜索，包括国外的论坛，发现这个问题一直普遍存在，用了许多别人给出的方法都依然无法解决。正当我苦恼不己时，突然想到上次曾经使用过Freemarker的自定义方法，而我这次只不过是需要使用一个简单的方法而已，自己封装一下使之成为Freemarker支持的方法不就行了，何必大费周折呢？</p>  <p> 要想使用Freemarker支持的自定义方法，需要实现freemarker.template.TemplateMethodModel接口，然后将方法对象放入到Freemarker的数据模型中，这样在ftl文件中便可以像使用Freemarker内置方法一样使用该方法了。 </p>  <p>&#160;</p>  <div class=\"java5\" style=\"font-size: small; font-family: \" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\">   <div style=\"font-weight: bold; color: #ffffff; background-color: #4bacc6; text-align: center\">Java(TM) 2 Platform Standard Edition 5.0, using GeSHi 1.0.8.8</div>    <ol>     <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #000000\">import</span> <span style=\"color: #006699\">java.util.List</span><span style=\"color: #339933\">;</span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #000000\">import</span> <span style=\"color: #006699\">javax.servlet.http.HttpServletResponse</span><span style=\"color: #339933\">;</span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #000000\">import</span> <span style=\"color: #006699\">freemarker.template.TemplateMethodModel</span><span style=\"color: #339933\">;</span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #000000\">import</span> <span style=\"color: #006699\">freemarker.template.TemplateModelException</span><span style=\"color: #339933\">;</span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;</div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">/**</span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\"> * Freemarker自定义方法</span></div>        </li><li style=\"background-color: #f4f4f4\">         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\"> * 实现response.encodeURL(url)功能</span></div>       </li>        <li>         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\"> */</span></div>       </li>        <li style=\"background-color: #f4f4f4\">         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #000000\">public</span> <span style=\"font-weight: bold; color: #000000\">class</span> EncodeURLMethod <span style=\"font-weight: bold; color: #000000\">implements</span> TemplateMethodModel <span style=\"color: #009900\">{</span></div>       </li>        <li>         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; </div>       </li>        <li style=\"background-color: #f4f4f4\">         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">private</span> HttpServletResponse response<span style=\"color: #339933\">;</span></div>       </li>        <li>         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; </div>       </li>        <li style=\"background-color: #f4f4f4\">         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #008000; font-style: italic\">/**</span></div>       </li>        <li>         <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * 带参数的构造函数</span></div>          </li><li style=\"background-color: #f4f4f4\">           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * @param response HttpServletResponse对象</span></div>         </li>          <li>           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; */</span></div>         </li>          <li style=\"background-color: #f4f4f4\">           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">public</span> EncodeURLMethod<span style=\"color: #009900\">(</span>HttpServletResponse response<span style=\"color: #009900\">)</span></div>         </li>          <li>           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\">{</span></div>         </li>          <li style=\"background-color: #f4f4f4\">           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">this</span>.<span style=\"color: #006633\">response</span>=response<span style=\"color: #339933\">;</span></div>         </li>          <li>           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\">}</span></div>         </li>          <li style=\"background-color: #f4f4f4\">           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;</div>         </li>          <li>           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #008000; font-style: italic\">/**</span></div>         </li>          <li style=\"background-color: #f4f4f4\">           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * 执行方法</span></div>         </li>          <li>           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * @param argList 方法参数列表</span></div>         </li>          <li style=\"background-color: #f4f4f4\">           <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * @return Object 方法返回值</span></div>            </li><li>             <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * @throws TemplateModelException</span></div>           </li>            <li style=\"background-color: #f4f4f4\">             <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"font-weight: bold; color: #008000; font-style: italic\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; */</span></div>           </li>            <li>             <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">public</span> <a href=\"http://www.google.com/search?sitesearch=java.sun.com&amp;q=allinurl%3Aj2se%2F1+5+0%2Fdocs%2Fapi+Object\"><span style=\"font-weight: bold; color: #003399\">Object</span></a> exec<span style=\"color: #009900\">(</span><a href=\"http://www.google.com/search?sitesearch=java.sun.com&amp;q=allinurl%3Aj2se%2F1+5+0%2Fdocs%2Fapi+List\"><span style=\"font-weight: bold; color: #003399\">List</span></a> argList<span style=\"color: #009900\">)</span> <span style=\"font-weight: bold; color: #000000\">throws</span> TemplateModelException <span style=\"color: #009900\">{</span></div>           </li>            <li style=\"background-color: #f4f4f4\">             <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">if</span><span style=\"color: #009900\">(</span>argList.<span style=\"color: #006633\">size</span><span style=\"color: #009900\">(</span><span style=\"color: #009900\">)</span><span style=\"color: #339933\">!</span>=<span style=\"color: #cc66cc\">1</span><span style=\"color: #009900\">)</span>&#160;&#160; <span style=\"color: #666666; font-style: italic\">//限定方法中必须且只能传递一个参数</span></div>              </li><li>               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\">{</span></div>             </li>              <li style=\"background-color: #f4f4f4\">               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">throw</span> <span style=\"font-weight: bold; color: #000000\">new</span> TemplateModelException<span style=\"color: #009900\">(</span><span style=\"color: #0000ff\">&quot;Wrong arguments!&quot;</span><span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div>             </li>              <li>               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\">}</span></div>             </li>              <li style=\"background-color: #f4f4f4\">               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #666666; font-style: italic\">//返回response.encodeURL执行结果</span></div>             </li>              <li>               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"font-weight: bold; color: #000000\">return</span> response.<span style=\"color: #006633\">encodeURL</span><span style=\"color: #009900\">(</span><span style=\"color: #009900\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span style=\"font-weight: bold; color: #003399\">String</span></a><span style=\"color: #009900\">)</span>argList.<span style=\"color: #006633\">get</span><span style=\"color: #009900\">(</span><span style=\"color: #cc66cc\">0</span><span style=\"color: #009900\">)</span><span style=\"color: #009900\">)</span><span style=\"color: #339933\">;</span></div>             </li>              <li style=\"background-color: #f4f4f4\">               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\">}</span></div>             </li>              <li>               <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\">}</span></div>             </li>                       <div style=\"font-weight: bold; color: #ffffff; background-color: #4bacc6; text-align: center\">Parsed in 0.171 seconds at 5.51 KB/s</div>                        </ol> </div>  <p>输出模版数据模型时，将EncodeURLMethod的实例对象放入模型中：</p>  <p>dataMap.put(&quot;encodeURL&quot;, new EncodeURLMethod(context.getResponse()));&#160; </p>  <p>在Freemarker模版文件中这样使用：</p>  <p>${encodeURL(&quot;/news/showNews.sf?id=123456&quot;)}&#160; </p>  <p>输出结果实际就是使用response.encodeURL输出的结果。</p>  <p>原文地址：<a href=\"http://gzhzh.javaeye.com/blog/433273\">http://gzhzh.javaeye.com/blog/433273</a></p>','2011-03-03 08:07:41','2011-03-03 08:07:41',NULL,NULL,'publish',NULL,'巧用Freemarker的自定义方法','/post/2012/7/14/1344938602690.html',1,0),(271,0,'open','欢迎来访，来访必回...','2011-03-03 04:07:16','2011-10-11 10:29:53',NULL,NULL,'publish',NULL,'留言板','/post/2012/7/14/1344938603328.html',1,0),(272,0,'open','又是阳光明媚的一天，阳光有点晃眼。戴着眼镜坐在电脑旁边久了的人，应该都有这个毛病，害怕阳光。早上躺在被窝里面给老婆打了个电话，告诉她我想她、爱她，顺便叫他起床。叫醒她了，我却赖在被窝里不想起来了，打开手机音乐播放器，单曲循环张惠妹的《我可以抱你吗》，就好像每天睡觉前都会听齐秦的《夜夜夜夜》一样。我只是单纯的喜欢听这两首歌，我可不想变成歌中唱的那样。\n\n好不容易从被我里爬出来，然后叠被子、刷牙、洗脸….去上班。忙的时候还好，可以心无旁骛的敲代码、写程序，心就不会觉得空，觉得无聊了。但是今天偏偏却很闲，坐在那里东看看西瞅瞅、解决一些小问题，然后是不是的看一下电脑右下角的时间。。。 十一点半了，又是同样的宫保鸡丁、油爆鸡丁、溜鸡片或者土豆鸡块。。。。\n\n管他呢，生活就这样，有平淡的时候就有精彩的时候。其实这样平平淡淡也挺好、挺幸福，只是她不在身边。。。','2011-03-02 16:13:51','2011-10-05 21:18:43',NULL,NULL,'publish',NULL,'我想她…','/post/2012/7/14/1344938603386.html',1,2),(273,0,'open','<p>2010年上半年，北京市机动车陡然增长了近35万辆。这一数字，已经超过了作为河北省省会石家庄全市的机动车总量。   <br />知道北京这让人蛋疼的交通情况，虽然我家门口有直达公司的公交车，但是我上班还是一直都是做地铁的。今天心血来潮莫名其妙的做了趟公交车上班。上车就后悔了，马路上车山车海，现在还讲什么低碳生活呢，没钱人低碳，有钱人就是不低碳，马路上全是开私家车的，什么摇车牌号，限购，缴税都不行！ </p>\n','2011-03-02 10:56:15','2011-03-02 10:56:15',NULL,NULL,'publish',NULL,'今年第一次坐公交车上班就迟到了。。。','/post/2012/7/14/1344938603438.html',1,0),(274,0,'open','<p>昨天坐地铁，在地铁上听见别人跟那儿聊天，他们可能是同事。</p>  <p>男：你今年多大呀？</p>  <p>女：属龙的，23了</p>  <p>男：那你什么时候结的婚呀？</p>  <p>女：20</p>  <p>男（夸张的说）：你怎么那么想不开呀！</p>  <p>我那个汗呀，迟早要想不开的。所以呢，我提前想不开吧，哥们今年也要结婚。。。</p>\n','2011-03-01 13:28:59','2011-10-05 21:18:44',NULL,NULL,'publish',NULL,'你怎么那么想不开呀!','/post/2012/7/14/1344938603495.html',1,0),(275,0,'open','<p><img style=\"display: inline; margin-left: 0px; margin-right: 0px\" height=\"502\" alt=\"女医生微博让病人“下班再死”\" src=\"http://farm6.static.flickr.com/5018/5484791356_abe6a3f168.jpg\" width=\"200\" align=\"right\" border=\"0\" /></p>  <p>这两天，一个标注为“此汕头女要火了”的微博被网友疯转。事件主角是汕头市中医院内三科医生李某，她因为微博上让患者“等我下班再死”等言论，被网友称为“冷血医生”。</p>  <p>昨日，南方日报记者连线汕头市中医院，负责处理此事的林姓副院长称，李某并没有承认微博是她所发，不过医院根据其发博时间以及当晚值班情况初步判断是“她本人所发可能性大”。截至发稿时，李某已被调离到后勤洗衣房工作，并被停止处方权。</p>  <p><strong>[反思]</strong></p>  <p><strong>小医生出位言论，为何闹得满城风雨？</strong></p>  <p>李某只是一个中等城市的一个小医生，为何因几句言辞出位的微博，竟引来无数人围观，闹得满城风雨？卫生部医学伦理专家委员会专家董玉整表示，这从侧面折射出如今医患关系紧张，老百姓心中的不满很“易燃”。</p>  <p>“医患关系是复杂社会关系的集中表现，如今老百姓看病难看病贵，容易和医院产生利益冲突，同时由于信息不对等，他们心理也不平衡，看到这样的微博言论，肯定会感到愤怒。”董玉整表示，如果调查属实，李某的态度就存在问题，作为医务工作者就有为患者负责的义务，“值班不能睡觉是应该的，医生要履行救死扶伤的职责。”</p>  <p>但他也坦言，如今不少患者对医务工作者存在误解，“其实他们中大多数人的医德医风还是可以的，在现在这个社会环境下，医生的压力也不小。”董玉整认为，要妥善处理医患关系，需要双方加强沟通理解。医生要更多地换位思考，多站在病人的立场考虑问题，“其实想想，医生也有脱下白大褂去看病的时候，因此加强自身修养很重要。”</p>  <p><strong>[事件回放]</strong></p>  <p><strong>让病人“等我下班再死”</strong></p>  <p>“事实证明，我的RP(人品)实在是太好了呀~昨晚家属无数次要求拔掉输液管让病人安心而去，我一再拒绝，硬是把她的生命延续到了今天，在我下班的时候她开始吐血，估计也就是这几个小时的事了，反正不关我事了，我下班了，噢耶耶耶。”</p>  <p>“测试人品的时刻到了，有个病人的血氧在往下跌，半夜极有可能要起床收尸……这大冷天的，我暖个被窝也不容易，您就等我下班再死，好不？”</p>  <p>“今晚来上班收到的最好消息！亮点在最后2行，病人2：10PM宣布临床死亡~今晚可以睡个好觉！明天可以出游了！”</p>  <p>这三段言论均出自李某的微博，据不完全统计，已被转发万余次，数千网友发表评论，几乎一边倒地认为她“冷血”“没道德”；但也有网友认为，“她只是说了实话”，“看多了，对生死就冷漠了，可以理解”。</p>  <p><strong>[医院回应]</strong></p>  <p><strong>李某已被停止处方权</strong></p>  <p>南方日报记者昨日连线李某所在的汕头市中医院，该院林副院长表示，医院已展开调查，不过当事人并未最终承认微博是她所发，但目前初步判断是“她本人所发可能性大”。</p>  <p>李某平常是个怎样的人？林副院长表示，她是医院聘用的年轻医生，入职三年，平时“没有突出表现，也没被投诉过”。“冷血门”发生后，“她虽没承认是她发的，但态度还算诚恳，表示若对医院名声、医务人员名声造成了负面影响，愿意向公众道歉。”</p>  <p>林副院长说，如今李某已被停止处方权，调到了后勤洗衣房上班，“这是非常严厉的处罚，一般是针对重大医疗事故才会采取的措施。”林副院长表示，这是为了让她反省，也为了“平民愤”。</p>  <p>至于日后她能否回到临床岗位，林副院长表示：“也不是完全没可能，可要看表现。”问及能否直接对话李某，林副院长则说，“还是让她先反省吧。”</p>  <p><strong>[省卫生厅]</strong></p>  <p><strong>“这是个人价值观的问题”</strong></p>  <p>广东省卫生厅新闻发言人孙炳刚昨日对南方日报记者表示，他们已关注此事，并留意到医院正展开调查，但由于调查结果未出，暂时不予置评。</p>  <p>省卫生厅副厅长廖新波也是“织围脖”的高手。他表示，若李某这几条微博是无意发的，“这就是一种无知”。“等她下班了才死，也许她就那么一说，是一句有点玩笑的话语，但经过公众媒体放大，就发酵成一个严肃的、不道德的事件。”</p>  <p>廖新波表示，“冷血微博”事件的确对医疗队伍造成了负面影响，“归根结底这是个人世界观、价值观的问题，也很可能与她不成熟有关，即使是牢骚，也不该这样发，不过媒体也没必要过度放大。”</p>\n','2011-02-28 12:49:53','2011-02-28 12:49:53',NULL,NULL,'publish',NULL,'女医生微博让病人“下班再死”','/post/2012/7/14/1344938603565.html',1,0),(276,0,'open','<p>房子全让有钱人买去了，炒房， 房价飙升。。。！    <br />共产党也不容易呀，出了个限购令： <font style=\"color: red\">     <br />&#160;&#160;&#160;&#160; 本市户籍居民家庭(含部分家庭成员为本市户籍居民的家庭)，限购两套住房；对于能够提供在本市1年以上纳税证明或社会保险缴纳证明的非本市户籍居民家庭，限购1套住房。       <br />&#160;&#160;&#160;&#160; 在暂停在本市拥有2套以上(含2套)住房的本市户籍居民家庭、拥有1套以上(含1套)住房的非本市户籍居民家庭、无法提供在本市1年以上纳税证明或社会保险缴纳证明的非本市户籍居民在本市购房。对境外机构和个人购房，严格按照有关政策执行。 </font>    <br />这个也都难不住别人，每家限购房子套数，他先离婚然后再购房，然后在结婚。。。。&#160; <br />咱啥时候能买上房子撒。。。 </p>\n','2011-02-25 09:49:25','2011-02-25 09:49:25',NULL,NULL,'publish',NULL,'假离婚避限购','/post/2012/7/14/1344938603687.html',1,0),(277,0,'open','<blockquote>   <p>&#160;&#160;&#160;&#160; 最近CCTV热播的一个代言广告中，姚晨童鞋乐呵呵地赶着一头驴去赶集，代言口号：“赶集网，啥都有！”但是，由于姚晨赶的驴子很可爱很抢镜，使得许多观众记住了姚晨赶驴，却忘记了赶集网。</p>    <p>&#160;&#160;&#160;&#160; 结果，据说很昂贵的CCTV广告砸出来一个花边产物“赶驴网”：在短短10天内，“赶驴网”的百度指数就从几十飞涨到了成百上千次，论坛也出现了大量迷茫的观众问为啥搜不到“赶驴网”。大家似乎忘了赶集，只想着赶驴。</p>    <p>&#160;&#160;&#160;&#160; 就在此时，说时迟，那时快，眼疾手快、心知肚明的百姓网急速出手，立即抢注了“赶驴网”，并且针对“赶集网，啥都有！”的口号设计了新口号：“赶驴网，啥没有？”，这究竟是“有心赶集没赶成，无心赶驴成就驴”，还是为谁辛苦为谁甜？为人做了嫁衣裳？</p>    <p>&#160;&#160;&#160;&#160; 据说，2011年赶集网广告预算高达4亿元人民币，雄心不小，胃口很大。更有甚之，还据说，赶集网甚至还得为“赶驴网”这个无厘头关键字再买百度的竞价排名广告，额外支付一笔不菲的开销。</p>    <p>&#160;&#160;&#160;&#160; 也许是赶集网去年拿到了5000万美元投资，急于给投资人一个交代，所以要做广告？也许是赶集网想让自己的分类信息网站更贴近收看CCTV的观众，所以选了CCTV电视广告？也许是微博女王风头正足，所以选了姚晨？但也许人们只记住了CCTV上姚晨所赶的那头驴，谁让广告创意方把头驴搞得那么引人注目？！</p></blockquote>\n','2011-02-25 02:21:00','2011-02-25 02:21:00',NULL,NULL,'publish',NULL,'姚晨捧红“赶驴网” 为人做了嫁衣裳','/post/2012/7/14/1344938603740.html',1,0),(278,0,'open','<blockquote>   <p>我是个比较能折腾的人，今天将博客换成wordpress试了一下，虽然wordpress功能和扩展性上臂zblog好很多，但是它的访问速度明显没有zblog快，而且它的汉化也不是很测底，结果我有换成了zblog了。。。。</p></blockquote>\n','2011-02-23 17:37:59','2011-02-23 17:37:59',NULL,NULL,'publish',NULL,'用来用去还是zblog好','/post/2012/7/14/1344938603791.html',1,0),(279,0,'open','<blockquote>   <p>&#160;&#160;&#160;&#160; 随着熙熙攘攘的人流挤进车厢，有很多人先冲进来来的人都抢到了座位，虽然我位置比较靠前，但我没去抢，因为我觉得在车门打开的一刹那冲进去，找到座位后把屁股狠狠的放在上面这一举动显得很不雅。我站在靠门的一侧，琢磨着晚上回去吃什么。一阵悦耳的铃音响起，我这才注意到在我的右侧站着一位女孩子，人很漂亮，长长的头发如瀑布倾泻而下，一群将她衬托的宛若人间仙子。她接电话的时候笑的很甜蜜：老公，我在车上了。什么？你又加班啊？到几点啊？怎么也12点啊？太晚了，你在单位下面的饭店吃点吧，别吃太油腻的东西，还有，天太热，别吃辣的，容易上火。少抽点烟，晚上你打车回来吧？提前给我打个电话，我到小区门口接你。恩，恩，我随便吃点就行，好，好，88。多么体贴的妻子啊，不禁艳羡。 到**足球场时，她的电话又响了，她又接起电话：老公怎么啦？回来吃啊？不是要加班吗？哦，那太好了，你想吃点什么？我回去就去买菜，没事，不麻烦，我去咱家楼下的超市，家里有豆角，我把豆角择好，我再买点西红柿吧，什么？给你炒米饭？好的，蛋炒饭吧？没问题，水果我就不买了，冰箱里还有半个西瓜，咱就吃西瓜吧。恩，行，我给你榨西瓜汁…………听得我都妒忌了，唉，标准的贤妻良母啊。她似乎并不关心这是在车上，身边 还有很多人，也许她觉得尽管人很多，但谁都不认识谁，下车各走各的，所以，她还在继续：老公，你早点回来哦，路上小心，哦，吃完饭我就不出去玩了，我还得先把你的衣服洗了…………天啊，做这么多活还洗衣服，有这样的老婆，此生也真该知足了，我忽然很想看看她的老公是什么样，一个如此幸福的人是什么样。 车到**中路的时候，这位贤妻拿着电话又拨了一个号码，说话的声音明显比才小，但离我比较近，我相信身边几个人还是能听到的，内容如下： 你别过来了，我老公一会就回来，他不加班了。我不知道电话那边说什么，只见女孩子认真的听着电话，沉默了一会说，面露愁容的说：恩，我也是……我也爱你…………生活，也许这就是生活，我随着熙熙攘攘的人群下车，我身边的人，又都有什么样的故事？</p></blockquote>\n','2011-02-21 14:22:00','2011-02-21 14:22:00',NULL,NULL,'publish',NULL,'公车上一位贤妻的电话雷倒我','/post/2012/7/14/1344938603845.html',1,0),(280,0,'open','<blockquote>   <p>在实际编程时，要使Log4j真正在系统中运行事先还要对配置文件进行定义。定义步骤就是对Logger、Appender及Layout的分别使用。      <br />Log4j支持两种配置文件格式，一种是XML格式的文件，一种是java properties（key=value）【Java特性文件（键=值）】。下面我们介绍使用Java特性文件做为配置文件的方法       <br />具体如下：       <br /><strong>1、配置根Logger，</strong>其语法为：       <br />log4j.rootLogger = [ level ] , appenderName1, appenderName2, …       <br />level : 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。比如在这里定 义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来。       <br />appenderName:就是指定日志信息输出到哪个地方。您可以同时指定多个输出目的地。       <br />例如：log4j.rootLogger＝info,A1,B2,C3       <br /><strong>2、配置日志信息输出目的地</strong>，其语法为：       <br />log4j.appender.appenderName = fully.qualified.name.of.appender.class&#160; //       <br />&quot;fully.qualified.name.of.appender.class&quot; 可以指定下面五个目的地中的一个：       <br />1.org.apache.log4j.ConsoleAppender（控制台）       <br />2.org.apache.log4j.FileAppender（文件）       <br />3.org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）       <br />4.org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）       <br />5.org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）       <br /><strong>1.ConsoleAppender选项        <br /></strong>Threshold=WARN:指定日志消息的输出最低层次。       <br />ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。       <br />Target=System.err：默认情况下是：System.out,指定输出控制台       <br /><strong>2.FileAppender</strong> 选项       <br />Threshold=WARN:指定日志消息的输出最低层次。       <br />ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。       <br />File=mylog.txt:指定消息输出到mylog.txt文件。       <br />Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。       <br />3.<strong>DailyRollingFileAppender</strong> 选项       <br />Threshold=WARN:指定日志消息的输出最低层次。       <br />ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。       <br />File=mylog.txt:指定消息输出到mylog.txt文件。       <br />Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。       <br />DatePattern=\'.\'yyyy-ww:每周滚动一次文件，即每周产生一个新的文件。当然也可以指定按月、周、天、时和分。即对应的格式如下：       <br />1)\'.\'yyyy-MM: 每月       <br />2)\'.\'yyyy-ww: 每周       <br />3)\'.\'yyyy-MM-dd: 每天       <br />4)\'.\'yyyy-MM-dd-a: 每天两次       <br />5)\'.\'yyyy-MM-dd-HH: 每小时       <br />6)\'.\'yyyy-MM-dd-HH-mm: 每分钟       <br />4.<strong>RollingFileAppender</strong> 选项       <br />Threshold=WARN:指定日志消息的输出最低层次。       <br />ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。       <br />File=mylog.txt:指定消息输出到mylog.txt文件。       <br />Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。       <br />MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。       <br />MaxBackupIndex=2:指定可以产生的滚动文件的最大数。</p>    <p>实际应用：      <br />log4j.appender.A1=org.apache.log4j.ConsoleAppender //这里指定了日志输出的第一个位置A1是控制台ConsoleAppender       <br /><strong>3、配置日志信息的格式</strong>，其语法为：       <br /><strong>A.</strong><strong>log4j.appender.appenderName.layout = fully.qualified.name.of.layout.class        <br /></strong>&quot;fully.qualified.name.of.layout.class&quot; 可以指定下面4个格式中的一个：       <br />1.org.apache.log4j.HTMLLayout（以HTML表格形式布局），       <br />2.org.apache.log4j.PatternLayout（可以灵活地指定布局模式），       <br />3.org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），       <br />4.org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）       <br />1.HTMLLayout 选项       <br />LocationInfo=true:默认值是false,输出java文件名称和行号       <br />Title=my app file: 默认值是 Log4J Log Messages.       <br />2.PatternLayout 选项       <br />ConversionPattern=%m%n :指定怎样格式化指定的消息。       <br />3.XMLLayout&#160; 选项       <br />LocationInfo=true:默认值是false,输出java文件和行号       <br />实际应用：       <br />log4j.appender.A1.layout=org.apache.log4j.PatternLayout</p>    <p><strong>B</strong>. <strong>log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n        <br /></strong>这里需要说明的就是日志信息格式中几个符号所代表的含义：       <br />－X号: X信息输出时左对齐；       <br />%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,       <br />%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921       <br />%r: 输出自应用启动到输出该log信息耗费的毫秒数       <br />%c: 输出日志信息所属的类目，通常就是所在类的全名       <br />%t: 输出产生该日志事件的线程名       <br />%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)       <br />%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。       <br />%%: 输出一个&quot;%&quot;字符       <br />%F: 输出日志消息产生时所在的文件名称       <br />%L: 输出代码中的行号       <br />%m: 输出代码中指定的消息,产生的日志具体信息       <br />%n: 输出一个回车换行符，Windows平台为&quot;\\r\\n&quot;，Unix平台为&quot;\\n&quot;输出日志信息换行       <br />可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：       <br />1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。       <br />2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，&quot;-&quot;号指定左对齐。       <br />3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。       <br />4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边交远销出的字符截掉。</p>    <p>这里上面三个步骤是对前面Log4j组件说明的一个简化；下面给出一个具体配置例子，在程序中可以参照执行：      <br />log4j.rootLogger=INFO,A1，B2       <br />log4j.appender.A1=org.apache.log4j.ConsoleAppender       <br />log4j.appender.A1.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n       <br />\n根据上面的日志格式，某一个程序的输出结果如下：       <br />0 INFO 2003-06-13 13:23:46968 ClientWithLog4j Client socket: Socket[addr=localhost/127.0.0.1,port=8002,localport=2014]       <br />16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j Server says: \'Java server with log4j, Fri Jun 13 13:23:46 CST 2003\'       <br />16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j GOOD       <br />16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j Server responds: \'Command \'HELLO\' not understood.\'       <br />16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j HELP       <br />16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j Server responds: \'Vocabulary: HELP QUIT\'       <br />16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j QUIT       <br /><strong>4. # 当输出信息于回滚文件时</strong></p>    <p>log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender&#160; //指定以文件的方式输出日志      <br />log4j.appender.ROLLING_FILE.Threshold=ERROR       <br />log4j.appender.ROLLING_FILE.File=rolling.log&#160; //文件位置,也可以用变量${java.home}、rolling.log       <br />log4j.appender.ROLLING_FILE.Append=true       <br />log4j.appender.ROLLING_FILE.MaxFileSize=10KB&#160; //文件最大尺寸       <br />log4j.appender.ROLLING_FILE.MaxBackupIndex=1&#160; //备份数       <br />log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n </p>    <p>××××××××××××××××××××××××××××××××××××××××××××××××      <br /><strong>       <br /></strong><strong>Log4j比较全面的配置</strong></p>    <p>LOG4J的配置之简单使它遍及于越来越多的应用中了：Log4J配置文件实现了输出到控制台、文件、回滚文件、发送日志邮件、输出到数据库日志表、自定义标签等全套功能。择其一二使用就够用了，</p>    <p>log4j.rootLogger=DEBUG,CONSOLE,A1,im      <br />log4j.addivity.org.apache=true</p>    <p># 应用于控制台</p>    <p>log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender      <br />log4j.appender.Threshold=DEBUG       <br />log4j.appender.CONSOLE.Target=System.out       <br />log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.CONSOLE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n       <br />#log4j.appender.CONSOLE.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD] n%c[CATEGORY]%n%m[MESSAGE]%n%n</p>    <p>#应用于文件</p>    <p>log4j.appender.FILE=org.apache.log4j.FileAppender      <br />log4j.appender.FILE.File=file.log       <br />log4j.appender.FILE.Append=false       <br />log4j.appender.FILE.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n       <br /># Use this layout for LogFactor 5 analysis</p>    <p># 应用于文件回滚</p>    <p>log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender      <br />log4j.appender.ROLLING_FILE.Threshold=ERROR       <br />log4j.appender.ROLLING_FILE.File=rolling.log&#160; //文件位置,也可以用变量${java.home}、rolling.log       <br />log4j.appender.ROLLING_FILE.Append=true&#160; //true:添加&#160; false:覆盖       <br />log4j.appender.ROLLING_FILE.MaxFileSize=10KB&#160; //文件最大尺寸       <br />log4j.appender.ROLLING_FILE.MaxBackupIndex=1&#160; //备份数       <br />log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p>    <p>#应用于socket      <br />log4j.appender.SOCKET=org.apache.log4j.RollingFileAppender       <br />log4j.appender.SOCKET.RemoteHost=localhost       <br />log4j.appender.SOCKET.Port=5001       <br />log4j.appender.SOCKET.LocationInfo=true       <br /># Set up for Log Facter 5       <br />log4j.appender.SOCKET.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.SOCET.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD]%n%c[CATEGORY]%n%m[MESSAGE]%n%n</p>    <p># Log Factor 5 Appender      <br />log4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appender       <br />log4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000</p>    <p># 发送日志给邮件</p>    <p>log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender      <br />log4j.appender.MAIL.Threshold=FATAL       <br />log4j.appender.MAIL.BufferSize=10       <br />log4j.appender.MAIL.From=web@www.wuset.com       <br />log4j.appender.MAIL.SMTPHost=www.wusetu.com       <br />log4j.appender.MAIL.Subject=Log4J Message       <br />log4j.appender.MAIL.To=web@www.wusetu.com       <br />log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p>    <p># 用于数据库      <br />log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender       <br />log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test       <br />log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver       <br />log4j.appender.DATABASE.user=root       <br />log4j.appender.DATABASE.password=       <br />log4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES (\'[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n\')       <br />log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout       <br />log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p>    <p>log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender      <br />log4j.appender.A1.File=SampleMessages.log4j       <br />log4j.appender.A1.DatePattern=yyyyMMdd-HH\'.log4j\'       <br />log4j.appender.A1.layout=org.apache.log4j.xml.XMLLayout</p>    <p>#自定义Appender</p>    <p>log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender</p>    <p>log4j.appender.im.host = mail.cybercorlin.net      <br />log4j.appender.im.username = username       <br />log4j.appender.im.password = password       <br />log4j.appender.im.recipient = corlin@cybercorlin.net</p>    <p>log4j.appender.im.layout=org.apache.log4j.PatternLayout      <br />log4j.appender.im.layout.ConversionPattern =[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p></blockquote>\n','2011-02-21 12:58:30','2011-02-21 12:58:30',NULL,NULL,'publish',NULL,'Log4J配置','/post/2012/7/14/1344938603897.html',1,1),(281,0,'open','<p><a title=\"苹果有毒\" href=\"http://www.flickr.com/photos/47141198@N02/5454939017/\"><img style=\"display: inline; margin-left: 0px; margin-right: 0px\" alt=\"苹果有毒\" src=\"http://farm6.static.flickr.com/5251/5454939017_fc9f46f27b.jpg\" align=\"right\" border=\"0\" /></a>苹果公司15日发布2010年的供应链管理报告，<a href=\"http://tech.ifeng.com/it/detail_2011_02/18/4734757_0.shtml\">首次公开承认中国供应链致残员工</a>。</p>  <p>在这份长达25页的供应商责任进展报告中，苹果公司指出其供应商联建科技有137名工人“因暴露于正己烷环境，健康遭受不利影响”。同时，苹果还提出，自从发现这个问题之后，已经“要求胜华科技停止使用正己烷，并提供证据证明已将该化学品从生产线上撤下……自采取上述措施以来，再无工人因化学品暴露受到损害”。</p>  <p>其实，苹果供应商的问题已经不是一个新问题了，无论是媒体还是环保组织一直都在关注着这个问题。</p>  <p>2010年，有36家国内环保组织为促进IT产业解决污染问题，与29个IT品牌进行多轮沟通。其中，对苹果的供应链职业安全、供应链环境保护、供应链员工权益和尊严提出过质疑，敦促苹果公司公布供应链信息、对苏州联建科技公司和运恒五金公司员工的正己烷中毒做出回应。</p>  <p>而在事件中，苹果公司的态度也一直为人所诟病，<a href=\"http://news.ifeng.com/opinion/society/detail_2011_02/18/4735578_0.shtml\">李星文在评论中说道</a>：作为一家有着全球知名度和较高美誉度的跨国公司，苹果有责任和义务保证自己的产品在所有环节上都没有明显瑕疵。所谓没有瑕疵，不仅是产品质量过硬，更重要的是不能与“有毒工厂”有染。苹果公司每年发布一份“供应商社会责任进展报告”，承诺“确保供应链有安全的工作条件，确保工人受到尊重并享有尊严，同时确保生产过程对环境负责”。这些话听起来美妙，可是苹果却没能尽到责任，让这些条款成了一纸空文。苹果公司既然能以强硬的手段保证供应商的产品合格率，就必然能以同样强硬的手段保证工人的身体健康。</p>  <p>当然也有人并不认同苹果公司应该在整个事件中承担最主要的责任，<a href=\"http://news.ifeng.com/opinion/society/detail_2011_02/18/4734773_0.shtml\">魏冈就认为</a>：或许，有人认为受害员工应当向苹果索赔，但事实上，这些工人的确是在生产IPAD或者IPHONE等产品中受到损害，苹果公司作为一知名企业，应当负有道义上的责任要求其供应商善待员工，但这并不意味着苹果公司应该为此承担法律责任，除非有证据证明苹果要求其供应商必须以此种方式生产。供应商才是承担责任的主体，苹果公司应该承担的企业社会责任，是考核、督促供应商履行法律义务，让工人在一个安全的环境中作业。</p>  <p>其实，无论怎样，都不能逃避政府应该承担的监管责任：要确保企业员工在一个安全和卫生的环境中作业，企业依法自然重要，但政府监管也必不可少，在侵权赔偿很难实现的前提下，当地政府的处罚威慑是保障工人权利的必不可缺的前提。在环保组织发布报告之后，公众把主要注意力放在苹果公司的反应上，却忽视当地政府监管部门的行动。这可能是一条南辕北辙的道路。</p>  <p>而事件的根本就在于利益，政府为了追求GDP放松对企业的准入与监管，苹果公司为了利润最大限度的压榨供应商的利润空间，而供应商不得不在有限的利润空间里再去降低成本，使工人在一个危险的环境里工作。于是，处于产业链最底层的中国产业工人就成为了各方追求利益最大化的牺牲品。而这，也是对中国工人最大的不公。</p>\n','2011-02-18 14:32:08','2011-02-18 14:32:08',NULL,NULL,'publish',NULL,'“苹果”有毒','/post/2012/7/14/1344938603959.html',1,0),(282,0,'open','<div class=\"xml\" style=\"font-size: small; font-family: \" #ffffff;?=\"#ffffff;?\" background-color:=\"background-color:\" monospace;=\"monospace;\" courier,=\"courier,\" New?,=\"New?,\" Courier=\"Courier\">   <div style=\"font-weight: bold; color: #ffffff; background-color: #4bacc6; text-align: center\">XML, using GeSHi 1.0.8.8</div>    <ol>     <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;?xml</span> <span style=\"color: #000066\">version</span>=<span style=\"color: #ff0000\">&quot;1.0&quot;</span> <span style=\"color: #000066\">encoding</span>=<span style=\"color: #ff0000\">&quot;UTF-8&quot;</span><span style=\"font-weight: bold; color: #000000\">?&gt;</span></span> </div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;</div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #00bbdd\">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #00bbdd\">&#160;&#160; &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot; </span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #00bbdd\">&#160;&#160; &quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span> </div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;</div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;hibernate-mapping<span style=\"font-weight: bold; color: #000000\">&gt;</span></span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;class</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;com.quanxun.aicrm.workshield.WorkShieldView&quot;</span> <span style=\"color: #000066\">table</span>=<span style=\"color: #ff0000\">&quot;C_WOR_SHE_NI_V&quot;</span><span style=\"font-weight: bold; color: #000000\">&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;composite-id<span style=\"font-weight: bold; color: #000000\">&gt;</span></span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldId&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_ID&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldNodeId&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_NOD_ID&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldNodeInstanceId&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_NI_ID&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;groupId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;GRO_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;userId&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;USE_ID&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em\nmonospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldTypeId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_TYP_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldTypeName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldStatusId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_STA_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldStatusName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_STA_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;principalId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;PRI_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;principalName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;PRI_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldAliasId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_ALI_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;criticalId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;CRI_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;criticalName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;CRI_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;shieldStartDate&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;SHE_STA_DAT&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-p\nroperty</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;shieldOnDate&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;SHE_ON_DAT&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;shieldEndDate&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;SHE_END_DAT&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;abs&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;ABS&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;nodeStartDate&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;NOD_STA_DAT&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;nodeOnDate&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;NOD_ON_DAT&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;nodeEndDate&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;NOD_END_DAT&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;workShieldNodeName&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;WOR_SHE_NOD_NAM&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;nodeStatusId&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;STA_ID&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;nodeStatusName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;NOD_STA_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;userName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;USE_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;groupName&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.String&quot;</span> <span style=\"color: #000\n066\">column</span>=<span style=\"color: #ff0000\">&quot;GRO_NAM&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;key-property</span> <span style=\"color: #000066\">name</span>=<span style=\"color: #ff0000\">&quot;isDelay&quot;</span> <span style=\"color: #000066\">type</span>=<span style=\"color: #ff0000\">&quot;java.lang.Long&quot;</span> <span style=\"color: #000066\">column</span>=<span style=\"color: #ff0000\">&quot;IS_DEL&quot;</span> <span style=\"font-weight: bold; color: #000000\">/&gt;</span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160;&#160;&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;/composite-id<span style=\"font-weight: bold; color: #000000\">&gt;</span></span></span></div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;&#160;&#160; <span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;/class<span style=\"font-weight: bold; color: #000000\">&gt;</span></span></span> </div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;</div>     </li>      <li style=\"background-color: #f4f4f4\">       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\"><span style=\"color: #009900\"><span style=\"font-weight: bold; color: #000000\">&lt;/hibernate-mapping<span style=\"font-weight: bold; color: #000000\">&gt;</span></span></span></div>     </li>      <li>       <div style=\"padding-right: 0px; padding-left: 0px; background: none transparent scroll repeat 0% 0%; padding-bottom: 0px; margin: 0px; font: 1em/1.2em monospace; vertical-align: top; padding-top: 0px\">&#160;</div>     </li>   </ol>    <div style=\"font-weight: bold; color: #ffffff; background-color: #4bacc6; text-align: center\">Parsed in 0.021 seconds at 133.67 KB/s</div> </div>  <p>这样使用联合主键，将整个对象看作一个唯一标识。</p>\n','2011-02-18 14:10:52','2011-02-18 14:10:52',NULL,NULL,'publish',NULL,'Hibernate无主键配置','/post/2012/7/14/1344938604011.html',1,0),(283,0,'open','<p><strong><a name=\"1\">历史背景</a><a title=\"bki-20110215090412-666523945\" href=\"http://www.flickr.com/photos/47141198@N02/5452090117/\"><img style=\"display: inline; margin-left: 0px; margin-right: 0px\" alt=\"bki-20110215090412-666523945\" src=\"http://farm6.static.flickr.com/5058/5452090117_6b774b01ec.jpg\" align=\"right\" border=\"0\" /></a></strong></p>  <p>&#160;&#160;&#160;&#160;&#160;&#160; 1、日本每年都有“微情书”赛 ，其实三行诗并不是浙大人的原创，这种题材的诗历史上见诸不少名诗人手笔。   <br />&#160;&#160;&#160;&#160;&#160;&#160; 2、其中<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E6%96%87%E8%89%BA\">文艺</a>复兴时期的诗人<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E4%BD%86%E4%B8%81\">但丁</a>的名著《神曲》便是应用最多三行韵律的诗歌。《神曲》全书一百歌一律用“三行韵律”或“三行连锁押韵法”写成。每个歌都是由三行诗节一环扣一环，连锁接成的长链条。&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 3、1994年—2005年，日本<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E6%97%A5%E8%AF%AD\">日语</a>文章能力检定协会每年都会举行一项“小情书”比赛，每次的投稿数都在1万件上下。参赛者年龄跨度也相当大，从不到10岁到年逾90岁。其中女性又明显多于男性。 </p>  <p><strong><a name=\"2\">流行背景</a></strong></p>  <p>&#160;&#160;&#160;&#160;&#160;&#160; 1、时值七夕“给Ta送什么？”、“为Ta做什么？”、“向Ta说什么？”的三段式问句在日常<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E7%94%9F%E6%B4%BB\">生活</a>里开始此起彼伏。于是，受到“三行情书”的启发，<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E4%B8%83%E5%A4%95%E8%8A%82\">七夕节</a>又有了一种新的style——写一封“微情书”给你的Ta。&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 2、<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6\">浙江大学</a>勤创中心的袁铭背诵了一首三行小诗，这是她在“三行情书”大赛中最喜欢的作品，曾经有一种说法：大学里所有科目都可以不修，只有“恋爱”这门课不容错过。这就是三行情书大赛举办的初衷，虽然活动在2010年5月份就酝酿开始，但没想到因为<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E4%B8%83%E5%A4%95\">七夕</a>，这个活动才真正走向高潮。”&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 3、三行情书大赛的点子最初来源于浙大勤创中心一位同学的灵光一闪。活动发起后得到了同学们的踊跃参与，短短半个月时间就收集到二百余份<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E4%BD%9C%E5%93%81\">作品</a>。不仅如此，部分作品被传到了网上，跟帖众多。&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 4、登陆国内某著名<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E8%A7%86%E9%A2%91\">视频</a>网站，标题为“浙江大学三行情书”的视频引来了上万的点击量。这个浙大学生创办的一个活动让无数网友说自己“内牛满面”。</p>  <p><strong><a name=\"3\">主要目的</a></strong></p>  <p>&#160;&#160;&#160;&#160;&#160;&#160; 1、浙大学生有很多宅男，普遍很羞涩，也常听说某个同学有了喜欢的女生，但直到毕业还未表白。举办这个活动目的是为同学们提供一个表达自我的平台。我们希望更多同学的大学生活不留遗憾。 <a title=\"bki-20110215090424-382076976\" href=\"http://www.flickr.com/photos/47141198@N02/5452701018/\"><img style=\"display: inline; margin-left: 0px; margin-right: 0px\" alt=\"bki-20110215090424-382076976\" src=\"http://farm6.static.flickr.com/5292/5452701018_e563010d78.jpg\" align=\"right\" border=\"0\" /></a>    <br />&#160;&#160;&#160;&#160;&#160;&#160; 2、三行情书的出现重新给新时代情书予以了<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E5%AE%9A%E4%B9%89\">定义</a>：一个时代的爱情总带有那个时代深刻的烙印，如今进入微时代，爱情经不起等待，既要言简意赅地表白，也要快速精准地到达， ‘三行情书’正是用这种简单的方式传递爱情，它告诉我们，爱情可以很简单。</p>  <p><strong><a name=\"4\">煽情情书</a></strong></p>  <p>&#160;&#160;&#160;&#160;&#160;&#160; 1、电影版《将爱情进行到底》在京举行预告片及海报发布会。原班人马导演张一白，主演<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E6%9D%8E%E4%BA%9A%E9%B9%8F\">李亚鹏</a>、<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E7%8E%8B%E5%AD%A6%E5%85%B5\">王学兵</a>、廖凡、崔达志到场助阵。因故不能到场的女主角徐静蕾也通过电话表达了祝福。张一白称电影版讲述的是杨铮、文慧十二年后的故事，而不是原作的翻拍。&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 2、电影版《将爱情进行到底》讲述杨峥和文慧十二年后的情感遭遇，是十年前故事的延续与发展。导演张一白设计了三段式的结构，展示两个人三种迥然不同的情感可能。当年就想拍续集，只是不知道怎么拍。张一白称当年的《将爱》对自己来说就如初恋一般，2009年突然觉得可以拍了，过了这么久，也是剧中这帮人出来表达感情经历的时候了。&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 3、现场还进行了“微情书”评选活动。<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E6%9D%8E%E4%BA%9A%E9%B9%8F\">李亚鹏</a>凭着“想到你的样子，我就笑了，还想要些什么呢，幸福还是糖”的小诗获得了“最煽情”的评价，李亚鹏承认是自己写给<a href=\"http://baike.soso.com/ShowTitle.e?sp=S%E7%8E%8B%E8%8F%B2\">王菲</a>的，“不过她看了之后没什么表示”。&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 4、十二年后，再谈爱情，李亚鹏显得颇为感慨，婚前觉得爱情就是特浪漫特甜蜜，婚后才知道普通生活就是爱。此番见到多年不见的老友，李亚鹏显得十分兴奋，并特别要求四人口叼一枝玫瑰合影留念，以纪念逝去的青春岁月。</p>\n','2011-02-17 11:28:33','2011-02-17 11:28:33',NULL,NULL,'publish',NULL,'微情书','/post/2012/7/14/1344938604658.html',1,1),(284,0,'open','<p><strong><a title=\"Nokia WP7手机\" href=\"http://www.flickr.com/photos/47141198@N02/5452428634/\"><img style=\"display: block; float: none; margin-left: auto; margin-right: auto\" alt=\"Nokia WP7手机\" src=\"http://farm6.static.flickr.com/5020/5452428634_2e0275d8bb.jpg\" border=\"0\" /></a></strong></p>  <p><strong>腾讯数码讯</strong>（水蓝）诺基亚与微软两大巨人的战略结盟,自然让人们对诺基亚Windows Phone7系统手机的推出充满期待。然而，事情也许要比人们预料的更糟一些。除了逐步放弃塞班和Megoo系统而转投微软平台本身存在不少争议之外，诺基亚Windows Phone7系统手机的上市时间更是有可能被推迟。根据海外媒体最新的报道，诺基亚要等到今年十月份微软发布新版Windows Phone平台之后，才会在自家手机上安装这个系统。而这也意味着诺基亚不会采用微软目前的Windows Phone 7平台，两家的合作要到十月份才真正开始。</p>  <p><strong>搭载Windows Phone 7.5系统</strong></p>  <p>我们知道，诺基亚和微软两家公司虽然在上周达成战略协议，将在智能手机领域展开广泛合作。但备受争议的诺基亚CEO Stephen Elop一直对首款诺基亚微软平台手机的推出时间守口如瓶，即便发布首款Windows Phone7系统概念手机之后，也对外界给出的是一个年内问世的模糊时间。</p>  <p>而来自知情人士透露的消息显示，诺基亚要等到今年十月份微软发布新版Windows Phone平台之后，才会在自家手机上安装这个系统。而这也意味着诺基亚至少目前不会采用微软Windows Phone 7平台，两家的合作要到十月份才真正开始。</p>  <p><strong>诺基亚WP手机或明年上市</strong></p>  <p>尽管该消息并没有得到诺基亚官方的证实，但坊间注意到诺基亚CEO Stephen Elop在多个场合强调诺基亚将采用Windows Phone操作系统，而不是Windows Phone 7。不过，诺基亚董事长约玛·奥里拉在接受芬兰广播电台YLE的采访时表示，诺基亚Windows Phone系统手机将于2012年上市。同时除了微软外，诺基亚还有其它潜在合作伙伴。</p>  <p>因此，接下来很可能出现的状况是，诺基亚在微软新版本系统发布后的10月份发布第一款Window Phone手机，然后在明年开始出货上市。但很显然，如果这样的推断成立的话，对诺基亚而言也许是个灾难。</p>  <p><strong>Windows Phone 7.5系统</strong></p>  <p>尽管看起来情况不太让人乐观，但微软在今年十月份可能会发布代号为“芒果”（Mango）的新版Windows Phone系统还是值得我们关注。按照消息人士的说法，未来新版本系统的正式名称可能会与现在的有所不同，据传为Windows Phone 7.5。</p>  <p>根据知名博客Paul Thurrott之前披露的关于Windows Phone 7两个升级版的更多内幕消息显示。Windows Phone 7系统的两个升级版本代号分别为“NoDo”和“Mango”，其中 “NoDo”意为“No Donuts”，则可能提供了复制、粘贴功能，并提升系统的性能和稳定性。而Mango则是一次重大升级，它会将系统提升至Windows Phone OS 7.5，可能会使用移动版IE9浏览器、Silverlight运行时（runtime）和HTML5的支持。</p>  <p><strong>未来充满诸多变数</strong></p>  <p>很显然，这些功能升级和变化在不久前微软发布会上似乎都得到了部分印证。换句话来说，微软之前披露的关于Windows Phone系统在年内实现的一些重要更新将很可能在以Windows Phone 7.5为名的新系统版本中实现。</p>  <p>当然，关于诺基亚Windows Phone 手机将来会装载新版本系统的消息，在更多时候看起来更像是一种诺基亚拥趸们的安慰和交代，就如同几天前微软和诺基亚迫不及待亮相的那款Windows Phone概念手机一样，这让支持者在心里上存在一种似乎漫长的等待或许是值得的想法。</p>\n','2011-02-17 09:10:58','2011-02-17 09:10:58',NULL,NULL,'publish',NULL,'诺基亚WP7手机或10月发布 搭载新版系统','/post/2012/7/14/1344938604725.html',1,0),(285,0,'open','<blockquote>   <p>如果web应用使用了Struts，那么就有可能出现这个错误，这个错误虽然不会影响到程序的运行，但是座位一个程序员来说，看起啦还是很不爽的，具体解决办法为：</p>    <p>1，在项目中找到struts.jar，使用winrar解压到目录struts下</p>    <p>2，找到struts\\META-INF\\MANIFEST.MF文件，使用文本编辑器打开</p>    <p>3，在文件中找到&#160; </p>    <p>Class-Path: commons-beanutils.jar     <br />Class-Path: commons-collections.jar      <br />Class-Path: commons-dbcp.jar      <br />Class-Path: commons-digester.jar      <br />Class-Path: commons-logging.jar      <br />Class-Path: commons-pool.jar      <br />Class-Path: commons-validator.jar      <br />Class-Path: jakarta-oro.jar</p>    <p>将这里只改成一行 ： Class-Path: commons-beanutils.jar commons-collections.jar commons-dbcp.jar commons-digester.jar commons-logging.jar commons-pool.jar commons-validator.jar jakarta-oro.jar&#160;&#160; 每个jar文件之间使用空格隔开</p>    <p>4，找到之前的struts.jar文件，使用winrar打开，进入META-INF目录下，然后直接将我们修改过的MANIFEST.MF文件拖进去覆盖就可以了。 </p>    <p>5，然后将我们修改过的struts.jar文件copy到项目中覆盖以前的文件就可以了</p></blockquote>\n','2011-02-16 14:45:13','2011-02-16 14:45:13',NULL,NULL,'publish',NULL,'警告: Duplicate name in Manifest: Class-Path.解决办法','/post/2012/7/14/1344938604845.html',1,0),(286,0,'open','<p><a title=\"201102150743147907e\" href=\"http://www.flickr.com/photos/47141198@N02/5449507627/\"><img style=\"display: block; float: none; margin-left: auto; margin-right: auto\" alt=\"201102150743147907e\" src=\"http://farm6.static.flickr.com/5293/5449507627_f26dab3abb.jpg\" border=\"0\" /></a></p>  <p><strong>&#160;&#160;&#160; </strong><strong>成都商报2月15日报道</strong></p>  <p>&#160;&#160;&#160; 今年春晚，<a href=\"http://data.ent.163.com/star/product/00000RIA.html\">李小冉</a>送出“动漫兔”贺图时，导播给出一帧台下女观众的特写，惊鸿一瞥让很多网友记忆犹新，“春晚最美女观众”的称号在网络上不胫而走。而她的真实身份也迅速被网友曝光 她的名字叫夏达，是一名漫画家，“动漫兔”贺图正是她的作品。一时间，关于夏达的报道和议论传遍网络。 日前，记者通过网络采访了目前正在台北参加书展的夏达。</p>  <p><strong>出道：从小喜欢画 大学未毕业就已出书</strong></p>  <p>夏达，1981年4月4日出生于湖南怀化，4月出生，逢夏至未达，故名夏达，“这是我爷爷留给我的名字，达也取 达则兼济天下 之意。”</p>  <p>从小夏达就喜欢画画，学过写意、工笔，她尤其喜欢看漫画，但是直到初中的某一天，她才突然意识到漫画原来是人画出来的，“那个时候太震惊了，简直像造物主一样的存在，我就希望自己能成为这样一个人。”</p>  <p>正式跨进漫画领域大概从高中开始，夏达最早于《北京卡通》杂志发表短篇作品《成长》，第一次投稿她就收到了编辑部老师的长篇手写回复，大受鼓舞。2003年她大学还未毕业，就已出版首部漫画作品《四月物语》。</p>  <p><strong>经历：挨过饿，吃过苦，生病靠死扛</strong></p>  <p>创业初期，夏达住在北京，为了不让家里人担心，她骗家人，稿费很高，其实几乎没有什么收入，付完房租就所剩无几了，除了画画，她几乎不出门。</p>  <p>夏达说:“我长这么大，从来没有洗过碗和衣服。”但是在北京最艰苦的那段时间里，不仅要一切亲历亲为，还经常忍饥挨饿，“有一次我生病了，没钱看病买药，早上起来着急画画，两眼一黑就摔倒了，醒来已经是黄昏，不知道过了多少个小时。”</p>  <p>“7年，挨过饿，吃过苦，生病靠死扛，不出门是因为躺着抗饿，瘦是因为消化系统彻底紊乱，头发长是因为没钱理发。每天拷打着自己的精神和体魄，作画，作画。我祭上了自己的命。”夏达曾在<a href=\"http://ent.163.com/blog/\">博客</a>中写道。</p>  <p><strong>创举：作品登上日本顶级漫画杂志</strong></p>  <p>2008年，夏达一举夺得第五届OACC金龙奖最佳故事漫画少女组金奖，她漫画创作也由此达到一个新的高峰。2009年2月，她十年磨一剑的长篇漫画《子不语》得到日本集英社总编辑长茂木行雄和著名漫画编辑松井荣元的大力推荐，正式登陆日本，与日本顶级漫画大师同刊连载于日本顶级漫画杂志《UltraJump》。</p>  <p>&#160;&#160;&#160; 夏达的漫画在日本广受好评。然而，就在此时，一件突发的事情首次让夏达跳出“漫画圈”进入“公众视野”，开始走红网络。网上流传她的一组个人照，照片中的她，不施粉黛、清丽脱俗，宛若她笔下漫画中的美少女。有人甚至认为是她的清纯长相秒杀了日本宅男。“当时觉得像是晴天霹雳，感觉一举抹杀了我十年的努力一样。”夏达在接受采访时曾说，“我是一个漫画家，又不是艺人，我不需要大家认识我这张脸 ”</p>  <p>她是一个工作狂，每次截稿前，夏天岛工作室里往往会杀得人仰马翻，连续三天不吃不喝不睡逐渐成为一种生存状态。“如果能停笔一天，我希望可以好好陪陪我的四只猫儿（有两只是她在路边捡回的流浪猫），和朋友聊天、逛街、打扮漂亮一些外出旅行，烟花三月下扬州。”这是夏达最近最大的心愿。 </p>\n','2011-02-16 12:16:58','2011-02-16 12:16:58',NULL,NULL,'publish',NULL,'春晚美女观众夏达：不需要大家认识我这张脸','/post/2012/7/14/1344938604897.html',1,0),(287,0,'open','<p>&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<span class=\"Apple-style-span\" style=\"font-family: 新宋体; font-size: 13px; line-height: 21px; \">人成熟与不成熟跟年龄没有关系，人成熟不成熟，就是你能不能站在对方的角度去看待事物。就是能不能把我的世界变成你的世界。这个社会有很多的成年人，还没有脱离幼稚的行为。一点小事情就跟别人争来争去。</span></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><strong><font color=\"#ff0000\">人不成熟的第一个特征------就是立即要回报</font></strong></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 他不懂得只有春天播种，秋天才会收获。很多人在做任何事情的时候，刚刚付出一点点，马上就要得到回报。（学钢琴，学英语等等，刚开始就觉得难，发现不行，立即就要放弃。）</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 做我们这个项目也是一样，很多人来做这个生意，开始没有什么成绩，就想着要放弃，有的人一个月放弃，有的人三个月放弃，有的人半年放弃，有的人一年放弃，我不明白人们为什么轻易放弃这个趋势的生意，但是我知道，放弃是一种习惯，一种典型失败者的习惯。所以说你要有眼光，要看得更远一些，眼光是用来看未来的！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 对在生活中有放弃习惯的人，有一句话一定要送给你：&ldquo;成功者永不放弃，放弃者永不成功&rdquo;。那为什么很多的人做事容易放弃呢？美国著名成功学大师拿破仑&middot;希尔说过：</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 穷人有两个非常典型的心态：</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 1.永远对机会说：&ldquo;不&rdquo;，</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 2.总想&ldquo;一夜暴富&rdquo;。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 今天你把什么机会都放到他的面前，他都会说&ldquo;不&rdquo;，你跟他说数据库这个生意，他们会毫不犹豫的拒绝你。其实这很正常，你不要说，跟他说三步半生活圈数据库来了，就是今天你开饭店很成功，你把你开饭店的成功经验，发自内心的告诉你的亲朋好友，让他们也去开饭店，你能保证他们每个人都那开饭店吗？是不是照样有人不干。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 所以这是穷人一个非常典型的心态，他会说：&ldquo;你行，我可不行！&rdquo;。一夜暴富的表现在于，你跟他说任何的生意，他的第一个问题就是&ldquo;挣不挣钱&rdquo;，你说&ldquo;挣钱&rdquo;，他马上就问第二个问题&ldquo;容易不容易&rdquo;，你说&ldquo;容易&rdquo;，这时他跟着就问第三个问题&ldquo;快不快&rdquo;，你说&ldquo;快&rdquo;！这时他就说&ldquo;好，我做！&rdquo;呵呵，你看，他就这么的幼稚！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 大家想一想，在这个世界上有没有一种：&ldquo;又挣钱，又容易，又快的&rdquo;，没有的，即使有也轮不到我们啊，所以说在生活中，我们一定要懂得付出。那为什么你要付出呢？因为你是为了追求你的梦想而付出的，人就是为了希望和梦想活着的，如果一个人没有梦想，没有追求的话，那一辈子也就没有什么意义了！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 就像一个算命算的非常准的算命先生，把你的一生都告诉你了，包括你什么时候毕业，什么时候工作，什么时候结婚，什么时候有孩子，四十岁如何，五十岁如何，以后你的孩子怎么样，什么时候过世。你再来生活，还有意义吗？是不是一点意义都没有了，人类是为了希望和梦想而活着的。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 所以，在生活中你想获得什么，你就得先付出什么。你想获得时间，你就得先付出时间，你想获得金钱，你得先付出金钱。你想得到爱好，你得先牺牲爱好。你想和家人有更多的时间在一起，你先得和家人少在一起。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 但是，有一点是明确的，你在这个项目中的付出，将会得到加倍的回报。就象一粒种子，你把它种下去以后，然后浇水，施肥，锄草，杀虫。最后你收获的是不是几十倍，上百倍的回报。我们这个项目也是一样的！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 不管在这个项目当中，还是在生活中，你一定要懂得付出，你不要那么急功近利，马上想得到回报，天下没有白吃的午餐，你轻轻松松是不可能成功的。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-l\neft: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 一定要懂得先付出！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><strong><font color=\"#ff0000\">人不成熟的第二个特征-----就是不自律</font></strong></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 不自律的主要表现在哪里呢？</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 不愿改变自己；</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 你要改变自己的思考方式和行为模式。你要改变你的坏习惯其实，人与人之间能力是没有多大区别，区别在于思考方式的不同。一件事情的发生，你去问成功者和失败者，他们的回答是不一样的，甚至是相违背的。我们今天的不成功是因为我们的思考方式不成功。一个好的公式是：当你种植一个思考的种子，你就会有行动的收获，当你把行动种植下去，你会有习惯的收获，当你再把习惯种植下去，你就会有个性的收获，当你再把个性种植下去，就会决定你的命运。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 但是如果你种植的是一个失败的种子，你得到的一定是失败，如果你种植的是一个成功的种子，那么你就一定会成功。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 你一定要相信如果有人在这个项目中成功，你就一定会成功。只有不断的行动就会养成习惯，习惯在重复了21天以后，就会养成。然后坚持不断地去做，就会形成你的个性。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 很多人有很多的坏习惯，如：看电视，打麻将，喝酒，泡舞厅，他们也知道这样的习惯不好，但是他们为什么不愿意改变呢？因为很多人宁愿忍受那些不好的生活方式，也不愿意改变所为他带来的痛苦，所以他不愿意改变。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 愿意背后议论别人：</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 如果在生活中，你喜欢议论别人的话，有一天一定会传回去，中国有一句古话，论人是非者，定是是非人。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 消极，抱怨：</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 你在生活中喜欢那些人呢？是那些整天愁眉苦脸，整天抱怨这个抱怨哪个的人，还是喜欢那些整天开开心心的很大肚的人。如果你在生活中是那些抱怨的，消极的人的话，你一定要改变你性格中的缺陷。如果你不改变的话，你是很难适应这个社会的。你也是很难和别人合作的。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 生活当中你要知道，你怎样对待生活，生活也会怎样对待你，你怎样对待别人，别人也会怎样对待你。所以你不要消极，抱怨。你要积极，永远的积极下去，就是那句话：成功者永不抱怨，抱怨者永不成功。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><strong><font color=\"#ff0000\">人不成熟的第三个特征-----经常被情绪所左右</font></strong></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 一个人成功与否，取决于五个因素；</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 学会控制情绪</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 健康的身体</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 良好的人际关系</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 时间管理</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 财务管理</font></p><p style=\"margin-top: 10px; m\nargin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 如果你想成功，一定要学会管理好这五个因素，为什么把情绪放在第一位呢？把健康放在第二位呢？是因为如果你再强的身体，如果你情绪不好，就会影响到你的身体，现在一个人要成功20%靠的是智商，80%靠的是情商，所以你要控制好你的情绪，情绪对人的影响是非常大的。人与人之间，不要为了一点点小事情，就暴跳如雷，这样是不好的。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 就象动作明星史泰龙说的：过去不等于现在，只是暂时停止成功。任何事情发生，必有目的，必有助于我！你要经常的对自己说，这只是我在风雨中磨练性格的一天。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 所以在生活中，你要养成什么样的心态呢？你要养成&ldquo;三不&rdquo;，&ldquo;三多&rdquo;(不批评、不抱怨、不指责；多鼓励、多表扬、多赞美）。你就会成为一个受社会大众欢迎的人。如果你想让你的伙伴更加的优秀，很简单，永远的激励和赞美他们。即使他们的确有毛病，那应该怎么办呢？这时是不是应该给他们建议，在生活中你会发现有这样一个现象，有人给别人建议的时候，别人能够接受，但是有人给别人建议的时候别人就会生气。其实建议的方式是最重要的，就是&ldquo;三明治&rdquo;赞美，建议，再赞美！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 想一想，你一天赞美了几个人，有的人可能以为赞美就是吹捧，就是拍马屁。赞美和吹捧是有区别的，赞美有四个特点：</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 1.是真诚的</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 2.是发自内心的</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 3.被大众所接受的</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 4.无私的。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 如果你带有很强的目的性去赞美，那就是拍马屁。当你赞美别人时候，你要大声的说出来，当你想批评别人的时候，一定要咬住你的舌头！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><strong><font color=\"#ff0000\">人不成熟的第四个特征-----不愿学习自以为是，没有归零心态。</font></strong></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 其实人和动物之间有很多的相似之处，动物的自我保护意识比人更强（婴儿与小猪）但是，人和动物最大的区别在于，人会学习，人会思考。人是要不断学习的，你千万不要把你的天赋潜能给埋没了，一定要学习，一定要有一个空杯的心态。我们象谁去学习呢？就是直接向成功人士学习！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 你要永远学习积极正面的东西，不看，不听那些消极，负面的东西。一旦你吸收了那些有毒的思想，它会腐蚀你的心灵和人生的。在这个知识经济的时代里，学习是你通向未来的唯一护照。在这样一个速度，变化，危机的时代，你只有不断的学习你才不会被这个时代所抛弃，一定要有学习，归零的心态。去看每一个人的优点，&ldquo;三人行，必有我师也&rdquo;！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><strong><font color=\"#ff0000\">人不成熟的第五个特征-----做事情靠直觉，不以事实为根据。</font></strong></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 很多人还没有开始做，就说这个业务太难了，不好做。有的人做了，约了几个人没有做，就说我们这个地方太穷了，这个加入的费用人们接受不了，有的人说网上的虚拟的东西人们根本不接受，或者说如果按我的方法一定行得通等等。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 这些都是他的个人直觉，但是他不是以事实为依据，不喜欢成功人士教给他的经验事实上，上海翰睿10年了，是实实在在的企业，他不去看这个事实。其数据库的触角已经衍生到上海服务行业的角角落落，他看不到这个事实，现在是互联网社会，电脑和互联网将会象家用电器一样会普及到每一个家庭，他也看不到这个事实，而互联网生意是一个最具增长潜力的行业，他还是看不到，在2008年的时候，互联网的产值已经超过了2.5万亿了，他也看不到这个事实。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break:\nbreak-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><strong><font color=\"#ff0000\">人不成熟的第六个特征-----做事情不靠信念，靠人言。</font></strong></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 我们说相信是起点，坚持是终点。很多人做事不靠信念，喜欢听别人怎么说。对自己所做的事业，没有100%的信心，相信和信念是两个不同的概念，相信是看得见的，信念是看不见的。</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 就象***主义，现在有谁看到***主义实现了，是不是没有人看到，但是就是有人为了***主义事业，不惜抛头颅，洒热血，献出了自己年轻的生命。因为他们相信***主义一定会实现，其实他也没有看到***主义的实现，但是他就是相信，他对没有看到的东西还相信，这就是一种信念！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 信念是人类的一种态度，但是很多的人他们做事，不靠信念的，而是要听别人怎么说，你要登上山峰，要问那些爬到山顶的人，千万不能问没有爬过山的人。相信很多人一定听过&ldquo;祖孙卖驴&rdquo;的故事。他们祖孙二人就是因为听信人言，最后连毛驴都没有卖出去！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 这里不是说别人的建议不要去听，你可以去参考，但是你要记住，你来做这个生意是为了实现你的梦想，实现你自己的价值。其他的人是不会关心你的梦想的，只有你自己关心你自己的梦想，只有你自己关心你自己能否真正的成功。这才是最重要的！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 只要你的选择是正确的，永远不要在乎别人怎么说，以上的人不成熟的六个特征，你们自己去对照，那一个特征是你有的，你一定要在最短的时间里改正，只要你相信你自己能够战胜自己的不成熟，你就会逐渐的成长，成熟起来，你就会得到你想要的那种生活。你就会实现你时间自由、财务自由、精神自由的人生梦想！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \"><font color=\"#000000\">&nbsp;&nbsp;&nbsp; 最后，真诚地祝福各位，&shy;三步半生活圈，百尺竿头，更进一步！！！</font></p><p style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; word-break: break-all; word-wrap: break-word; color: rgb(107, 105, 90); \">原文地址：<span class=\"Apple-style-span\" style=\"color: rgb(0, 0, 0); \"><a href=\"http://www.1985ing.com/sun/201011/276.html\">http://www.1985ing.com/sun/201011/276.html</a></span></p><p>&nbsp;</p>\n','2011-02-16 10:14:03','2011-02-16 10:14:03',NULL,NULL,'publish',NULL,'人不成熟的六个特征,80后应该早知道','/post/2012/7/14/1344938604950.html',1,0),(288,0,'open','<p><span style=\"font-family: \'Courier New\'; \">&nbsp;<span class=\"Apple-style-span\" style=\"line-height: 24px; \"><strong>一、 引言</strong>&nbsp;<br /><br />迭代这个名词对于熟悉Java的人来说绝对不陌生。我们常常使用JDK提供的迭代接口进行java collection的遍历：<br /><br />Iterator it = list.iterator();<br />while(it.hasNext()){<br />//using &ldquo;it.next();&rdquo;do some businesss logic<br />}&nbsp;<br /><br />而这就是关于迭代器模式应用很好的例子。<br /><br /><strong>二、 定义与结构</strong><br /><br />迭代器（Iterator）模式，又叫做游标（Cursor）模式。GOF给出的定义为：提供一种方法访问一个容器（container）对象中各个元素，而又不需暴露该对象的内部细节。<br /><br />从定义可见，迭代器模式是为容器而生。很明显，对容器对象的访问必然涉及到遍历算法。你可以一股脑的将遍历方法塞到容器对象中去；或者根本不去提供什么遍历算法，让使用容器的人自己去实现去吧。这两种情况好像都能够解决问题。<br /><br />然而在前一种情况，容器承受了过多的功能，它不仅要负责自己&ldquo;容器&rdquo;内的元素维护（添加、删除等等），而且还要提供遍历自身的接口；而且由于遍历状态保存的问题，不能对同一个容器对象同时进行多个遍历。第二种方式倒是省事，却又将容器的内部细节暴露无遗。<br /><br />而迭代器模式的出现，很好的解决了上面两种情况的弊端。先来看下迭代器模式的真面目吧。&nbsp;<br /><br />迭代器模式由以下角色组成：<br /><br />1) 迭代器角色（Iterator）：迭代器角色负责定义访问和遍历元素的接口。<br /><br />2) 具体迭代器角色（Concrete Iterator）：具体迭代器角色要实现迭代器接口，并要记录遍历中的当前位置。<br /><br />3) 容器角色（Container）：容器角色负责提供创建具体迭代器角色的接口。<br /><br />4) 具体容器角色（Concrete Container）：具体容器角色实现创建具体迭代器角色的接口&mdash;&mdash;这个具体迭代器角色于该容器的结构相关。<br /><br />迭代器模式的类图如下：<br /><img src=\"http://www.mspring.org/upload/201102151647064275.jpg\" alt=\"\" /><br />从结构上可以看出，迭代器模式在客户与容器之间加入了迭代器角色。迭代器角色的加入，就可以很好的避免容器内部细节的暴露，而且也使得设计符号&ldquo;单一职责原则&rdquo;。<br /><br />注意，在迭代器模式中，具体迭代器角色和具体容器角色是耦合在一起的&mdash;&mdash;遍历算法是与容器的内部细节紧密相关的。为了使客户程序从与具体迭代器角色耦合的困境中脱离出来，避免具体迭代器角色的更换给客户程序带来的修改，迭代器模式抽象了具体迭代器角色，使得客户程序更具一般性和重用性。这被称为多态迭代。<br /><br /><strong>三、 举例</strong><br /><br />由于迭代器模式本身的规定比较松散，所以具体实现也就五花八门。我们在此仅举一例，根本不能将实现方式一一呈现。因此在举例前，我们先来列举下迭代器模式的实现方式。&nbsp;<br /><br />1．迭代器角色定义了遍历的接口，但是没有规定由谁来控制迭代。在Java collection的应用中，是由客户程序来控制遍历的进程，被称为外部迭代器；还有一种实现方式便是由迭代器自身来控制迭代，被称为内部迭代器。外部迭代器要比内部迭代器灵活、强大，而且内部迭代器在java语言环境中，可用性很弱。<br /><br />2．在迭代器模式中没有规定谁来实现遍历算法。好像理所当然的要在迭代器角色中实现。因为既便于一个容器上使用不同的遍历算法，也便于将一种遍历算法应用于不同的容器。但是这样就破坏掉了容器的封装&mdash;&mdash;容器角色就要公开自己的私有属性，在java中便意味着向其他类公开了自己的私有属性。<br /><br />那我们把它放到容器角色里来实现好了。这样迭代器角色就被架空为仅仅存放一个遍历当前位置的功能。但是遍历算法便和特定的容器紧紧绑在一起了。<br /><br />而在Java Collection的应用中，提供的具体迭代器角色是定义在容器角色中的内部类。这样便保护了容器的封装。但是同时容器也提供了遍历算法接口，你可以扩展自己的迭代器。<br /><br />好了，我们来看下Java Collection中的迭代器是怎么实现的吧。<br /><br />//迭代器角色，仅仅定义了遍历接口<br /><br />public interface Iterator {<br />boolean hasNext();<br />Object next();<br />void remove();<br />}<br /><br />//容器角色，这里以List为例。它也仅仅是一个接口，就不罗列出来了<br />//具体容器角色，便是实现了List接口的ArrayList等类。为了突出重点这里指罗列和迭代器相关的内容<br />//具体迭代器角色，它是以内部类的形式出来的。AbstractList是为了将各个具体容器角色的公共部分提取出来而存在的。<br /><br />public abstract class AbstractList extends AbstractCollection implements List {<br />&hellip;&hellip;&nbsp;<br />//这个便是负责创建具体迭代器角色的工厂方法<br />public Iterator iterator() {<br />return new Itr();<br />}<br /><br />//作为内部类的具体迭代器角色<br /><br />private class Itr implements Iterator {<br />int cursor = 0;<br />int lastRet = -1;<br />int expectedModCount = modCount;<br /><br />public boolean hasNext() {<br />return cursor != size();<br />}<br /><br />public Object next() {<br />checkForComodification();<br />try {<br />Object next = get(cursor);<br />lastRet = cursor++;<br />return next;<br />} catch(IndexOutOfBoundsException e) {<br />checkForComodification();<br />throw new NoSuchElementException();<br />}<br />}<br /><br />public void remove() {<br />if (lastRet == -1)<br />throw new IllegalStateException();<br />checkForComodification();<br /><br />try {<br />AbstractList.this.remove(lastRet);<br />if (lastRet &lt; cursor)<br />cursor--;<br />lastRet = -1;<br />expectedModCount = modCount;<br />} catch(IndexOutOfBoundsException e) {<br />throw new ConcurrentModificationException();<br />}<br />}<br /><br />final void checkForComodification() {<br />if (modCount != expectedModCount)<br />throw new ConcurrentModificationException();<br />}<br />}&nbsp;<br /><br />至于迭代器模式的使用。正如引言中所列那样，客户程序要先得到具体容器角色，然后再通过具体容器角色得到具体迭代器角色。这样便可以使用具体迭代器角色来遍历容器了&hellip;&hellip;<br /><br /><strong>四、 实现自己的迭代器</strong><br /><br />在实现自己的迭代器的时候，一般要操作的容器有支持的接口才可以。而且我们还要注意以下问题：&nbsp;<br /><br />在迭代器遍历的过程中，通过该迭代器进行容器元素的增减操作是否安全呢？<br /><br />在容器中存在复合对象的情况，迭代器怎样才能支持深层遍历和多种遍历呢？<br /><br />以上两个问题对于不同结构的容器角色，各不相同，值得考虑。<br /><br /><strong>五、 适用情况&nbsp;<br /></strong><br />由上面的讲述，我们可以看出迭代器模式给容器的应用带来以下好处：<br /><br />1) 支持以不同的方式遍历一个容器角色。根据实现方式的不同，效果上会有差别。<br /><br />2) 简化了容器的接口。但是在java Collection中为了提高可扩展性，容器还是提供了遍历的接口。<br /><br />3) 对同一个容器对象，可以同时进行多个遍历。因为遍历状态是保存在每一个迭代器对象中的。<br /><br />由此也能得出迭代器模式的适用范围：<br /><br />1) 访问一个容器对象的内容而无需暴露它的内部表示。<br /><br />2) 支持对容器对象的多种遍历。<b r /><br />3) 为遍历不同的容器结构提供一个统一的接口（多态迭代）。<br /><br /><strong>六、 总结</strong><br /><br />迭代器模式在我们的应用中很广泛，希望本文能帮助你理解它。如有不对之处，还请不吝指正。</span></span></p><p><span style=\"font-family: \'Courier New\'; \"><br type=\"_moz\" /></span></p><p><span style=\"font-family: \'Courier New\'; \"><br type=\"_moz\" /></span></p><p><span style=\"font-family: \'Courier New\'; \">原文地址：</span><a href=\"http://www.51cto.com/specbook/11/9578.htm\"><span style=\"font-family: \'Courier New\'; \">http://www.51cto.com/specbook/11/9578.htm</span></a></p>\n','2011-02-15 16:46:20','2011-02-15 16:46:20',NULL,NULL,'publish',NULL,'Java设计模式之迭代器模式','/post/2012/7/14/1344938605020.html',1,0),(289,0,'open','<p><span class=\"Apple-style-span\" style=\"line-height: 24px; font-family: Simsun; \"><p>计数代理模式在客户对象调用服务提供者对象上方法的前后执行诸如日志（logging）和计数（counting）一系列附加功能时很有用。计数代理模式建议把这些附加功能封装在一个单独的对象，这个对象就是指计数代理对象，而不是把这些附加的功能实现放到服务提供者的内部。良好的对象设计的一个特征就是对象要专注于提供特定的功能。换句话说，理想的对象不应该做各种不相干的事情。把诸如日志（logging）和计数（counting）等类似的功能封装为一个单独的对象，而让服务提供者对象仅提供它自己的特定功能。也就是说，只允许服务提供者对象执行定义良好、特定的任务。<br /><br />计数代理被设计成可以被客户访问的与服务提供者具有相同接口的对象。客户对象不是直接访问服务提供者，而是调用计数代理对象上的方法，计数代理执行必要的纪录日志（logging）和计数（counting）功能后，再把方法调用传递给服务提供着对象。如图1<br /><img src=\"http://www.mspring.org/upload/201102151646015405.bmp\" alt=\"\" /><br />Figure1: Generic Class Association When the Counting Proxy Pattern Is Applied&nbsp;<br /><br /><br />下面的例子说明了如何在应用程序中利用计数代理。</p><p>例子：让我们设计一个Order类，类层次如图2，OrderIF接口声明了getAllOrders读取数据库中所有订单的简单方法。<br /><img src=\"http://www.mspring.org/upload/201102151646041027.bmp\" alt=\"\" /><br /><br />Figure2: Order Class Hierarchy&nbsp;<br /><br />public interface OrderIF {&nbsp;<br />public Vector getAllOrders();&nbsp;<br />}&nbsp;<br /><br />作为getAllOrders方法实现的一部分，Order类实用了FileUtil工具类从order.txt文件中读取订单项。<br /><br />public class Order implements OrderIF {&nbsp;<br />public Vector getAllOrders() {&nbsp;<br />FileUtil fileUtil = new FileUtil();&nbsp;<br />Vector v = fileUtil.fileToVector(&quot;orders.txt&quot;);&nbsp;<br />return v;&nbsp;<br />}&nbsp;<br />}&nbsp;<br /><br />让我们假定在调用getAllOrders()时，需要把取数据文件所花费的时间和记录条数要记录的log日志文件中。<br /><br />这个附加的功能可以设计一个单独的OrderProxy类来实现，它与真实对象Order一样实现OrderIF接口。这样保证了OrderProxy对象提供给客户与真实对象Order一样的接口。如图3<br /><img src=\"http://www.mspring.org/upload/201102151646058588.bmp\" alt=\"\" /><br />Figure3: Order Class Hierarchy with the Counting Proxy&nbsp;<br /><br />public class OrderProxy implements OrderIF {&nbsp;<br />private int counter = 0;&nbsp;<br />public Vector getAllOrders() {&nbsp;<br />Order order = new Order();&nbsp;<br />counter++;&nbsp;<br />long t1 = System.currentTimeMillis ();&nbsp;<br />Vector v = order.getAllOrders();&nbsp;<br />long t2 = System.currentTimeMillis();&nbsp;<br />long timeDiff = t2 ? t1;&nbsp;<br />String msg = &quot;Iteration=&quot; + counter + &quot;::Time=&quot; + timeDiff + &quot;ms&quot;;&nbsp;<br />//log the message&nbsp;<br />FileUtil fileUtil = new FileUtil();&nbsp;<br />fileUtil.writeToFile(&quot;log.txt&rdquo;,msg, true, true);&nbsp;<br />return v;&nbsp;<br />}&nbsp;<br />}&nbsp;<br /><br />客户对象MainApp就想调用真实对象Order一样调用OrderProxy对象上的getAllOrders()方法，OrderProxy对象传递这个调用给真实对象Order,计算读取所有订单所花费的时间并使用FileUtil帮助类将其纪录的log日志文件中。在这个过程中，OrderProxy扮演者计数代理的角色。<br /><br />public class MainApp {&nbsp;<br />public static void main(String[] args) {&nbsp;<br />OrderIF order = new OrderProxy();&nbsp;<br />Vector v = order.getAllOrders();&nbsp;<br />v = order.getAllOrders();&nbsp;<br />v = order.getAllOrders();&nbsp;<br />v = order.getAllOrders();&nbsp;<br />}&nbsp;<br />}</p><p>&nbsp;</p><p>原文地址：<span class=\"Apple-style-span\" style=\"font-family: Arial, Verdana, sans-serif; line-height: 22px; \"><a href=\"http://www.51cto.com/specbook/11/11291.htm\">http://www.51cto.com/specbook/11/11291.htm</a></span></p></span></p>\n','2011-02-15 16:45:08','2011-02-15 16:45:08',NULL,NULL,'publish',NULL,'Java设计模式之计数代理模式','/post/2012/7/14/1344938605078.html',1,0),(290,0,'open','<p>&nbsp;<span class=\"Apple-style-span\" style=\"line-height: 24px; font-family: Simsun; \"><h4>描述：</h4>虚拟代理模式(Virtual&nbsp;Proxy)是一种节省内存的技术，它建议创建那些占用大量内存或处理复杂的对象时，把创建这类对象推迟到使用它的时候。在特定的应用中，不同部分的功能由不同的对象组成，应用启动的时候，不会立即使用所有的对象。在这种情况下，虚拟代理模式建议推迟对象的创建直到应用程序需要它为止。对象被应用第一次引用时创建并且同一个实例可以被重用。这种方法优缺点并存。<br /><h4>优点：</h4>这种方法的优点是，在应用程序启动时，由于不需要创建和装载所有的对象，因此加速了应用程序的启动。<br /><h4>缺点：</h4><p>因为不能保证特定的应用程序对象被创建，在访问这个对象的任何地方，都需要检测确认它不是空(null)。也就是，这种检测的时间消耗是最大的缺点。</p><p>应用虚拟代理模式，需要设计一个与真实对象具有相同接口的单独对象（指虚拟代理）。不同的客户对象可以在创建和使用真实对象地方用相应的虚拟对象来代替。虚拟对象把真实对象的引用作为它的实例变量维护。代理对象不要自动创建真实对象，当客户需要真实对象的服务时，调用虚拟代理对象上的方法，并且检测真实对象是否被创建。</p><p>如果真实对象已经创建，代理把调用转发给真实对象<br />1）&nbsp;&nbsp;&nbsp;&nbsp;代理对象创建真实对象<br />2）&nbsp;&nbsp;&nbsp;&nbsp;代理对象把这个对象分配给引用变量。<br />3）&nbsp;&nbsp;&nbsp;&nbsp;代理把调用转发给真实对象</p><p>按照这种安排，验证对象存在和转发方法调用这些细节对于客户是不可见的。客户对象就像和真实对象一样与代理对象进行交互。因此客户从检测真实对象是否为null中解脱出来，另外，由于创建代理对象在时间和处理复杂度上要少于创建真实对象。因此，在应用程序启动的时候，用代理对象代替真实对象初始化。</p><h4>例子：</h4><p>假设我们建立一个JAVA程序的集成开发环境（Integrated&nbsp;Development&nbsp;Environment）,这个环境包括三个功能：编译、运行、生成JavaDoc文档。在新建和编辑Java程序时，最为常用的是编译和运行。至于生成JavaDoc文档对于每一个Java程序不是必需的。因此，在Java开发环境启动时，不要创建和装载实现集成开发环境全部功能的所有对象，仅创建那些在编辑、编译、运行时用到的对象，保留提供生成JavaDoc文档的对象，这是一个好的设计思想。这种对象创建策略能够高效地利用内存空间并且加快了集成开发环境的启动速度。</p><p>假设编译、运行、生成JavaDoc文档这些功能分别由三个工具类提供&mdash;&mdash;Compiler、Runtime和JavaDoc。客户对象可以访问的不同IDE操作的接口以抽象类IDEOperation的形式定义。</p><div class=\"codeStyle\"><ol>    <li><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">abstract</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;IDEOperation&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">private</font></b>&nbsp;<b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/Compiler.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>Compiler</u></font></a></b>&nbsp;cmp;&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">private</font></b>&nbsp;<b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/Runtime.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>Runtime</u></font></a></b>&nbsp;rtime;&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;compile(<b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;javaFile)&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;cmp.compile(javaFile);&nbsp;</li>    <li>&nbsp;&nbsp;}&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;run(<b><font class=\"classLink\"><u>String</u></font></b>&nbsp;classFile)&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;rtime.run&nbsp;(classFile);&nbsp;</li>    <li>&nbsp;&nbsp;}&nbsp;</li>    <li>&nbsp;&nbsp;<i><font color=\"#339900\">//to&nbsp;be&nbsp;delayed&nbsp;until&nbsp;needed.&nbsp;</font></i></li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">abstract</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;generateDocs(<b><font class=\"classLink\"><u>String</u></font></b>&nbsp;javaFile);&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;IDEOperation()&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;cmp&nbsp;=&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;<b><font class=\"classLink\"><u>Compiler</u></font></b>();&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;rtime&nbsp;=&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;<b><font class=\"classLink\"><u>Runtime</u></font></b>();&nbsp;</li>    <li>&nbsp;&nbsp;}&nbsp;</li>    <li>}&nbsp;</li></ol></div><p>类IDEOperation提供了编译、运行java程序方法的实现，作为它构造函数的一部分，IDEOperation创建和装载了进行编译和执行操作的Compiler和Runtime对象。生成JavaDoc文档的方法generateDocs方法被设计成抽象的方法，由它的子类来实现。</p><p>让我们定义抽象类IDEOperation的一个具体子类RealProcessor。作为RealProcessor构造函数的一部分，创建JavaDoc对象来提供生成JavaDoc文档的服务，通过使用JavaDoc对象功能实现generateDocs方法。</p><div class=\"codeStyle\"><ol>    <li><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;RealProcessor&nbsp;<b><font color=\"#0000ff\">extends</font></b>&nbsp;IDEOperation&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;JavaDoc&nbsp;jdoc;&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;RealProcessor()&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;<b><font color=\"#0000ff\">super</font></b>();&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;jdoc&nbsp;=&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;JavaDoc();&nbsp;</li>    <li>&nbsp;&nbsp;}&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;generateDocs(<b><font class=\"classLink\"><u>String</u></font></b>&nbsp;javaFile)&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;jdoc.generateDocs(javaFile);&nbsp;</li>    <li>&nbsp;&nbsp;}&nbsp;</li>    <li>}&nbsp;</li></ol></div><p>通过上面的实现，RealProcessor类包含了编译、运行和生成JavaDoc文档的所有功能。像我们原来讨论的，生成JavaDoc文档的功能不是每一个Java程序所必须的，当RealProcessor实例化的时候，包括负责生成JavaDoc文档的JavaDoc对象的一系列对象被创建。推迟创建JavaDoc对象有以下优点：<br />1）&nbsp;&nbsp;&nbsp;&nbsp;加速了RealProcessor对象的创建时间，因为它的构造函数创建的很少的对象。<br />2）&nbsp;&nbsp;&nbsp;&nbsp;高效地利用内存，因为在不需要对象服务的时候，不需要把对象保持在内存中。<br />在不改变RealProcessor实现的前提下，可以通过定义IDEOperation的另外一个子类ProxyProcessor来实现虚拟代理。因为RealProcessor和ProxyProcessor共享相同的接口，客户对象可以用ProxyProcessor代替RealProcessor。</p><div class=\"codeStyle\"><ol>    <li><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;ProxyProcessor&nbsp;<b><font color=\"#0000ff\">extends</font></b>&nbsp;IDEOperation&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">private</font></b>&nbsp;RealProcessor&nbsp;realProcessor;&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;generateDocs(<b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;javaFile)&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;<i><font color=\"#339900\">/*&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;order&nbsp;to&nbsp;generate&nbsp;javadocs&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;proxy&nbsp;loads&nbsp;the&nbsp;actual&nbsp;object&nbsp;and&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invokes&nbsp;its&nbsp;methods.&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font></i>&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;<b><font color=\"#0000ff\">if</font></b>&nbsp;(realProcessor&nbsp;==&nbsp;<b><font color=\"#0000ff\">null</font></b>)&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;realProcessor&nbsp;=&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;RealProcessor();&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;realProcessor.generateDocs(javaFile);&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;}&nbsp;</li>    <li>}&nbsp;</li></ol></div>作为自己的实例变量，ProxyProcessor维护了RealProcessor对象的一个引用。作为generateDocs方法的一部分，ProxyProcessor检测引用变量是否被初始化为RealProcessor对象。如果没有被初始化，它创建一个RealProcessor对象并把这个对象分配给它的实例变量。一旦RealProcessor对象已经被创建，就调用其上的generateDocs方法。<br />实际上，也就是当客户对象第一次请求产生javadoc文档时，RealProcessor才被初始化装入内存中。反过来，直到客户需要为Java程序生成javadocs时，JavaDoc对象才会被创建和装入内存中。<br />客户对象像调用真实处理对象一样调用ProxyProcessor上的方法，并不需要关心（知道）RealProcessor对象是否存在。&nbsp;至于验证、检测和ProxyProcessor和RealProcessor之间的交互、这样的细节对于客户对象是透明的。<br /><div class=\"codeStyle\"><ol>    <li><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;Client&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;<b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">static</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;main(<b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>[]&nbsp;args)&nbsp;{&nbsp;</li>    <li>&nbsp;&nbsp;<i><font color=\"#339900\">/*&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;At&nbsp;this&nbsp;point&nbsp;objects&nbsp;required&nbsp;for&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;the&nbsp;compile&nbsp;and&nbsp;run&nbsp;operations&nbsp;are&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;created,&nbsp;but&nbsp;not&nbsp;the&nbsp;objects&nbsp;that&nbsp;provide&nbsp;the&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;generate&nbsp;Javadoc&nbsp;functionality.&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;*/</font></i>&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;IDEOperation&nbsp;IDE&nbsp;=&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;ProxyProcessor();&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;IDE.compile(<font color=\"#ff33ff\">&quot;test.java&quot;</font>);&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;IDE.run(<font color=\"#ff33ff\">&quot;test.class&quot;</font>);&nbsp;</li>    <li>&nbsp;&nbsp;<i><font color=\"#339900\">/*&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;The&nbsp;Javadoc&nbsp;functionality&nbsp;is&nbsp;accessed&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;For&nbsp;the&nbsp;first&nbsp;time&nbsp;and&nbsp;hence&nbsp;the&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;Object&nbsp;offering&nbsp;the&nbsp;Javadoc&nbsp;generation&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;&nbsp;Functionality&nbsp;is&nbsp;loaded&nbsp;at&nbsp;this&nbsp;point.&nbsp;</font></i></li>    <li><i><font color=\"#339900\">&nbsp;&nbsp;*/</font></i>&nbsp;</li>    <li>&nbsp;&nbsp;&nbsp;IDE.generateDocs(<font color=\"#ff33ff\">&quot;test.java&quot;</font>);&nbsp;</li>    <li>&nbsp;&nbsp;}&nbsp;</li>    <li>}&nbsp;</li></ol><p>&nbsp;</p><p>原文地址：&nbsp;<a href=\"http://www.51cto.com/specbook/11/11648.htm\">http://www.51cto.com/specbook/11/11648.htm</a></p></div></span></p>\n','2011-02-15 16:43:00','2011-02-15 16:43:00',NULL,NULL,'publish',NULL,'Java设计模式之虚拟代理模式','/post/2012/7/14/1344938605136.html',1,0);
insert  into `mlog_post`(`_id`,`_comment_count`,`_comment_status`,`_content`,`_create_time`,`_modify_time`,`_password`,`_post_ip`,`_post_status`,`_summary`,`_title`,`_url`,`_post_user`,`_view_count`) values (291,0,'open','<p><span style=\"font-family: \'Courier New\'; \">&nbsp;<span class=\"Apple-style-span\" style=\"line-height: 24px; \"><strong>描述</strong></span></span><span class=\"Apple-style-span\" style=\"line-height: 24px; font-family: Simsun; \"><p><span style=\"font-family: \'Courier New\'; \">外观模式（Fa&ccedil;ade pattern）涉及到子系统的一些类。所谓子系统，是为提供一系列相关的特征（功能）而紧密关联的一组类。例如，一个Account类、Address类和CreditCard类相互关联，成为子系统的一部分，提供在线客户的特征。</span></p><p><span style=\"font-family: \'Courier New\'; \">在真实的应用系统中，一个子系统可能由很多类组成。子系统的客户为了它们的需要，需要和子系统中的一些类进行交互。客户和子系统的类进行直接的交互会导致客户端对象和子系统之间高度耦合。任何的类似于对子系统中类的接口的修改，会对依赖于它的所有的客户类造成影响。<br /><br />外观模式（Fa&ccedil;ade pattern）很适用于在上述情况。外观模式（Fa&ccedil;ade pattern）为子系统提供了一个更高层次、更简单的接口，从而降低了子系统的复杂度和依赖。这使得子系统更易于使用和管理。</span></p><p><span style=\"font-family: \'Courier New\'; \">外观是一个能为子系统和客户提供简单接口的类。当正确的应用外观，客户不再直接和子系统中的类交互，而是与外观交互。外观承担与子系统中类交互的责任。实际上，外观是子系统与客户的接口，这样外观模式降低了子系统和客户的耦合度。<br />我们可以看到：外观对象隔离了客户和子系统对象，从而降低了耦合度。当子系统中的类进行改变时，客户端不会像以前一样受到影响。<br />尽管客户使用由外观提供的简单接口，但是当需要的时候，客户端还是可以视外观不存在，直接访问子系统中的底层次的接口。这种情况下，它们之间的依赖/耦合度和原来一样。</span></p><h4><span style=\"font-family: \'Courier New\'; \">例子：</span></h4><p><span style=\"font-family: \'Courier New\'; \">让我们建立一个应用：<br />（1） 接受客户的详细资料（账户、地址和信用卡信息）<br />（2） 验证输入的信息<br />（3） 保存输入的信息到相应的文件中。</span></p><p><span style=\"font-family: \'Courier New\'; \">这个应用有三个类：Account、Address和CreditCard。每一个类都有自己的验证和保存数据的方法。#p#Listing 22.1: AccountClass</span></p><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;Account {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;firstName;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;lastName;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">final</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;ACCOUNT_DATA_FILE =&nbsp;<font color=\"#ff33ff\">&quot;AccountData.txt&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;Account(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;fname,&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;lname) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">firstName = fname;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">lastName = lname;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;isValid() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Let\'s go with simpler validation</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">here to keep the example simpler.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;save() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">FileUtil futil =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;FileUtil();</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;dataLine = getLastName() + &rdquo;,<font color=\"#ff33ff\">&quot; + getFirstName();</font></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;futil.writeToFile(ACCOUNT_DATA_FILE, dataLine,</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">true</font></b>,&nbsp;<b><font color=\"#0000ff\">true</font></b>);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getFirstName() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;firstName;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getLastName() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;lastName;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li></ol></div><span style=\"font-family: \'Courier New\'; \">Listing 22.2: Address Class&nbsp;<br /></span><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;Address {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch\n.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;address;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;city;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;state;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">final</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;ADDRESS_DATA_FILE =&nbsp;<font color=\"#ff33ff\">&quot;Address.txt&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;Address(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;add,&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cty,&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;st) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">address = add;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">city = cty;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">state = st;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;isValid() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">The address validation algorithm</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">could be complex in real-world</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">applications.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Let\'s go with simpler validation</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">here to keep the example simpler.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(getState().trim().<b><font color=\"#0000ff\">length</font></b>() &lt; 2)</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;<b><font color=\"#0000ff\">true</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;save() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">FileUtil futil =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;FileUtil();</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;dataLine = getAddress() + &rdquo;,<font color=\"#ff33ff\">&quot; + getCity() + &rdquo;,&quot;</font>&nbsp;+</span></li>    <li><span style=\"font-family: \'Courier New\'; \">getState();</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;futil.writeToFile(ADDRESS_DATA_FILE, dataLine,</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">true</font></b>,&nbsp;<b><font color=\"#0000ff\">true</font></b>);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getAddress() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;address;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getCity() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;city;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getState() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;state;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li></ol></div><span style=\"font-family: \'Courier New\'; \">Listing 22.3: CreditCard Class&nbsp;<br /></span><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;CreditCard {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cardType;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cardNumber;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cardExpDate;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">final</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source\n/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;CC_DATA_FILE =&nbsp;<font color=\"#ff33ff\">&quot;CC.txt&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;CreditCard(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;ccType,&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;ccNumber,</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;ccExpDate) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardType = ccType;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardNumber = ccNumber;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardExpDate = ccExpDate;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;isValid() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Let\'s go with simpler validation</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">here to keep the example simpler.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(getCardType().equals(AccountManager.VISA)) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;(getCardNumber().trim().<b><font color=\"#0000ff\">length</font></b>() == 16);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(getCardType().equals(AccountManager.DISCOVER)) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;(getCardNumber().trim().<b><font color=\"#0000ff\">length</font></b>() == 15);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(getCardType().equals(AccountManager.MASTER)) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;(getCardNumber().trim().<b><font color=\"#0000ff\">length</font></b>() == 16);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;save() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">FileUtil futil =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;FileUtil();</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;dataLine =</span></li>    <li><span style=\"font-family: \'Courier New\'; \">getCardType() + ,&rdquo;<font color=\"#ff33ff\">&quot; + getCardNumber() + &rdquo;,&quot;</font>&nbsp;+</span></li>    <li><span style=\"font-family: \'Courier New\'; \">getCardExpDate();</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;futil.writeToFile(CC_DATA_FILE, dataLine,&nbsp;<b><font color=\"#0000ff\">true</font></b>,</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">true</font></b>);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getCardType() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;cardType;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getCardNumber() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;cardNumber;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getCardExpDate() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;cardExpDate;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li></ol></div><span style=\"font-family: \'Courier New\'; \">#p#让我们建立一个客户AccountManager，它提供用户输入数据的用户界面。<br />Listing 22.4: Client AccountManager Class&nbsp;<br /></span><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;AccountManager&nbsp;<b><font color=\"#0000ff\">extends</font></b>&nbsp;<font color=\"#ff0000\">JFrame</font>&nbsp;{</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">static</font></b>&nbsp;<b><font color=\"#0000ff\">final</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;newline =&nbsp;<font color=\"#ff33ff\">&quot;\\n&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">static</font></b>&nbsp;<b><font color=\"#0000ff\">final</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;VALIDATE_SAVE =&nbsp;<font color=\"#ff33ff\">&quot;Validate &amp; Save&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&he\nllip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;AccountManager() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">super</font></b>(<font color=\"#ff33ff\">&quot; Facade Pattern - Example &quot;</font>);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cmbCardType =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;<font color=\"#ff0000\">JComboBox</font>();</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cmbCardType.addItem(AccountManager.VISA);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cmbCardType.addItem(AccountManager.MASTER);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cmbCardType.addItem(AccountManager.DISCOVER);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">//Create buttons</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><font color=\"#ff0000\">JButton</font>&nbsp;validateSaveButton =</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">new</font></b>&nbsp;<font color=\"#ff0000\">JButton</font>(AccountManager.VALIDATE_SAVE);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;getFirstName() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;txtFirstName.getText();</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">&hellip;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}<i><font color=\"#339900\">//End of class AccountManager</font></i></span></li></ol></div><p><span style=\"font-family: \'Courier New\'; \">当客户AccountManage运行的时，展示的用户接口。#p#为了验证和保存输入的数据，客户AccountManager需要：<br />（1） 建立Account、Address和CreditCard对象。<br />（2） 用这些对象验证输入的数据<br />（3） 用这些对象保存输入的数据。</span></p><p><span style=\"font-family: \'Courier New\'; \">在这个例子中应用外观模式是一个很好的设计，它可以降低客户和子系统组件（Address、Account和CreditCard）之间的耦合度。应用外观模式，让我们定义一个外观类CustomerFacade 。它为由客户数据处理类（Address、Account和CreditCard）所组成的子系统提供一个高层次的、简单的接口。<br />CustomerFacade&nbsp;<br />address:String&nbsp;<br />city:String&nbsp;<br />state:String&nbsp;<br />cardType:String&nbsp;<br />cardNumber:String&nbsp;<br />cardExpDate:String&nbsp;<br />fname:String&nbsp;<br />lname:String&nbsp;<br />setAddress(inAddress:String)&nbsp;<br />setCity(inCity:String)&nbsp;<br />setState(inState:String)&nbsp;<br />setCardType(inCardType:String)&nbsp;<br />setCardNumber(inCardNumber:String)&nbsp;<br />setCardExpDate(inCardExpDate:String)&nbsp;<br />setFName(inFName:String)&nbsp;<br />setLName(inLName:String)&nbsp;<br />saveCustomerData()&nbsp;<br /><br />#p#Listing 22.5: CustomerFacade Class</span></p><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;CustomerFacade {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;address;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;city;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;state;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cardType;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cardNumber;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;cardExpDate;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;fname;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">private</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;lname;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setAddress(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inAddress) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">address = inAddress;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setCity(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inCity) {</span></li>    <li><span style=\"font-family: \'C\nourier New\'; \">city = inCity;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setState(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inState) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">state = inState;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setFName(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inFName) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">fname = inFName;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setLName(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inLName) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">lname = inLName;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setCardType(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inCardType) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardType = inCardType;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setCardNumber(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inCardNumber) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardNumber = inCardNumber;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;setCardExpDate(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;inCardExpDate) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardExpDate = inCardExpDate;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">boolean</font></b>&nbsp;saveCustomerData() {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">Address objAddress;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">Account objAccount;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">CreditCard objCreditCard;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">client is transparent from the following</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">set of subsystem related operations.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">boolean</font></b>&nbsp;validData =&nbsp;<b><font color=\"#0000ff\">true</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;errorMessage =&nbsp;<font color=\"#ff33ff\">&quot;&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">objAccount =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;Account(fname, lname);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(objAccount.isValid() ==&nbsp;<b><font color=\"#0000ff\">false</font></b>) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">validData =&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">errorMessage =&nbsp;<font color=\"#ff33ff\">&quot;Invalid FirstName/LastName&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">objAddress =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;Address(address, city, state);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(objAddress.isValid() ==&nbsp;<b><font color=\"#0000ff\">false</font></b>) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">validData =&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">errorMessage =&nbsp;<font color=\"#ff33ff\">&quot;Invalid Address/City/State&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">objCreditCard =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;CreditCard(cardType, cardNumber,</span></li>    <li><span style=\"font-family: \'Courier New\'; \">cardExpDate);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(objCreditCard.isValid() ==&nbsp;<b><font color=\"#0000ff\">false</font></b>) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">validData =&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">errorMessage =&nbsp;<font color=\"#ff33ff\">&quot;Invalid CreditCard Info&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(!validData) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/System.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>System</u></font></a></b>.out.println(errorMessage);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">if</font></b>&nbsp;(objAddress.save() &amp;&amp; objAccount.save() &amp;&amp;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">objCreditCard.save()) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;<b><font color=\"#0000ff\">true</font></b>;</span></li>    <li><span style=\"\nfont-family: \'Courier New\'; \">}&nbsp;<b><font color=\"#0000ff\">else</font></b>&nbsp;{</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;<b><font color=\"#0000ff\">false</font></b>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li></ol></div><p><span style=\"font-family: \'Courier New\'; \">CustomerFacade类以saveCustomData方法的形式提供了业务层次上的服务。客户AccountManager不是直接和子系统的每一个组件交互，而是使用了由CustomFacade对象提供的验证和保存客户数据的更高层次、更简单的接口。</span></p><p><span style=\"font-family: \'Courier New\'; \">在新的设计中，为了验证和保存客户数据，客户需要：<br />（1） 建立或获得外观对象CustomFacade的一个实例。<br />（2） 传递数据给CustomFacade实例进行验证和保存。<br />（3） 调用CustomFacade实例上的saveCustomData方法。<br />CustomFacade处理创建子系统中必要的对象并且调用这些对象上相应的验证、保存客户数据的方法这些细节问题。客户不再需要直接访问任何的子系统中的对象。</span></p><h4><span style=\"font-family: \'Courier New\'; \">重要提示：</span></h4><p><span style=\"font-family: \'Courier New\'; \">下面是应用外观模式的注意事项：<br />（1） 在设计外观时，不需要增加额外的功能。<br />（2） 不要从外观方法中返回子系统中的组件给客户。例如：有一个下面的方法：<br />CreditCard getCreditCard()&nbsp;<br />会报漏子系统的细节给客户。应用就不能从应用外观模式中取得最大的好处。<br />（3）应用外观的目的是提供一个高层次的接口。因此，外观方法最适合提供特定的高层次的业务服务，而不是进行底层次的单独的业务执行。</span></p></span></p>\n','2011-02-15 16:41:55','2011-02-15 16:41:55',NULL,NULL,'publish',NULL,'Java设计模式之外观模式','/post/2012/7/14/1344938605193.html',1,0),(292,0,'open','<p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span><span class=\"Apple-style-span\" style=\"line-height: 24px; font-family: Simsun; \"><h3><span style=\"font-family: \'Courier New\'; \">说明：</span></h3><span style=\"font-family: \'Courier New\'; \">装饰模式是在不必改变原类文件和使用继承的情况下，动态的扩展一个对象的功能。它是通过创建一个包装对象，也就是装饰来包裹真实的对象。<br /></span><h4><span style=\"font-family: \'Courier New\'; \">装饰模式的特点；</span></h4><p><span style=\"font-family: \'Courier New\'; \">（1） 装饰对象和真实对象有相同的接口。这样客户端对象就可以以和真实对象相同的方式和装饰对象交互。<br />（2） 装饰对象包含一个真实对象的索引（reference）<br />（3） 装饰对象接受所有的来自客户端的请求。它把这些请求转发给真实的对象。<br />（4） 装饰对象可以在转发这些请求以前或以后增加一些附加功能。这样就确保了在运行时，不用修改给定对象的结构就可以在外部增加附加的功能。在面向对象的设计中，通常是通过继承来实现对给定类的功能扩展。</span></p><p><span style=\"font-family: \'Courier New\'; \">下表格列举了装饰模式和继承的不同：<br /></span></p><h4><span style=\"font-family: \'Courier New\'; \">装饰模式 VS 继承</span></h4><span style=\"font-family: \'Courier New\'; \">装饰模式 继承<br />用来扩展特定对象的功能 用来扩展一类对象的功能<br />不需要子类 需要子类<br />动态地 静态地<br />运行时分配职责 编译时分派职责<br />防止由于子类而导致的复杂和混乱 导致很多子类产生，在一些场合，报漏类的层次<br />更多的灵活性 缺乏灵活性<br />对于一个给定的对象，同时可能有不同的装饰对象，客户端可以通过它的需要选择合适的装饰对象发送消息。 对于所有可能的联合，客户期望<br />很容易增加任何的 困难&nbsp;<br /></span><h3><span style=\"font-family: \'Courier New\'; \">例子：</span></h3><p><span style=\"font-family: \'Courier New\'; \">让我们重新返回我们在工厂方法和单例模式log实用工具上，我们的模式主要由Logger 接口和两个它的实现类??FileLogger和ConsoleLogger??分别把信息出力到一个文件和屏幕中。另外，还有包括工厂方法的LoggerFactory类。<br />LoggerFactory没有出现在下图中，主要是因为它和现在讨论的例子没有直接联系。<br /><br />让我们想象一些客户端需要以超出Logger Utility现在所提供的新的方式出力信息，客户端需要下面两种特征；<br />（1） 把出力的信息传唤为HTML文档<br />（2） 对出力信息进行逻辑转化的简单加密，在面向对象的设计中，不改变现存的类的代码，可以应用继承来增加新的功能。例如，子类化现在的类重载它的方法来增加所需要的新功能。</span></p><p><span style=\"font-family: \'Courier New\'; \">应用继承，我们要子类化FileLogger和ConsoleLogger类来增加新的功能，会有下面的一组新的子类：<br />子类 父类 功能<br />HTMLFileLogger FileLogger 转化出力信息为HTML文档，并存入一个Log文件<br />HTMLConsLogger ConsoleLogger 转化出力信息为HTML文档，并显示在屏幕上<br />EncFileLogger FileLogger 加密出力信息，并存入一个Log文件<br />EncConsLogger ConsoleLogger 加密出力信息，并显示在屏幕上</span></p><p><span style=\"font-family: \'Courier New\'; \">从类图可以看到，为了实现新的功能加入了一组新的子类。如果我们还有其他的Logger类型（例如：DBLogger出力信息到数据库中），这样会有更多子类。当一个新的特性需要被加入，子类的数量会有成倍数的增长，同时我们会有一个庞大的类层次。<br /><br />装饰模式使我们从这种情景中解脱出来，装饰模式推荐通过对象的合成而不是继承来包装一个对象扩展它的功能。<br />应用装饰模式，让我们为Logger Utility定义一个有下列特征的默认根装饰类LoggerDecorator：</span></p><p><span style=\"font-family: \'Courier New\'; \">（1） LoggerDecorator包括一个Logger实例的引用。这个引用指向它包含的Logger对象。<br />（2） LoggerDecorator实现Logger借口、提供Log方法的基本的默认实现，他只是简单的转发调用给它包含的Logger 对象。每一个LoggerDecorator子类保证定义log方法。</span></p><p><span style=\"font-family: \'Courier New\'; \">Listing 19.1: LoggerDecorator Class</span></p><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;LoggerDecorator&nbsp;<b><font color=\"#0000ff\">implements</font></b>&nbsp;<font color=\"#ff0000\">Logger</font>&nbsp;{</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><font color=\"#ff0000\">Logger</font>&nbsp;logger;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;LoggerDecorator(<font color=\"#ff0000\">Logger</font>&nbsp;inp_logger) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">logger = inp_logger;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;log(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;DataLine) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Default implementation</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">to be overriden by subclasses.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">logger.log(DataLine);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li>&nbsp;</li></ol></div><span style=\"font-family: \'Courier New\'; \"><div class=\"codeStyle\"><ol>    <li>}<i><font color=\"#339900\">//end of class</font></i></li></ol></div>每一个logger的装饰定义log方法使很重要的，因为装饰对象必须提供和它包装的对象相同的借口。当客户端创建一个装饰类的实例，客户端以与装饰类交互方式和客户端与拥有相同接口原对象的交互方式是一致的。<br />让我们定义LoggerDecorator的两个子类，HTMLLogger和EncryptLogger。 #p#&nbsp;<strong>具体的Logger 装饰类</strong></span><h5><span style=\"font-family: \'Courier New\'; \">HTMLLogger</span></h5><span style=\"font-family: \'Courier New\'; \">HTMLLogger重载了log方法的默认实现。在log方法中，装饰类把出力信息转化为HTML文档，并且发送给可以出力的Logger实例。<br />Listing 19.2: HTMLLogger Class&nbsp;<br /></span><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;HTMLLogger&nbsp;<b><font color=\"#0000ff\">extends</font></b>&nbsp;LoggerDecorator {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;HTMLLogger(<font color=\"#ff0000\">Logger</font>&nbsp;inp_logger) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">super</font></b>(inp_logger);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;log(</span><span style=\"font-family: \'Courier New\'; \"\n><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;DataLine) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Added functionality</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">DataLine = makeHTML(DataLine);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Now forward the encrypted text to the FileLogger</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">for storage</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">logger.log(DataLine);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;makeHTML(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;DataLine) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Make it into an HTML document.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">DataLine =&nbsp;<font color=\"#ff33ff\">&quot;&quot;</font>&nbsp;+&nbsp;<font color=\"#ff33ff\">&quot;<b>&quot;</b></font><b>&nbsp;+ DataLine +</b></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#ff33ff\">&quot;</font></b><font color=\"#ff33ff\">&quot;</font>&nbsp;+&nbsp;<font color=\"#ff33ff\">&quot;&quot;</font>;</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;DataLine;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}<i><font color=\"#339900\">//end of class</font></i></span></li></ol></div><h5><span style=\"font-family: \'Courier New\'; \">EncryptLogger</span></h5><span style=\"font-family: \'Courier New\'; \">与HTMLLogger相似，EncryptLogger重载了log方法，在log方法中，EncryptLogger通过简单的将字符位置向右转移一位实现了加密逻辑，并且发送给可以出力的Logger实例。<br /><br />Listing 19.3: EncryptLogger Class&nbsp;<br /></span><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">class</font></b>&nbsp;EncryptLogger&nbsp;<b><font color=\"#0000ff\">extends</font></b>&nbsp;LoggerDecorator {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;EncryptLogger(<font color=\"#ff0000\">Logger</font>&nbsp;inp_logger) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">super</font></b>(inp_logger);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;log(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;DataLine) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Added functionality</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">DataLine = encrypt(DataLine);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Now forward the encrypted text to the FileLogger</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">for storage</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">logger.log(DataLine);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;encrypt(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.java.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>&nbsp;DataLine) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">/*</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Apply simple encryption by Transposition&hellip;</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">Shift all characters by one position.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">*/</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">DataLine = DataLine.substring(DataLine.<b><font color=\"#0000ff\">length</font></b>() &minus; 1) +</span></li>    <li><span style=\"font-family: \'Courier New\'; \">DataLine.substring(0, DataLine.<b><font color=\"#0000ff\">length</font></b>() &minus; 1);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">return</font></b>&nbsp;DataLine;</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}<i><font color=\"#339900\">//end of class</font></i></span></li></ol></div><h4><span style=\"font-family: \'Courier New\'; \">为了使用新设计装饰对象，客户端需要：</span></h4><p><span style=\"font-family: \'Courier New\'; \">（1） 使用LoggerFactory工厂方法创建一个合适的Logger实例（FileLogger/ConsoleLogger）。<br />（2） 把第一步中创建的Logger实例作为参数转递给新创建的合适的LoggerDecorator实例的构造函数。<br />（3） 调用LoggerDecorator实例上的方法，</span></p><p><span style=\"font-family: \'Courier New\'; \">Listing 19.4: Client DecoratorClient Class</span></p><div class=\"codeStyle\"><ol>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">class</font></b>&nbsp;DecoratorClient {</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><b><font color=\"#0000ff\">public</font></b>&nbsp;<b><font color=\"#0000ff\">static</font></b>&nbsp;<b><font color=\"#0000ff\">void</font></b>&nbsp;main(</span><span style=\"font-family: \'Courier New\'; \"><b><a href=\"http://www.javaresearch.org/source/jdk142/java/lang/String.\njava.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0); text-decoration: none; \"><font class=\"classLink\"><u>String</u></font></a></b>[] args) {</span></li>    <li><span style=\"font-family: \'Courier New\'; \">LoggerFactory factory =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;LoggerFactory();</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><font color=\"#ff0000\">Logger</font>&nbsp;logger = factory.getLogger();</span></li>    <li><span style=\"font-family: \'Courier New\'; \">HTMLLogger hLogger =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;HTMLLogger(logger);</span></li>    <li><span style=\"font-family: \'Courier New\'; \"><i><font color=\"#339900\">//the decorator object provides the same interface.</font></i></span></li>    <li><span style=\"font-family: \'Courier New\'; \">hLogger.log(<font color=\"#ff33ff\">&quot;A Message to Log&quot;</font>);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">EncryptLogger eLogger =&nbsp;<b><font color=\"#0000ff\">new</font></b>&nbsp;EncryptLogger(logger);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">eLogger.log(<font color=\"#ff33ff\">&quot;A Message to Log&quot;</font>);</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}</span></li>    <li><span style=\"font-family: \'Courier New\'; \">}<i><font color=\"#339900\">//End of class</font></i></span></li></ol></div><h3><span style=\"font-family: \'Courier New\'; \">增加新的信息出力类型</span></h3><span style=\"font-family: \'Courier New\'; \">在Logging Utility实例中，应用装饰模式对比使用继承不会因为类层次的增长而导致大量的子类，我们还有另外的Logger类型：DBLogger??出力信息到数据库中。为了将信息转化HTML格式或在出力到数据库以前对信息进行加密，客户端只需遵从上面提到的步骤，因为DBLogger是一种Logger类型，它可以作为构造函数的参数传递给HTMLLogger或EncryptLogger中任何一个类。<br /></span><h3><span style=\"font-family: \'Courier New\'; \">增加新的装饰</span></h3></span></p><p><span style=\"font-family: \'Courier New\'; \"><span class=\"Apple-style-span\" style=\"line-height: 24px; \">从例子中可以看到，LoggerDecorator实例包含了一个Logger类型了对象实例，在转发请求给Logger对象实例以前或以后，增加新的功能。因为LoggerDecorator类实现了Logger接口，LoggerDecorator实例或它的任何一个子类都可以作为一个Logger类型。因此LoggerDecortator包含它的任何子类的一个实例，并且将请求转发给它/。一般的一个装饰对象可以包含另一个装饰对象，并且可以向它转发请求。通过这种方式，新的装饰类，新的功能可以通过包装现存的装饰类来实现。<br /><br /></span></span></p><p><span style=\"font-family: \'Courier New\'; \">原文地址：</span><a href=\"http://www.51cto.com/specbook/11/11650.htm\"><span style=\"font-family: \'Courier New\'; \">http://www.51cto.com/specbook/11/11650.htm</span></a></p>\n','2011-02-15 16:36:49','2011-02-15 16:36:49',NULL,NULL,'publish',NULL,'Java设计模式之装饰模式','/post/2012/7/14/1344938605280.html',1,0),(293,0,'open','<p>&nbsp;<span class=\"Apple-style-span\" style=\"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; \"><table border=\"1\">    <tbody>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">使用频率</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">所属类型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">模式名称</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">模式</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">简单定义</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">创建型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Singleton</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">单件</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">保证一个类只有一个实例，并提供一个访问它的全局访问点。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Composite</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">组合模式</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">将对象组合成树形结构以表示部分整体的关系，Composite使得用户对单个对象和组合对象的使用具有一致性。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">FA?ADE</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">外观</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">为子系统中的一组接口提供一致的界面，fa?ade提供了一高层接口，这个接口使得子系统更容易使用。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Proxy</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">代理</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">为其他对象提供一种代理以控制对这个对象的访问</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Iterator</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">迭代器</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Observer</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">观察者</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知自动更新。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">5</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Template Method</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">模板方法</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">定义一个操作中的算法的骨架，而将一些步骤延迟到子类中，TemplateMethod使得子类可以不改变一个算法的结构即可以重定义该算法得某些特定步骤。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">创建型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Abstract Factory</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">抽象工厂</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们的具体类。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">创建型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Factory Method</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">工厂方法</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">定义一个用于创建对象的接口，让子类决定实例化哪一个类，Factory Method使一个类的实例化延迟到了子类。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Adapter</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">适配器</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">将一类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作那些类可以一起工作。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>\n<td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Decrator</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">装饰</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Command</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">命令</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">State</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">状态</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">允许对象在其内部状态改变时改变他的行为。对象看起来似乎改变了他的类。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">4</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Strategy</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">策略模式</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">定义一系列的算法，把他们一个个封装起来，并使他们可以互相替换，本模式使得算法可以独立于使用它们的客户。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">3</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">创建型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Builder</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">生成器</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">将一个复杂对象的构建与他的表示相分离，使得同样的构建过程可以创建不同的表示。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">3</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Bridge</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">桥接</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">将抽象部分与它的实现部分相分离，使他们可以独立的变化。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">3</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">China of Responsibility</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">职责链</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">使多个对象都有机会处理请求，从而避免请求的送发者和接收者之间的耦合关系</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">2</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">创建型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Prototype</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">原型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">用原型实例指定创建对象的种类，并且通过拷贝这些原型来创建新的对象。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">2</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">结构型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Flyweight</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">享元</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">&nbsp;</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">2</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Mediator</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">中介者</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">用一个中介对象封装一些列的对象交互。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">2</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Visitor</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">访问者模式</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这个元素的新操作。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">1</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Interpreter</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">解释器</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。</td>        </tr>        <tr>            <td style=\"font-size: 12px; font-family: Verd\nana, Geneva, Arial, Helvetica, sans-serif; \">1</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">行为型</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">Memento</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">备忘录</td>            <td style=\"font-size: 12px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; \">在不破坏对象的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。</td>        </tr>    </tbody></table></span></p><p>&nbsp;</p><p>原文地址：<a href=\"http://www.cnblogs.com/kavenmo/archive/2004/09/30/48163.html\">http://www.cnblogs.com/kavenmo/archive/2004/09/30/48163.html</a></p><p>&nbsp;</p><p>&nbsp;</p>\n','2011-02-15 12:56:01','2011-02-15 12:56:01',NULL,NULL,'publish',NULL,'Java设计模式使用率爬行榜','/post/2012/7/14/1344938605348.html',1,0),(294,0,'open','<p align=\"right\">稿件来源：安徽商报</p>  <p align=\"center\"><img alt=\"最美洗脚妹刘丽\" src=\"http://farm6.static.flickr.com/5058/5449882153_05086e120e.jpg\" /></p>  <p>&#160;&#160;&#160;&#160; 昨晚，2010年“感动中国”人物揭晓，来自我省颍上县，被誉为“中国最美洗脚妹”的刘丽当选。这位10年来一直靠打工维持生计，却资助几百名贫困学生上学的女孩，第一次站在这个领奖台上，她朴素地称，因为自己失学打工觉得很困难，见到那些孩子就觉得可怜，想帮帮他们而已。感动中国组委会在颁奖词中赞其为内心的善良，是只不灭的火炬。&#160;&#160;&#160;&#160; </p>  <p>&#160;&#160;&#160; 现场：敬一丹问她为何而坚持</p>  <p>&#160;&#160;&#160; 在录制现场，敬一丹问刘丽，从事洗脚行业和助学是什么原因坚持这么多年。“有朋友曾经告诉我：要什么也许比做什么更重要！我的理解：我做的工作除了没穿白大褂、没挂中医证，我们做的工作跟中医理疗医生做的是同样的工作，我感觉洗脚没有什么，我需要这份工作的工资。从小因为想做老师或者医生可以不用去田里干活，但是家庭困难的原因没有办法，只能辍学，出来打工后因为没有读书遇到很多困难，再看到那些因困难没办法读书的孩子，觉得很可怜，就想到自己，就想帮他们的忙！”这个初中都没能读完的姑娘，用最朴素的言语答说。但其中的艰辛或许只有刘丽一人能体会，在厦门她一直做着洗脚妹。</p>  <p>&#160;&#160;&#160; 因为资助贫困学生，今年31岁的刘丽至今尚未成家，敬一丹也疑惑地询问，对此，刘丽称顺其自然，并笑说，“朋友和我开玩笑说：刘丽，没有一个亿都不敢娶你，娶了你后面还带着一群孩子！ ”</p>  <p>&#160;&#160;&#160; 感言：只是做了力所能及的事</p>  <p>&#160;&#160;&#160; 在颁奖现场，感动中国组委会给刘丽的颁奖词是“为什么是她？一个瘦弱的姑娘，一副疲惫的肩膀。是内心的善良，让她身上有圣洁的光芒。她剪去长发，在风雨里长成南国高大的木棉，红硕的花朵，不是叹息，是不灭的火炬。 ”</p>  <p>&#160;&#160;&#160; 对于第一次获取这份荣誉，刘丽在接受记者采访时称，中国这么大，感动的人，感动的事很多，自己只是做了一些力所能及的事情，她只是以平常心来对待这份荣誉，最重要的是踏踏实实地做好自己的事。“荣誉只是一时的，如果人得到了所谓的名就飘在上面，会摔下来的。我不会因为这而沾沾自喜或者背上负担。”记者询问，对于这份荣誉是否会给她带来压力时，刘丽淡定地说。</p>  <p>&#160;&#160;&#160; 揭秘：事先并不知道自己当选</p>  <p>&#160;&#160;&#160; 作为中央电视台倾力打造的一个精神品牌栏目，《感动中国》自2002年开始创办，它以评选出当年度具有震撼人心、令人感动的人物为主打内容，被媒体誉为“中国人的年度精神史诗”。对于如何当选，刘丽向记者透露了其中的一些过程。</p>  <p>&#160;&#160;&#160; “今年1月来合肥领取安徽日报评选的2010年安徽十大新闻人物后不久，我就接到感动中国栏目组蔡老师的一个电话，请我去北京录制感动中国的节目，当时并不知道自己当选。 ”1月22日，直到中央电视台在录制过程中刘丽才知道自己当选。同时，组委会还要求参加录制的人签订了保密协议，在结果公布前不能对外公布。</p>  <p>&#160;&#160;&#160; 打算：想为家乡建一所学校</p>  <p>&#160;&#160;&#160; 去年7月份开始，做了10年洗脚妹的刘丽与人合伙在厦门开了一家足浴店。 “现在好忙，刚刚和人合作开了一个足浴店，同时也是一个公益平台，为更多的孩子提供资助。这是我的梦想，我为了这个梦想而坚持。 ”&#160;&#160;&#160;&#160; </p>  <p>&#160;&#160;&#160; 另外，刘丽心中还有一个想法：在自己家乡颍上办一所学校。“我去过各地很多学校，发现他们比颍上的学校好得多，颍上是我的家乡，我想出一份力，等攒够了钱，我就在颍上办一所学校，尽自己的一份心。 ” (记者吴尚)</p>  <p>&#160;&#160;&#160; □人物背景</p>  <p>&#160;&#160;&#160; 刘丽，安徽颍上县人，14岁时因家贫辍学外出打工，省下每一分钱供弟弟妹妹读书。刘丽的弟妹最终没有考上大学，这让她很迷茫，似乎多年来的辛苦没了着落。她这才发现，自己“想让这个村子里出两个大学生”的愿望是如此强烈，“是一种寄托吧，我自己想读书而没有读成，就希望让别人有书读”。她萌生了资助别的孩子读书的念头。</p>  <p>&#160;&#160;&#160; 2000年至今，刘丽一直在厦门一家足浴城当足底按摩师，俗称“洗脚妹”，月收入3000元。对于这些血汗钱，刘丽这样分配：500元用来租房和个人消费，剩余2500元，扣除给家里寄的一些，就用来资助贫困学生。她资助了老家村里20个贫困大学生。从2006年起，又通过厦门市妇联，在同安一些中小学校展开一对一资助，资助的人数从三五个上升到数十个。加上一次性的资助，刘丽以她微薄的收入，帮助完成了上百个孩子的读书梦。其事迹在厦门广为流传，被誉为“中国最美洗脚妹”。</p>  <p>&#160;&#160;&#160; □新闻附件</p>  <p>&#160;&#160;&#160; 去年他们感动中国</p>  <p>&#160;&#160;&#160; 获得2010年度“感动中国”人物荣誉的分别是：科学泰斗钱伟长，“信义兄弟”孙水林、孙东林，“玉树铁汉”才哇，“雷锋传人”郭明义，“舟曲之子”王伟，“草原曼巴”王万青，“英雄翁婿”王茂华、谭良才，三栖尖兵何祥美，“最美”洗脚妹刘丽以及“警界保尔”孙炎明。</p>\n','2011-02-15 08:13:00','2011-10-05 21:18:45',NULL,NULL,'publish',NULL,'最美洗脚妹”刘丽感动中国','/post/2012/7/14/1344938605477.html',1,0),(295,0,'open','<p>终于可以在情人节的时候不用听《没有情人的情人节》这首歌了，   <br />我有媳妇了， 我要疼她爱他，我们会幸福壹輩子</p>\n','2011-02-14 05:37:00','2011-10-05 21:18:46',NULL,NULL,'publish',NULL,'终于不是没有情人的情人节了','/post/2012/7/14/1344938605529.html',1,0),(296,0,'open','<p><span class=\"Apple-style-span\" style=\"border-collapse: collapse; font-family: Arial, sans-serif; font-size: 16px; line-height: 25px; \"><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">JavaScript版:</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&lt;html&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&lt;head&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&lt;script&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;var a = new Array(2,3,546,56,76,234,34,667,234);</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;for(var i = 0;i &lt; a.length - 1; i++){</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;for(var j = a.length - 1;j &gt; 0; j--){</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a[j]&lt;a[j-1]){</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var temp = a[j];</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j] = a[j-1];</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j-1] = temp;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;}</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;}</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;for(var i = 0;i &lt; a.length;i++){</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;&nbsp;&nbsp;document.write(a<span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: italic; \"><wbr></wbr>&nbsp;+ &quot;&amp;nbsp;&amp;nbsp;&quot;);</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&nbsp;&nbsp;}</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&lt;/script&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&lt;/head&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 255); line-height: 1.3em; \">&lt;body&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(102, 0, 0); line-height: 1.3em; \">&lt;/body&gt;</span><wbr></wbr><br /><span style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(102, 0, 0); line-height: 1.3em; \">&lt;/html&gt;</span></span></span></p>\n','2011-02-06 13:15:36','2011-02-06 13:15:36',NULL,NULL,'publish',NULL,'JavaScript版本冒泡排序','/post/2012/7/14/1344938605582.html',1,0),(297,0,'open','<p>&nbsp;公司新来两个Java项目，Java团队人手不够，安排给.Net团队培训Java。</p><div>在讲Struts1.2的时候遇到这样一个问题</div><div>&nbsp;</div><div>Action的配置是这样的</div><div>&nbsp;</div><div class=\"codes\"><pre class=\"xml\" name=\"code\">&lt;action path=&quot;/userTest&quot; name=&quot;userTestForm&quot; parameter=&quot;act&quot; scope=&quot;request&quot; type=&quot;org.springframework.web.struts.DelegatingActionProxy&quot;&gt; &lt;forward name=&quot;userTestList&quot; path=&quot;/userTestList.jsp&quot;&gt;&lt;/forward&gt; &lt;forward name=&quot;toList&quot; path=&quot;/userTest.do?act=find&quot;&gt;&lt;/forward&gt;&lt;/action&gt;</pre></div><div>在使用Action中的方法add添加完成对象之后使用ActionMapping.findForward(&quot;toList&quot;);</div><div>调用action中的方法find，find方法执行完成之后ActionMapping.findForward(&quot;userTestList&quot;);跳转到页面userTestList.jsp</div><div>该页面中文出现乱码，request和Response作用域的字符集也都设置了。struts版本为1.2.</div><div>&nbsp;</div><div>&nbsp;</div><div>将&lt;forward name=&quot;toList&quot; path=&quot;/userTest.do?act=find&quot;&gt;&lt;/forward&gt;</div><div>改成&lt;forward name=&quot;toList&quot; path=&quot;/userTest.do?act=find&quot; redirect=&quot;true&quot;&gt;&lt;/forward&gt;就可以了。</div><div>将转发改成重定向，这个错误可能和struts1.2底层的运行机制有关系。 在struts2中就没有发现这个问题了</div>\n','2011-01-26 14:55:10','2011-01-26 14:55:10',NULL,NULL,'publish',NULL,'struts1.2 forward action乱码','/post/2012/7/14/1344938605639.html',1,0),(298,0,'open','<p></p><p><span style=\"font-family: \'Courier New\'; \">jquery.validate全攻略</span></p><p><span style=\"font-family: \'Courier New\'; \">2009-09-18 15:56</span></p><p><span style=\"font-family: \'Courier New\'; \">一、准备工作</span></p><p><span style=\"font-family: \'Courier New\'; \">需要JQuery版本：1.2.6+, 兼容 1.3.2</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;script src=&quot;jquery.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;script src=&quot;jquery.validate.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">二、默认校验规则</span></p><p><span style=\"font-family: \'Courier New\'; \">(1)required:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 必输字段</span></p><p><span style=\"font-family: \'Courier New\'; \">(2)remote:&quot;check.php&quot; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;使用ajax方法调用check.php验证输入值</span></p><p><span style=\"font-family: \'Courier New\'; \">(3)email:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;必须输入正确格式的电子邮件</span></p><p><span style=\"font-family: \'Courier New\'; \">(4)url:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;必须输入正确格式的网址</span></p><p><span style=\"font-family: \'Courier New\'; \">(5)date:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 必须输入正确格式的日期</span></p><p><span style=\"font-family: \'Courier New\'; \">(6)dateISO:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性</span></p><p><span style=\"font-family: \'Courier New\'; \">(7)number:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 必须输入合法的数字(负数，小数)</span></p><p><span style=\"font-family: \'Courier New\'; \">(8)digits:true &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 必须输入整数</span></p><p><span style=\"font-family: \'Courier New\'; \">(9)creditcard: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 必须输入合法的信用卡号</span></p><p><span style=\"font-family: \'Courier New\'; \">(10)equalTo:&quot;#field&quot; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 输入值必须和#field相同</span></p><p><span style=\"font-family: \'Courier New\'; \">(11)accept: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;输入拥有合法后缀名的字符串（上传文件的后缀）</span></p><p><span style=\"font-family: \'Courier New\'; \">(12)maxlength:5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;输入长度最多是5的字符串(汉字算一个字符)</span></p><p><span style=\"font-family: \'Courier New\'; \">(13)minlength:10 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 输入长度最小是10的字符串(汉字算一个字符)</span></p><p><span style=\"font-family: \'Courier New\'; \">(14)rangelength:[5,10] &nbsp; &nbsp; &nbsp; &nbsp; 输入长度必须介于 5 和 10 之间的字符串&quot;)(汉字算一个字符)</span></p><p><span style=\"font-family: \'Courier New\'; \">(15)range:[5,10] &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 输入值必须介于 5 和 10 之间</span></p><p><span style=\"font-family: \'Courier New\'; \">(16)max:5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;输入值不能大于5</span></p><p><span style=\"font-family: \'Courier New\'; \">(17)min:10 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 输入值不能小于10</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">三、默认的提示</span></p><p><span style=\"font-family: \'Courier New\'; \">messages: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: &quot;This field is required.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">remote: &quot;Please fix this field.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">email: &quot;Please enter a valid email address.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">url: &quot;Please enter a valid URL.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">date: &quot;Please enter a valid date.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">dateISO: &quot;Please enter a valid date (ISO).&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">dateDE: &quot;Bitte geben Sie ein g眉ltiges Datum ein.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">number: &quot;Please enter a valid number.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">numberDE: &quot;Bitte geben Sie eine Nummer ein.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">digits: &quot;Please enter only digits&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">creditcard: &quot;Please enter a valid credit card number.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">equalTo: &quot;Please enter the same value again.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">accept: &quot;Please enter a value with a valid extension.&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">maxlength: $.validator.format(&quot;Please enter no more than {0} characters.&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">minlength: $.validator.format(&quot;Please enter at least {0} characters.&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">rangelength: $.validator.format(&quot;Please enter a value between {0} and {1} characters long.&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">range: $.validator.format(&quot;Please enter a value between {0} and {1}.&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">max: $.validator.format(&quot;Please enter a value less than or equal to {0}.&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">min: $.validator.format(&quot;Please enter a value greater than or equal to {0}.&quot;)</span></p><p><span style=\"font-family: \'Courier New\'; \">},</span></p><p><span style=\"font-family: \'Courier New\'; \">如需要修改，可在js代码中加入：</span></p><p><span style=\"font-family: \'Courier New\'; \">jQuery.extend(jQuery.validator.messages, {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: &quot;必选字段&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">remote: &quot;请修正该字段&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">email: &quot;请输入正确格式的电子邮件&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">url: &quot;请输入合法的网址&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">date: &quot;请输入合法的日期&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">dateISO: &quot;请输入合法的日期 (ISO).&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">number: &quot;请输入合法的数字&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">digits: &quot;只能输入整数&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">creditcard: &quot;请输入合法的信用卡号&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">equalTo: &quot;请再次输入相同的值&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">accept: &quot;请输入拥有合法后缀名的字符串&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">maxlength: jQuery.validator.format(&quot;请输入一个长度最多是 {0} 的字符串&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">minlength: jQuery.validator.format(&quot;请输入一个长度最少是 {0} 的字符串&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">rangelength: jQuery.validator.format(&quot;请输入一个长度介于 {0} 和 {1} 之间的字符串&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">range: jQuery.validator.format(&quot;请输入一个介于 {0} 和 {1\n} 之间的值&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">max: jQuery.validator.format(&quot;请输入一个最大为 {0} 的值&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">min: jQuery.validator.format(&quot;请输入一个最小为 {0} 的值&quot;)</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">推荐做法，将此文件放入messages_cn.js中，在页面中引入</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;script src=&quot;../js/messages_cn.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">四、使用方式</span></p><p><span style=\"font-family: \'Courier New\'; \">1.将校验规则写到控件中</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;script src=&quot;../js/jquery.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;script src=&quot;../js/jquery.validate.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;script src=&quot;./js/jquery.metadata.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">$().ready(function() {</span></p><p><span style=\"font-family: \'Courier New\'; \">$(&quot;#signupForm&quot;).validate();</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;form id=&quot;signupForm&quot; method=&quot;get&quot; action=&quot;&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;firstname&quot;&gt;Firstname&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;firstname&quot; name=&quot;firstname&quot; class=&quot;required&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;email&quot;&gt;E-Mail&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;email&quot; name=&quot;email&quot; class=&quot;required email&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;password&quot; name=&quot;password&quot; type=&quot;password&quot; class=&quot;{required:true,minlength:5}&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;confirm_password&quot;&gt;确认密码&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;confirm_password&quot; name=&quot;confirm_password&quot; type=&quot;password&quot; class=&quot;{required:true,minlength:5,equalTo:\'#password\'}&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input class=&quot;submit&quot; type=&quot;submit&quot; value=&quot;Submit&quot;/&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/form&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">使用class=&quot;{}&quot;的方式，必须引入包：jquery.metadata.js</span></p><p><span style=\"font-family: \'Courier New\'; \">可以使用如下的方法，修改提示内容：</span></p><p><span style=\"font-family: \'Courier New\'; \">class=&quot;{required:true,minlength:5,messages:{required:\'请输入内容\'}}&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">在使用equalTo关键字时，后面的内容必须加上引号，如下代码：</span></p><p><span style=\"font-family: \'Courier New\'; \">class=&quot;{required:true,minlength:5,equalTo:\'#password\'}&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">另外一个方式，使用关键字：meta（为了元数据使用其他插件你要包装 你的验证规则 在他们自己的项目中可以用这个特殊的选项）</span></p><p><span style=\"font-family: \'Courier New\'; \">Tell the validation plugin to look inside a validate-property in metadata for validation rules.</span></p><p><span style=\"font-family: \'Courier New\'; \">例如：</span></p><p><span style=\"font-family: \'Courier New\'; \">meta: &quot;validate&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;password&quot; name=&quot;password&quot; type=&quot;password&quot; class=&quot;{validate:{required:true,minlength:5}}&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">再有一种方式：</span></p><p><span style=\"font-family: \'Courier New\'; \">$.metadata.setType(&quot;attr&quot;, &quot;validate&quot;);</span></p><p><span style=\"font-family: \'Courier New\'; \">这样可以使用validate=&quot;{required:true}&quot;的方式，或者class=&quot;required&quot;，但class=&quot;{required:true,minlength:5}&quot;将不起作用</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">2.将校验规则写到代码中</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">$().ready(function() {</span></p><p><span style=\"font-family: \'Courier New\'; \">$(&quot;#signupForm&quot;).validate({</span></p><p><span style=\"font-family: \'Courier New\'; \">rules: {</span></p><p><span style=\"font-family: \'Courier New\'; \">firstname: &quot;required&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">email: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: true,</span></p><p><span style=\"font-family: \'Courier New\'; \">email: true</span></p><p><span style=\"font-family: \'Courier New\'; \">},</span></p><p><span style=\"font-family: \'Courier New\'; \">password: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: true,</span></p><p><span style=\"font-family: \'Courier New\'; \">minlength: 5</span></p><p><span style=\"font-family: \'Courier New\'; \">},</span></p><p><span style=\"font-family: \'Courier New\'; \">confirm_password: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: true,</span></p><p><span style=\"font-family: \'Courier New\'; \">minlength: 5,</span></p><p><span style=\"font-family: \'Courier New\'; \">equalTo: &quot;#password&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">},</span></p><p><span style=\"font-family: \'Courier New\'; \">messages: {</span></p><p><span style=\"font-family: \'Courier New\'; \">firstname: &quot;请输入姓名&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">email: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: &quot;请输入Email地址&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">email: &quot;请输入正确的email地址&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">},</span></p><p><span style=\"font-family: \'Courier New\'; \">password: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: &quot;请输入密码&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">minlength: jQuery.format(&quot;密码不能小于{0}个字符&quot;)</span></p><p><span style=\"font-family: \'Courier New\'; \">},</span></p><p><span style=\"font-family: \'Courier New\'; \">confirm_password: {</span></p><p><span style=\"font-family: \'Courier New\'; \">required: &quot;请输\n入确认密码&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">minlength: &quot;确认密码不能小于5个字符&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">equalTo: &quot;两次输入密码不一致不一致&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">//messages处，如果某个控件没有message，将调用默认的信息</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;form id=&quot;signupForm&quot; method=&quot;get&quot; action=&quot;&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;firstname&quot;&gt;Firstname&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;firstname&quot; name=&quot;firstname&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;email&quot;&gt;E-Mail&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;email&quot; name=&quot;email&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;password&quot; name=&quot;password&quot; type=&quot;password&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label for=&quot;confirm_password&quot;&gt;确认密码&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;confirm_password&quot; name=&quot;confirm_password&quot; type=&quot;password&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input class=&quot;submit&quot; type=&quot;submit&quot; value=&quot;Submit&quot;/&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/p&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/form&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">required:true 必须有值</span></p><p><span style=\"font-family: \'Courier New\'; \">required:&quot;#aa:checked&quot;表达式的值为真，则需要验证</span></p><p><span style=\"font-family: \'Courier New\'; \">required:function(){}返回为真，表时需要验证</span></p><p><span style=\"font-family: \'Courier New\'; \">后边两种常用于，表单中需要同时填或不填的元素</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">五、常用方法及注意问题</span></p><p><span style=\"font-family: \'Courier New\'; \">1.用其他方式替代默认的SUBMIT</span></p><p><span style=\"font-family: \'Courier New\'; \">$().ready(function() {</span></p><p><span style=\"font-family: \'Courier New\'; \">$(&quot;#signupForm&quot;).validate({</span></p><p><span style=\"font-family: \'Courier New\'; \">submitHandler:function(form){</span></p><p><span style=\"font-family: \'Courier New\'; \">alert(&quot;submitted&quot;); &nbsp; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">form.submit();</span></p><p><span style=\"font-family: \'Courier New\'; \">} &nbsp; &nbsp;&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">可以设置validate的默认值，写法如下：</span></p><p><span style=\"font-family: \'Courier New\'; \">$.validator.setDefaults({</span></p><p><span style=\"font-family: \'Courier New\'; \">submitHandler: function(form) { alert(&quot;submitted!&quot;);form.submit(); }</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">如果想提交表单, 需要使用form.submit()而不要使用$(form).submit()</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">2.debug，如果这个参数为true，那么表单不会提交，只进行检查，调试时十分方便</span></p><p><span style=\"font-family: \'Courier New\'; \">$().ready(function() {</span></p><p><span style=\"font-family: \'Courier New\'; \">$(&quot;#signupForm&quot;).validate({</span></p><p><span style=\"font-family: \'Courier New\'; \">debug:true</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">如果一个页面中有多个表单，用</span></p><p><span style=\"font-family: \'Courier New\'; \">$.validator.setDefaults({</span></p><p><span style=\"font-family: \'Courier New\'; \">debug: true</span></p><p><span style=\"font-family: \'Courier New\'; \">})</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">3.ignore：忽略某些元素不验证</span></p><p><span style=\"font-family: \'Courier New\'; \">ignore: &quot;.ignore&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">4.errorPlacement：Callback &nbsp;Default: 把错误信息放在验证的元素后面 &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">指明错误放置的位置，默认情况是：error.appendTo(element.parent());即把错误信息放在验证的元素后面&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">errorPlacement: function(error, element) { &nbsp;&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">error.appendTo(element.parent()); &nbsp;&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">//示例：</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;tr&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td class=&quot;label&quot;&gt;&lt;label id=&quot;lfirstname&quot; for=&quot;firstname&quot;&gt;First Name&lt;/label&gt;&lt;/td&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td class=&quot;field&quot;&gt;&lt;input id=&quot;firstname&quot; name=&quot;firstname&quot; type=&quot;text&quot; value=&quot;&quot; maxlength=&quot;100&quot; /&gt;&lt;/td&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td class=&quot;status&quot;&gt;&lt;/td&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/tr&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;tr&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td style=&quot;padding-right: 5px;&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;dateformat_eu&quot; name=&quot;dateformat&quot; type=&quot;radio&quot; value=&quot;0&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label id=&quot;ldateformat_eu&quot; for=&quot;dateformat_eu&quot;&gt;14/02/07&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/td&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td style=&quot;padding-left: 5px;&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;dateformat_am&quot; name=&quot;dateformat&quot; type=&quot;radio&quot; value=&quot;1&quot; &nbsp;/&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label id=&quot;ldateformat_am&quot; for=&quot;dateformat_am&quot;&gt;02/14/07&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/td&gt;</span></p><p>< span style=\"font-family: \'Courier New\'; \">&lt;td&gt;&lt;/td&gt;</p><p><span style=\"font-family: \'Courier New\'; \">&lt;/tr&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;tr&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td class=&quot;label&quot;&gt;&amp;nbsp;&lt;/td&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;td class=&quot;field&quot; colspan=&quot;2&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;div id=&quot;termswrap&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input id=&quot;terms&quot; type=&quot;checkbox&quot; name=&quot;terms&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;label id=&quot;lterms&quot; for=&quot;terms&quot;&gt;I have read and accept the Terms of Use.&lt;/label&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/div&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/td&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/tr&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">errorPlacement: function(error, element) {</span></p><p><span style=\"font-family: \'Courier New\'; \">if ( element.is(&quot;:radio&quot;) )</span></p><p><span style=\"font-family: \'Courier New\'; \">error.appendTo( element.parent().next().next() );</span></p><p><span style=\"font-family: \'Courier New\'; \">else if ( element.is(&quot;:checkbox&quot;) )</span></p><p><span style=\"font-family: \'Courier New\'; \">error.appendTo ( element.next() );</span></p><p><span style=\"font-family: \'Courier New\'; \">else</span></p><p><span style=\"font-family: \'Courier New\'; \">error.appendTo( element.parent().next() );</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">代码的作用是：一般情况下把错误信息显示在&lt;td class=&quot;status&quot;&gt;&lt;/td&gt;中，如果是radio显示在&lt;td&gt;&lt;/td&gt;中，如果是checkbox显示在内容的后面</span></p><p><span style=\"font-family: \'Courier New\'; \">errorClass：String &nbsp;Default: &quot;error&quot; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">指定错误提示的css类名，可以自定义错误提示的样式</span></p><p><span style=\"font-family: \'Courier New\'; \">errorElement：String &nbsp;Default: &quot;label&quot; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">用什么标签标记错误，默认的是label你可以改成em</span></p><p><span style=\"font-family: \'Courier New\'; \">errorContainer：Selector &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">显示或者隐藏验证信息，可以自动实现有错误信息出现时把容器属性变为显示，无错误时隐藏，用处不大</span></p><p><span style=\"font-family: \'Courier New\'; \">errorContainer: &quot;#messageBox1, #messageBox2&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">errorLabelContainer：Selector&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">把错误信息统一放在一个容器里面。</span></p><p><span style=\"font-family: \'Courier New\'; \">wrapper：String</span></p><p><span style=\"font-family: \'Courier New\'; \">用什么标签再把上边的errorELement包起来</span></p><p><span style=\"font-family: \'Courier New\'; \">一般这三个属性同时使用，实现在一个容器内显示所有错误提示的功能，并且没有信息时自动隐藏</span></p><p><span style=\"font-family: \'Courier New\'; \">errorContainer: &quot;div.error&quot;,</span></p><p><span style=\"font-family: \'Courier New\'; \">errorLabelContainer: $(&quot;#signupForm div.error&quot;),</span></p><p><span style=\"font-family: \'Courier New\'; \">wrapper: &quot;li&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">设置错误提示的样式，可以增加图标显示</span></p><p><span style=\"font-family: \'Courier New\'; \">input.error { border: 1px solid red; }</span></p><p><span style=\"font-family: \'Courier New\'; \">label.error {</span></p><p><span style=\"font-family: \'Courier New\'; \">background:url(&quot;./demo/images/unchecked.gif&quot;) no-repeat 0px 0px;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;&nbsp;padding-left: 16px;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;&nbsp;padding-bottom: 2px;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;&nbsp;font-weight: bold;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;&nbsp;color: #EA5200;</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">label.checked {</span></p><p><span style=\"font-family: \'Courier New\'; \">background:url(&quot;./demo/images/checked.gif&quot;) no-repeat 0px 0px;</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">success：String,Callback&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">要验证的元素通过验证后的动作，如果跟一个字符串，会当做一个css类，也可跟一个函数</span></p><p><span style=\"font-family: \'Courier New\'; \">success: function(label) {</span></p><p><span style=\"font-family: \'Courier New\'; \">// set &amp;nbsp; as text for IE</span></p><p><span style=\"font-family: \'Courier New\'; \">label.html(&quot;&amp;nbsp;&quot;).addClass(&quot;checked&quot;);</span></p><p><span style=\"font-family: \'Courier New\'; \">//label.addClass(&quot;valid&quot;).text(&quot;Ok!&quot;)</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">添加&quot;valid&quot; 到验证元素, 在CSS中定义的样式&lt;style&gt;label.valid {}&lt;/style&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">success: &quot;valid&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">nsubmit： Boolean &nbsp;Default: true &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">提交时验证. 设置唯false就用其他方法去验证</span></p><p><span style=\"font-family: \'Courier New\'; \">onfocusout：Boolean &nbsp;Default: true &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">失去焦点是验证(不包括checkboxes/radio buttons)&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">onkeyup：Boolean &nbsp;Default: true &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">在keyup时验证.</span></p><p><span style=\"font-family: \'Courier New\'; \">onclick：Boolean &nbsp;Default: true &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">在checkboxes 和 radio 点击时验证</span></p><p><span style=\"font-family: \'Courier New\'; \">focusInvalid：Boolean &nbsp;Default: true &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">提交表单后，未通过验证的表单(第一个或提交之前获得焦点的未通过验证的表单)会获得焦点</span></p><p><span style=\"font-family: \'Courier New\'; \">focusCleanup：Boolean &nbsp;Default: false &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">如果是true那么当未通过验证的元素获得焦点时，移除错误提示。避免和 focusInvalid 一起用</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">// 重置表单</span></p><p><span style=\"font-family: \'Courier New\'; \">$().ready(function() {</span></p><p><span style=\"font-family: \'Courier New\'; \">var validator = $(&quot;#signupForm&quot;).validate({</span></p><p><span style=\"font-family: \'Courier New\'; \">submitHandler:function(form){</span></p><p><span style=\"font-family: \'Courier New\'; \">alert(&quot;submitted&quot;); &nbsp; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">form.submit();</span></p><p><span style=\"font-family: \'Courier New\'; \">} &nbsp; &nbsp;&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">$(&quot;#reset&quot;).click(function() {</span></p><p><span style=\"fo\nnt-family: \'Courier New\'; \">validator.resetForm();</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">});</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">remote：URL</span></p><p><span style=\"font-family: \'Courier New\'; \">使用ajax方式进行验证，默认会提交当前验证的值到远程地址，如果需要提交其他的值，可以使用data选项</span></p><p><span style=\"font-family: \'Courier New\'; \">remote: &quot;check-email.php&quot;</span></p><p><span style=\"font-family: \'Courier New\'; \">remote: {</span></p><p><span style=\"font-family: \'Courier New\'; \">url: &quot;check-email.php&quot;, &nbsp; &nbsp; //后台处理程序</span></p><p><span style=\"font-family: \'Courier New\'; \">type: &quot;post&quot;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //数据发送方式</span></p><p><span style=\"font-family: \'Courier New\'; \">dataType: &quot;json&quot;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //接受数据格式 &nbsp; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">data: { &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //要传递的数据</span></p><p><span style=\"font-family: \'Courier New\'; \">username: function() {</span></p><p><span style=\"font-family: \'Courier New\'; \">return $(&quot;#username&quot;).val();</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">远程地址只能输出 &quot;true&quot; 或 &quot;false&quot;，不能有其它输出</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">&nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">addMethod：name, method, message</span></p><p><span style=\"font-family: \'Courier New\'; \">自定义验证方法</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">// 中文字两个字节</span></p><p><span style=\"font-family: \'Courier New\'; \">jQuery.validator.addMethod(&quot;byteRangeLength&quot;, function(value, element, param) {</span></p><p><span style=\"font-family: \'Courier New\'; \">var length = value.length;</span></p><p><span style=\"font-family: \'Courier New\'; \">for(var i = 0; i &lt; value.length; i++){</span></p><p><span style=\"font-family: \'Courier New\'; \">if(value.charCodeAt(i) &gt; 127){</span></p><p><span style=\"font-family: \'Courier New\'; \">length++;</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">}</span></p><p><span style=\"font-family: \'Courier New\'; \">return this.optional(element) || ( length &gt;= param[0] &amp;&amp; length &lt;= param[1] ); &nbsp; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">}, $.validator.format(&quot;请确保输入的值在{0}-{1}个字节之间(一个中文字算2个字节)&quot;));</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">// 邮政编码验证 &nbsp; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">jQuery.validator.addMethod(&quot;isZipCode&quot;, function(value, element) { &nbsp; &nbsp;</span></p><p><span style=\"font-family: \'Courier New\'; \">var tel = /^[0-9]{6}$/;</span></p><p><span style=\"font-family: \'Courier New\'; \">return this.optional(element) || (tel.test(value));</span></p><p><span style=\"font-family: \'Courier New\'; \">}, &quot;请正确填写您的邮政编码&quot;);</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">radio和checkbox、select的验证</span></p><p><span style=\"font-family: \'Courier New\'; \">radio的required表示必须选中一个</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input &nbsp;type=&quot;radio&quot; id=&quot;gender_male&quot; value=&quot;m&quot; name=&quot;gender&quot; class=&quot;{required:true}&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input &nbsp;type=&quot;radio&quot; id=&quot;gender_female&quot; value=&quot;f&quot; name=&quot;gender&quot;/&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">checkbox的required表示必须选中</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;agree&quot; name=&quot;agree&quot; class=&quot;{required:true}&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">checkbox的minlength表示必须选中的最小个数,maxlength表示最大的选中个数,rangelength:[2,3]表示选中个数区间</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;spam_email&quot; value=&quot;email&quot; name=&quot;spam[]&quot; class=&quot;{required:true, minlength:2}&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;spam_phone&quot; value=&quot;phone&quot; name=&quot;spam[]&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;spam_mail&quot; value=&quot;mail&quot; name=&quot;spam[]&quot; /&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \"><br /></span></p><p><span style=\"font-family: \'Courier New\'; \">select的required表示选中的value不能为空</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;select id=&quot;jungle&quot; name=&quot;jungle&quot; title=&quot;Please select something!&quot; class=&quot;{required:true}&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;&quot;&gt;&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;1&quot;&gt;Buga&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;2&quot;&gt;Baga&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;3&quot;&gt;Oi&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/select&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">select的minlength表示选中的最小个数（可多选的select）,maxlength表示最大的选中个数,rangelength:[2,3]表示选中个数区间</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;select id=&quot;fruit&quot; name=&quot;fruit&quot; title=&quot;Please select at least two fruits&quot; class=&quot;{required:true, minlength:2}&quot; multiple=&quot;multiple&quot;&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;b&quot;&gt;Banana&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;a&quot;&gt;Apple&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;p&quot;&gt;Peach&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;option value=&quot;t&quot;&gt;Turtle&lt;/option&gt;</span></p><p><span style=\"font-family: \'Courier New\'; \">&lt;/select&gt;</span></p><p>&nbsp;</p>\n','2011-01-20 10:49:34','2011-01-20 10:49:34',NULL,NULL,'publish',NULL,'jquery.validate全攻略','/post/2012/7/14/1344938605691.html',1,0),(299,0,'open','<p>&nbsp;这个可以让自己的博客同步QQ个性签名，QQ空间说说，和腾讯微薄。</p><div style=\"background-color: rgb(255, 255, 255); padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font-family: Arial, Verdana, sans-serif; line-height: 22px; font-size: 14px; \"><div>首先去http://open.t.qq.com/apps.php，获取腾讯微薄开放平台应用。</div><div>打开这个网址之后，选择微博秀 -&gt; 其他博客或者网站 -&gt; 立即使用</div><div>这时你就会跳转到一个页面，这里你可以根据自己博客的样式选择相应的高度和颜色</div><div>然后复制下面文本框中的代码，类似这样的（不要复制这个哦， 这个是我的微博生成的代码）</div><div>&nbsp;</div><div class=\"codes\"><pre class=\"xml\" name=\"code\" style=\"font-family: \'Courier New\', monospace; font-size: 12px; width: 1146px; overflow-x: auto; overflow-y: auto; margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(247, 247, 247); background-position: initial initial; background-repeat: initial initial; \">&lt;iframe frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;http://v.t.qq.com/show/show.php?n=gaoyoubo&amp;w=300&amp;h=550&amp;fl=2&amp;l=8&amp;o=31&amp;c=0&amp;si=e130b1b9b06c3d7d4dc8fe0ab8b71f08e3415195&quot; width=&quot;300&quot; height=&quot;550&quot;&gt;&lt;/iframe&gt;</pre></div><div>然后到你的博客相应主题的模板目录中，打开default.asp，在相应的位置添加上这段代码就大功告成啦！</div><div>当然，如果想在其他页面也显示微薄信息的话，同样这种方法，找到其他页面，修改一下就可以啦！&nbsp;</div><div>&nbsp;</div><div>&nbsp;</div><div>下面讲如果给自己的文章添加腾讯微薄签名档啦。</div><div>同样的方法，也可以在腾讯微薄应用里面找到，签名档。</div><div>1，选择用途 &nbsp; 博客或网站</div><div>2，主题也颜色 &nbsp;自己选</div><div>3，获取代码</div><div>4，到自己微博模板的b_article-single.html中,找到&lt;#article/content#&gt;，在下面添加如果代码就可以了</div><div>&nbsp;</div><div class=\"codes\"><pre class=\"xml\" name=\"code\" style=\"font-family: \'Courier New\', monospace; font-size: 12px; width: 1146px; overflow-x: auto; overflow-y: auto; margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(247, 247, 247); background-position: initial initial; background-repeat: initial initial; \">&lt;a href=&quot;http://t.qq.com/gaoyoubo&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://v.t.qq.com/cgi-bin/signature?name=gaoyoubo&amp;sign=e130b1b9b06c3d7d4dc8fe0ab8b71f08e3415195&amp;type=5&quot; width=&quot;380&quot; height=&quot;100&quot; style=&quot;border:none;&quot; /&gt;&lt;/a&gt;&lt;br/&gt;</pre></div><div>具体效果可以查看我的博客</div></div>\n','2011-01-19 12:48:33','2011-01-19 12:48:33',NULL,NULL,'publish',NULL,'zblog关联腾讯微博','/post/2012/7/14/1344938606334.html',1,0),(300,0,'open','<p>&nbsp;<span class=\"Apple-style-span\" style=\"font-family: Tahoma; font-size: 12px; line-height: 18px; -webkit-border-horizontal-spacing: 1px; -webkit-border-vertical-spacing: 1px; \">&nbsp; Hibernate乐观锁大多是基于数据版本（version）记录机制实现的。所谓的数据版本，就是为数据增加一个版本标识，在基于数据库表的版本解决方案中，一般是通过为数据库表增加一个version字段来实现。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 读取数据时，将此版本号一同读出，之后更新时，对此版本号加1。此时，将提交数据的版本号与数据库表对应记录的当前版本信息进行对比，如果提交的数据版本号大于数据库表中的当前版本号，则予以更新，否则认为是过期数据。&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 乐观锁 测试：&nbsp;<br /><br /><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong style=\"font-weight: bold; \">User 类：</strong>&nbsp;<br /><br /><div class=\"dp-highlighter\" style=\"font-family: Monaco, \'DejaVu Sans Mono\', \'Bitstream Vera Sans Mono\', Consolas, \'Courier New\', monospace; font-size: 12px; background-color: transparent; width: 766px; overflow-x: auto; overflow-y: auto; margin-left: 9px; padding-top: 1px; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; word-break: break-all; word-wrap: break-word; \"><div class=\"bar\"><div class=\"tools\" style=\"padding-top: 3px; padding-right: 3px; padding-bottom: 3px; padding-left: 3px; text-align: left; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; color: black; font-weight: bold; \">Java代码&nbsp;<embed src=\"http://www.javaeye.com/javascripts/syntaxhighlighter/clipboard_new.swf\" width=\"14\" height=\"15\" flashvars=\"clipboard=public%20class%20User%20implements%20Serializable%7B%20%0A%09private%20int%20id%3B%20%0A%09private%20String%20name%3B%20%0A%09private%20int%20version%3B%0A%20%20%20%20...%0A%7D%0A\" quality=\"high\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"></embed></div></div><ol start=\"1\" class=\"dp-j\" style=\"font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(209, 215, 220); border-right-color: rgb(209, 215, 220); border-bottom-color: rgb(209, 215, 220); border-left-color: rgb(209, 215, 220); list-style-type: decimal; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(43, 145, 175); \">    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \"><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">public</span><span style=\"color: black; \">&nbsp;</span><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">class</span><span style=\"color: black; \">&nbsp;User&nbsp;</span><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">implements</span><span style=\"color: black; \">&nbsp;Serializable{&nbsp;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">private</span><span style=\"color: black; \">&nbsp;</span><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">int</span><span style=\"color: black; \">&nbsp;id;&nbsp;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">private</span><span style=\"color: black; \">&nbsp;String&nbsp;name;&nbsp;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">private</span><span style=\"color: black; \">&nbsp;</span><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">int</span><span style=\"color: black; \">&nbsp;version;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">}&nbsp;&nbsp;</span></li></ol></div><br /><br /><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong style=\"font-weight: bold; \">User.hbm.xml映射文件：</strong>&nbsp;<br /><br /><div class=\"dp-highlighter\" style=\"font-family: Monaco, \'DejaVu Sans Mono\', \'Bitstream Vera Sans Mono\', Consolas, \'Courier New\', monospace; font-size: 12px; background-color: transparent; width: 766px; overflow-x: auto; overflow-y: auto; margin-left: 9px; padding-top: 1px; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; word-break: break-all; word-wrap: break-word; \"><div class=\"bar\"><div class=\"tools\" style=\"padding-top: 3px; padding-right: 3px; padding-bottom: 3px; padding-left: 3px; text-align: left; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; color: black; font-weight: bold; \">Java代码&nbsp;<embed src=\"http://www.javaeye.com/javascripts/syntaxhighlighter/clipboard_new.swf\" width=\"14\" height=\"15\" flashvars=\"clipboard=%3Chibernate-mapping%3E%0A%09%3Cclass%20name%3D%22po.User%22%20table%3D%22t_user%22%20lazy%3D%22false%22%20optimistic-lock%3D%22version%22%3E%0A%09%09%3Cid%20name%3D%22id%22%3E%0A%09%09%09%3Cgenerator%20class%3D%22native%22%20%2F%3E%0A%09%09%3C%2Fid%3E%20%0A%09%09%3Cversion%20name%3D%22version%22%20column%3D%22version%22%20type%3D%22integer%22%2F%3E%0A%09%09%3Cproperty%20name%3D%22name%22%20%2F%3E%20%20%0A%09%3C%2Fclass%3E%0A%3C%2Fhibernate-mapping%3E\" quality=\"high\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"></embed></div></div><ol start=\"1\" class=\"dp-j\" style=\"font-size: 1em; line-height: 1.4em; margin-top: 0px;\nmargin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(209, 215, 220); border-right-color: rgb(209, 215, 220); border-bottom-color: rgb(209, 215, 220); border-left-color: rgb(209, 215, 220); list-style-type: decimal; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(43, 145, 175); \">    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \"><span style=\"color: black; \">&lt;hibernate-mapping&gt;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">class</span><span style=\"color: black; \">&nbsp;name=</span><span class=\"string\" style=\"color: blue; \">&quot;po.User&quot;</span><span style=\"color: black; \">&nbsp;table=</span><span class=\"string\" style=\"color: blue; \">&quot;t_user&quot;</span><span style=\"color: black; \">&nbsp;lazy=</span><span class=\"string\" style=\"color: blue; \">&quot;false&quot;</span><span style=\"color: black; \">&nbsp;optimistic-lock=</span><span class=\"string\" style=\"color: blue; \">&quot;version&quot;</span><span style=\"color: black; \">&gt;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id&nbsp;name=<span class=\"string\" style=\"color: blue; \">&quot;id&quot;</span><span style=\"color: black; \">&gt;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;generator&nbsp;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">class</span><span style=\"color: black; \">=</span><span class=\"string\" style=\"color: blue; \">&quot;native&quot;</span><span style=\"color: black; \">&nbsp;/&gt;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/id&gt;&nbsp;&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&nbsp;name=<span class=\"string\" style=\"color: blue; \">&quot;version&quot;</span><span style=\"color: black; \">&nbsp;column=</span><span class=\"string\" style=\"color: blue; \">&quot;version&quot;</span><span style=\"color: black; \">&nbsp;type=</span><span class=\"string\" style=\"color: blue; \">&quot;integer&quot;</span><span style=\"color: black; \">/&gt;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=<span class=\"string\" style=\"color: blue; \">&quot;name&quot;</span><span style=\"color: black; \">&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">class</span><span style=\"color: black; \">&gt;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&lt;/hibernate-mapping&gt;&nbsp;&nbsp;</span></li></ol></div><br /><br /><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong style=\"font-weight: bold; \">测试代码：</strong>&nbsp;<br /><br /><div class=\"dp-highlighter\" style=\"font-family: Monaco, \'DejaVu Sans Mono\', \'Bitstream Vera Sans Mono\', Consolas, \'Courier New\', monospace; font-size: 12px; background-color: transparent; width: 766px; overflow-x: auto; overflow-y: auto; margin-left: 9px; padding-top: 1px; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; word-break: break-all; word-wrap: break-word; \"><div class=\"bar\"><div class=\"tools\" style=\"padding-top: 3px; padding-right: 3px; padding-bottom: 3px; padding-left: 3px; text-align: left; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; color: black; font-weight: bold; \">Java代码&nbsp;<embed src=\"http://www.javaeye.com/javascripts/syntaxhighlighter/clipboard_new.swf\" width=\"14\" height=\"15\" flashvars=\"clipboard=%20%20Session%20session%20%3D%20sessionFactory.openSession()%3B%0A%09%09Session%20session2%20%3D%20sessionFactory.openSession()%3B%0A%09%09%0A%09%09User%20user%20%3D%20(User)session.load(User.class%2C%20new%20Integer(1))%3B%0A%09%09User%20user2%20%3D%20(User)session2.load(User.class%2C%20new%20Integer(1))%3B%20%0A%0A%20%20Transaction%20tx%20%3D%20session.beginTransaction()%3B%20%20%0A%09%09%0A%09%09Transaction%20tx2%20%3D%20session2.beginTransaction()%3B%20%0A%09%09user2.setName(%22AAA%22)%3B%0A%09%09tx2.commit()%3B%09%09%0A%20%09%09%0A%09%09user.setName(%22BBB%22)%3B%0A%20%20tx.commit()%3B\" quality=\"high\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"></embed></div></div><ol start=\"1\" class=\"dp-j\" style=\"font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-sty\nle: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(209, 215, 220); border-right-color: rgb(209, 215, 220); border-bottom-color: rgb(209, 215, 220); border-left-color: rgb(209, 215, 220); list-style-type: decimal; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(43, 145, 175); \">    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \"><span style=\"color: black; \">Session&nbsp;session&nbsp;=&nbsp;sessionFactory.openSession();&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">Session&nbsp;session2&nbsp;=&nbsp;sessionFactory.openSession();&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">User&nbsp;user&nbsp;=&nbsp;(User)session.load(User.<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">class</span><span style=\"color: black; \">,&nbsp;</span><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">new</span><span style=\"color: black; \">&nbsp;Integer(</span><span class=\"number\" style=\"color: rgb(192, 0, 0); \">1</span><span style=\"color: black; \">));&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">User&nbsp;user2&nbsp;=&nbsp;(User)session2.load(User.<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">class</span><span style=\"color: black; \">,&nbsp;</span><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold; \">new</span><span style=\"color: black; \">&nbsp;Integer(</span><span class=\"number\" style=\"color: rgb(192, 0, 0); \">1</span><span style=\"color: black; \">));&nbsp;&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">Transaction&nbsp;tx&nbsp;=&nbsp;session.beginTransaction();&nbsp;&nbsp;&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">Transaction&nbsp;tx2&nbsp;=&nbsp;session2.beginTransaction();&nbsp;&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">user2.setName(<span class=\"string\" style=\"color: blue; \">&quot;AAA&quot;</span><span style=\"color: black; \">);&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">tx2.commit();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">user.setName(<span class=\"string\" style=\"color: blue; \">&quot;BBB&quot;</span><span style=\"color: black; \">);&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">tx.commit();&nbsp;&nbsp;</span></li></ol></div><br /><br /><br /><br />&nbsp;&nbsp;<span style=\"color: red; \"><strong style=\"font-weight: bold; \">运行以上代码，会抛出如下异常：</strong></span><br /><div class=\"dp-highlighter\" style=\"font-family: Monaco, \'DejaVu Sans Mono\', \'Bitstream Vera Sans Mono\', Consolas, \'Courier New\', monospace; font-size: 12px; background-color: transparent; width: 766px; overflow-x: auto; overflow-y: auto; margin-left: 9px; padding-top: 1px; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; word-break: break-all; word-wrap: break-word; \"><div class=\"bar\"><div class=\"tools\" style=\"padding-top: 3px; padding-right: 3px; padding-bottom: 3px; padding-left: 3px; text-align: left; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; color: black; font-weight: bold; \">Java代码&nbsp;<embed src=\"http://www.javaeye.com/javascripts/syntaxhighlighter/clipboard_new.swf\" width=\"14\" height=\"15\" fl\nashvars=\"clipboard=org.hibernate.StaleObjectStateException%3A%20Row%20was%20updated%20or%20deleted%20by%20another%20transaction%20(or%20unsaved-value%20mapping%20was%20incorrect)%20\" quality=\"high\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"></embed></div></div><ol start=\"1\" class=\"dp-j\" style=\"font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(209, 215, 220); border-right-color: rgb(209, 215, 220); border-bottom-color: rgb(209, 215, 220); border-left-color: rgb(209, 215, 220); list-style-type: decimal; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(43, 145, 175); \">    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \"><span style=\"color: black; \">org.hibernate.StaleObjectStateException:&nbsp;Row&nbsp;was&nbsp;updated&nbsp;or&nbsp;deleted&nbsp;by&nbsp;another&nbsp;transaction&nbsp;(or&nbsp;unsaved-value&nbsp;mapping&nbsp;was&nbsp;incorrect)&nbsp;&nbsp;&nbsp;</span></span></li></ol></div><br /><br /><br /><br /><span style=\"color: red; \"><strong style=\"font-weight: bold; \">再次运行以上代码，不会抛出异常，会对数据库中记录进行更新。</strong></span>&nbsp;<br /><br /><br /><br /><span style=\"color: red; \"><strong style=\"font-weight: bold; \">原因：</strong></span>&nbsp;<br /><br /><strong style=\"font-weight: bold; \">在第一次测试之后,会将数据库表中id=1的记录的name属性值设为&rdquo;AAA&rdquo;(由于事务tx2先执行)。再次测试,由于Hibernate的缓存（在调用load方法时会将查询到的对象进行缓存）,执行事务tx2时不会发出sql语句（因为更新后的值与加载到的值相同）,也就意味着数据库表中对应记录的version值没有加1,所以事务tx可以提交成功。如果更新user的name属性,关键要考虑与load得到的对象相比是否有变化,是否需要发出sql语句,如果两个事务都要发出sql语句,就会冲突。Hibernate本身发出sql语句是没有错的,但在关键数据库中会发生冲突。&nbsp;<br /><br />要注意的是：上述测试都是在&ldquo;lazy=false&rdquo;的条件下执行的,如果将&ldquo;lazy=false&rdquo;去掉，默认采用延迟加载，那么不会出现冲突问题，发出的sql语句如下：</strong>&nbsp;<br /><br /><br /><br /><div class=\"dp-highlighter\" style=\"font-family: Monaco, \'DejaVu Sans Mono\', \'Bitstream Vera Sans Mono\', Consolas, \'Courier New\', monospace; font-size: 12px; background-color: transparent; width: 766px; overflow-x: auto; overflow-y: auto; margin-left: 9px; padding-top: 1px; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; word-break: break-all; word-wrap: break-word; \"><div class=\"bar\"><div class=\"tools\" style=\"padding-top: 3px; padding-right: 3px; padding-bottom: 3px; padding-left: 3px; text-align: left; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; color: black; font-weight: bold; \">Java代码&nbsp;<embed src=\"http://www.javaeye.com/javascripts/syntaxhighlighter/clipboard_new.swf\" width=\"14\" height=\"15\" flashvars=\"clipboard=Hibernate%3A%20select%20user0_.id%20as%20id0_0_%2C%20user0_.version%20as%20version0_0_%2C%20user0_.name%20as%20name0_0_%20from%20t_user%20user0_%20where%20user0_.id%3D%3F%0AHibernate%3A%20update%20t_user%20set%20version%3D%3F%2C%20name%3D%3F%20where%20id%3D%3F%20and%20version%3D%3F%0A%0AHibernate%3A%20select%20user0_.id%20as%20id0_0_%2C%20user0_.version%20as%20version0_0_%2C%20user0_.name%20as%20name0_0_%20from%20t_user%20user0_%20where%20user0_.id%3D%3F%0AHibernate%3A%20update%20t_user%20set%20version%3D%3F%2C%20name%3D%3F%20where%20id%3D%3F%20and%20version%3D%3F\" quality=\"high\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"></embed></div></div><ol start=\"1\" class=\"dp-j\" style=\"font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(209, 215, 220); border-right-color: rgb(209, 215, 220); border-bottom-color: rgb(209, 215, 220); border-left-color: rgb(209, 215, 220); list-style-type: decimal; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(43, 145, 175); \">    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \"><span style=\"color: black; \">Hibernate:&nbsp;select&nbsp;user0_.id&nbsp;as&nbsp;id0_0_,&nbsp;user0_.version&nbsp;as&nbsp;version0_0_,&nbsp;user0_.name&nbsp;as&nbsp;name0_0_&nbsp;from&nbsp;t_user&nbsp;user0_&nbsp;where&nbsp;user0_.id=?&nbsp;&nbsp;</span></span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">Hibernate:&nbsp;update&nbsp;t_user&nbsp;set&nbsp;version=?,&nbsp;name=?&nbsp;where&nbsp;id=?&nbsp;and&nbsp;version=?&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">Hibernate:&nbsp;select&nbsp;user0_.id&nbsp;as&nbsp;id0_0_,&nbsp;user0_.version&nbsp;as&nbsp;version0_0_,&nbsp;user0_.name&nbsp;as&nbsp;name0_0_&nbsp;from&nbsp;t_user&nbsp;user0_&nbsp;where&nbsp;user0_.id=?&nbsp;&nbsp;</span></li>    <li style=\"font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(209, 215, 220); background-color: rgb(250, 250, 250); line-height: 18px; \"><span style=\"color: black; \">Hibernate:&nbsp;update&nbsp;t_user&nbsp;set&nbsp;version=?,&nbsp;name=?&nbsp;where&nbsp;id=?&nbsp;and&nbsp;version=?&nbsp;&nbsp;</span></li></ol></div></span></p><p><span class=\"Apple-style-span\" style=\"font-family: Tahoma; font-size: 12px; line-height: 18px; -webkit-border-horizontal-spacing: 1px; -webkit-border-vertical-spacing: 1px; \"><br /><br /><br /><br /><strong style=\"font-weight: bold; \">即每次都是查询更新,因为load时采用延迟加载,得到的只是\n一个代理对象,当对user进行设置时,会发出sql语句查询,紧接着就是更新语句。所以两次select查询得到的version值不同,不会冲突。</strong></span></p><p>&nbsp;</p><p><span style=\"font-family: \'Times New Roman\'; \"><span style=\"font-size: larger; \">原文地址：</span></span><a href=\"http://www.javaeye.com/topic/726787\"><span style=\"font-family: \'Times New Roman\'; \"><span style=\"font-size: larger; \">http://www.javaeye.com/topic/726787</span></span></a></p>\n','2011-01-14 12:03:00','2011-01-14 12:03:00',NULL,NULL,'publish',NULL,'主题：Hibernate 乐观锁 org.hibernate.StaleObjectStateException 异常','/post/2012/7/14/1344938606396.html',1,0),(301,0,'open','<p><span style=\"font-size: smaller; \"><span style=\"font-family: \'Times New Roman\'; \">锁（ locking ）&nbsp;</span></span></p><p><span style=\"font-size: smaller; \"><span style=\"font-family: \'Times New Roman\'; \"> 业务逻辑的实现过程中，往往需要保证数据访问的排他性。如在金融系统的日终结算处理中，我们希望针对某个 cut-off 时间点的数据进行处理，而不希望在结算进行过程中（可能是几秒种，也可能是几个小时），数据再发生变化。此时，我们就需要通过一些机制来保证这些数据在某个操作过程中不会被外界修改，这样的机制，在这里，也就是所谓的 &ldquo;锁&rdquo; ，即给我们选定的目标数据上锁，使其无法被其他程序修改。Hibernate 支持两种锁机制：即通常所说的 &ldquo;悲观锁（ Pessimistic Locking ）&rdquo;和 &ldquo;乐观锁（ Optimistic Locking ）&rdquo; 。<br /><br /><br /><br />悲观锁（ Pessimistic Locking ） <br /><br />悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，在整个数据处理过程中，将数据处于锁定状态。悲观锁的实现，往往依靠数据库提供的锁机制（也只有数据库层提供的锁机制才能真正保证数据访问的排他性，否则，即使在本系统中实现了加锁机制，也无法保证外部系统不会修改数据）。 <br /><br />一个典型的倚赖数据库的悲观锁调用： <br /><br />select * from account where name=&rdquo;Erica&rdquo; for update<br /><br />这条 sql 语句锁定了 account 表中所有符合检索条件（name=&rdquo;Erica&rdquo;）的记录。本次事务提交之前（事务提交时会释放事务过程中的锁），外界无法修改这些记录。Hibernate 的悲观锁，也是基于数据库的锁机制实现。<br /><br />下面的代码实现了对查询记录的加锁： <br /><br /><font color=\"#33cc00\"></font><font style=\"BACKGROUND-COLOR: #ffffff\"></font><font color=\"#3333ff\">String hqlStr =&quot;from TUser as user where user.name=&lsquo;Erica&lsquo;&quot;;<br /><br />Query query = session.createQuery(hqlStr);<br /><br />query.setLockMode(&quot;user&quot;,LockMode.UPGRADE); // 加锁 <br /><br />List userList = query.list();// 执行查询，获取数据 </font><br /><br />query.setLockMode 对查询语句中，特定别名所对应的记录进行加锁（我们为TUser 类指定了一个别名 &ldquo;user&rdquo; ），这里也就是对返回的所有 user 记录进行加锁。<br /><br />观察运行期 Hibernate 生成的 SQL 语句：<br /><br /><font color=\"#3333ff\">select tuser0_.id as id, tuser0_.name as name, tuser0_.group_id<br /><br />as group_id, tuser0_.user_type as user_type, tuser0_.sex as sex<br /><br />from t_user tuser0_ where (tuser0_.name=&lsquo;Erica&lsquo; ) for update</font><br /><br />这里 Hibernate 通过使用数据库的 for update 子句实现了悲观锁机制。 <br /><br />Hibernate 的加锁模式有： <br /><br /><strong>LockMode.NONE ：</strong> 无锁机制。 <br /><br /><strong>LockMode.WRITE ：</strong> Hibernate 在 Insert 和 Update 记录的时候会自动获取。 <br /><br /><strong>LockMode.READ ：</strong> Hibernate 在读取记录的时候会自动获取。<br /><br />以上这三种锁机制一般由 Hibernate 内部使用，如 Hibernate 为了保证 Update过程中对象不会被外界修改，会在 save 方法实现中自动为目标对象加上 WRITE 锁。<br /><br /><strong>LockMode.UPGRADE ：</strong>利用数据库的 for update 子句加锁。 <br /><br /><strong>LockMode. UPGRADE_NOWAIT ：</strong> Oracle 的特定实现，利用 Oracle 的 for update nowait 子句实现加锁。 <br /><br />上面这两种锁机制是我们在应用层较为常用的，加锁一般通过以下方法实现： <br /><br /><strong>Criteria.setLockMode<br /><br />Query.setLockMode<br /><br />Session.lock</strong><br /><br />注意，只有在查询开始之前（也就是 Hiberate 生成 SQL 之前）设定加锁，才会真正通过数据库的锁机制进行加锁处理，否则，数据已经通过不包含 for update 子句的 Select SQL 加载进来，所谓数据库加锁也就无从谈起。<br /><br /><br /><br />乐观锁（ Optimistic Locking ） <br /><br />相对悲观锁而言，乐观锁机制采取了更加宽松的加锁机制。悲观锁大多数情况下依靠数据库的锁机制实现，以保证操作最大程度的独占性。但随之而来的就是数据库性能的大量开销，特别是对长事务而言，这样的开销往往无法承受。 <br /><br />如一个金融系统，当某个操作员读取用户的数据，并在读出的用户数据的基础上进行修改时如更改用户帐户余额），如果采用悲观锁机制，也就意味着整个操作过程中（从操作员读出数、开始修改直至提交修改结果的全过程，甚至还包括操作员中途去煮咖啡的时间），数据库记录始终处于加锁状态，可以想见，如果面对几百上千个并发，这样的情况将导致怎样的后果。乐观锁机制在一定程度上解决了这个问题。乐观锁，大多是基于数据版本（ Version ）记录机制实现。何谓数据版本？即为数据增加一个版本标识，在基于数据库表的版本解决方案中，一般是通过为数据库表增加一个 &ldquo;version&rdquo; 字段来实现。 <br /><br />读取出数据时，将此版本号一同读出，之后更新时，对此版本号加一。此时，将提交数据的版本数据与数据库表对应记录的当前版本信息进行比对，如果提交的数据版本号大于数据库表当前版本号，则予以更新，否则认为是过期数据。 <br /><br />对于上面修改用户帐户信息的例子而言，假设数据库中帐户信息表中有一个version 字段，当前值为 1 ；而当前帐户余额字段（balance）为 $100 。 <br /><br />1 操作员 A 此时将其读出（version=1），并从其帐户余额中扣除 $50（$100-$50）。 <br /><br />2 在操作员 A 操作的过程中，操作员 B 也读入此用户信息（version=1），并从其帐户余额中扣除 $20 （$100-$20）。 <br /><br />3 操作员 A 完成了修改工作，将数据版本号加一（version=2），连同帐户扣除后余额（balance=$50），提交至数据库更新，此时由于提交数据版本大于数据库记录当前版本，数据被更新，数据库记录 version 更新为 2 。 <br /><br />4 操作员 B 完成了操作，也将版本号加一（version=2）试图向数据库提交数据（balance=$80），但此时比对数据库记录版本时发现，操作员 B 提交的数据版本号为 2 ，数据库记录当前版本也为 2 ，不满足&ldquo; 提交版本必须大于记录当前版本才能执行更新&ldquo; 的乐观锁策略，因此，操作员 B 的提交被驳回。这样，就避免了操作员 B 用基于 version=1 的旧数据修改的结果覆盖操作员 A 的操作结果的可能。 <br /><br />从上面的例子可以看出，乐观锁机制避免了长事务中的数据库加锁开销（操作员 A 和操作员 B 操作过程中，都没有对数据库数据加锁），大大提升了大并发量下的系统整体性能表现。需要注意的是，乐观锁机制往往基于系统中的数据存储逻辑，因此也具备一定的局限性，如在上例中，由于乐观锁机制是在我们的系统中实现，来自外部系统的用户余额更新操作不受我们系统的控制，因此可能会造成脏数据被更新到数据库中。在系统设计阶段，我们应该充分考虑到这些情况出现的可能性，并进行相应调整（如将乐观锁策略在数据库存储过程中实现，对外只开放基于此存储过程的数据更新途径，而不是将数据库表直接对外公开）。 <br /><br />Hibernate 在其数据访问引擎中内置了乐观锁实现。如果不用考虑外部系统对数据库的更新操作，利用 Hibernate 提供的透明化乐观锁实现，将大大提升我们的生产力。 <br /><br />Hibernate\n中可以通过 class 描述符的 optimistic-lock 属性结合 version描述符指定。<br /><br /><br /><br />现在，我们为之前示例中的 TUser 加上乐观锁机制。<br /><br />1 ． 首先为 TUser 的 class 描述符添加 optimistic-lock 属性： <br /><br /><font color=\"#3333ff\">&lt;hibernate-mapping&gt;<br /><br />&lt;class name=&quot;org.hibernate.sample.TUser&quot; table=&quot;t_user&quot; dynamic-update=&quot;true&quot;<br /><br />dynamic-insert=&quot;true&quot; optimistic-lock=&quot;version&quot;&gt;<br /><br />&hellip;&hellip;<br /><br />&lt;/class&gt;<br /><br />&lt;/hibernate-mapping&gt;</font><br /><br />optimistic-lock 属性有如下可选取值：&nbsp;<br /><br /><strong>none：</strong>无乐观锁&nbsp;<br /><br /><strong>version：</strong>通过版本机制实现乐观锁 <br /><br /><strong>dirty：</strong>通过检查发生变动过的属性实现乐观锁 <br /><br /><strong>all：</strong>通过检查所有属性实现乐观锁 <br /><br />其中通过 version 实现的乐观锁机制是 Hibernate 官方推荐的乐观锁实现，同时也是 Hibernate 中，目前唯一在数据对象脱离 Session 发生修改的情况下依然有效的锁机制。因此，一般情况下，我们都选择 version 方式作为 Hibernate 乐观锁实现机制。 <br /><br />2 ． 添加一个 Version 属性描述符 <br /><br /><font color=\"#3333ff\">&lt;hibernate-mapping&gt;<br /><br />&lt;class name=&quot;org.hibernate.sample.TUser&quot; table=&quot;t_user&quot; dynamic-update=&quot;true&quot; dynamic-insert=&quot;true&quot;<br /><br />optimistic-lock=&quot;version&quot;&gt;<br /><br />&lt;id name=&quot;id&quot; column=&quot;id&quot; type=&quot;java.lang.Integer&quot;&gt;<br /><br />&lt;generator class=&quot;native&quot;&gt; <br /><br />&lt;/generator&gt;<br /><br />&lt;/id&gt;<br /><br />&lt;version column=&quot;version&quot; name=&quot;version&quot; type=&quot;java.lang.Integer&quot;/&gt;<br /><br />&hellip;&hellip;<br /><br />&lt;/class&gt;<br /><br />&lt;/hibernate-mapping&gt;<br /><br /></font>注意 version 节点必须出现在 ID 节点之后。这里我们声明了一个 version 属性，用于存放用户的版本信息，保存在 TUser 表的version 字段中。 <br /><br />此时如果我们尝试编写一段代码，更新 TUser 表中记录数据，如： <br /><br /><font color=\"#3333ff\">Criteria criteria = session.createCriteria(TUser.class);<br /><br />criteria.add(Expression.eq(&quot;name&quot;,&quot;Erica&quot;));<br /><br />List userList = criteria.list();<br /><br />TUser user =(TUser)userList.get(0);<br /><br />Transaction tx = session.beginTransaction();<br /><br />user.setUserType(1); // 更新 UserType 字段 <br /><br />tx.commit();</font><br /><br />每次对 TUser 进行更新的时候，我们可以发现，数据库中的 version 都在递增。而如果我们尝试在 tx.commit 之前，启动另外一个 Session ，对名为 Erica 的用户进行操作，以模拟并发更新时的情形： <br /><br /><font color=\"#3333ff\">Session session= getSession();<br /><br />Criteria criteria = session.createCriteria(TUser.class);<br /><br />criteria.add(Expression.eq(&quot;name&quot;,&quot;Erica&quot;));<br /><br />Session session2 = getSession();<br /><br />Criteria criteria2 = session2.createCriteria(TUser.class);<br /><br />criteria2.add(Expression.eq(&quot;name&quot;,&quot;Erica&quot;));<br /><br />List userList = criteria.list();<br /><br />List userList2 = criteria2.list();TUser user =(TUser)userList.get(0);<br /><br />TUser user2 =(TUser)userList2.get(0);<br /><br />Transaction tx = session.beginTransaction();<br /><br />Transaction tx2 = session2.beginTransaction();<br /><br />user2.setUserType(99);<br /><br />tx2.commit();<br /><br />user.setUserType(1);<br /><br />tx.commit();<br /><br /></font>执行以上代码，代码将在 tx.commit() 处抛出 StaleObjectStateException 异常，并指出版本检查失败，当前事务正在试图提交一个过期数据。通过捕捉这个异常，我们就可以在乐观锁校验失败时进行相应处理。</span></span></p>\n','2011-01-14 11:24:59','2011-01-14 11:24:59',NULL,NULL,'publish',NULL,'hibernate乐观锁和悲观锁','/post/2012/7/14/1344938606468.html',1,0),(302,0,'open','<p>Row was updated or deleted by another transaction</p><p>Could not  synchronize database state with session</p><p>org.hibernate.StaleObjectStateException:</p><p>Row was updated or deleted by another transaction (or unsaved-value mapping  was incorrect):  [com.introns.model.goods.NetGoods#402880d31fa720c1011fa72605690001]</p><p>说明操作的对象应用了乐观锁;version</p><p>错误原因:当在进行操作时,当前version版本与DB中version版本不一致;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A:另外有人对此记录进行了相似操作;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B:自己操作有误:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  例如通过编辑页面来修改一条记录时:传回来的form对象中version为空,然后又指导些form中的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  值copy到相应的实体对象中;--此时此实体对象中的version也为空;当update时,version不一致</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 就会出错;</p><p>解决:&nbsp;&nbsp;&nbsp;&nbsp; A:用form传数据时,把version也传\\过来;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B:从DB中把version查出来,赋给实体对象;再更新;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class=\"bvEntry\"><div>6月10日</div><h4 class=\"beTitle\">Row was updated or deleted by another transaction</h4><div class=\"bvMsg\"><p>timestamp的字段一定要有值,并且是日期值,否则当hibernate更新这个字段没有值的那条记录时,会出现如下错误</p><p>org.hibernate.StaleObjectStateException: Row was updated or deleted by  another transaction (or unsaved-value mapping was incorrect):  [com.test.admin.domain.user#1]</p><p>当选择<code><font face=\"新宋体\">assigned</font></code>生成器时，除非有一个version或timestamp属性，或者你定义了 <code><font face=\"新宋体\">Interceptor.isUnsaved()</font></code>，否则需要让Hiberante使用 <code><font face=\"新宋体\">unsaved-value=&quot;undefined&quot;</font></code>，强制Hibernatet查询数据库来确定一个实例是瞬时的（transient）  还是脱管的（detached）。</p><p>&lt;timestamp name=&quot;lastUpdate&quot; column=&quot;user_lastupdate&quot; generated=&quot;never&quot;  /&gt;</p><p>never指不从数据库中产生。</p><p>Hibernate 疑难异常及处理</p><p>1、a different object with the same identifier value was already associated  with the session。</p><p>　　错误原因：在hibernate中同一个session里面有了两个相同标识但是是不同实体。</p><p>　　解决方法一：session.clean()</p><p>PS：如果在clean操作后面又进行了saveOrUpdate(object)等改变数据状态的操作，有可能会报出&quot;Found two  representations of same collection&quot;异常。</p><p>　　解决方法二：session.refresh(object)</p><p>PS：当object不是数据库中已有数据的对象的时候，不能使用session.refresh(object)因为该方法是从hibernate的session中去重新取object，如果session中没有这个对象，则会报错所以当你使用saveOrUpdate(object)之前还需要判断一下。</p><p>　　解决方法三：session.merge(object)</p><p>PS：Hibernate里面自带的方法，推荐使用。</p><p>2、Found two representations of same collection</p><p>　　错误原因：见1。</p><p>　　解决方法：session.merge(object)</p><p>以上两中异常经常出现在一对多映射和多对多映射中</p></div></div>\n','2011-01-14 11:07:55','2011-01-14 11:07:55',NULL,NULL,'publish',NULL,'error:Row was updated or deleted by another transaction','/post/2012/7/14/1344938606529.html',1,0),(303,0,'open','<p><span class=\"Apple-style-span\" style=\"font-family: verdana, sans-serif; line-height: 21px; \"><br /><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">在Jbpm的processInstance与taskInstance都对外提供了挂起进程实例或工作实例的的接口，同时也提供了释放的接口。分别是：</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">1，processinstance</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; processinstance.suspend();</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; processInstance.resume();</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">2,taskInstance</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp; taskInstance.suspend();</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp; taskInstance.resume();</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 同时processinstance与&nbsp;taskInstance还提供了一个标志位，isSuspended与isOpen分别表示是挂起还是开放状态，如果标志位isSuspended=true&amp;&amp;isOpen=fasle,那么这个进程实例或任务实例在用户界面就不会被找出来，但在管理界面还是可以看到。如果isSuspended=false&amp;&amp;isOpen=true，结果就是正常情况了。</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">以上介绍了一下Jbpm中挂起与释放的功能，但它存在一个bug，在正常情况下当你调用这两个方法时，是会出错的。提示badsql 语法错误，经过跟踪才知道原来在Jbpm的查询语句里出现了错误。在这里简单介绍一下Jbpm的数据库查询方法，Jbpm的底层持久层采用的是Hiberante3.1,但是它的查询方法却是采用了很少人会用的外置命名查询（为什么采用这个方法，采用这个方法有什么好处,我也没有对它进行研究过。^_^），问题就出在，在调用挂起与释放这两个方法时，它主要做的是以下几个操作：</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp;&nbsp;suspendTimers();<br /><br />&nbsp;&nbsp;&nbsp; suspendMessages();<br /><br />&nbsp;&nbsp;&nbsp; suspendTaskInstances();</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">跟踪得到在挂起messages时出现了错误，文件就出在外置命名查询的sql语句上：</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp; 原码：</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;query name=&quot;MessagingSession.suspendMessagesForToken&quot;&gt;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&lt;![CDATA[<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; update org.jbpm.msg.Message&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set isSuspended = true<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;where token = :token<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]]&gt;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&lt;/query&gt;</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">看到这里属性hibernate的人应该马上可以知道那里出了问题了，^_^！</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">在hibernate中条件查询一定要定义别名，如下就正常了！^_^！</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;query name=&quot;MessagingSession.suspendMessagesForToken&quot;&gt;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&lt;![CDATA[<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; update org.jbpm.msg.Message me<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set me.isSuspended = true<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;where me.token = :token<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; ]]&gt;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/query&gt;</p><p style=\"padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; \">总的来说Jbpm还是不错的一个工作流引擎，但是还是存在一定的局限，本人最近在研究Jbpm回退功能的实现，欢迎大家一起研究！</p></span></p><p>&nbsp;</p>\n','2011-01-11 14:03:38','2011-01-11 14:03:38',NULL,NULL,'publish',NULL,'JBPM中流程实例的挂起和释放','/post/2012/7/14/1344938606658.html',1,0),(304,0,'open','<p>&nbsp;<span class=\"Apple-style-span\" style=\"font-family: verdana, arial, helvetica; font-size: 12px; line-height: normal; \">冷备份: 1.正常关闭数据库<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;2. 备份数据文件(oradata目录下的*.dbf文件)<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 控制文件(oradata 目录下的*.ctl文件)<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 连机重做日志文件(oradata 目录下的*.log 文件)<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;3.备份参数文件(spfile和init&lt;instance_name&gt;.ora)和密码文件<br /><br /><br /><br />热备份: 1.把数据库改成归档模式<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;2. 备份控制文件, 所有的数据文件(temp.dbf不需要)<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;由于已是归档模式, 所以online redo log file 就不需要另外再&nbsp; &nbsp;去备份了</span></p>\n','2011-01-11 09:39:05','2011-01-11 09:39:05',NULL,NULL,'publish',NULL,'Oracle热备份和冷备份','/post/2012/7/14/1344938606713.html',1,0),(305,0,'open','<p>&nbsp;<span class=\"Apple-style-span\" style=\"font-family: verdana, \'ms song\', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 13px; line-height: 19px; \"><strong style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">--修改表</strong><br /><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">创建表之后觉得表的结构不合理，那就需要对表进行修改，修改表结构就是在表中添加列、删除列、<a name=\"baidusnap1\" style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \"></a><strong style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">更新列</strong>。使用alter table 语句修改表的结构。</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">create table student（</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;&nbsp;stuid number(6),</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;&nbsp;stuname varchar2(6),</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;&nbsp;stusex varchar2(2)</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">）</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">（1）增加列</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">alter table student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">add studept varchar2(20)</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">在student表中添加了 student列，数据类型是varchar2</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">（2）<strong style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">更新列</strong></p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">alter table student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">modify stuname varchar2(20)</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">在student表中更新了stuname列的数据长度</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">在<strong style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">更新列</strong>的时候需要注意两点：1.当表中有数据时，数据的长度只能由低向高变化，数据类型要变成相兼容的数据类型；2.当表中没有数据时，数据长度可以由高向低变化，可以把某种数据类型变成另外一种数据类型</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">（3）删除列</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">alter table student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">drop column stusex</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">在student表中删除了stusex列</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">PS：</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">删除表的内容：</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">alter table student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">delete from student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \"><strong style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">--删除表</strong></p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">删除表需要使用drop table语句</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">还是以student表为例，想要删除表student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">drop table student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">&nbsp;</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">删除表的内容：</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">alter table student</p><p style=\"margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 0px; line-height: 1.5em; color: rgb(0, 0, 0); font-size: 13px; \">delete from student</p></span></p>\n','2011-01-04 15:05:10','2011-01-04 15:05:10',NULL,NULL,'publish',NULL,'DDL修改表，删除表','/post/2012/7/14/1344938606768.html',1,1),(306,0,'open','<p>&nbsp;</p><div class=\"codes\"><pre class=\"javascript\" name=\"code\">1. 将彻底屏蔽鼠标右键 <br />oncontextmenu=&quot;window.event.returnValue=false&quot;&lt;table border oncontextmenu=return(false)&gt; &lt;td&gt; no&lt;/table&gt; 可用于Table <br /><br />2.取消选取、防止复制 <br />&lt;body onselectstart=&quot;return false&quot;&gt; <br /><br />3. 不准粘贴 <br />onpaste=&quot;return false&quot; <br /><br />4.防止复制 <br />oncopy=&quot;return false;&quot; oncut=&quot;return false;&quot; <br /><br />5.IE地址栏前换成自己的图标 <br />&lt;link rel=&quot;Shortcut Icon&quot; href=&quot;favicon.ico&quot;&gt; <br /><br />6. 可以在收藏夹中显示出你的图标 <br />&lt;link rel=&quot;Bookmark&quot; href=&quot;favicon.ico&quot;&gt; <br /><br />7. 关闭输入法 <br />&lt;input style=&quot;ime-mode:disabled&quot;&gt; <br /><br />8. 永远都会带着框架 <br />&lt;script language=&quot;JavaScript&quot;&gt; &lt;!-- <br />if (window == top)top.location.href = &quot;frames.htm&quot;; //frames.htm为框架网页 <br />// --&gt; &lt;/script&gt; <br /><br />9. 防止被人frame <br />&lt;SCRIPT LANGUAGE=JAVASCRIPT&gt; &lt;!-- <br />if (top.location != self.location)top.location=self.location; <br />// --&gt; &lt;/SCRIPT&gt; <br /><br />10. 网页将不能被另存为 <br />&lt;noscript&gt; &lt;iframe src=*.html&gt; &lt;/iframe&gt; &lt;/noscript&gt; <br /><br />11. 查看网页源代码 <br />&lt;input type=button value=查看网页源代码 <br />onclick=&quot;window.location = &quot;view-source:&quot;+ &quot;http://www.pconline.com.cn&quot;&quot;&gt; <br /><br />12.删除时确认 <br />&lt;a href=&quot;javascript:if(confirm(&quot;确实要删除吗?&quot;))location=&quot;boos.asp?&amp;areyou=删除&amp;page=1&quot;&quot;&gt; 删除&lt;/a&gt; <br /><br />13. 取得控件的绝对位置 <br />//Javascript <br />&lt;script language=&quot;Javascript&quot;&gt; <br />function getIE(e){ <br />var t=e.offsetTop; <br />var l=e.offsetLeft; <br />while(e=e.offsetParent){ <br />t+=e.offsetTop; <br />l+=e.offsetLeft; <br />} <br />alert(&quot;top=&quot;+t+&quot;/nleft=&quot;+l); <br />} <br />&lt;/script&gt; <br /><br />//VBScript <br />&lt;script language=&quot;VBScript&quot;&gt; &lt;!-- <br />function getIE() <br />dim t,l,a,b <br />set a=document.all.img1 <br />t=document.all.img1.offsetTop <br />l=document.all.img1.offsetLeft <br />while a.tagName&lt;&gt; &quot;BODY&quot; <br />set a = a.offsetParent <br />t=t+a.offsetTop <br />l=l+a.offsetLeft <br />wend <br />msgbox &quot;top=&quot;&amp;t&amp;chr(13)&amp;&quot;left=&quot;&amp;l,64,&quot;得到控件的位置&quot; <br />end function <br />--&gt; &lt;/script&gt; <br /><br />14. 光标是停在文本框文字的最后 <br />&lt;script language=&quot;javascript&quot;&gt; <br />function cc() <br />{ <br />var e = event.srcElement; <br />var r =e.createTextRange(); <br />r.moveStart(&quot;character&quot;,e.value.length); <br />r.collapse(true); <br />r.select(); <br />} <br />&lt;/script&gt; <br />&lt;input type=text name=text1 value=&quot;123&quot; onfocus=&quot;cc()&quot;&gt; <br /><br />15. 判断上一页的来源 <br />javascript: <br />document.referrer <br /><br />16. 最小化、最大化、关闭窗口 <br />&lt;object id=hh1 classid=&quot;clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11&quot;&gt; <br />&lt;param name=&quot;Command&quot; value=&quot;Minimize&quot;&gt; &lt;/object&gt; <br />&lt;object id=hh2 classid=&quot;clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11&quot;&gt; <br />&lt;param name=&quot;Command&quot; value=&quot;Maximize&quot;&gt; &lt;/object&gt; <br />&lt;OBJECT id=hh3 classid=&quot;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11&quot;&gt; <br />&lt;ARAM NAME=&quot;Command&quot; VALUE=&quot;Close&quot;&gt; &lt;/OBJECT&gt; <br />&lt;input type=button value=最小化 onclick=hh1.Click()&gt; <br />&lt;input type=button value=最大化 onclick=hh2.Click()&gt; <br />&lt;input type=button value=关闭 onclick=hh3.Click()&gt; <br />本例适用于IE <br /><br />17.屏蔽功能键Shift,Alt,Ctrl <br />&lt;script&gt; <br />function look(){ <br />if(event.shiftKey) <br />alert(&quot;禁止按Shift键!&quot;); //可以换成ALT　CTRL <br />} <br />document.onkeydown=look; <br />&lt;/script&gt; <br /><br />18. 网页不会被缓存 <br />&lt;META HTTP-EQUIV=&quot;pragma&quot; CONTENT=&quot;no-cache&quot;&gt; <br />&lt;META HTTP-EQUIV=&quot;Cache-Control&quot; CONTENT=&quot;no-cache, must-revalidate&quot;&gt; <br />&lt;META HTTP-EQUIV=&quot;expires&quot; CONTENT=&quot;Wed, 26 Feb 1997 08:21:57 GMT&quot;&gt; <br />或者&lt;META HTTP-EQUIV=&quot;expires&quot; CONTENT=&quot;0&quot;&gt; <br /><br />19.怎样让表单没有凹凸感？ <br />&lt;input type=text style=&quot;border:1 solid #000000&quot;&gt; <br />或 <br />&lt;input type=text style=&quot;border-left:none; border-right:none; border-top:none; border-bottom: <br /><br />1 solid #000000&quot;&gt; &lt;/textarea&gt; <br /><br />20.&lt;div&gt; &lt;span&gt; &amp;&lt;layer&gt; 的区别？ <br />&lt;div&gt; (division)用来定义大段的页面元素，会产生转行 <br />&lt;span&gt; 用来定义同一行内的元素，跟&lt;div&gt; 的唯一区别是不产生转行 <br />&lt;layer&gt; 是ns的标记，ie不支持，相当于&lt;div&gt; <br /><br />21.让弹出窗口总是在最上面: <br />&lt;body onblur=&quot;this.focus();&quot;&gt; <br /><br />22.不要滚动条? <br />让竖条没有: <br />&lt;body style=&quot;overflow:scroll;overflow-y:hidden&quot;&gt; <br />&lt;/body&gt; <br />让横条没有: <br />&lt;body style=&quot;overflow:scroll;overflow-x:hidden&quot;&gt; <br />&lt;/body&gt; <br />两个都去掉？更简单了 <br />&lt;body scroll=&quot;no&quot;&gt; <br />&lt;/body&gt; <br /><br />23.怎样去掉图片链接点击后，图片周围的虚线？ <br />&lt;a href=&quot;#&quot; onFocus=&quot;this.blur()&quot;&gt; &lt;img src=&quot;logo.jpg&quot; border=0&gt; &lt;/a&gt; <br /><br />24.电子邮件处理提交表单 <br />&lt;form name=&quot;form1&quot; method=&quot;post&quot; action=&quot;mailto:****@***.com&quot; enctype=&quot;text/plain&quot;&gt; <br />&lt;input type=submit&gt; <br />&lt;/form&gt; <br /><br />25.在打开的子窗口刷新父窗口的代码里如何写？ <br />window.opener.location.reload() <br /><br />26.如何设定打开页面的大小 <br />&lt;body onload=&quot;top.resizeTo(300,200);&quot;&gt; <br />打开页面的位置&lt;body onload=&quot;top.moveBy(300,200);&quot;&gt; <br /><br />27.在页面中如何加入不是满铺的背景图片,拉动页面时背景图不动 <br />&lt;STYLE&gt; <br />body <br />{background-image:url(logo.gif); background-repeat:no-repeat; <br />background-position:center;background-attachment: fixed} <br />&lt;/STYLE&gt; <br /><br />28. 检查一段字符串是否全由数字组成 <br />&lt;script language=&quot;Javascript&quot;&gt; &lt;!-- <br />function checkNum(str){return str.match(//D/)==null} <br />alert(checkNum(&quot;1232142141&quot;)) <br />alert(checkNum(&quot;123214214a1&quot;)) <br />// --&gt; &lt;/script&gt; <br /><br />29. 获得一个窗口的大小 <br />document.body.clientWidth; document.body.clientHeight <br /><br />30. 怎么判断是否是字符 <br />if (/[^/x00-/xff]/g.test(s)) alert(&quot;含有汉字&quot;); <br />else alert(&quot;全是字符&quot;); <br /><br />31.TEXTAREA自适应文字行数的多少 <br />&lt;textarea rows=1 name=s1 cols=27 onpropertychange=&quot;this.style.posHeight=this.scrollHeight&quot;&gt; <br />&lt;/textarea&gt; <br /><br />32. 日期减去天数等于第二个日期 <br />&lt;script language=Javascript&gt; <br />function cc(dd,dadd) <br />{ <br />//可以加上错误处理 <br />var a = new Date(dd) <br />a = a.valueOf() <br />a = a - dadd * 24 * 60 * 60 * 1000 <br />a = new Date(a) <br />alert(a.getFullYear() + &quot;年&quot; + (a.getMonth() + 1) + &quot;月&quot; + a.getDate() + &quot;日&quot;) <br />} <br />cc(&quot;12/23/2002&quot;,2) <br />&lt;/script&gt; <br /><br />33. 选择了哪一个Radio <br />&lt;HTML&gt; &lt;script language=&quot;vbscript&quot;&gt; <br />function checkme() <br />for each ob in radio1 <br />if ob.checked then window.alert ob.value <br />next <br />end function <br />&lt;/script&gt; &lt;BODY&gt; <br />&lt;INPUT name=&quot;radio1&quot; type=&quot;radio&quot; value=&quot;style&quot; checked&gt; Style <br />&lt;INPUT name=&quot;radio1&quot; type=&quot;radio&quot;\nvalue=&quot;barcode&quot;&gt; Barcode <br />&lt;INPUT type=&quot;button&quot; value=&quot;check&quot; onclick=&quot;checkme()&quot;&gt; <br />&lt;/BODY&gt; &lt;/HTML&gt; <br /><br />34.脚本永不出错 <br />&lt;SCRIPT LANGUAGE=&quot;JavaScript&quot;&gt; <br />&lt;!-- Hide <br />function killErrors() { <br />return true; <br />} <br />window.onerror = killErrors; <br />// --&gt; <br />&lt;/SCRIPT&gt; <br /><br />35.ENTER键可以让光标移到下一个输入框 <br />&lt;input onkeydown=&quot;if(event.keyCode==13)event.keyCode=9&quot;&gt; <br /><br />36. 检测某个网站的链接速度： <br />把如下代码加入&lt;body&gt; 区域中: <br />&lt;script language=Javascript&gt; <br />tim=1 <br />setInterval(&quot;tim++&quot;,100) <br />b=1 <br />var autourl=new Array() <br />autourl[1]=&quot;www.njcatv.net&quot; <br />autourl[2]=&quot;javacool.3322.net&quot; <br />autourl[3]=&quot;www.sina.com.cn&quot; <br />autourl[4]=&quot;www.nuaa.edu.cn&quot; <br />autourl[5]=&quot;www.cctv.com&quot; <br />function butt(){ <br />document.write(&quot;&lt;form name=autof&gt; &quot;) <br />for(var i=1;i&lt;autourl.length;i++) <br />document.write(&quot;&lt;input type=text name=txt&quot;+i+&quot; size=10 value=测试中&hellip;&hellip;&gt; =》&lt;input type=text <br />name=url&quot;+i+&quot; size=40&gt; =》&lt;input type=button value=GO <br /><br />onclick=window.open(this.form.url&quot;+i+&quot;.value)&gt; <br />&quot;) <br />document.write(&quot;&lt;input type=submit value=刷新&gt; &lt;/form&gt; &quot;) <br />} <br />butt() <br />function auto(url){ <br />document.forms[0][&quot;url&quot;+b].value=url <br />if(tim&gt; 200) <br />{document.forms[0][&quot;txt&quot;+b].value=&quot;链接超时&quot;} <br />else <br />{document.forms[0][&quot;txt&quot;+b].value=&quot;时间&quot;+tim/10+&quot;秒&quot;} <br />b++ <br />} <br />function run(){for(var i=1;i&lt;autourl.length;i++)document.write(&quot;&lt;img src=http://&quot;+autourl+&quot;/&quot;+Math.random()+&quot; width=1 height=1 <br /><br />onerror=auto(&quot;http://&quot;+autourl+&quot;&quot;)&gt; &quot;)} <br />run()&lt;/script&gt; <br /><br />37. 各种样式的光标 <br />auto ：标准光标 <br />default ：标准箭头 <br />hand ：手形光标 <br />wait ：等待光标 <br />text ：I形光标 <br />vertical-text ：水平I形光标 <br />no-drop ：不可拖动光标 <br />not-allowed ：无效光标 <br />help ：?帮助光标 <br />all-scroll ：三角方向标 <br />move ：移动标 <br />crosshair ：十字标 <br />e-resize <br />n-resize <br />nw-resize <br />w-resize <br />s-resize <br />se-resize <br />sw-resize <br /><br />38.页面进入和退出的特效 <br />进入页面&lt;meta http-equiv=&quot;Page-Enter&quot; content=&quot;revealTrans(duration=x, transition=y)&quot;&gt; <br />推出页面&lt;meta http-equiv=&quot;Page-Exit&quot; content=&quot;revealTrans(duration=x, transition=y)&quot;&gt; <br />这个是页面被载入和调出时的一些特效。duration表示特效的持续时间，以秒为单位。transition表示使用哪种特效，取值为1-23: <br />　　0 矩形缩小 <br />　　1 矩形扩大 <br />　　2 圆形缩小 <br />　　3 圆形扩大 <br />　　4 下到上刷新 <br />　　5 上到下刷新 <br />　　6 左到右刷新 <br />　　7 右到左刷新 <br />　　8 竖百叶窗 <br />　　9 横百叶窗 <br />　　10 错位横百叶窗 <br />　　11 错位竖百叶窗 <br />　　12 点扩散 <br />　　13 左右到中间刷新 <br />　　14 中间到左右刷新 <br />　　15 中间到上下 <br />　　16 上下到中间 <br />　　17 右下到左上 <br />　　18 右上到左下 <br />　　19 左上到右下 <br />　　20 左下到右上 <br />　　21 横条 <br />　　22 竖条 <br />　　23 以上22种随机选择一种 <br /><br />39.在规定时间内跳转 <br />&lt;META http-equiv=V=&quot;REFRESH&quot; content=&quot;5;URL=http://www.51js.com&quot;&gt; <br /><br />40.网页是否被检索 <br />&lt;meta name=&quot;ROBOTS&quot; content=&quot;属性值&quot;&gt; <br />其中属性值有以下一些: <br />属性值为&quot;all&quot;: 文件将被检索，且页上链接可被查询； <br />属性值为&quot;none&quot;: 文件不被检索，而且不查询页上的链接； <br />属性值为&quot;index&quot;: 文件将被检索； <br />属性值为&quot;follow&quot;: 查询页上的链接； <br />属性值为&quot;noindex&quot;: 文件不检索，但可被查询链接； <br />属性值为&quot;nofollow&quot;: 文件不被检索，但可查询页上的链接。</pre></div><p>&nbsp;</p>\n','2010-12-29 11:07:43','2010-12-29 11:07:43',NULL,NULL,'publish',NULL,'javascript中关于屏蔽鼠标右键.防水复制不准粘贴等等等的一些小技巧..','/post/2012/7/14/1344938606843.html',1,0),(307,0,'open','<p><span class=\"Apple-style-span\" style=\"font-family: Arial; line-height: 24px; font-size: 14px; white-space: pre-wrap; \">问：</span></p><p><span class=\"Apple-style-span\" style=\"font-family: Arial; line-height: 24px; font-size: 14px; white-space: pre-wrap; \">java web应用程序中，我的某个类（不是jsp，也不是servlet）需要访问配置文件（.properties）,请问这个文件的路径应该怎么样确定呢？谢谢！</span></p><p>&nbsp;</p><p>回答：&nbsp;</p><p><span class=\"Apple-style-span\" style=\"font-family: arial, 宋体, sans-serif; line-height: 24px; font-size: 14px; \"><span class=\"Apple-style-span\" style=\"font-family: Arial; line-height: 22px; white-space: pre-wrap; \">这个问题就得看你的配置文件放在哪里啦,如果放在了项目的Classes目录(或子目录)下,你可以用**.Class.getResource(\'相对路径\')来获取配置文件路径.如果是其他目录,那你只能在项目启动时通过ServletContext获取项目根目录+配置文件的目录来确定路径.并把路径放到类文件可以引用的地方啦.</span><br /><pre id=\"best-answer-content\" style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-family: Arial; white-space: pre-wrap; word-wrap: break-word; zoom: 1; line-height: 22px; \">以下是我在做项目时写的一个用于获取路径的类,写的可能不太好.但还是希望能对你有所帮助:<br /><span class=\"Apple-style-span\" style=\"font-family: arial, 宋体, sans-serif; line-height: 24px; white-space: normal; \"><pre id=\"best-answer-content\" style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-family: Arial; white-space: pre-wrap; word-wrap: break-word; zoom: 1; line-height: 22px; \">package com.example.web;<br /><br />import java.io.File;<br />import java.net.URL;<br /><br />import javax.servlet.ServletContext;<br />import javax.servlet.http.HttpServletRequest;<br /><br />/**<br /> * 路径获取类<br /> * */<br />public class WebPath {<br /> /**<br />  * 获取项目根目录的绝对路径<br />  * <br />  * @return 如:F:\\TongJianpeng\\J2EEUtil<br />  * */<br /> public static String getAbsolutePathWithProject() {<br />  return System.getProperty(&quot;user.dir&quot;);<br /> }<br /><br /> /**<br />  * 获取项目所在盘符<br />  * */<br /> public static String getDriverPathWithProject() {<br />  return new File(&quot;/&quot;).getAbsolutePath();<br /> }<br /><br /> /**<br />  * 获取项目根目录的绝对路径<br />  * <br />  * @return 项目根目.例如&lt;br/&gt; F:\\tomcat\\webapps\\J2EEUtil\\<br />  * */<br /> public static String getAbsolutePathWithWebProject(<br />   HttpServletRequest request) {<br />  return request.getSession().getServletContext().getRealPath(&quot;/&quot;);<br /> }<br /><br /> /**<br />  * 获取项目根目录下的指定目录的绝对路径<br />  * <br />  * @param 项目根目下的指定目录<br />  *            .例如:/login/<br />  * @return 项目根目下的指定目录.例如:&lt;br/&gt; F:\\tomcat\\webapps\\J2EEUtil\\login\\<br />  * */<br /> public static String getAbsolutePathWithWebProject(<br />   HttpServletRequest request, String path) {<br />  return request.getSession().getServletContext().getRealPath(path);<br /> }<br /><br /> /**<br />  * 获取项目根目录的绝对路径<br />  * <br />  * @return 项目根目.例如&lt;br/&gt; F:\\tomcat\\webapps\\J2EEUtil\\<br />  * */<br /> public static String getAbsolutePathWithWebProject(ServletContext context) {<br />  return context.getRealPath(&quot;/&quot;);<br /> }<br /><br /> /**<br />  * 获取项目根目录下的指定目录的绝对路径<br />  * <br />  * @param 项目根目下的指定目录<br />  *            .例如:/login/<br />  * @return 项目根目下的指定目录.例如:&lt;br/&gt; F:\\tomcat\\webapps\\J2EEUtil\\login\\<br />  * */<br /> public static String getAbsolutePathWithWebProject(ServletContext context,<br />   String path) {<br />  return context.getRealPath(path);<br /> }<br /><br /> /**<br />  * 获取项目classpath目录的绝对路径<br />  * <br />  * @return classes目录的绝对路径&lt;br/&gt;<br />  *         file:/F:/tomcat/webapps/J2EEUtil/WEB-INF/classes/<br />  * */<br /> public static URL getAbsolutePathWithClass() {<br />  return WebPath.class.getResource(&quot;/&quot;);<br /> }<br /><br /> /**<br />  * 获取项目classPath目录下的指定目录的绝对路径<br />  * <br />  * @param path<br />  *            classes目录下的指定目录.比如:/com/<br />  * @return file:/F:/tomcat/webapps/J2EEUtil/WEB-INF/classes/com/<br />  * */<br /> public static URL getAbsolutePathWithClass(String path) {<br />  return WebPath.class.getResource(path);<br /> }<br /> <br /> /**<br />  * 获取指定类文件的所在目录的绝对路径<br />  * <br />  * @param clazz<br />  *            类<br />  * @return 类文件的绝对路径.例如:&lt;br/&gt; 包com.Aries.Util.Web下的Main.java类.&lt;br/&gt;<br />  *         路径为:file:/<br />  *         F:/tomcat/webapps/J2EEUtil/WEB-INF/classes/com/Aries/Util/Web/<br />  * */<br /> public static URL getAbsolutePathWithClass(Class clazz) {<br />  return clazz.getResource(&quot;&quot;);<br /> }<br />}</pre></span><br type=\"_moz\" /><br /></pre></span></p>\n','2010-12-03 13:23:40','2010-12-03 13:23:40',NULL,NULL,'publish',NULL,'Java获取程序路径','/post/2012/7/14/1344938606901.html',1,0),(308,0,'open','<p>&nbsp;<span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">设置注释模板的入口：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> Window-&gt;Preference-&gt;Java-&gt;Code Style-&gt;Code Template </span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">然后展开<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">Comments</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">节点就是所有需设置注释的元素啦。现就每一个元素逐一介绍：</p><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">文件<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">(Files)</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">注释标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @Title: ${file_name}<br /><br />* @Package ${package_name}<br /><br />* @Description: ${todo}(<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">用一句话描述该文件做什么<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<br /><br />* @author A18ccms A18ccms_gmail_com&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @date ${date} ${time}<br /><br />* @version V1.0&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/<o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">类型<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">(Types)</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">注释标签（类的注释）：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* @ClassName: ${type_name}<br /><br />* @Description: ${todo}(<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">这里用一句话描述这个类的作用<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<br /><br />* @author A18ccms a18ccms_gmail_com<br /><br />* @date ${date} ${time}<br /><br />*<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${tags}<br /><br />*/<o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\"><br /><br /><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:<br/>Arial;mso-bidi-font-family:Arial;color:#444444\">字段<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">(Fields)</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">注释标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* @Fields ${field} : ${todo}(<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">用一句话描述这个变量表示什么<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<br /><br />*/<br /><br /></span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:<br/>Arial;mso-bidi-font-family:Arial;color:#444444\">构造函数标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* &lt;p&gt;Title: &lt;/p&gt;<br /><br />* &lt;p&gt;Description: &lt;/p&gt;<br /><br />* ${tags}<br /><br />*/<o:p></o:p><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\"><br /><br /><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:<br/>Arial;mso-bidi-font-family:Arial;color:#444444\">方法<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">(Constructor &amp; Methods)</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* @Title: ${enclosing_method}<br /><br />* @Description: ${todo}(<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">这里用一句话描述这个方法的作用<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<br /><br />* @param ${tags}&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">设定文件<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\"><br /><br />* @return ${return_type}&nbsp;&nbsp;&nbsp; <span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">返回类型<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\"><br /><br />* @throws<br /><br />*/<o:p></o:p><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\"><br /><br /><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:<br/>Arial;mso-bidi-font-family:Arial;color:#444444\">覆盖方法<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">(Overriding Methods)</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/* (<span style=\"\nfont-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">非<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> Javadoc)<br /><br />* &lt;p&gt;Title: ${enclosing_method}&lt;/p&gt;<br /><br />* &lt;p&gt;Description: &lt;/p&gt;<br /><br />* ${tags}<br /><br />* ${see_to_overridden}<br /><br />*/<o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\"><br /><br /><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:<br/>Arial;mso-bidi-font-family:Arial;color:#444444\">代表方法<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">(Delegate Methods)</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* ${tags}<br /><br />* ${see_to_target}<br /><br />*/<br /><br />getter<span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">方法标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* @return ${bare_field_name}<br /><br />*/<o:p></o:p><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">setter<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">方法标签：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">/**<br /><br />* @param ${param} <span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">要设置的<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> ${bare_field_name}<br /><br />*/<o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">简单模板例子：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">view plaincopy to clipboardprint?<br /><br />&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;templates&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;fieldcomment_context&quot; deleted=&quot;false&quot; description=&quot;<span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">字段的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.fieldcomment&quot; name=&quot;fieldcomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @Fields ${field} : ${todo}(<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">用一句话描述这个变量表示什么<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;gettercomment_context&quot; deleted=&quot;false&quot; description=&quot;getter </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.gettercomment&quot; name=&quot;gettercomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @return ${bare_field_name}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;constructorcomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">创建的构造函数的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.constructorcomment&quot; name=&quot;constructorcomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* &lt;p&gt;Title:${file_name} &lt;/p&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* &lt;p&gt;Description: </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">构造函数<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&lt;/p&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${tags}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;filecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">已创建的<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> Java </span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">文件的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.filecomment&quot; name=&quot;filecomment&quot;&gt;/**&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @Title: ${file_name}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @Package ${package_name}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @Description: ${todo}(</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">用一句话描述该文件做什么<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @author DAIGUANGJIU&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @date ${date} ${time}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @version V1.0&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;settercomment_context&qu\not; deleted=&quot;false&quot; description=&quot;setter </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.settercomment&quot; name=&quot;settercomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @param ${param} </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">要设置的<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> ${bare_field_name}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;typecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">创建的类型的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.typecomment&quot; name=&quot;typecomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @author ${user}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${tags}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;delegatecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">代表方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.delegatecomment&quot; name=&quot;delegatecomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${tags}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${see_to_target}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;overridecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">覆盖方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.overridecomment&quot; name=&quot;overridecomment&quot;&gt;/** (</span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">非<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\"> Javadoc)<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* &lt;p&gt;Title: ${enclosing_method}&lt;/p&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* &lt;p&gt;Description: &lt;/p&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${tags}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${see_to_overridden}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;methodcomment_context&quot; deleted=&quot;false&quot; description=&quot;<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">非覆盖方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.methodcomment&quot; name=&quot;methodcomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* ${tags}<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/&lt;/template&gt;&lt;/templa<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;templates&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;fieldcomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">字段的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.fieldcomment&quot; name=&quot;fieldcomment&quot;&gt;/**<br /><br />* @Fields ${field} : ${todo}(<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">用一句话描述这个变量表示什么<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<br /><br />*/<br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;gettercomment_context&quot; deleted=&quot;false&quot; description=&quot;getter </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.gettercomment&quot; name=&quot;gettercomment&quot;&gt;/**<br /><br />* @return ${bare_field_name}<br /><br />*/<br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;constructorcomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">创建的构造函数的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.constructorcomment&quot; name=&quot;constructorcomment&quot;&gt;/**<br /><br />* &lt;p&gt;Title:${file_name} &lt;/p&gt;<br /><br />* &lt;p&gt;Description: </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">构造函数<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&lt;/p&gt;<br /><br />* ${tags}<br /><br />*/<br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;filecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">已创建的<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> Java </span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">文件的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.filecomment&quot; name=&quot;filecomment&quot;&gt;/**<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @Title: ${file_name}<br /><br />* @Package ${package_name}<br /><br />* @Description: ${todo}(</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">用一句话描述该文件做什么<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">)<br /><br />* @author DAIGUANGJIU&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />* @date ${date} ${time}<br /><br />* @version V1.0<span class=\"apple-converted-space\">&nbsp;</span><br /><br />*/<br /><br />&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;setterc\nomment_context&quot; deleted=&quot;false&quot; description=&quot;setter </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.settercomment&quot; name=&quot;settercomment&quot;&gt;/**<br /><br />* @param ${param} </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">要设置的<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> ${bare_field_name}<br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;typecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">创建的类型的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.typecomment&quot; name=&quot;typecomment&quot;&gt;/**<br /><br />* @author ${user}<br /><br />*<br /><br />* ${tags}<br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;delegatecomment_context&quot; deleted=&quot;false&quot; description=&quot;</span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">代表方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.delegatecomment&quot; name=&quot;delegatecomment&quot;&gt;/**<br /><br />* ${tags}<br /><br />* ${see_to_target}<br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;overridecomment_context&quot; deleted=&quot;false&quot; description=&quot;<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">覆盖方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.overridecomment&quot; name=&quot;overridecomment&quot;&gt;/** (</span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">非<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\"> Javadoc)<br /><br />* &lt;p&gt;Title: ${enclosing_method}&lt;/p&gt;<br /><br />* &lt;p&gt;Description: &lt;/p&gt;<br /><br />* ${tags}<br /><br />* ${see_to_overridden}<br /><br />*/&lt;/template&gt;&lt;template autoinsert=&quot;true&quot; context=&quot;methodcomment_context&quot; deleted=&quot;false&quot; description=&quot;<span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">非覆盖方法的注释<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&quot; enabled=&quot;true&quot; id=&quot;org.eclipse.jdt.ui.text.codetemplates.methodcomment&quot; name=&quot;methodcomment&quot;&gt;/**<br /><br />* ${tags}<br /><br />*/&lt;/template&gt;&lt;/templa<o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;<br/>mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">例子<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">2</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"><o:p></o:p></span><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:7.5pt;margin-left:0cm;<br/>line-height:16.5pt\"><span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;<br/>color:#444444\">view plaincopy to clipboardprint?<br /><br />&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;templates&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;constructorcomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for created constructors&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.constructorcomment&quot;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;constructorcomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * <span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">创建一个新的实例<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\"> ${enclosing_type}.&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * ${tags}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;settercomment_context&quot;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for setter method&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><b r/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.settercomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;settercomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @param ${param} the ${bare_field_name} to set&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;methodcomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for non-overriding methods&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.methodcomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;methodcomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">此方法描述的是：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @author:<span class=\"apple-converted-space\">&nbsp;</span><a href=\"http://eoknet.blog.163.com/blog/static/50027992200910233519352/wangxiongdx@163.com\"><span style=\"color:#64A038\">wangxiongdx@163.com</span></a>&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @version: ${date} ${time}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;delegatecomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for delegate methods&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.delegatecomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;delegatecomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * ${tags}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * ${see_to_target}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;filecomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for created Java files&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.filecomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;filecomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">文件名：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">${file_name}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * </span><span st\nyle=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">版本信息：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * </span><span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">日期：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">${date}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * Copyright </span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">足下<span lang=\"EN-US\" style=\"font-size:10.5pt;<br/>font-family:Arial;color:#444444\"> Corporation ${year}&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * <span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">版权所有<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;gettercomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for getter method&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.gettercomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;gettercomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * ${bare_field_name}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @return the ${bare_field_name}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @since&nbsp;&nbsp; CodingExample Ver(</span><span style=\"font-size:10.5pt;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;<br/>mso-bidi-font-family:Arial;color:#444444\">编码范例查看<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">) 1.0&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br /><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;overridecomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for overriding methods&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.overridecomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;overridecomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /* (non-Javadoc)&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * ${see_to_overridden}&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;fieldcomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for fields&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.fieldcomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;fieldcomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nb\nsp;&nbsp; * ${field}:${todo}</span><span style=\"font-size:10.5pt;<br/>mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:<br />Arial;color:#444444\">（用一句话描述这个变量表示什么）<span lang=\"EN-US\" style=\"font-size:<br/>10.5pt;font-family:Arial;color:#444444\">&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @since Ver 1.1&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;template&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autoinsert=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context=&quot;typecomment_context&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deleted=&quot;false&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description=&quot;Comment for created types&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=&quot;true&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;org.eclipse.jdt.ui.text.codetemplates.typecomment&quot;&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;typecomment&quot;&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * <span style=\"font-size:10.5pt;mso-ascii-font-family:<br/>Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:Arial;color:#444444\">此类描述的是：<span lang=\"EN-US\" style=\"font-size:10.5pt;font-family:Arial;color:#444444\">&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @author:<span class=\"apple-converted-space\">&nbsp;</span><a href=\"http://eoknet.blog.163.com/blog/static/50027992200910233519352/wangxiongdx@163.com\"><span style=\"color:#64A038\">wangxiongdx@163.com</span></a>&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; * @version: ${date} ${time}&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp; &lt;/template&gt;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&nbsp;&nbsp;&nbsp;<span class=\"apple-converted-space\">&nbsp;</span><br /><br />&lt;/templates&gt;<o:p></o:p></span><p class=\"MsoNormal\"><span lang=\"EN-US\"><o:p>&nbsp;</o:p></span></p>\n','2010-12-01 16:18:37','2010-12-01 16:18:37',NULL,NULL,'publish',NULL,'eclipse注释模板','/post/2012/7/14/1344938606957.html',1,0),(309,0,'open','<p>&nbsp;&nbsp;[编辑本段]</p><div>OSCache介绍</div><div>&nbsp;</div><div>　　OSCache是个一个广泛采用的高性能的J2EE缓存框架，OSCache能用于任何Java应用程序的普通的缓存解决方案。OSCache有以下特点：缓存任何对象，你可以不受限制的缓存部分jsp页面或HTTP请求，任何java对象都可以缓存。拥有全面的API--OSCache API给你全面的程序来控制所有的OSCache特性。永久缓存--缓存能随意的写入硬盘，因此允许昂贵的创建（expensive-to-create）数据来保持缓存，甚至能让应用重启。支持集群--集群缓存数据能被单个的进行参数配置，不需要修改代码。缓存记录的过期--你可以有最大限度的控制缓存对象的过期，包括可插入式的刷新策略（如果默认性能不需要时）。</div><div>&nbsp;</div><div>[编辑本段]</div><div>&nbsp;</div><div>OSCache特点</div><div>&nbsp;</div><div>　　缓存任何对象，你可以不受限制的缓存部分jsp页面或HTTP请求，任何java对象都可以缓存。</div><div>&nbsp;</div><div>　　拥有全面的API--OSCache API给你全面的程序来控制所有的OSCache特性。</div><div>&nbsp;</div><div>　　永久缓存--缓存能随意的写入硬盘，因此允许昂贵的创建（expensive-to-create）数据来保持缓存，甚至能让应用重启。</div><div>&nbsp;</div><div>　　支持集群--集群缓存数据能被单个的进行参数配置，不需要修改代码。</div><div>&nbsp;</div><div>　　缓存记录的过期--你可以有最大限度的控制缓存对象的过期，包括可插入式的刷新策略（如果默认性能不需要时）</div><div>&nbsp;</div><div>[编辑本段]</div><div>&nbsp;</div><div>安装过程</div><div>&nbsp;</div><div>　　下载合适的OSCache版本，</div><div>&nbsp;</div><div>　　下载的是oscache-2.0.2-full版本。</div><div>&nbsp;</div><div>　　解压缩下载的文件到指定目录</div><div>&nbsp;</div><div>　　从解压缩目录取得oscache.jar 文件放到 /WEB-INF/lib 或相应类库目录 目录中，</div><div>&nbsp;</div><div>　　jar文件名可能含有版本号和该版本的发布日期信息等，如oscache-2.0.2-22Jan04.jar</div><div>&nbsp;</div><div>　　如果你的jdk版本为1.3.x,建议在lib中加入Apache Common Lib 的commons-collections.jar包。</div><div>&nbsp;</div><div>　　如jdk是1.4以上则不必</div><div>&nbsp;</div><div>　　从src或etc目录取得oscache.properties 文件，放入src根目录或发布环境的/WEB-INF/classes 目录</div><div>&nbsp;</div><div>　　如你需要建立磁盘缓存，须修改oscache.properties 中的cache.path信息 (去掉前面的#注释)。</div><div>&nbsp;</div><div>　　win类路径类似为c:\\\\app\\\\cache</div><div>&nbsp;</div><div>　　unix类路径类似为/opt/myapp/cache</div><div>&nbsp;</div><div>　　拷贝OSCache标签库文件oscache.tld到/WEB-INF/classes目录。</div><div>&nbsp;</div><div>　　现在你的应用目录类似如下：</div><div>&nbsp;</div><div>　　$WEB_APPLICATION\\WEB-INF\\lib\\oscache.jar</div><div>&nbsp;</div><div>　　$WEB_APPLICATION\\WEB-INF\\classes\\oscache.properties</div><div>&nbsp;</div><div>　　$WEB_APPLICATION\\WEB-INF\\classes\\oscache.tld</div><div>&nbsp;</div><div>　　将下列代码加入web.xml文件中</div><div>&nbsp;</div><div>　　oscache</div><div>&nbsp;</div><div>　　/WEB-INF/classes/oscache.tld</div><div>&nbsp;</div><div>　　为了便于调试日志输出，须加入commons-logging.jar和log4j-1.2.8.jar到当前类库路径中</div><div>&nbsp;</div><div>　　在src目录加入下面两个日志输出配置文件：</div><div>&nbsp;</div><div>　　log4j.properties 文件内容为：</div><div>&nbsp;</div><div>　　log4j.rootLogger=DEBUG,stdout,file</div><div>&nbsp;</div><div>　　log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div>&nbsp;</div><div>　　log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div>&nbsp;</div><div>　　log4j.appender.stdout.layout.ConversionPattern=[start]%d{yyyy/MM/dd/ HH:mm:ss}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD] n%c[CATEGORY]%n%m[MESSAGE]%n%n</div><div>&nbsp;</div><div>　　log4j.appender.file=org.apache.log4j.RollingFileAppender</div><div>&nbsp;</div><div>　　log4j.appender.file.File=oscache.log</div><div>&nbsp;</div><div>　　log4j.appender.file.MaxFileSize=100KB</div><div>&nbsp;</div><div>　　log4j.appender.file.MaxBackupIndex=5</div><div>&nbsp;</div><div>　　log4j.appender.file.layout=org.apache.log4j.PatternLayout</div><div>&nbsp;</div><div>　　log4j.appender.file.layout.ConversionPattern=[start]%d{yyyy/MM/dd/ HH:mm:ss}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD] n%c[CATEGORY]%n%m[MESSAGE]%n%n</div><div>&nbsp;</div><div>　　log4j.logger.org.apache.commons=ERROR</div><div>&nbsp;</div><div>　　log4j.logger.com.opensymphony.oscache.base=INFO</div><div>&nbsp;</div><div>　　commons-logging.properties 文件内容为</div><div>&nbsp;</div><div>　　org.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JCategoryLog</div><div>&nbsp;</div><div>[编辑本段]</div><div>&nbsp;</div><div>oscache.properties 文件配置向导</div><div>&nbsp;</div><div>　　cache.memory</div><div>&nbsp;</div><div>　　值为true 或 false ，默认为在内存中作缓存，</div><div>&nbsp;</div><div>　　如设置为false，那cache只能缓存到数据库或硬盘中，那cache还有什么意义：）</div><div>&nbsp;</div><div>　　cache.capacity</div><div>&nbsp;</div><div>　　缓存元素个数</div><div>&nbsp;</div><div>　　cache.persistence.class</div><div>&nbsp;</div><div>　　持久化缓存类，如此类打开，则必须设置cache.path信息</div><div>&nbsp;</div><div>　　cache.cluster 相关</div><div>&nbsp;</div><div>　　为集群设置信息。</div><div>&nbsp;</div><div>　　如</div><div>&nbsp;</div><div>　　cache.cluster.multicast.ip为广播IP地址</div><div>&nbsp;</div><div>　　cache.cluster.properties为集群属性</div><div>&nbsp;</div><div>[编辑本段]</div><div>&nbsp;</div><div>缓存过滤器 CacheFilter</div><div>&nbsp;</div><div>　　你可以在web.xml中定义缓存过滤器，定义特定资源的缓存。</div><div>&nbsp;</div><div>　　注意，CacheFilter只捕获Http头为200的页面请求，即只对无错误请求作缓存，</div><div>&nbsp;</div><div>　　而不对其他请求（如500,404,400）作缓存处理</div><div>&nbsp;</div><div>[编辑本段]</div><div>&nbsp;</div><div>&ldquo;用OSCache进行缓存对象&rdquo;的研究</div><div>&nbsp;</div><div>　　这个是我今天要说的东西。网上对于OSCache缓存Web页面很多说明和例子，但对于缓存对象方面说得不多，我就把自已写得一些东西放出来，让大家看一看是怎样缓存对象的!</div><div>&nbsp;</div><div>　　我基于GeneralCacheAdministrator类来写的BaseCache类</div><div>&nbsp;</div><div>　　view plainprint?</div><div>&nbsp;</div><div>　　package com.klstudio.cache;</div><div>&nbsp;</div><div>　　import java.util.Date;</div><div>&nbsp;</div><div>　　import com.opensymphony.oscache.base.NeedsRefreshException;</div><div>&nbsp;</div><div>　　import com.opensymphony.oscache.general.GeneralCacheAdministrator;</div><div>&nbsp;</div><div>　　public class BaseCache extends GeneralCacheAdministrator {</div><div>&nbsp;</div><div>　　//过期时间(单位为秒);</div><div>&nbsp;</div><div>　　private int refreshPeriod;</div><div>&nbsp;</div><div>　　//关键字前缀字符;</div><div>&nbsp;</div><div>　　private String keyPrefix;</div><div>&nbsp;</div><div>　　private static final long serialVersionUID = -4397192926052141162L;</div><div>&nbsp;</div><div>　　public BaseCache(String keyPrefix,int refreshPeriod){</div><div>&nbsp;</div><div>　　super();</div><div>&nbsp;</div><div>　　this.keyPrefix = keyPrefix;</div><div>&nbsp;</div><div>　　this.refreshPeriod = refreshPeriod;</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//添加被缓存的对象;</div><div>&nbsp;</div><div>　　public void put(String key,Object value){</div><div>&nbsp;</div><div>　\n　this.putInCache(this.keyPrefix+&quot;_&quot;+key,value);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//删除被缓存的对象;</div><div>&nbsp;</div><div>　　public void remove(String key){</div><div>&nbsp;</div><div>　　this.flushEntry(this.keyPrefix+&quot;_&quot;+key);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//删除所有被缓存的对象;</div><div>&nbsp;</div><div>　　public void removeAll(Date date){</div><div>&nbsp;</div><div>　　this.flushAll(date);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public void removeAll(){</div><div>&nbsp;</div><div>　　this.flushAll();</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//获取被缓存的对象;</div><div>&nbsp;</div><div>　　public Object get(String key) throws Exception{</div><div>&nbsp;</div><div>　　try{</div><div>&nbsp;</div><div>　　return this.getFromCache(this.keyPrefix+&quot;_&quot;+key,this.refreshPeriod);</div><div>&nbsp;</div><div>　　} catch (NeedsRefreshException e) {</div><div>&nbsp;</div><div>　　this.cancelUpdate(this.keyPrefix+&quot;_&quot;+key);</div><div>&nbsp;</div><div>　　throw e;</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　package com.klstudio.cache;</div><div>&nbsp;</div><div>　　import java.util.Date;</div><div>&nbsp;</div><div>　　import com.opensymphony.oscache.base.NeedsRefreshException;</div><div>&nbsp;</div><div>　　import com.opensymphony.oscache.general.GeneralCacheAdministrator;</div><div>&nbsp;</div><div>　　public class BaseCache extends GeneralCacheAdministrator {</div><div>&nbsp;</div><div>　　//过期时间(单位为秒);</div><div>&nbsp;</div><div>　　private int refreshPeriod;</div><div>&nbsp;</div><div>　　//关键字前缀字符;</div><div>&nbsp;</div><div>　　private String keyPrefix;</div><div>&nbsp;</div><div>　　private static final long serialVersionUID = -4397192926052141162L;</div><div>&nbsp;</div><div>　　public BaseCache(String keyPrefix,int refreshPeriod){</div><div>&nbsp;</div><div>　　super();</div><div>&nbsp;</div><div>　　this.keyPrefix = keyPrefix; this.refreshPeriod = refreshPeriod;</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//添加被缓存的对象;</div><div>&nbsp;</div><div>　　public void put(String key,Object value){</div><div>&nbsp;</div><div>　　this.putInCache(this.keyPrefix+&quot;_&quot;+key,value);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//删除被缓存的对象;</div><div>&nbsp;</div><div>　　public void remove(String key){</div><div>&nbsp;</div><div>　　this.flushEntry(this.keyPrefix+&quot;_&quot;+key);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//删除所有被缓存的对象;</div><div>&nbsp;</div><div>　　public void removeAll(Date date){</div><div>&nbsp;</div><div>　　this.flushAll(date);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public void removeAll(){</div><div>&nbsp;</div><div>　　this.flushAll();</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　//获取被缓存的对象;</div><div>&nbsp;</div><div>　　public Object get(String key) throws Exception{</div><div>&nbsp;</div><div>　　try{</div><div>&nbsp;</div><div>　　return this.getFromCache(this.keyPrefix+&quot;_&quot;+key,this.refreshPeriod);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　catch (NeedsRefreshException e) {</div><div>&nbsp;</div><div>　　this.cancelUpdate(this.keyPrefix+&quot;_&quot;+key); throw e;</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　通过CacheManager类来看怎样缓存对象的,这个类中所用的News只是具体功能的类，我就不贴出来了，你可以自己写一个!</div><div>&nbsp;</div><div>　　view plainprint?</div><div>&nbsp;</div><div>　　package com.klstudio;</div><div>&nbsp;</div><div>　　import com.klstudio.News;</div><div>&nbsp;</div><div>　　import com.klstudio.cache.BaseCache;</div><div>&nbsp;</div><div>　　public class CacheManager {</div><div>&nbsp;</div><div>　　private BaseCache newsCache;</div><div>&nbsp;</div><div>　　private static CacheManager instance;</div><div>&nbsp;</div><div>　　private static Object lock = new Object();</div><div>&nbsp;</div><div>　　public CacheManager() {</div><div>&nbsp;</div><div>　　//这个根据配置文件来，初始BaseCache而已;</div><div>&nbsp;</div><div>　　newsCache = new BaseCache(&quot;news&quot;,1800);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public static CacheManager getInstance(){</div><div>&nbsp;</div><div>　　if (instance == null){</div><div>&nbsp;</div><div>　　synchronized( lock ){</div><div>&nbsp;</div><div>　　if (instance == null){</div><div>&nbsp;</div><div>　　instance = new CacheManager();</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　return instance;</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public void putNews(News news) {</div><div>&nbsp;</div><div>　　// TODO 自动生成方法存根</div><div>&nbsp;</div><div>　　newsCache.put(news.getID(),news);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public void removeNews(String newsID) {</div><div>&nbsp;</div><div>　　// TODO 自动生成方法存根</div><div>&nbsp;</div><div>　　newsCache.remove(newsID);</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public News getNews(String newsID) {</div><div>&nbsp;</div><div>　　// TODO 自动生成方法存根</div><div>&nbsp;</div><div>　　try {</div><div>&nbsp;</div><div>　　return (News) newsCache.get(newsID);</div><div>&nbsp;</div><div>　　} catch (Exception e) {</div><div>&nbsp;</div><div>　　// TODO 自动生成 catch 块</div><div>&nbsp;</div><div>　　System.out.println(&quot;getNews&gt;&gt;newsID[&quot;+newsID+&quot;]&gt;&gt;&quot;+e.getMessage());</div><div>&nbsp;</div><div>　　News news = new News(newsID);</div><div>&nbsp;</div><div>　　this.putNews(news);</div><div>&nbsp;</div><div>　　return news;</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　public void removeAllNews() {</div><div>&nbsp;</div><div>　　// TODO 自动生成方法存根</div><div>&nbsp;</div><div>　　newsCache.removeAll();</div><div>&nbsp;</div><div>　　}</div><div>&nbsp;</div><div>　　}</div>\n','2010-12-01 16:17:51','2010-12-01 16:17:51',NULL,NULL,'publish',NULL,'OSCache','/post/2012/7/14/1344938607037.html',1,0),(310,0,'open','<p><span class=\"Apple-style-span\" style=\"font-family: verdana, \'ms song\', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; line-height: 19px; font-size: 13px; \">JBPM_ACTION action记录表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_DECISIONCONDITIONS 结果条件表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_DELEGATION 委托表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_EVENT 事件表 处理进入或者离开事件&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_EXCEPTIONHANDLER 异常处理表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_ID_GROUP 用户组表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_ID_MEMBERSHIP 用户成员表 表现用户和组之间的多对多关系&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_ID_PERMISSIONS 用户权限表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_ID_USER 用户表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_MODULEDEFINITION 模块定义表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_MODULEINSTANCE 模块实例表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_NODE 流程节点表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_POOLEDACTOR 汇集参与着表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_PROCESSDEFINITION 流程定义表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_PROCESSFILE 流程文件表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_PROCESSFILEBLOCK 流程文件块表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_PROCESSINSTANCE 流程实例表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_RUNTIMEACTION 运行中行为表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_SCRIPTVARIABLES 脚本变量表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_SWIMLANE 泳道表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_SWIMLANEINSTANCE 泳道实例表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TASK 任务表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TASKACTORPOOL 用户行为汇总&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TASKINSTANCE 任务实例&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TIMER 计时表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TOKEN 令牌表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TOKENVARIABLEMAP 令牌变量影射表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_TRANSITION 转换表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_VARIABLEINSTANCE 变量实例表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_VARIABLEINSTANCEBLOCK 变量实例块表&nbsp;<br style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \" /><br />JBPM_VARIABLEMAPPING 变量影射表&nbsp;</span></p><p>&nbsp;<img onload=\"ResizeImage(this,520)\" src=\"http://www.mspring.org/upload/af8bc25471b0996e574e0002.jpg.png\" alt=\"\" title=\"\" /></p>\n','2010-12-01 13:06:19','2010-12-01 13:06:19',NULL,NULL,'publish',NULL,'JBPM3数据库结构','/post/2012/7/14/1344938607096.html',1,0),(311,0,'open','<p>　　之前本来用的是JBPM4.4的，并且SSH都整合好了，当时我们公司产品为了兼容性考虑用的是JDK1.4， JBPM4.4至少是需要JDK5以上的版本的。 所以就将JBPM版本换成了3.2GA（<a href=\"http://sourceforge.net/\">http://sourceforge.net/</a>上有下载），在将JBPM3.2GA和Spring1.2 + Hibernate3.1 + webwork2整合的时候遇到了不少麻烦，上网收集了很多资料，在这里总结一下，帮助那些JBPM的初学者和方便以后查阅。</p><p>　　在这里需要四个Jar包，spring-modules-jbpm*.jar ，jbpm-3.2GA.jar ，jbpm-identity.jar ，bsh.jar。&nbsp;</p><p>　　1，在applicationContext.xml中这么配置</p><p>&nbsp;</p><div class=\"codes\"><pre class=\"xml\" name=\"code\">&lt;bean id=&quot;jbpmConfiguration&quot; class=&quot;org.springmodules.workflow.jbpm31.LocalJbpmConfigurationFactoryBean&quot;&gt; <br />        &lt;property name=&quot;sessionFactory&quot; ref=&quot;sessionFactory&quot; /&gt;<br />        &lt;property name=&quot;configuration&quot; value=&quot;classpath:jbpm.cfg.xml&quot; /&gt;<br />    &lt;/bean&gt; <br />    &lt;bean id=&quot;jbpmTemplate&quot; class=&quot;org.springmodules.workflow.jbpm31.JbpmTemplate&quot;&gt; <br />        &lt;property name=&quot;jbpmConfiguration&quot; ref=&quot;jbpmConfiguration&quot;&gt;&lt;/property&gt; <br />    &lt;/bean&gt; <span class=\"Apple-style-span\" style=\"color: rgb(0, 0, 255); \">　　</span></pre></div><p>　　这样我们就可以通过依赖注入，在程序中使用jbpmConfiguration和jbpmTemplate了。</p><p>&nbsp;</p><p>&nbsp;</p><p>　　2，在applicationContext.xml中，我们可以看到jbpmConfiguration是需要依赖jbpm.cfg.xml的（<span>&lt;</span><span>property </span><span>name</span><span>=&quot;configuration&quot;</span><span> value</span><span>=&quot;classpath:jbpm.cfg.xml&quot;</span><span> </span><span>/&gt;</span>）</p><p>这个文件我们可以在jbpm-3.2GA.jar中找到（在包org.jbpm下default.jbpm.cfg.xml）， 由于我们的数据库配置是在hibernate.cfg.xml(或者是applicationContext.xml)中配置好了的，</p><p>所以我们需要将org.jbpm下的default.jbpm.cfg.xml复制出来，然后去掉其中的一句话&lt;stringname=&quot;resource.hibernate.cfg.xml&quot; value=&quot;hibernate.cfg.xml&quot;/&gt; 就可以了。然后将其重命名为jbpm.cfg.xml 放在src目录下，如果没有这个文件的话，jbpm会默认调用org.jbpm下的default.jbpm.cfg.xml。</p><p>　　修改之后的jbpm.cfg.xml如下</p><p>&nbsp;</p><p>&nbsp;</p><div class=\"codes\"><pre class=\"xml\" name=\"code\">&lt;jbpm-configuration&gt;<br /><br />  &lt;!-- <br />    This configuration is used when there is no jbpm.cfg.xml file found in the <br />    root of the classpath.  It is a very basic configuration without persistence<br />    and message services.  Only the authorization service installed.<br />    You can parse and create processes, but when you try to use one of the <br />    unavailable services, you\'ll get an exception.<br />  --&gt;<br />  <br />  &lt;jbpm-context&gt;<br />    &lt;service name=&quot;persistence&quot; factory=&quot;org.jbpm.persistence.db.DbPersistenceServiceFactory&quot; /&gt;<br />    &lt;service name=&quot;tx&quot; factory=&quot;org.jbpm.tx.TxServiceFactory&quot; /&gt;<br />    &lt;service name=&quot;message&quot; factory=&quot;org.jbpm.msg.db.DbMessageServiceFactory&quot; /&gt;<br />    &lt;service name=&quot;scheduler&quot; factory=&quot;org.jbpm.scheduler.db.DbSchedulerServiceFactory&quot; /&gt;<br />    &lt;service name=&quot;logging&quot; factory=&quot;org.jbpm.logging.db.DbLoggingServiceFactory&quot; /&gt;<br />    &lt;service name=&quot;authentication&quot; factory=&quot;org.jbpm.security.authentication.DefaultAuthenticationServiceFactory&quot; /&gt;<br />  &lt;/jbpm-context&gt;<br /><br />  &lt;!-- configuration property used by persistence service impl org.jbpm.persistence.db.DbPersistenceServiceFactory --&gt;<br />  &lt;!-- &lt;string name=&quot;resource.hibernate.cfg.xml&quot; value=&quot;hibernate.cfg.xml&quot; /&gt; --&gt;<br /><br />  &lt;!-- configuration resource files pointing to default configuration files in jbpm-{version}.jar --&gt;<br />  &lt;string name=&quot;resource.business.calendar&quot; value=&quot;org/jbpm/calendar/jbpm.business.calendar.properties&quot; /&gt;<br />  &lt;string name=&quot;resource.default.modules&quot; value=&quot;org/jbpm/graph/def/jbpm.default.modules.properties&quot; /&gt;<br />  &lt;string name=&quot;resource.converter&quot; value=&quot;org/jbpm/db/hibernate/jbpm.converter.properties&quot; /&gt;<br />  &lt;string name=&quot;resource.action.types&quot; value=&quot;org/jbpm/graph/action/action.types.xml&quot; /&gt;<br />  &lt;string name=&quot;resource.node.types&quot; value=&quot;org/jbpm/graph/node/node.types.xml&quot; /&gt;<br />  &lt;string name=&quot;resource.parsers&quot; value=&quot;org/jbpm/jpdl/par/jbpm.parsers.xml&quot; /&gt;<br />  &lt;string name=&quot;resource.varmapping&quot; value=&quot;org/jbpm/context/exe/jbpm.varmapping.xml&quot; /&gt;<br />  &lt;string name=&quot;resource.mail.templates&quot; value=&quot;jbpm.mail.templates.xml&quot; /&gt;<br /><br />  &lt;int    name=&quot;jbpm.byte.block.size&quot; value=&quot;1024&quot; singleton=&quot;true&quot; /&gt;<br />  &lt;bean   name=&quot;jbpm.task.instance.factory&quot; class=&quot;org.jbpm.taskmgmt.impl.DefaultTaskInstanceFactoryImpl&quot; singleton=&quot;true&quot; /&gt;<br />  &lt;bean   name=&quot;jbpm.variable.resolver&quot; class=&quot;org.jbpm.jpdl.el.impl.JbpmVariableResolver&quot; singleton=&quot;true&quot; /&gt;<br />  &lt;string name=&quot;jbpm.mail.smtp.host&quot; value=&quot;localhost&quot; /&gt;<br />  &lt;bean   name=&quot;jbpm.mail.address.resolver&quot; class=&quot;org.jbpm.identity.mail.IdentityAddressResolver&quot; singleton=&quot;true&quot; /&gt;<br />  &lt;string name=&quot;jbpm.mail.from.address&quot; value=&quot;jbpm@noreply&quot; /&gt;<br />  <br />  &lt;bean name=&quot;jbpm.job.executor&quot; class=&quot;org.jbpm.job.executor.JobExecutor&quot;&gt;<br />    &lt;field name=&quot;jbpmConfiguration&quot;&gt;&lt;ref bean=&quot;jbpmConfiguration&quot; /&gt;&lt;/field&gt;<br />    &lt;field name=&quot;name&quot;&gt;&lt;string value=&quot;JbpmJobExecutor&quot; /&gt;&lt;/field&gt;<br />    &lt;field name=&quot;nbrOfThreads&quot;&gt;&lt;int value=&quot;1&quot; /&gt;&lt;/field&gt;<br />    &lt;field name=&quot;idleInterval&quot;&gt;&lt;int value=&quot;5000&quot; /&gt;&lt;/field&gt;<br />    &lt;field name=&quot;maxIdleInterval&quot;&gt;&lt;int value=&quot;3600000&quot; /&gt;&lt;/field&gt; &lt;!-- 1 hour --&gt;<br />    &lt;field name=&quot;historyMaxSize&quot;&gt;&lt;int value=&quot;20&quot; /&gt;&lt;/field&gt;<br />    &lt;field name=&quot;maxLockTime&quot;&gt;&lt;int value=&quot;600000&quot; /&gt;&lt;/field&gt; &lt;!-- 10 minutes --&gt;<br />    &lt;field name=&quot;lockMonitorInterval&quot;&gt;&lt;int value=&quot;60000&quot; /&gt;&lt;/field&gt; &lt;!-- 1 minute --&gt;<br />    &lt;field name=&quot;lockBufferTime&quot;&gt;&lt;int value=&quot;5000&quot; /&gt;&lt;/field&gt; &lt;!-- 5 seconds --&gt;<br />  &lt;/bean&gt;<br /><br />&lt;/jbpm-configuration&gt;</pre></div><p>&nbsp;</p><p>　　3，添加jbpm数据表的映射文件。</p><p>　　在applicationContext.xml添加如下配置，这里就不详细描述了，会hibernate，spring的同学都应该很熟悉了。直接贴代码：</p><p>&nbsp;</p><div class=\"codes\"><pre class=\"xml\" name=\"code\">                &lt;value&gt;org/jbpm/graph/def/Action.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/action/Script.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/db/hibernate.queries.hbm.xml&lt;/value&gt;<br />                <br />                &lt;value&gt;org/jbpm/graph/def/ProcessDefinition.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/def/Node.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/def/Transition.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/def/Event.hbm.xml&lt;/value&gt;<br />                <br />                &lt;value&gt;org/jbpm/graph/def/SuperState.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/def/Ex\nceptionHandler.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/instantiation/Delegation.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/graph/node/StartState.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/node/EndState.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/node/ProcessState.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/node/Decision.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/node/Fork.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/node/Join.hbm.xml&lt;/value&gt;<br />                <br />                &lt;value&gt;org/jbpm/graph/node/State.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/node/TaskNode.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/context/def/ContextDefinition.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/def/VariableAccess.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/taskmgmt/def/TaskMgmtDefinition.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/def/Swimlane.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/def/Task.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/def/TaskController.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/module/def/ModuleDefinition.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/bytes/ByteArray.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/file/def/FileDefinition.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/scheduler/def/CreateTimerAction.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/scheduler/def/CancelTimerAction.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/graph/exe/Comment.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/exe/ProcessInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/exe/Token.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/exe/RuntimeAction.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/module/exe/ModuleInstance.hbm.xml&lt;/value&gt; <br />                &lt;value&gt;org/jbpm/context/exe/ContextInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/TokenVariableMap.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/VariableInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/ByteArrayInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/DateInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/DoubleInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/HibernateLongInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/HibernateStringInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/LongInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/NullInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/exe/variableinstance/StringInstance.hbm.xml&lt;/value&gt;<br />        <br />                &lt;!-- job mapping files --&gt;<br />                &lt;value&gt;org/jbpm/job/Job.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/job/Timer.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/job/ExecuteNodeJob.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/job/ExecuteActionJob.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/taskmgmt/exe/TaskMgmtInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/exe/TaskInstance.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/exe/PooledActor.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/exe/SwimlaneInstance.hbm.xml&lt;/value&gt;<br />        <br />                &lt;value&gt;org/jbpm/logging/log/ProcessLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/logging/log/MessageLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/logging/log/CompositeLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/ActionLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/NodeLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/ProcessInstanceCreateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/ProcessInstanceEndLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/ProcessStateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/SignalLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/TokenCreateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/TokenEndLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/graph/log/TransitionLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/VariableLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/VariableCreateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/VariableDeleteLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/VariableUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/ByteArrayUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/DateUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/DoubleUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/HibernateLongUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/HibernateStringUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/LongUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/context/log/variableinstance/StringUpdateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/TaskLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/TaskCreateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/TaskAssignLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/TaskEndLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/SwimlaneLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/SwimlaneCreateLog.hbm.xml&lt;/value&gt;<br />                &lt;value&gt;org/jbpm/taskmgmt/log/SwimlaneAssignLog.hbm.xml&lt;/value&gt;</pre></div><div class=\"cnblogs_code\">&nbsp;</div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>　　现在所有的配置都已经OK了！</p><p>&nbsp;</p><p>　　下面我把那4个jar包也上传一下 ，建议使用我上传的jar包，要不然可能会出错的！</p><p>　　现在地址：http://files.cnblogs.com/gaoyoubo/jbpm.rar</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-11-04 11:19:00','2010-11-04 11:19:00',NULL,NULL,'publish',NULL,'JBPM3.2GA 整合SSH','/post/2012/7/14/1344938607159.html',1,0),(312,0,'open','<p><div class=\"cnblogs_Highlighter\"><pre class=\"brush:java\">代码中有详细的注释, 这里就不再详述(有在项目中使用).1. 可自定义生成文件名和路径.2. 可自动生成文件夹,方便管理(一般是按日期)import java.io.*;import java.net.*;/*** * @author   yidwo Lai* @version 1.0**/public class MyMakeHtml{/*** * @param sourceURL 动态页面运行路径* * @param saveFilePath 生成的静态页面保存路径(带文件名)* * @param dirPath 生成的静态页面保存路径(不带文件名,供动态生成文件夹,以便管理)* * @return boolean*/public static boolean MyMakeHtml(String sourceURL, String saveFilePath,String dirPath) {    boolean flag = false;    RandomAccessFile saveFile = null;//BufferedRandomAccessFile saveFile;    InputStream inStream = null;    try {        // 如果静态页面已经存在,则删除    File myFile=new File(saveFilePath);        if(myFile.exists()){             myFile.delete();    }    myFile=null;        // 如果给出路径的文件夹不存在,则新建.    if(dirPath.trim().length()&gt;0){                File dirFile = new File(dirPath);                  if(!dirFile.exists()){                  dirFile.mkdirs();         }         dirFile=null;    }       /**   * 先调用 RandomAccessFile的 RandomAccessFile(String name, String mode)   * 构造方法,如果给定的name!=null, 则转而调用   * RandomAccessFile(File file, String mode)的构造方法         *    */    saveFile = new RandomAccessFile(saveFilePath, \"rw\");        // 后台运行动态页面        URL url = new java.net.URL(sourceURL);                // 打开对动态页面的访问连接        URLConnection conn = url.openConnection();                // 获得动态页面的源码        inStream = conn.getInputStream();                // 取得源码的大小        int len = 512;//conn.getContentLength();                byte[] buffer = new byte[len];        int lineRead = 0;                // 写入静态页面        while ( (lineRead = inStream.read(buffer, 0, len)) != -1) { //EOF                saveFile.write(buffer, 0, lineRead);        }        flag = true;        System.out.println(\"sourceURL = \" + sourceURL+\"   contentLength= \"+len);            }catch (Exception e) {        e.printStackTrace();        flag = false;    }finally {        try {            if (saveFile != null) {            saveFile.close();            }        }catch (Exception e) {        }        try {            if (inStream != null) {                inStream.close();            }        }catch (Exception e) {        }    }    return flag;}</pre></div></p>\n','2010-11-01 10:01:00','2010-11-01 10:01:00',NULL,NULL,'publish',NULL,'Java动态生成静态页','/post/2012/7/14/1344938607296.html',1,0),(313,0,'open','<p>随着个性化社会的发展，现在很多软件都支持换肤功能，允许用户来定制软件的外观。根据使用方式的不同，定制又分为两种：&nbsp;<br />1、系统管理员定制整个系统的外观，系统管理员来选择一个系统使用什么样的外观，同时不允许用户来定制。&nbsp;<br />2、每个用户都可以实现定制，并且保存自己的定制&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>当然上述两个情况都可以在一个系统中实现，不过需要由管理员来确定是否开放用户定制功能。&nbsp;</p><p>换肤的实现原理：动态改变需要的css文件。&nbsp;</p><p>实现方式：&nbsp;</p><p><strong><span><span>一、CSS设置部分:</span>&nbsp;</span></strong><br />&nbsp; 每种风格设置一个套样式表，分别放在不同的文件夹中，最好CSS样式表中用到的背景图片等也放在该文件夹下， 把文件夹地址作为系统环境变量。</p><p>&nbsp;&nbsp; 通常,需要写一个网站通用的CSS文件,该文件一般只控制css的位置布局,不涉及颜色,背景布局，然后每套风格只涉及换肤方案的css文件,这里就只控制颜色,背景。&nbsp;</p><p><strong><span><span>页面使用部分:</span>&nbsp;</span></strong></p><p>需要使用系统变量来读取样式表和图片文件&nbsp;</p><p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">link </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"${skins}/styles.css\"</span><span style=\"color: #ff0000;\"> rel</span><span style=\"color: #0000ff;\">=\"stylesheet\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"text/css\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">img </span><span style=\"color: #ff0000;\">src</span><span style=\"color: #0000ff;\">=\"${skins}/images/Top_ment_left.gif\"</span><span style=\"color: #ff0000;\"> width</span><span style=\"color: #0000ff;\">=\"134\"</span><span style=\"color: #ff0000;\"> height</span><span style=\"color: #0000ff;\">=\"33\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span></div></pre></div></p><p>&nbsp;</p><p>其中${skins}是系统变量，如果上面定制方案1，该变量保存在Application中，如果是方案2，该变量保存在Session中即可。&nbsp;</p><p>&nbsp;</p><p><strong><span><span>变量的设置和读取:</span>&nbsp;</span></strong></p><p>那么如何来设置保存${skins}的变量呢？&nbsp;</p><p>如果是允许用户定制，需要在每个用户表中增加一列，保存该用户设置的风格路径，那么就可以在用户登录的时候保存在Session中，&nbsp;</p><p>如果不允许用户定制，就需要在系统启动的时候就加载到Application中，可以考虑使用监听器来实现。并且在执行换肤功能的时候来重新设置Application中的这个变量。而变量的保存可以保存在配置文件中，也可以保存在数据库表中，如果保存在系统表中，注意监听器中需要数据库链接了，需要能够获取数据库链接才可以。&nbsp;</p><p>&nbsp;</p><p>原文：<a href=\"http://www.javaeye.com/topic/224415\">http://www.javaeye.com/topic/224415</a></p><p>&nbsp;</p>\n','2010-11-01 09:10:00','2010-11-01 09:10:00',NULL,NULL,'publish',NULL,'Java WEB系统 换肤 实现方式','/post/2012/7/14/1344938607347.html',1,0),(314,0,'open','<table><tbody><tr><td><div id=\"blog_text\" class=\"cnt\"><p>这是我做的一个个人知识管理的一部分，现在把这部分提取出来，加上原代码，希望对大家学习工作有一定的的参考价值。</p><p>&nbsp;</p><p>我对JAVA情有独钟，可惜，原本可以用CKFinder来完成图片上传的功能，可是呢，CKFinder不支持java,所以我只能自己对CKEditor动一下手。其实原理也很简单，只是把原来可以配置为上传的那个页面换成我们自己开发的上传页面。在这里，使用了Action来实现图片的上传，对不需要Action或对Action不懂的朋友，可以使用Servlet来代替那部分的功能，在此，我不就不多说了。</p><p>&nbsp;</p><p>首先，修改对CKEditor引入的那部分javascript，代码如下:</p><p>&nbsp;</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">   <br />    CKEDITOR.replace(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">content</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,addUploadButton(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">));   <br />        </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> addUploadButton(editor){   <br />           CKEDITOR.on(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">dialogDefinition</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">, </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">( ev ){   <br />               </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> dialogName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ev.data.name;   <br />               </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> dialogDefinition </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ev.data.definition;   <br />               </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> ( dialogName </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">image</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\"> ){   <br />                   </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> infoTab </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> dialogDefinition.getContents( </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">info</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\"> );   <br />                   infoTab.add({   <br />                       type : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">button</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,   <br />                       id : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">upload_image</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,   <br />                       align : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">center</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,   <br />                       label : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">上传图片</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,   <br />                       onClick : </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">( evt ){   <br />                           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> thisDialog </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.getDialog();   <br />                           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> txtUrlObj </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> thisDialog.getContentElement(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">info</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">txtUrl</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">);   <br />                           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> txtUrlId </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> txtUrlObj.getInputElement().$.id;   <br />                           addUploadImage(txtUrlId);   <br />                       }   <br />                   }, </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">browse</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">place front of the browser button   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">               }   <br />           });   <br />       }   <br />        </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> addUploadImage(theURLElementId){   <br />           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> uploadUrl </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">myCkeditor/uploadImage.jsp</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这是我自己的处理文件/图片上传的页面URL   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> imgUrl </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> window.showModalDialog(uploadUrl,</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">dialogWidth:360px;dialogHeight:120px;help:no;status:no</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);   <br />           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> urlObj </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> document.getElementById(theURLElementId);   <br />           urlObj.value </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> imgUrl;   <br />           </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">alert(imgUrl);   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">           urlObj.fireEvent(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">onchange</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">触发url文本框的onchange事件，以便预览图片   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">       }   <br />    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=<span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />CKEDITOR.replace(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">content</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,addUploadButton(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">));<br />        </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> addUploadButton(editor){<br />           CKEDITOR.on(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">dialogDefinition</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">, </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">( ev ){<br />               </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> dialogName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ev.data.name;<br />               </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> dialogDefinition </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ev.data.definition;<br />               </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> ( dialogName </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">image</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\"> ){<br />                   </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> infoTab </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> dialogDefinition.getContents( </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">info</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\"> );<br />                   infoTab.add({<br />                       type : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">button</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,<br />                       id : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">upload_image</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,<br />                       align : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">center</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,<br />                       label : </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">上传图片</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">,<br />                       onClick : </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">( evt ){<br />                           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> thisDialog </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.getDialog();<br />                           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> txtUrlObj </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> thisDialog.getContentElement(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">info</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">txtUrl</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">);<br />                           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> txtUrlId </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> txtUrlObj.getInputElement().$.id;<br />                           addUploadImage(txtUrlId);<br />                       }<br />                   }, </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">browse</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">place front of the browser button</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">               }<br />           });<br />       }<br />        </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> addUploadImage(theURLElementId){<br />           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> uploadUrl </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">myCkeditor/uploadImage.jsp</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这是我自己的处理文件/图片上传的页面URL</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> imgUrl </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> window.showModalDialog(uploadUrl,</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">dialogWidth:360px;dialogHeight:120px;help:no;status:no</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />           </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> urlObj </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> document.getElementById(theURLElementId);<br />           urlObj.value </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> imgUrl;<br />           </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">alert(imgUrl);</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">           urlObj.fireEvent(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">onchange</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">触发url文本框的onchange事件，以便预览图片</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">       }<br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span></span></div></pre></div><p>&nbsp;</p><br /><p>&nbsp;</p><p>&nbsp;</p><p>完成这个以后，我们可以做一个上传页面，如上代码 \"myCkeditor/uploadImage.jsp\"; //这是我自己的处理文件/图片上传的页面URL</p><p>&nbsp;</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"background-color: #ffff00; color: #000000;\">&lt;%</span><span style=\"background-color: #f5f5f5; color: #000000;\">@ page language</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">java</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> import</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">java.util.*</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> pageEncoding</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"bac\nkground-color: #f5f5f5; color: #800000;\">GBK</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #ffff00; color: #000000;\">%&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"background-color: #ffff00; color: #000000;\">&lt;%</span><span style=\"background-color: #f5f5f5; color: #000000;\">@taglib uri</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">/struts-tags</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> prefix</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">s</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #ffff00; color: #000000;\">%&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">上传</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">iframe </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"smz\"</span><span style=\"color: #ff0000;\"> width</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #ff0000;\"> height</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #ff0000;\"> frameborder</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #ff0000;\"> <br />            style</span><span style=\"color: #0000ff;\">=\"display: none\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">iframe</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">font </span><span style=\"color: #ff0000;\">color</span><span style=\"color: #0000ff;\">=\"red\"</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">s:property </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"#request.errorMessage\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">font</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"imageUpload\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #ff0000;\"> <br />            name</span><span style=\"color: #0000ff;\">=\"UploadPhoto\"</span><span style=\"color: #ff0000;\"> target</span><span style=\"color: #0000ff;\">=\"smz\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"button\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"type\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"type\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\".jpg\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">onClick</span><span style=\"color: #0000ff;\">=\"Submit()\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"button\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"pagePath\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"_page_path\"</span><span style=\"color: #ff0000;\"> <br />            value</span><span style=\"color: #0000ff;\">=\"&lt;%String p=(String)session.getAttribute(\"</span><span style=\"color: #ff0000;\">pagePath\");if(p!</span><span style=\"color: #0000ff;\">=null)out.print(p);session.removeAttribute(\"pagePath\"); </span><span style=\"color: #ff0000;\">%</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\" /&gt; <br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text/javascript\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\"> <br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> _page_path </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">).value;   <br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">null</span><span style=\"background-color: #f5f5f5; color: #000000;\">!=</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path </span><span style=\"bac\nkground-color: #f5f5f5; color: #000000;\">&amp;&amp;</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">\"\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">!=</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path){   <br />            window.returnValue</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path;   <br />            window.close();   <br />        }   <br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> Submit()   <br />        {   <br />            document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">type</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">).value</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">file</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">).value;   <br />        }   <br />        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"background-color: #ffff00; color: #000000;\">&lt;%</span><span style=\"background-color: #f5f5f5; color: #000000;\">@ page language</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">java</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> import</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">java.util.*</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> pageEncoding</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">GBK</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #ffff00; color: #000000;\">%&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"background-color: #ffff00; color: #000000;\">&lt;%</span><span style=\"background-color: #f5f5f5; color: #000000;\">@taglib uri</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">/struts-tags</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> prefix</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">s</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #ffff00; color: #000000;\">%&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">上传</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">iframe </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"smz\"</span><span style=\"color: #ff0000;\"> width</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #ff0000;\"> height</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #ff0000;\"> frameborder</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #ff0000;\"><br />    style</span><span style=\"color: #0000ff;\">=\"display: none\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">iframe</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">font </span><span style=\"color: #ff0000;\">color</span><span style=\"color: #0000ff;\">=\"red\"</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">s:property </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"#request.errorMessage\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">font</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"imageUpload\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #ff0000;\"><br />    name</span><span style=\"color: #0000ff;\">=\"UploadPhoto\"</span><span style=\"color: #ff0000;\"> target</span><span style=\"color: #0000ff;\">=\"smz\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"button\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"type\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"type\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\".jpg\"</span>\n<span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">onClick</span><span style=\"color: #0000ff;\">=\"Submit()\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"button\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"pagePath\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"_page_path\"</span><span style=\"color: #ff0000;\"><br />    value</span><span style=\"color: #0000ff;\">=\"&lt;%String p=(String)session.getAttribute(\"</span><span style=\"color: #ff0000;\">pagePath\");if(p!</span><span style=\"color: #0000ff;\">=null)out.print(p);session.removeAttribute(\"pagePath\"); </span><span style=\"color: #ff0000;\">%</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\" /&gt;<br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text/javascript\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\"><br />     </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> _page_path </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">).value;<br />     </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">null</span><span style=\"background-color: #f5f5f5; color: #000000;\">!=</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path </span><span style=\"background-color: #f5f5f5; color: #000000;\">&amp;&amp;</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">\"\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">!=</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path){<br />     window.returnValue</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">_page_path;<br />        window.close();<br />     }<br />   </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> Submit()<br />   {<br />    document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">type</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">).value</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">file</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">).value;<br />   }<br />   </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><br /><p>&nbsp;</p><p>&nbsp;</p><p>再接下来，我们就要做Action,即如上所示的&lt;form action=\"imageUpload\" method=\"post\" enctype=\"multipart/form-data\"</p><p>Html代码&nbsp;<br />name=\"UploadPhoto\" target=\"smz\"&gt;</p><p>&nbsp;&nbsp;&nbsp; name=\"UploadPhoto\" target=\"smz\"&gt;</p><p>，好了我们继续，</p><p><br /><br /></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.burning.EasyCMS.myCkeditor;   <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedInputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedOutputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.File;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileInputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileOutputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.InputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.OutputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Date;   <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequest;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpSession;   <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.struts2.ServletActionContext;   <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> FileUpload {   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> serialVersionUID </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">572146812454l</span><span style=\"color: #000000;\">;   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> BUFFER_SIZE </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">16</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">;   <br /><br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> File fi\nle;   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String type;   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String pagePath;   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getType() {   <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> type;   <br />    }   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setType(String type) {   <br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.type </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> type;   <br />    }   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> File getFile() {   <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> file;   <br />    }   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setFile(File file) {   <br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> file;   <br />    }   <br /><br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> copy(File src, File dst) {   <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {   <br />            InputStream in </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;   <br />            OutputStream out </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;   <br />            </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {   <br />                in </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedInputStream(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileInputStream(src),   <br />                        BUFFER_SIZE);   <br />                out </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedOutputStream(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileOutputStream(dst),   <br />                        BUFFER_SIZE);   <br />                </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] buffer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[BUFFER_SIZE];   <br />                </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> (in.read(buffer) </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">) {   <br />                    out.write(buffer);   <br />                }   <br />            } </span><span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {   <br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> in) {   <br />                    in.close();   <br />                }   <br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> out) {   <br />                    out.close();   <br />                }   <br />            }   <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {   <br />            e.printStackTrace();   <br />        }   <br />    }   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String imageUpload() {   <br />        HttpServletRequest request </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ServletActionContext.getRequest();   <br />        HttpSession session</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">request.getSession();   <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">{   <br />            String fileName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Date().getTime()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> type.substring(type.length() </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">4</span><span style=\"color: #000000;\">, type.length());   <br />            String path </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ServletActionContext.getServletContext().getRealPath(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\\\</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">upload\\\\image\\\\</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;   <br />            File imageFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> fileName);   <br />            pagePath </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">upload\\\\image\\\\</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> fileName;   <br />            session.setAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">pagePath</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, pagePath);   <br />            copy(file, imageFile);   <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">System.out.println(\"file:\"+file.getName());   <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">System.out.println(\"file:\"+file.);   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">imageUploadSuccess</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;   <br />        }   <br />        </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(Exception e )   <br />        {   <br />            request.setAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">errorMessage</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span s\ntyle=\"color: #000000;\">图片上传未成功</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);   <br />            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">imageUploadFail</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;   <br />        }   <br />    }   <br />}<br /></span><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.burning.EasyCMS.myCkeditor;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedInputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedOutputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.File;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileInputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileOutputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.InputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.OutputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Date;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequest;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpSession;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.struts2.ServletActionContext;<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> FileUpload {<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> serialVersionUID </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">572146812454l</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> BUFFER_SIZE </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">16</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> File file;<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String type;<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String pagePath;<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getType() {<br />   </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> type;<br />}<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setType(String type) {<br />   </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.type </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> type;<br />}<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> File getFile() {<br />   </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> file;<br />}<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setFile(File file) {<br />   </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> file;<br />}<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> copy(File src, File dst) {<br />   </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />    InputStream in </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />    OutputStream out </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />    </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />     in </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedInputStream(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileInputStream(src),<br />       BUFFER_SIZE);<br />     out </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedOutputStream(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileOutputStream(dst),<br />       BUFFER_SIZE);<br />     </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] buffer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[BUFFER_SIZE];<br />     </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> (in.read(buffer) </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">) {<br />      out.write(buffer);<br />     }<br />    } </span><span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {<br />     </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> in) {<br />      in.close();<br />     }<br />     </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> out) {<br />      out.close();<br />     }<br />    }<br />   } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />    e.printStackTrace();<br />   }<br />}<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String imageUpload() {<br />   HttpServletRequest request </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ServletActionContext.getRequest();<br />   HttpSession session</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">request.getSession();<br />   </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">{<br />    String fileName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Date().getTime()</span><span style=\"color: #\n000000;\">+</span><span style=\"color: #000000;\"> type.substring(type.length() </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">4</span><span style=\"color: #000000;\">, type.length());<br />    String path </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ServletActionContext.getServletContext().getRealPath(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\\\</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">upload\\\\image\\\\</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />    File imageFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> fileName);<br />    pagePath </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">upload\\\\image\\\\</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> fileName;<br />    session.setAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">pagePath</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, pagePath);<br />    copy(file, imageFile);<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">System.out.println(\"file:\"+file.getName());<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">System.out.println(\"file:\"+file.);</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">imageUploadSuccess</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />   }<br />   </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(Exception e )<br />   {<br />    request.setAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">errorMessage</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">图片上传未成功</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">imageUploadFail</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />   }<br />}<br />} </span></div></pre></div><p>&nbsp;</p><br /><p>&nbsp;</p><p>接下来就是对struts.xml的配置了</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">action </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"imageUpload\"</span><span style=\"color: #ff0000;\"> <br />            class</span><span style=\"color: #0000ff;\">=\"com.burning.EasyCMS.myCkeditor.FileUpload\"</span><span style=\"color: #ff0000;\"> <br />            method</span><span style=\"color: #0000ff;\">=\"imageUpload\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"imageUploadSuccess\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />                /myCkeditor/uploadImage.jsp   <br />            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"imageUploadFail\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />                /myCkeditor/uploadImage.jsp   <br />            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">action</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">action </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"imageUpload\"</span><span style=\"color: #ff0000;\"><br />    class</span><span style=\"color: #0000ff;\">=\"com.burning.EasyCMS.myCkeditor.FileUpload\"</span><span style=\"color: #ff0000;\"><br />    method</span><span style=\"color: #0000ff;\">=\"imageUpload\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"imageUploadSuccess\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />     /myCkeditor/uploadImage.jsp<br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"imageUploadFail\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />     /myCkeditor/uploadImage.jsp<br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">action</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> </span></div></pre></div><p>&nbsp;</p><br /><p>&nbsp;</p><p>好了，，到此，功能就增加完毕了，为了完成这个功能，我也参考了网上很多资料，，</p><p>谢谢大家</p></div></td></tr></tbody></table>\n','2010-10-27 13:58:00','2010-10-27 13:58:00',NULL,NULL,'publish',NULL,'为CKEditor增加上传图片的功能（转载）','/post/2012/7/14/1344938607402.html',1,0),(315,0,'open','<p>和Webwork1.x不同，Webwork2的Action执行完后，其Result对应一个 Result Type，而这个Result Type完全可以根据具体应用或环境自己进行 定义，只需实现com.opensymphony.xwork.Result接口。Result Type使得Action的执行结果表现形式可以灵活多变！下面这会举例说明，这里先看看Webwork2提供的几种Result Type的定义，该定义在webwork-default.xml中，xwork.xml文件包含了该文件，自定义的Result Type可以直接写在 xwork.xml中：</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-types</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">2</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"dispatcher\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.webwork.dispatcher.ServletDispatcherResult\"</span><span style=\"color: #ff0000;\"> default</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">3</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"redirect\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.webwork.dispatcher.ServletRedirectResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">4</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"velocity\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.webwork.dispatcher.VelocityResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">5</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"chain\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.xwork.ActionChainResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">6</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"xslt\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.webwork.views.xslt.XSLTResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">7</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"jasper\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.webwork.views.jasperreports.JasperReportsResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">8</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"freemarker\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.opensymphony.webwork.views.freemarker.FreemarkerResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">9</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result-types</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>其大多都有location和parse两个参数，location指明action执行后接着去哪里，parse指明是否对location进行OGNL表达式解析。</p><p>&nbsp;</p><p>1) dispatcher<br />&nbsp; &nbsp; action执行完后，请求会导向对应的View，Webwork2幕后其实是用RequestDispatcher来处理的，所以原Request/Response对象会接着传递，原Request中的Atrributes不会丢失，这点与下面的redirect是不同的。<br />&nbsp;&nbsp;<br />&nbsp; 2) redirect<br />&nbsp; &nbsp; 对上次的响应将重定向到指定的位置，redirect是重新产生一个新的Request，原来Request保存的东西将不再有效，比如不能通过requet.getAtrribute 取得原来set的对象，也不能取得action的实例，errors，field errors等，因为Action是建立在Single-thread model上的。</p><p>&nbsp;</p><p>&nbsp; 3) chain<br />&nbsp; &nbsp; action链，特殊的View调用方式，一个action执行完接着调用另一个action。有个必须的参数actionName，指明紧接着调用的另一action对象。如：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"success\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"chain\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">2</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"actionName\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">bar</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">3</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"namespace\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">/foo</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">4</span> <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>执行后接着调用下面的action:</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">action </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"bar\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"myPackage.barAction\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">2</span> <span style=\"color: #000000;\">        ...<br /></span><span style=\"color: #008080;\">3</span> <span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">action</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;4) velocity<br />&nbsp;5) freemarker<br />&nbsp;6) jasperreports<br />&nbsp;7) xslt</p><p>&nbsp;</p><p>&nbsp;以上都是用不同技术的产生不同的View。</p><p>&nbsp;</p><p>下面我举个自定义Result Type的示例，假如我有个Action testSendmail，根据处理结果将给指用户发送一份email。自定义一个Result Type，实现Result接口。&nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp; com.mycompany.webwork.example.SendmailResult<br />&nbsp; &nbsp; 有三个必须参数：from ,to, subject,一个可选参数 body。</p><p>&nbsp;在xwork.xml中定义如下：</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-types</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result-type </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sendmail\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.mycompany.webwork.example.SendmailResult\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result-types</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">  action定义：<br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">action </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"testSendmail\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.mycompany.webwork.example.TestSendMailAction\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"success\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"sendmail\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"from\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">root@sina.com</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"to\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">user@sina.com</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"subject\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">hello,webwork!</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"error\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"dispatcher\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"location\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">error.jsp</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">action</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;&nbsp;SendmailResult.java</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.opensymphony.webwork.example;<br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.opensymphony.xwork.ActionInvocation;<br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.opensymphony.xwork.Result;<br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SendmailResult </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Result {<br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String to;<br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String from;<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String subject;< br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String body;<br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> execute(ActionInvocation invocation) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception {<br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">TODO 实现Email发送部分</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">&nbsp;</span><span style=\"color: #000000;\">    System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">sending mail....</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">   To:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> to);<br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">   From:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> from);<br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Subject:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> subject);<br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getBody() {<br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> body;<br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setBody(String body) {<br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.body </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> body;<br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getFrom() {<br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> from;<br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setFrom(String from) {<br /></span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.from </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> from;<br /></span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getSubject() {<br /></span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> subject;<br /></span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">39</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">40</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setSubject(String subject) {<br /></span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.subject </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> subject;<br /></span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">43</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">44</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getTo() {<br /></span><span style=\"color: #008080;\">45</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> to;<br /></span><span style=\"color: #008080;\">46</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">48</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setTo(String to) {<br /></span><span style=\"color: #008080;\">49</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.to </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> to;<br /></span><span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">51</span> <span style=\"color: #000000;\">  }</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><span id=\"articlecontent\" class=\"wenzhang_con\"><span class=\"tpc_content\"><span style=\"font-size: 10pt;\">写个简单的测试Action：<br />&nbsp;</span></span></span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.opensymphony.webwork.example;<br /></span><span style=\"color: #008080;\">2</span> <span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">3</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.opensymphony.xwork.ActionSupport;<br /><span style=\"color: #008080;\">4</span> <span style=\"color: #000000;\"> <br /></span><span style=\"color: #008080;\">5</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TestSendMailAction </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> ActionSupport {<br /></span><span style=\"color: #008080;\">6</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String execute() </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception {<br /></span><span style=\"color: #008080;\">7</span> <span style=\"color: #000000;\">      </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> SUCCESS;<br /></span><span style=\"color: #008080;\">8</span> <span style=\"color: #000000;\">    }<br /></span><span style=\"color: #008080;\">9</span> <span style=\"color: #000000;\">  }</span></span></div></pre></div><p>&nbsp;</p><p>&nbsp; 测试jsp,把它放在webwork-example/下：</p><p>&nbsp; testsendmail.jsp</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"background-color: #ffff00; color: #000000;\">&lt;%</span><span style=\"background-color: #f5f5f5; color: #000000;\">@ taglib prefix</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">ww</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> uri</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #800000;\">webwork</span><span style=\"background-color: #f5f5f5; color: #800000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #ffff00; color: #000000;\">%&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">Test sendmail restul type</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"testSendmail.action\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"Submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"Submit\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p><br />打开http://localhost:8080/webwork-example/testsendmail.jsp，提交页面，控制台输出：</p><p><span style=\"font-size: 10pt;\">sending mail....<br />To:user@sina.com<br />From:root@sina.com<br />Subject:hello,webwork</span>&nbsp;﻿</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-10-27 10:40:00','2010-10-27 10:40:00',NULL,NULL,'publish',NULL,'Webwork2之Action Result Type（转载）','/post/2012/7/14/1344938607490.html',1,0),(316,0,'open','<p>&nbsp;&nbsp; &nbsp;前段时间对Spring的事务配置做了比较深入的研究，在此之间对Spring的事务配置虽说也配置过，但是一直没有一个清楚的认识。通过这次的学习发觉Spring的事务配置只要把思路理清，还是比较好掌握的。</p><p>&nbsp;&nbsp;&nbsp; 总结如下：</p><p>&nbsp;&nbsp;&nbsp; Spring配置文件中关于事务配置总是由三个组成部分，分别是DataSource、TransactionManager和代理机制这三部分，无论哪种配置方式，一般变化的只是代理机制这部分。</p><p>&nbsp;&nbsp;&nbsp; DataSource、TransactionManager这两部分只是会根据数据访问方式有所变化，比如使用Hibernate进行数据访问时，DataSource实际为SessionFactory，TransactionManager的实现为HibernateTransactionManager。</p><p>&nbsp;&nbsp;&nbsp; 具体如下图：</p><p><img src=\"http://pic002.cnblogs.com/images/2010/96953/2010102613572583.jpg\" alt=\"\" /></p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; 根据代理机制的不同，总结了五种Spring事务的配置方式，配置文件如下：</p><p>&nbsp;&nbsp;&nbsp; <strong><span style=\"color: #ff0000; font-size: 12pt;\">第一种方式：每个Bean都有一个代理</span></strong></p><p><strong><span style=\"color: #ff0000; font-size: 12pt;\">　　</span></strong></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><strong><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">beans </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #ff0000;\">    xmlns:xsi</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #ff0000;\">    xmlns:context</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #ff0000;\">    xmlns:aop</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #ff0000;\">    xsi:schemaLocation</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans <br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd<br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context/spring-context-2.5.xsd<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #ff0000;\">            class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configLocation\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"classpath:hibernate.cfg.xml\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configurationClass\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"org.hibernate.cfg.AnnotationConfiguration\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 定义事务管理器（声明式的事务） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.HibernateTransactionManager\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    <br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置DAO </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"userDaoTarget\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.bluesky.spring.dao.UserDaoImpl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\n\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\">    <br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"userDao\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.transaction.interceptor.TransactionProxyFactoryBean\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">           </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置事务管理器 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">           </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">     <br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"target\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"userDaoTarget\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">         </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"proxyInterfaces\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"com.bluesky.spring.dao.GeneratorDao\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置事务属性 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"transactionAttributes\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">props</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">prop </span><span style=\"color: #ff0000;\">key</span><span style=\"color: #0000ff;\">=\"*\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">PROPAGATION_REQUIRED</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">prop</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">props</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">39</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">40</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">beans</span><span style=\"color: #0000ff;\">&gt;</span></strong></div></pre></div><p><strong><br /></strong></p><p><strong><br /></strong></p><p>&nbsp;</p><div><div><div><span></span></div></div></div><p>&nbsp;&nbsp;&nbsp;<span style=\"font-size: 12pt;\"><strong><span style=\"color: #ff0000;\"> 第二种方式：所有Bean共享一个代理基类</span></strong></span></p><div><div><div><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">beans </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #ff0000;\">    xmlns:xsi</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #ff0000;\">    xmlns:context</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #ff0000;\">    xmlns:aop</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #ff0000;\">    xsi:schemaLocation</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans <br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd<br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context/spring-context-2.5.xsd<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    </span><span style=\"color: #00\n00ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #ff0000;\">            class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configLocation\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"classpath:hibernate.cfg.xml\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configurationClass\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"org.hibernate.cfg.AnnotationConfiguration\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 定义事务管理器（声明式的事务） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.HibernateTransactionManager\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    <br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionBase\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #ff0000;\">            class</span><span style=\"color: #0000ff;\">=\"org.springframework.transaction.interceptor.TransactionProxyFactoryBean\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #ff0000;\">            lazy-init</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #ff0000;\"> abstract</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置事务管理器 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置事务属性 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"transactionAttributes\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">props</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">prop </span><span style=\"color: #ff0000;\">key</span><span style=\"color: #0000ff;\">=\"*\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">PROPAGATION_REQUIRED</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">prop</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">props</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">    <br /></span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">   <br /></span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置DAO </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"userDaoTarget\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.bluesky.spring.dao.UserDaoImpl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt\n;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">39</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">40</span> <span style=\"color: #000000;\">    <br /></span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"userDao\"</span><span style=\"color: #ff0000;\"> parent</span><span style=\"color: #0000ff;\">=\"transactionBase\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"target\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"userDaoTarget\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">   <br /></span><span style=\"color: #008080;\">43</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">44</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">beans</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><br /><span style=\"font-size: 12pt;\"><strong><span style=\"color: #ff0000;\"></span></strong></span></div></div></div><p><span style=\"font-size: 12pt;\"><strong><span style=\"color: #ff0000;\">&nbsp;&nbsp;&nbsp; 第三种方式：使用拦截器</span></strong></span></p><div><div><div><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">beans </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #ff0000;\">    xmlns:xsi</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #ff0000;\">    xmlns:context</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #ff0000;\">    xmlns:aop</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #ff0000;\">    xsi:schemaLocation</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans <br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd<br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context/spring-context-2.5.xsd<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #ff0000;\">            class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configLocation\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"classpath:hibernate.cfg.xml\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configurationClass\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"org.hibernate.cfg.AnnotationConfiguration\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 定义事务管理器（声明式的事务） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.HibernateTransactionManager\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean<span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">   <br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionInterceptor\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.transaction.interceptor.TransactionInterceptor\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置事务属性 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"transactionAttributes\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">props</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">prop </span><span style=\"color: #ff0000;\">key</span><span style=\"color: #0000ff;\">=\"*\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">PROPAGATION_REQUIRED</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">prop</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">props</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">      <br /></span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"beanNames\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">list</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">*Dao</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">list</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">39</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">40</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"interceptorNames\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">list</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">transactionInterceptor</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">43</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">list</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">44</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">45</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">46</span> <span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置DAO </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">48</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"userDao\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.bluesky.spring.dao.UserDaoImpl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">49</span> <span style=\"color: #000000;\">        </span><span st\nyle=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">51</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">beans</span><span style=\"color: #0000ff;\">&gt;</span></span></div></pre></div><p>&nbsp;</p><br /><span style=\"font-size: 12pt;\"><strong><span style=\"color: #ff0000;\"></span></strong></span></div></div></div><p><span style=\"font-size: 12pt;\"><strong><span style=\"color: #ff0000;\">&nbsp;&nbsp;&nbsp; 第四种方式：使用tx标签配置的拦截器</span></strong></span></p><div><div><div><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">beans </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #ff0000;\">    xmlns:xsi</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #ff0000;\">    xmlns:context</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #ff0000;\">    xmlns:aop</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #ff0000;\">    xmlns:tx</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/tx\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #ff0000;\">    xsi:schemaLocation</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans <br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context/spring-context-2.5.xsd<br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd<br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">context:annotation-config </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">context:component-scan </span><span style=\"color: #ff0000;\">base-package</span><span style=\"color: #0000ff;\">=\"com.bluesky\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #ff0000;\">            class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configLocation\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"classpath:hibernate.cfg.xml\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configurationClass\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"org.hibernate.cfg.AnnotationConfiguration\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 定义事务管理器（声明式的事务） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.HibernateTransactionManager\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">    < /span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tx:advice </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"txAdvice\"</span><span style=\"color: #ff0000;\"> transaction-manager</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tx:attributes</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tx:method </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"*\"</span><span style=\"color: #ff0000;\"> propagation</span><span style=\"color: #0000ff;\">=\"REQUIRED\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tx:attributes</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tx:advice</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">    <br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">aop:config</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">aop:pointcut </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"interceptorPointCuts\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">34</span> <span style=\"color: #ff0000;\">            expression</span><span style=\"color: #0000ff;\">=\"execution(* com.bluesky.spring.dao.*.*(..))\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">aop:advisor </span><span style=\"color: #ff0000;\">advice-ref</span><span style=\"color: #0000ff;\">=\"txAdvice\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">36</span> <span style=\"color: #ff0000;\">            pointcut-ref</span><span style=\"color: #0000ff;\">=\"interceptorPointCuts\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">        <br /></span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">aop:config</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">      <br /></span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">beans</span><span style=\"color: #0000ff;\">&gt;</span></span></div></pre></div><p>&nbsp;</p><br /><span style=\"color: #ff0000; font-size: 12pt;\"><strong></strong></span></div></div></div><p><span style=\"color: #ff0000; font-size: 12pt;\"><strong>&nbsp;&nbsp;&nbsp; 第五种方式：全注解</strong></span></p><div><div><div><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">beans </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #ff0000;\">    xmlns:xsi</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #ff0000;\">    xmlns:context</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/context\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #ff0000;\">    xmlns:aop</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/aop\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #ff0000;\">    xmlns:tx</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/tx\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #ff0000;\">    xsi:schemaLocation</span><span style=\"color: #0000ff;\">=\"http://www.springframework.org/schema/beans <br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/context/spring-context-2.5.xsd<br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd<br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">context:annotation-config </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">context:component-scan </span><span style=\"color: #ff0000;\">base-package</span><span style=\"color: #0000ff;\">=\"com.bluesky\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tx:annotation-driven </span><span style=\"color: #ff0000;\">transaction-manager</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\">  <br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #ff0000;\">            class</span><spa n style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\"<span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configLocation\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"classpath:hibernate.cfg.xml\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"configurationClass\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"org.hibernate.cfg.AnnotationConfiguration\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 定义事务管理器（声明式的事务） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"transactionManager\"</span><span style=\"color: #ff0000;\"><br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #ff0000;\">        class</span><span style=\"color: #0000ff;\">=\"org.springframework.orm.hibernate3.HibernateTransactionManager\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> ref</span><span style=\"color: #0000ff;\">=\"sessionFactory\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">beans</span><span style=\"color: #0000ff;\">&gt;</span></spa></div></pre></div><p>&nbsp;</p><br /><span></span></div></div></div><p>&nbsp;&nbsp;&nbsp; 此时在DAO上需加上@Transactional注解，如下：</p><div><div><div><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.bluesky.spring.dao;<br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.List;<br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.hibernate.SessionFactory;<br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.beans.factory.annotation.Autowired;<br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.orm.hibernate3.support.HibernateDaoSupport;<br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.stereotype.Component;<br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.bluesky.spring.domain.User;<br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">@Transactional<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">@Component(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">userDao</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)<br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> UserDaoImpl </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> HibernateDaoSupport </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> UserDao {<br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">User</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> listUsers() {<br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.getSession().createQuery(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">from User</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">).list();<br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">    }  <br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">}</span></div></pre></div><p>&nbsp;</p><br /><span></span></div></div></div>\n','2010-10-26 14:01:00','2010-10-26 14:01:00',NULL,NULL,'publish',NULL,'Spring2.5事务配置的5种方法','/post/2012/7/14/1344938607561.html',1,0),(317,0,'open','<p>方法一：   <br />下载两个jar包，一个是Access的JDBC驱动包；另一个是数据库方言包，里面有支持Access方言的类。    <br />下载地址：http://www.hxtt.com/access.zip，http://www.hxtt.com/test/hibernate.zip。    <br />配置如下：</p>  <p>&#160;</p>  <pre class=\"brush: xml; auto-links: false; collapse: false; first-line: 1; gutter: false; html-script: false; light: false; ruler: false; smart-tabs: false; tab-size: 4; toolbar: false;\">&lt;property name=&quot;hibernate.dialect&quot;&gt;      com.hxtt.support.hibernate.HxttAccessDialect &lt;/property&gt;   &lt;property name=&quot;hibernate.connection.url&quot;&gt;      jdbc:access:///f:/mdbfiles/aaa.mdb &lt;/property&gt;   &lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;      com.hxtt.sql.access.AccessDriver &lt;/property&gt;   </pre><p>&#160;</p><p>&#160;</p><p>方法二：  <br />&#160;&#160;&#160;&#160;&#160;&#160; 首先先要在ODBC里配置好我们的Access数据库，控制面板---&gt;管理工具---&gt;ODBC，选择系统DSN选项卡，按添加按钮，选Driver&#160;&#160; do&#160;&#160; Mircosoft&#160;&#160; Access(*.mdb)，完成，在DataSource&#160;&#160; Name中输入你想要的名字比如hibtest，后面将用它来查找数据库。然后指定数据库所在位置就OK了。&#160;&#160; <br />Hibernate描述文件可以是一个properties或xml&#160;&#160; 文件，其中最重要的是定义数据库的连接。我这里列出的是一个XML格式的hibernate.cfg.xml描述文件。</p><pre class=\"brush: xml; auto-links: false; collapse: false; first-line: 1; gutter: false; html-script: false; light: false; ruler: false; smart-tabs: false; tab-size: 4; toolbar: false;\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;       &lt;!DOCTYPE hibernate-configuration          PUBLIC &quot;-//Hibernate/Hibernate Configuration DTD//EN&quot;          &quot;http://hibernate.sourceforge.net/hibernate-configuration-2.0.dtd&quot;&gt;       &lt;hibernate-configuration&gt;            &lt;session-factory name=&quot;java:/hibernate/HibernateFactory&quot;&gt;                 &lt;property name=&quot;show_sql&quot;&gt;true&lt;/property&gt;                 &lt;property name=&quot;connection.driver_class&quot;&gt;                      sun.jdbc.odbc.JdbcOdbcDriver&lt;!-- 这里是Access的JDBCdriverclass名 --&gt;           &lt;/property&gt;                 &lt;property name=&quot;connection.url&quot;&gt;                      jdbc:odbc:hibtest &lt;!-- 这里是你刚才指定的数据库名字 --&gt;           &lt;/property&gt;                 &lt;property name=&quot;connection.username&quot;&gt;sa&lt;/property&gt;                 &lt;property name=&quot;connection.password&quot;&gt;&lt;/property&gt;                 &lt;property name=&quot;dialect&quot;&gt;                      net.sf.hibernate.dialect.MySQLDialect &lt;!-- 这里是Access的Dialect --&gt;           &lt;/property&gt;                 &lt;mapping resource=&quot;Customer.hbm.xml&quot;/&gt; &lt;!-- 指定Customer的映射文件 --&gt;            &lt;/session-factory&gt;          &lt;/hibernate-configuration&gt; </pre><p>&#160;</p><p>方法三：  <br /><font color=\"#ff0000\">1、&lt;!-- SQL方言，Access和SQLserver相近，所以这么写，严格意义会出错，但是尝试简单连接时可以的 --&gt;</font></p><pre class=\"brush: xml; auto-links: false; collapse: false; first-line: 1; gutter: false; html-script: false; light: false; ruler: false; smart-tabs: false; tab-size: 4; toolbar: false;\">&lt;property name=&quot;dialect&quot;&gt; org.hibernate.dialect.SQLServerDialect &lt;/property&gt; </pre><p><font color=\"#ff0000\">2、&lt;!-- JDBC驱动程序 –&gt;</font></p><pre class=\"brush: xml; auto-links: false; collapse: false; first-line: 1; gutter: false; html-script: false; light: false; ruler: false; smart-tabs: false; tab-size: 4; toolbar: false;\">&lt;property name=&quot;connection.driver_class&quot;&gt; sun.jdbc.odbc.JdbcOdbcDriver &lt;/property&gt; </pre><p><font color=\"#ff0000\">3、&lt;!-- JDBC URL ，需要注意的是数据库位置使用绝对路径就可以—&gt;</font></p><pre class=\"brush: xml; auto-links: false; collapse: false; first-line: 1; gutter: false; html-script: false; light: false; ruler: false; smart-tabs: false; tab-size: 4; toolbar: false;\">&lt;property name=&quot;connection.url&quot;&gt; jdbc:odbc:driver={Microsoft Access Driver (*.mdb)};DBQ=E:\\STDateBase\\student.mdb &lt;/property&gt;   </pre>\n','2010-10-25 14:49:00','2010-10-25 14:49:00',NULL,NULL,'publish',NULL,'hibernate链接Access','/post/2012/7/14/1344938607643.html',1,0),(318,0,'open','<p></p>  <pre class=\"brush: shell; auto-links: false; collapse: false; first-line: 1; gutter: false; html-script: false; light: false; ruler: false; smart-tabs: false; tab-size: 4; toolbar: false;\">/*++ BUILD Version: 0001 Increment this if a change has global effects　　Copyright (c) Microsoft Corporation. All rights reserved.　　Module Name:　　windows.h　　Abstract:　　Master include file for Windows applications.　　--*/　　#ifndef _WINDOWS_　　#define _WINDOWS_　　#ifdef __BORLANDC__　　#pragma defineonoption __BOROPT_A -A　　#pragma defineonoption __BOROPT_H -H　　#if (__BORLANDC__ == 0x550) &amp;&amp; defined(__BOROPT_A) &amp;&amp; defined(__BOROPT_H)　　#error The use of both -A (ANSI mode) and -H (pre-compiled headers) at the same time is unsupported.　　#endif　　#endif /* __BORLANDC__ */　　#pragma option push -b -a8 -pc -A- /*P_O_Push*/　　#ifndef WINVER　　#define WINVER 0x0501　　#else　　#if defined(_WIN32_WINNT) &amp;&amp; (WINVER &lt; 0x0400) &amp;&amp; (_WIN32_WINNT &gt; 0x0400)　　#error WINVER setting conflicts with _WIN32_WINNT setting　　#endif　　#endif　　#ifndef _INC_WINDOWS　　#define _INC_WINDOWS　　#if defined (_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1020)　　#pragma once　　#endif　　/* If defined, the following flags inhibit definition　　* of the indicated items.　　*　　* NOGDICAPMASKS - CC_*, LC_*, PC_*, CP_*, TC_*, RC_　　* NOVIRTUALKEYCODES - VK_*　　* NOWINMESSAGES - WM_*, EM_*, LB_*, CB_*　　* NOWINSTYLES - WS_*, CS_*, ES_*, LBS_*, SBS_*, CBS_*　　* NOSYSMETRICS - SM_*　　* NOMENUS - MF_*　　* NOICONS - IDI_*　　* NOKEYSTATES - MK_*　　* NOSYSCOMMANDS - SC_*　　* NORASTEROPS - Binary and Tertiary raster ops　　* NOSHOWWINDOW - SW_*　　* OEMRESOURCE - OEM Resource values　　* NOATOM - Atom Manager routines　　* NOCLIPBOARD - Clipboard routines　　* NOCOLOR - Screen colors　　* NOCTLMGR - Control and Dialog routines　　* NODRAWTEXT - DrawText() and DT_*　　* NOGDI - All GDI defines and routines　　* NOKERNEL - All KERNEL defines and routines　　* NOUSER - All USER defines and routines　　* NONLS - All NLS defines and routines　　* NOMB - MB_* and MessageBox()　　* NOMEMMGR - GMEM_*, LMEM_*, GHND, LHND, associated routines　　* NOMETAFILE - typedef METAFILEPICT　　* NOMINMAX - Macros min(a,b) and max(a,b)　　* NOMSG - typedef MSG and associated routines　　* NOOPENFILE - OpenFile(), OemToAnsi, AnsiToOem, and OF_*　　* NOSCROLL - SB_* and scrolling routines　　* NOSERVICE - All Service Controller routines, SERVICE_ equates, etc.　　* NOSOUND - Sound driver routines　　* NOTEXTMETRIC - typedef TEXTMETRIC and associated routines　　* NOWH - SetWindowsHook and WH_*　　* NOWINOFFSETS - GWL_*, GCL_*, associated routines　　* NOCOMM - COMM driver routines　　* NOKANJI - Kanji support stuff.　　* NOHELP - Help engine interface.　　* NOPROFILER - Profiler interface.　　* NODEFERWINDOWPOS - DeferWindowPos routines　　* NOMCX - Modem Configuration Extensions　　*/　　#if defined(RC_INVOKED) &amp;&amp; !defined(NOWINRES)　　#include &lt;winresrc.h&gt;　　#else　　#if defined(RC_INVOKED)　　/* Turn off a bunch of stuff to ensure that RC files compile OK. */　　#define NOATOM　　#define NOGDI　　#define NOGDICAPMASKS　　#define NOMETAFILE　　#define NOMINMAX　　#define NOMSG　　#define NOOPENFILE　　#define NORASTEROPS　　#define NOSCROLL　　#define NOSOUND　　#define NOSYSMETRICS　　#define NOTEXTMETRIC　　#define NOWH　　#define NOCOMM　　#define NOKANJI　　#define NOCRYPT　　#define NOMCX　　#endif　　#if defined(__BORLANDC__) &amp;&amp; defined(__cplusplus)　　# include &lt;mem.h&gt; // Needed for protos of memxxx() routines　　#endif　　#if defined(__BORLANDC__)　　# ifndef _WIN32_WINNT　　# define _WIN32_WINNT 0x0500 /* If not set, assume NT 5.00 */　　# endif　　# if defined(__cplusplus)　　# define NOMINMAX /* for WINDEF.H */　　# else　　# define NONAMELESSUNION /* for OAIDL.H, OBJIDL.H,... */　　# endif　　# if defined(_UNICODE)　　# define UNICODE　　# endif　　#endif　　#if !defined(_68K_) &amp;&amp; !defined(_MPPC_) &amp;&amp; !defined(_X86_) &amp;&amp; !defined(_IA64_) &amp;&amp; !defined(_AMD64_) &amp;&amp; defined(_M_IX86)　　#define _X86_　　#endif　　#if !defined(_68K_) &amp;&amp; !defined(_MPPC_) &amp;&amp; !defined(_X86_) &amp;&amp; !defined(_IA64_) &amp;&amp; !defined(_AMD64_) &amp;&amp; defined(_M_AMD64)　　#define _AMD64_　　#endif　　#if !defined(_68K_) &amp;&amp; !defined(_MPPC_) &amp;&amp; !defined(_X86_) &amp;&amp; !defined(_IA64_) &amp;&amp; !defined(_AMD64_) &amp;&amp; defined(_M_M68K)　　#define _68K_　　#endif　　#if !defined(_68K_) &amp;&amp; !defined(_MPPC_) &amp;&amp; !defined(_X86_) &amp;&amp; !defined(_IA64_) &amp;&amp; !defined(_AMD64_) &amp;&amp; defined(_M_MPPC)　　#define _MPPC_　　#endif　　#if !defined(_68K_) &amp;&amp; !defined(_MPPC_) &amp;&amp; !defined(_X86_) &amp;&amp; !defined(_M_IX86) &amp;&amp; !defined(_AMD64_) &amp;&amp; defined(_M_IA64)　　#if !defined(_IA64_)　　#define _IA64_　　#endif // !_IA64_　　#endif　　#ifndef _MAC　　#if defined(_68K_) || defined(_MPPC_)　　#define _MAC　　#endif　　#endif　　#if defined (_MSC_VER)　　#if ( _MSC_VER &gt;= 800 )　　#ifndef __cplusplus　　#pragma warning(disable:4116) // TYPE_ALIGNMENT generates this - move it　　// outside the warning push/pop scope.　　#endif　　#endif　　#endif　　#ifndef RC_INVOKED　　#if ( _MSC_VER &gt;= 800 ) || defined(__BORLANDC__)　　#pragma warning(disable:4514)　　#ifndef __WINDOWS_DONT_DISABLE_PRAGMA_PACK_WARNING__　　#pragma warning(disable:4103)　　#endif　　#if _MSC_VER &gt;= 1200　　#pragma warning(push)　　#endif　　#pragma warning(disable:4001)　　#pragma warning(disable:4201)　　#pragma warning(disable:4214)　　#endif　　#include &lt;excpt.h&gt;　　#include &lt;stdarg.h&gt;　　#endif /* RC_INVOKED */　　#include &lt;windef.h&gt;　　#include &lt;winbase.h&gt;　　#include &lt;wingdi.h&gt;　　#include &lt;winuser.h&gt;　　#if !defined(_MAC) || defined(_WIN32NLS)　　#include &lt;winnls.h&gt;　　#endif　　#ifndef _MAC　　#include &lt;wincon.h&gt;　　#include &lt;winver.h&gt;　　#endif　　#if !defined(_MAC) || defined(_WIN32REG)　　#include &lt;winreg.h&gt;　　#endif　　#ifndef _MAC　　#include &lt;winnetwk.h&gt;　　#endif　　#ifndef WIN32_LEAN_AND_MEAN　　#include &lt;cderr.h&gt;　　#include &lt;dde.h&gt;　　#include &lt;ddeml.h&gt;　　#include &lt;dlgs.h&gt;　　#ifndef _MAC　　#include &lt;lzexpand.h&gt;　　#include &lt;mmsystem.h&gt;　　#include &lt;nb30.h&gt;　　#include &lt;rpc.h&gt;　　#endif　　#include &lt;shellapi.h&gt;　　#ifndef _MAC　　#include &lt;winperf.h&gt;　　#include &lt;winsock.h&gt;　　#endif　　#ifndef NOCRYPT　　#include &lt;wincrypt.h&gt;　　#include &lt;winefs.h&gt;　　#include &lt;winscard.h&gt;　　#endif　　#ifndef NOGDI　　#ifndef _MAC　　#include &lt;winspool.h&gt;　　#ifdef INC_OLE1　　#include &lt;ole.h&gt;　　#else　　#include &lt;ole2.h&gt;　　#endif /* !INC_OLE1 */　　#endif /* !MAC */　　#include &lt;commdlg.h&gt;　　#endif /* !NOGDI */　　#endif /* WIN32_LEAN_AND_MEAN */　　#include &lt;stralign.h&gt;　　#ifdef _MAC　　#include &lt;winwlm.h&gt;　　#endif　　#ifdef INC_OLE2　　#include &lt;ole2.h&gt;　　#endif /* INC_OLE2 */　　#ifndef _MAC　　#ifndef NOSERVICE　　#include &lt;winsvc.h&gt;　　#endif　　#if(WINVER &gt;= 0x0400)　　#ifndef NOMCX　　#include &lt;mcx.h&gt;　　#endif /* NOMCX */　　#ifndef NOIME　　#include &lt;imm.h&gt;　　#endif　　#endif /* WINVER &gt;= 0x0400 */　　#endif　　#ifndef RC_INVOKED　　#if ( _MSC_VER &gt;= 800 ) || defined(__BORLANDC__)　　#if _MSC_VER &gt;= 1200　　#pragma warning(pop)　　#else　　#pragma warning(default:4001)　　#pragma warning(default:4201)　　#pragma warning(default:4214)　　/* Leave 4514 disabled. It\'s an unneeded warning anyway. */　　#endif　　#en\ndif　　#endif /* RC_INVOKED */　　#endif /* RC_INVOKED */　　#endif /* _INC_WINDOWS */　　#pragma option pop /*P_O_Pop*/　　#endif /* _WINDOWS_ */</pre>\n','2010-10-22 16:47:00','2010-10-22 16:47:00',NULL,NULL,'publish',NULL,'Windows.h','/post/2012/7/14/1344938607714.html',1,0),(319,0,'open','<p><font face=\"微软雅黑\">我这边需求场景是每个审批环节为下个审批节点选择某个角色后，下个节点的人员才能确定。jbpm原有的组用户这3张权限控制满足这种情况。</font></p>  <p><font face=\"微软雅黑\">我分享一下现在的应急做法，（还是希望有别的更好的解决方案，大家分享出来共同学习）</font></p>  <p><font face=\"微软雅黑\">思路：</font></p>  <p><font face=\"微软雅黑\">1、我在系统中定义了一张流程权限控制记录表。</font></p>  <p><font face=\"微软雅黑\">字段的话比如是：流程定义key，流程实例，taskname，初始任务接受人（一个非真实人名），角色ID，最终任务领用人。大概就这些字段。</font></p>  <p><font face=\"微软雅黑\">2、流程图还是用&lt;task assignee=&quot;#{groupleader}&quot;这种方式，不用组方式（放弃那3张表）</font></p>  <p><font face=\"微软雅黑\">3、申请人提交单子时，往这张表记录一条数据，“初始任务接受人”字段可以先存个groupleader字符串。</font></p>  <p><font face=\"微软雅黑\">4、当前用户查看任务列表时，用当前用户的角色ID去查找“初始任务接受人”字段，能找到“初始任务接受人”字段的就可以findPersonalTasks()，查询任务列表了。（权限也差不多在这控制了）</font></p>  <p><font face=\"微软雅黑\">5、打开查看一个任务提交审批意见时，先要用当前用户userId把jbpm数据库中存的“初始任务接受人”替换掉。用户组的方式jbpm有个任务领用接口takeTask()，但这里不能这么用。好在jbpm还有个接口可以投机取巧一下，就是转交任务接口assignTask()，可以将之前的“初始任务接受人（一个非真实人名）”替换掉了，将任务转交给自己。接下来在完成任务。</font></p>  <p><font face=\"微软雅黑\">6、当然任务竞争领用之类的也可以在系统中控制了。</font></p>  <p><font face=\"微软雅黑\">这样的话改造量最小，而且还在继续使用系统中人员、部门、角色、权限等现有数据。</font></p>  <p><font face=\"微软雅黑\">有时候往往不能在流程发布时就能确定下个节点的审批人员，都要动态地。</font></p>  <p><font face=\"微软雅黑\">这方式可行的最大一个点是转交任务接口assignTask()，要不是知道这个接口也不会这么设计了。</font></p>  <p><font face=\"微软雅黑\">不过这种方案还是不够好，只是应急解决了，论坛中都在说IdentitySession，这个我不是很了解，现在还不能触类旁通。</font></p>  <p><font face=\"微软雅黑\">希望大家对这个解决方案提出些质疑或漏洞。</font></p>  <p><font face=\"微软雅黑\">希望大家有好的解决方案实例分享。</font></p>  <p><font face=\"微软雅黑\"></font>&#160;</p>  <p><font face=\"微软雅黑\">原文地址： <a href=\"http://jbpm.group.javaeye.com/group/topic/23056\">http://jbpm.group.javaeye.com/group/topic/23056</a></font></p>\n','2010-10-22 13:40:00','2010-10-22 13:40:00',NULL,NULL,'publish',NULL,'jbpm 关于动态用户组动态分配，及流程权限解决方案 思路分享','/post/2012/7/14/1344938607779.html',1,0),(320,0,'open','<p>在前面的2篇文章Android读写XML（上）、Android读写XML（中）中想必大家对XML文件读取的方法已经比较熟悉了，在这里我们就不多说了，直接说明如何将信息写成XML文件，首先介绍Andoid SDK中的相关类。</p><table border=\"1\" cellspacing=\"0\" cellpadding=\"2\" width=\"836\"><tbody><tr><td width=\"200\" valign=\"top\"><strong>类</strong></td><td width=\"634\" valign=\"top\">说明</td></tr><tr><td width=\"200\" valign=\"top\"><strong>XmlSerializer</strong></td><td width=\"634\" valign=\"top\">Define an interface to serialziation of XML Infoset.定义一个接口来实现XML信息的串行化。</td></tr></tbody></table><p>&nbsp;</p><h5>什么是串行化？</h5><p>对象的串型化，也有叫做对象的序列话，并不只是简单的把对象保存在存储器上，它可以使我们在流中传输对象，使对象变的可以像基本数据一样传递。</p><p>下面，我们就直接来看个具体的例子来说明，如何使用XmlSerializer。&nbsp;</p><p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String writeXml(){ <br />XmlSerializer serializer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Xml.newSerializer(); <br />StringWriter writer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringWriter(); <br /></span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">{ <br />serializer.setOutput(writer);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;?xml version=&rdquo;1.0&Prime; encoding=&rdquo;UTF-8&Prime; standalone=&rdquo;yes&rdquo;?&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.startDocument(&rdquo;UTF</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">8</span><span style=\"color: #000000;\">&Prime;,</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;blog number=&rdquo;1&Prime;&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.startTag(&rdquo;\\&rdquo;,&rdquo;blog&rdquo;); <br />serializer.attribute(&rdquo;\\&rdquo;,&rdquo;number&rdquo;,String.valueOf(</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">));<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">&lt;message data=&rdquo;2009-09-23&Prime;&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.startTag(&rdquo;\\&rdquo;,&rdquo;message&rdquo;); <br />serializer.attribute(&rdquo;\\&rdquo;,&rdquo;date&rdquo;,&rdquo;</span><span style=\"color: #000000;\">2009</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">09</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">23</span><span style=\"color: #000000;\">&Prime;);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;title&gt;Android XML&lt;/title&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.startTag(&rdquo;\\&rdquo;,&rdquo;title&rdquo;); <br />serializer.text(&rdquo;Android XML&rdquo;); <br />serializer.endTag(&rdquo;\\&rdquo;,&rdquo;title&rdquo;);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;url&gt;</span><span style=\"color: #008000; text-decoration: underline;\">http://www.moandroid.com/?p=508</span><span style=\"color: #008000;\">&lt;/url&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.startTag(&rdquo;\\&rdquo;,&rdquo;url&rdquo;); <br />serializer.text(&rdquo;http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.moandroid.com/?p=508&Prime;); </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.endTag(&rdquo;\\&rdquo;,&rdquo;url&rdquo;);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">&lt;/message&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.endTag(&rdquo;\\&rdquo;,&rdquo;message&rdquo;); <br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;/blog&gt; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">serializer.endTag(&rdquo;\\&rdquo;,&rdquo;blog&rdquo;); <br />serializer.endDocument(); <br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> writer.toString(); <br />} <br /></span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(Exception e) <br />{ <br /></span><span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> RuntimeException(e); <br />} <br />}</span></div></pre></div></p><p>&nbsp;</p><p>&nbsp;</p><p>我们先将writeXml()产生的<strong>字符串输出</strong>，看是否是按照我们设计的那样，使用Log.v(&ldquo;XML&rdquo;, writeXml())输出调试信息。运行程序，在DDMS中查看程序输出的调试信息，如何查看调试信息请阅读<a href=\"http://www.son1c.net/?p=638\">Android DDMS如何使用？</a>&nbsp;<br />输出的字符串如下：&nbsp;</p><p>&nbsp;</p><p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=&rdquo;1.0&Prime; encoding=&rdquo;UTF-8&Prime; standalone=&rdquo;yes&rdquo;</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">blog </span><span style=\"color: #ff0000;\">number</span><span style=\"color: #0000ff;\">=&rdquo;1&Prime;&gt; <br /></span><span style=\"color: #ff0000;\">&lt;message data</span><span style=\"color: #0000ff;\">=&rdquo;2009-09-23&Prime;&gt; <br /></span><span style=\"color: #ff0000;\">&lt;title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">Android XML</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">url</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">http://www.moandroid.com/?p=508</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">url</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">message</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">blog</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> </span></div></pre></div></p><p>&nbsp;</p><p>&nbsp;</p><p>看了运行的结果，对于上面代码的功能，估计大家就明白了，不再这里详细解析。&nbsp;<br />下面，进一步<strong>将字符串写入文件</strong>，代码如下：&nbsp;</p><p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> Write(String path,String txt) <br />{ <br /></span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> <br />{ <br />OutputStream os </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> openFileOutput(path,MODE_PRIVATE\n); <br />OutputStreamWriter osw</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> OutputStreamWriter(os); <br />osw.write(txt); <br />osw.close(); <br />os.close(); <br />} <br /></span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(FileNotFoundException e) <br />{ <br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">; <br />} <br /></span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(IOException e) <br />{ <br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">; <br />} <br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">; <br />} <br />}</span></div></pre></div></p><p>&nbsp;</p><p>&nbsp;</p><p>在onCreate()中增加如下代码：Write(&rdquo;blog.xml&rdquo;,writeXml())。运行程序，打开DDMS查看写入的XML文档，文件存放在data/data/{package}/files文件夹下，如下：</p><p><a href=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/69c76fe84b1c_C9B5/BlogXML.jpg\"><img title=\"BlogXML\" src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/69c76fe84b1c_C9B5/BlogXML_thumb.jpg\" border=\"0\" alt=\"BlogXML\" width=\"360\" height=\"473\" /></a></p><p>还可以将这个文件从File Explorer中导出到电脑中查看XML文档的具体内容，与输出的字符串完全一样。</p><h5>总结说明</h5><p>XML文件的写入就完成了，想必大家对串行化也有应该有一些了解，具体的需要引用那些package请大家到Android SDK去仔细查看吧。</p>\n','2010-10-20 14:34:00','2010-10-20 14:34:00',NULL,NULL,'publish',NULL,'Android读写XML（下）','/post/2012/7/14/1344938607835.html',1,0),(321,0,'open','<p>在Android读写XML（上）中，详细介绍了使用 DOM方法读取XML文档，由于使用DOM方法需要将整个XML文档加载内存中，对系统资源占用比较多，这对内存比较紧张的Android系统来说，使用DOM方法读取XML文档会有很大的限制。 使用SAX方法读取XML，对内存资源的占用的比较少，因此在嵌入式设备中极力推荐使用，Android也不例外，本篇幅详细说明Android中如何使用SAX读取XML文档。</p><p>SAX采用基于事件驱动的处理方式，它将XML文档转换成一系列的事件，由单独的事件处理器来决定如何处理。为了了解如何使用SAX API处理XML文档，这里介绍一下SAX所使用的基于事件驱动的处理模式。</p><h5>基于事件驱动的处理模式</h5><p>基于事件的处理模式主要围绕着<strong>事件源</strong>以及<strong>事件处理器</strong>来工作的。一个可以产生事件的对象被称为<strong>事件源</strong>，而可以对事件产生响应的对象就被叫做<strong>事件处理器</strong>。事件源与事件处理对象是通过在事件源中的事件注册方法连接的。当事件源产生时间后，调用事件处理器相应的方法，一个事件获得处理。当在事件源调用事件处理器中特定方法的时候，会传递个事件标志以及其响应事件的状态信息，这样事件处理器才能够根据事件信息来决定自己的行为。</p><p>在SAX接口中，事件源是org.xml.sax包中的XMLReader，它通过parser()方法来开始解析XML文档，并根据文档的内容产生事件。而事件处理器则是org.xml.sax包中的ContentHander、DTDHander、ErrorHandler，以及EntityResolver这4个接口，它们分别处理事件源在解析XML文档过程中产生的不同种类的事件。而事件源XMLReader与这4个事件处理器的连接是通过在XMLReader中的相应事件处理器注册方法setXXXX()来完成的，详细介绍请见下表：</p><p><a href=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/AndroidXML_C910/SAXHanlder.jpg\"><img title=\"SAXHanlder\" src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/AndroidXML_C910/SAXHanlder_thumb.jpg\" border=\"0\" alt=\"SAXHanlder\" width=\"682\" height=\"298\" /></a></p><p>以上的4个事件源处理器接口，在开发中没有必要直接从这4个接口直接继承，因为org.xml.sax.helper包为我们提供了类DefaultHandler，其继承了这4个个接口，在实际开发中直接从DefaultHandler继承并实现相关函数就可以了。在这4个接口中，最重要的是ContentHanlder接口，下面就其中的方法加以说明，如下：</p><p><a href=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/AndroidXML_C910/ContentHanlder.jpg\"><img title=\"ContentHanlder\" src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/AndroidXML_C910/ContentHanlder_thumb.jpg\" border=\"0\" alt=\"ContentHanlder\" width=\"660\" height=\"463\" /></a></p><p>以上就是解析一个XML文档，事件处理的过程。这里我们对org.xml.sax.XMLReader中的方法做下补充说明：除了前面介绍的一系列事件处理器注册方法set/getXXXX()外，还有个重要的函数：parse(InputSource input)&ndash;Parse an XML document，开始解析一个XML文档。</p><h5>按照应用程序开发的流程，简要介绍下SAX的使用方法</h5><ol><li>首先，编写了解XML文档的结构，按照XML文档的结构，编写具体的数据结构，类似于：XXXXList，XXXXItem，最好与XML的文档保持一致。</li><li>其次，开始实现事件处理对象，Android SDK为我们提供了DefaultHandler，其继承了ContentHandler 、DTDHandler、 EntityResolver、 ErrorHandler的所有接口。我们在DefaultHandler的基础上，按照需求实现ContentHanlder的所有接口，这里需要注意2个方面的问题：<ol><li>事件处理的顺序，处理时间的位置：一般在startDocument（）初始化工作，在endDocument()中收尾的处理工作；startElement（）&mdash;characters（）&mdash;endDocument（）是一个XML节点读取的过程，startElement（）用来初始判断，characters（）获取节点的字符数据，endDocument（）将数据写入数据结构。</li><li>异常SAXException的处理；</li></ol></li><li>然后，XML实体解析，过程如下：&nbsp;<br />SAXParserFactory factory = SAXParserFactory.newInstance();&nbsp;<br />SAXParser parser = factory.newSAXParser();&nbsp;<br />XMLReader xmlreader = parser.getXMLReader();&nbsp;<br />URL rrl = new URL(urlstring);&nbsp;<br />InputSource is = new InputSource(url.openStream());&nbsp;<br />Xmlreader.setContentHanlder(XXXX);&nbsp;<br />Xmlreader.parse(is);</li><li>最后，在Activity中显示数据，一般先将XML中读取的数据，选择合适的Adaper对数据进行封装，然后使用ListView控件来显示数据。</li></ol><p>以上就是SAX读取XML的过程，并显示出最终的数据。以上需要注意的是SAXParserFactory ，SAXParser类来自 javax.xml.parsers包中。</p><h5>总结说明</h5><p>SAX读取XML文档的方法，占用内存比较少，但是开发流程相比DOM就复杂多了，具体采用哪种方法比较合适，大家可以在开发的过程中来深刻体会之间的差别。</p>\n','2010-10-20 14:33:00','2010-10-20 14:33:00',NULL,NULL,'publish',NULL,'Android读写XML（中）','/post/2012/7/14/1344938607971.html',1,0),(322,0,'open','<div id=\"wrap\"><div id=\"wrap-inner\"><div id=\"content\"><div id=\"content-inner\"><div id=\"maincol\"><div id=\"post-1071\" class=\"post\"><div class=\"entry\"><p>XML 经常用作 Internet 上的一种数据格式，其文件格式想必大家都比较清楚，在这里我结合Android平台，来说明Android SDK提供的读写XML的package。</p><p>首先介绍下Android SDK与Java SDK在读写XML文件方面，数据包之间的关系。Android 平台最大的一个优势在于它利用了 Java 编程语言。Android SDK 并未向标准 Java Runtime Environment (JRE) 提供一切可用功能，但它支持其中很大一部分功能。Java 平台支持通过许多不同的方式来使用 XML，并且大多数与 XML 相关的 Java API 在 Android 上得到了完全支持。举例来说，Java 的 Simple API for XML (SAX) 和 Document Object Model (DOM) 在 Android 上都是可用的，这些 API 多年以来一直都是 Java 技术的一部分，较新的 Streaming API for XML (StAX) 在 Android 中并不可用。但是， Android 提供了一个功能相当的库。最后，Java XML Binding API 在 Android 中也不可用，这个 API 已确定可以在 Android 中实现。Android SDK提供了如下package来支持XML的读写：</p><table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td width=\"149\" valign=\"top\"><strong>包</strong></td><td width=\"511\" valign=\"top\">功能介绍</td></tr><tr><td width=\"149\" valign=\"top\"><strong><a href=\"http://code.google.com/android/reference/javax/xml/package-summary.html\">javax.xml</a></strong></td><td width=\"511\" valign=\"top\">根据 XML 规范定义核心 XML 常量和功能。</td></tr><tr><td width=\"149\" valign=\"top\"><strong><a href=\"http://code.google.com/android/reference/javax/xml/parsers/package-summary.html\">javax.xml.parsers</a></strong></td><td width=\"511\" valign=\"top\">提供DOM和SAX方法解析XML文档</td></tr><tr><td width=\"149\" valign=\"top\"><strong><a href=\"http://code.google.com/android/reference/org/w3c/dom/package-summary.html\">org.w3c.dom</a></strong></td><td width=\"511\" valign=\"top\">W3C提供的使用DOM方法读取XML</td></tr><tr><td width=\"149\" valign=\"top\"><strong><a href=\"http://code.google.com/android/reference/org/xml/sax/package-summary.html\">org.xml.sax</a></strong></td><td width=\"511\" valign=\"top\">提供核心SAX APIs</td></tr><tr><td width=\"149\" valign=\"top\"><strong><a href=\"http://code.google.com/android/reference/org/xmlpull/v1/package-summary.html\">org.xmlpull.v1</a></strong></td><td width=\"511\" valign=\"top\">.</td></tr></tbody></table><p>额外补充说明下，在<a href=\"http://code.google.com/android/reference/android/util/package-summary.html\">android.util</a>数据包中也提供了一个类Xml，不过这个类就是把以上package简单封装了下。</p><p>读取XML主要有2种方法：DOM与SAX(Simple API for XML)，在这里对这2种方法分别加以说明。</p><p>DOM(文档对象模型)，为XML文档的解析定义了一组接口，解析器读入整个文档，然后构造一个驻留内存的树结构，然后代码就可以使用DOM接口来操组整个树结构，其他点如下：</p><ul><li>优点：整个文档树都在内存当中，便于操作；支持删除、修改、重新排列等多功能。</li><li>缺点：将整个文档调入内存（经常包含大量无用的节点），浪费时间和空间。</li><li>使用场合：一旦解析了文档还需要多次访问这些数据，而且资源比较充足（如内存、CPU等）。</li></ul><p>为了解决DOM解析XML引起的这些问题，出现了SAX。SAX解析XML文档为事件驱动，详细说明请阅读<a title=\" Android读写XML（中）&ndash;SAX\" href=\"http://www.moandroid.com/?p=821\" target=\"_blank\">Android读写XML（中）-SAX</a>。当解析器发现元素开始、元素结束，文本、文档的开始或者结束时，发送事件，在程序中编写响应这些事件的代码，其特点如下：</p><ul><li>优点：不用事先调入整个文档，占用资源少。尤其在嵌入式环境中，极力推荐采用SAX进行解析XML文档。</li><li>缺点：不像DOM一样将文档长期驻留在内存，数据不是持久的，事件过后，如没有保存数据，那么数据就会丢失。</li><li>使用场合：机器性能有限，尤其是在嵌入式环境，如Android，极力推荐采用SAX进行解析XML文档。</li></ul><p>大多数时间，使用 SAX 是比较安全的，并且 Android 提供了一种传统的 SAX 使用方法，以及一个便捷的 SAX 包装器。如果XML文档比较小，那么 DOM 可能是一种比较简单的方法。如果XML文档比较大，但只需要文档的一部分，则 XML Pull 解析器可能是更为有效的方法。最后对于编写 XML，Pull 解析器包也提供了一种便捷的方法，详细说明请阅读<a title=\" Android读写XML（下）&mdash;&mdash;数据写入XML文档\" href=\"http://www.moandroid.com/?p=868\" target=\"_blank\">Android读写XML（下）--数据写入XML文档</a>。因此，无论我们的 XML 需求如何，Android 都能在一定程度上满足我们的需求。</p><p>下面我们详细介绍采用DOM的方法，读取XML文档的思路，这基本上与XML的结构是完全一样的。首先加载XML文档（Document），然后获取文档的根结点(Element)，然后获取根结点中所有子节点的列表（NodeList），然后使用再获取子节点列表中的需要读取的结点。根据以上思路，简要写个读取XML文件的例子如下：</p><p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.xml.parsers.DocumentBuilder;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.xml.parsers.DocumentBuilderFactory;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.xml.parsers.ParserConfigurationException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.w3c.dom.Document;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.w3c.dom.Element;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.w3c.dom.NodeList;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.xml.sax.SAXException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.content.Context;<br /></span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> ReadXML()<br />{<br />DocumentBuilderFactory docBuilderFactory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />DocumentBuilder docBuilder </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />Document doc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />docBuilderFactory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> DocumentBuilderFactory.newInstance();<br />docBuilder </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> docBuilderFactory.newDocumentBuilder();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">xml file 放到 assets目录中的</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">doc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> docBuilder.parse(context.getResources().getAssets().open(&rdquo;weather.xml&rdquo;));<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">root element</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">Element root </span><span style=\"c\nolor: #000000;\">=</span><span style=\"color: #000000;\"> doc.getDocumentElement();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Do something here<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">get a NodeList by tagname</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">NodeList nodeList </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> root.getElementsByTagName(&rdquo;tag&rdquo;);<br /></span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;i</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> nodeList.getLength();i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />{<br />Node nd </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> nodeList.item(i);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Read Node</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">}<br />} </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {<br />} </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (SAXException e) {<br />} </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (ParserConfigurationException e) {<br />} </span><span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {<br />doc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />docBuilder </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />docBuilderFactory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />}<br />}</span></div></pre></div></p><p>&nbsp;</p><p>&nbsp;</p><p>以上代码比较简单，就不在此详细解析了。</p><p>采用DOM读取XML文件，需要加载整个XML文件，在XML文件比较大的情况下，会导致Android设备内存紧张，为了避免这个问题，也可以采用SAX的方法读取XML文件，不过SAX对结点的排序、增加结点等方面的操作相比DOM就有些复杂了。根据XML文件大小、数据处理的需求，选择合适的读取的方法。</p><p>对于XML的写入，一方面可以采用前面介绍的这些package；另外一方面也可以按照XML的标准，将数据以字符串的形式直接写入文件，这也是种很不错的方法。在这里推荐IBM开源社区中一篇比较好的文章&nbsp;<a href=\"http://www.ibm.com/developerworks/cn/xml/x-android/\">Android 上使用 XML</a>，有兴趣的可以去深入学习下。</p><h3>总结说明</h3><p>XML作为一种简单的文件格式，作为网络上数据交换的基础，而且得到了大部分数据库的支持（直接将XML文件插入数据库），XML文件的读写只是基础，相信在以后的网络、数据库的开发中会经常使用。</p></div></div></div></div></div></div></div>\n','2010-10-20 14:32:00','2010-10-20 14:32:00',NULL,NULL,'publish',NULL,'Android读写XML（上）','/post/2012/7/14/1344938608026.html',1,0),(323,0,'open','<p><span style=\"color: #ff0000; font-size: 14pt;\">1.Java活动</span></p><p>　　JDPL配置</p><div class=\"cnblogs_code\"><pre><div><span style=\"color: #0000ff;\">&lt;!--</span></div><div><span style=\"color: #0000ff;\">　　Class:指定要执行的类<br /></span></div><div><span style=\"color: #0000ff;\">　　method:指定要执行的方法名称<br /></span></div><div><span style=\"color: #0000ff;\">　　var:是该方法的返回值,方法执行之后值就保存在该变量中<br /></span></div><div><span style=\"color: #0000ff;\">--&gt;</span></div><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">java </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"java1\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"359,189,92,52\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.quanxun.aicrm.workflow.Java\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"add\"</span><span style=\"color: #ff0000;\"> var</span><span style=\"color: #0000ff;\">=\"ret\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">int </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"1\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">arg</span><span style=\"color: #0000ff;\">&gt;&lt;!-- 参数 --&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">int </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"2\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">arg</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"to 班长审批\"</span><span style=\"color: #ff0000;\"> to</span><span style=\"color: #0000ff;\">=\"班长审批\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"-80,-21\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">java</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>Java文件</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.quanxun.aicrm.workflow;<br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Java {<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> add(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> a, </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> b){<br />        </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> ret </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> a </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> b;<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> ret;<br />    }<br />}<br /></span></div></pre></div><p>&nbsp;</p><p><span style=\"font-size: 14pt; background-color: #ffffff; color: #ff0000;\">1.事件监听</span></p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><span style=\"color: #0000ff;\">&lt;!-- JDPL代码 --&gt;</span></div><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">on </span><span style=\"color: #ff0000;\">event</span><span style=\"color: #0000ff;\">=\"start\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">event-listener </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"com.quanxun.aicrm.workflow.eventlistener.LogListener\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">field </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"msg\"</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">string </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"this is a message\"</span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">field</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">event-listener</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">on</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>Java代码</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><span style=\"color: #0000ff;\">//该类必须实现接口 org.jbpm.api.listener.EventListener;</span></div><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.quanxun.aicrm.workflow.eventlistener;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.jbpm.api.listener.EventListener;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.jbpm.api.listener.EventListenerExecution;<br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> LogListener </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> EventListener {<br />    String msg;<br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> notify(EventListenerExecution arg0) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception {</span></div><div><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #008000;\">　　　　　//这里会输出\"this is a message\"和JDPL中是一样的.<br /></span><span style=\"color: #000000;\">        System.out.println(msg);<br />    }<br /><br />}<br /></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-10-15 17:17:00','2010-10-15 17:17:00',NULL,NULL,'publish',NULL,'Jbpm活动','/post/2012/7/14/1344938608082.html',1,0),(324,0,'open','<div class=\"cnblogs_code\"><pre><div><span style=\"font-family: verdana, \'courier new\'; font-size: 14pt;\"><span style=\"font-size: 14px; line-height: 21px; white-space: normal;\"><span style=\"font-size: 12pt;\"><span style=\"font-size: 13px; line-height: 19px; white-space: pre;\"><span style=\"font-family: verdana, \'courier new\'; font-size: 14pt;\"><span style=\"font-size: 14px; line-height: 21px; white-space: normal;\"><br /></span></span></span></span></span></span></div></pre></div><p>1） 任务分配给单个用户<br />org.jbpm.examples.task.assignee的例子修改一下其中的jpdl文件，代码如下：</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"TaskAssignee\"</span><span style=\"color: #ff0000;\"> xmlns</span><span style=\"color: #0000ff;\">=\"http://jbpm.org/4.3/jpdl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 开始节点 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"20,20,48,48\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">节点启动后转入name为review的节点 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 任务节点 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">task </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> <br />        assignee</span><span style=\"color: #0000ff;\">=\"#{owner}\"</span><span style=\"color: #ff0000;\"> <br />        g</span><span style=\"color: #0000ff;\">=\"96,16,127,52\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">#{}中的参数表示变量名，此处的变量名为owner </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">节点执行后转入name为wait的节点 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">task</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 等待节点 </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">state </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"255,16,88,52\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">process</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>部署完流程后，启动流程实例并分配给owner=HanDou的用户：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">Map</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">String, Object</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> variables </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> HashMap</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">String, Object</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">(); <br />    variables.put(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">owner</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">HanDou</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />ProcessInstance processInstance </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> executionService.startProcessInstanceByKey(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">TaskAssignee</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, variables);</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>通过流程实例ID，查找用户为HanDou的任务：</p><p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">String pid </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> processInstance.getId();<br />   List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">Task</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> taskList </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> taskService.findPersonalTasks(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">HanDou</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);</span></div></pre></div></p><p>&nbsp;</p><p>用户执行当前任务：<br />taskService.completeTask(taskList.get(0).getId());</p><p>2） 任务处理器</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">org.jbpm.examples.task.assignmenthandler的例子，jpdl文件源码如下：<br /></span><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"TaskAssignmentHandler\"</span><span style=\"color: #ff0000;\"> xmlns</span><span style=\"color: #0000ff;\">=\"http://jbpm.org/4.3/jpdl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"\n20,20,48,48\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">task </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"96,16,127,52\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">配置处理器类为org.jbpm.examples.task.assignmenthandler.AssignTask </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">assignment-handler </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"org.jbpm.examples.task.assignmenthandler.AssignTask\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">配置AssignTask类中的属性assignee </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">field </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"assignee\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />       </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">配置AssignTask类中的属性assignee 的值为HanDou </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">string </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"HanDou\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">field</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">assignment-handler</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">task</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">state </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"255,16,88,52\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">process</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>流程发布启动流程实例后，节点流转到review，调用org.jbpm.examples.task.assignmenthandler.AssignTask类的assign（）方法，将传入的assignee的值HanDou作为任务的候选人分配，类AssignTask必须实现AssignmentHandler接口，重写assign(Assignable assignable, OpenExecution execution)方法。<br />其源码如下：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AssignTask </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> AssignmentHandler {<br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> serialVersionUID </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1L</span><span style=\"color: #000000;\">;<br />String assignee;<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> assign(Assignable assignable, OpenExecution execution) {<br />    assignable.setAssignee(assignee);<br />}<br />}</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>3） 任务分配给群组用户<br />org.jbpm.examples.task.candidates包中的例子：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"TaskCandidates\"</span><span style=\"color: #ff0000;\"> xmlns</span><span style=\"color: #0000ff;\">=\"http://jbpm.org/4.3/jpdl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"20,20,48,48\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">task </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> <br />        candidate-groups</span><span style=\"color: #0000ff;\">=\"sales-dept\"</span><span style=\"color: #ff0000;\"><br />        g</span><span style=\"color: #0000ff;\">=\"96,16,127,52\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 通过candidate-groups 将任务分配为sales-dept（销售部门） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">task</span><span style=\"color: #0000ff;\">&gt;<span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">state </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"255,16,88,52\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">process</span><span style=\"color: #0000ff;\">&gt;</span></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><br />在流程实例发布时通过org.jbpm.api. IdentityService对象创建群组与用户之间的关系，如测试用例中：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建一个sales-dept组</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">String dept </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> identityService.createGroup(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">sales-dept</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建一个用户，参数为（userId，givenName，familyName）</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">identityService.createUser(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">johndoe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">John</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Doe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建一个用户与群组间关系，参数为（userId，groupId，role）</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">identityService.createMembership(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">johndoe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, dept, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">developer</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />测试类的测试方法注释：<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> testGroupCandidateAssignment() {<br />   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">启动流程TaskCandidates</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    ProcessInstance processInstance </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> executionService.startProcessInstanceByKey(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">TaskCandidates</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 查询群组任务 ，调用方法findGroupTasks( String userId)</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">Task</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> taskList </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> taskService.findGroupTasks(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">johndoe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />     Task task </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> taskList.get(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">);<br /><br />       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 将任务委派给johndoe，成为johndoe的assigned任务</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">   taskService.takeTask(task.getId(), </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">johndoe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 处理完毕后群组任务为空 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    taskList </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> taskService.findGroupTasks(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">johndoe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    assertEquals(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">, taskList.size());<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查询 johndoe的assigned任务</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    taskList </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> taskService.findPersonalTasks(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">johndoe</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />     task </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> taskList.get(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">);<br />      </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> johndoe 处理任务</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    taskService.completeTask(task.getId());<br />}</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>注意点：当群组任务在没有调用taskService# takeTask方法之前，调用taskService#findGroupTasks（userId）是查询不到代办任务的，只有将任务委派给某个用户之后这个用户才可处理任务。</p><p>4） 任务分配之泳道<br />以3）的jpdl文件为例，添加泳道的定义（加粗斜体部分），详细如下：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"TaskCandidates\"</span><span style=\"color: #ff0000;\"> xmlns</span><span style=\"color: #0000ff;\">=\"http://jbpm.org/4.3/jpdl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 定义泳道，将任务委派给群组sales-dept</span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">swimlane </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sales representative\"</span><span style=\"color: #ff0000;\"><br />            candidate-groups</span><span style=\"color: #0000ff;\">=\"sales-dept\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"20,20,48,48\"</span><span style=\"color:\n#0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">task </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"review\"</span><span style=\"color: #ff0000;\"> <br />         swimlane</span><span style=\"color: #0000ff;\">=\"sales representative\"</span><span style=\"color: #ff0000;\"> &lt;!-- 通过swimlane将任务指向name为sales representative的泳道定义--</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        g=\"96,16,127,52\"&gt;</span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 通过candidate-groups 将任务分配为sales-dept（销售部门） </span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">to</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">task</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">state </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"wait\"</span><span style=\"color: #ff0000;\"> g</span><span style=\"color: #0000ff;\">=\"255,16,88,52\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">process</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p><br />当流程定义在jpdl文件定义完毕后，其处理过程同3）的Java类的调用和处理。</p><p>&nbsp;</p><p>5） 任务分配并传递参数<br />在任务分配的同时，实际需求中往往需要添加其他的参数，比如和任务相关的业务数据，可以通过流程实例ID与业务数据的某标识ID关联，业务数据存入业务数据表，jbpm数据存入jbpm数据表中；与流程相关的参数，还可以通过jBPM的API设置参数。<br />在org.jbpm.examples.task.variables.包中的测试用例TaskVariablesTest类中有：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">Map</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">String, Object</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> variables </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> HashMap</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">String, Object</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">();<br />    variables.put(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">category</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">big</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    variables.put(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">dollars</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">100000</span><span style=\"color: #000000;\">);<br />    Execution execution </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> executionService.startProcessInstanceByKey(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">TaskVariables</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, variables);</span></div></pre></div><p>&nbsp;</p><p><br />这段是在启动一个流程时，同时传入参数variables（Map可以保存多个变量的键值对），同时，在jbpm的API中，taskService#getVariableNames(taskId)方法用于获取任务ID为taskId的任务变量集合（SET）。<br />variables = taskService.getVariables(taskId, variableNames);//这个方法获取的是变量的HashMap对象。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>原文地址：<a href=\"http://hi.baidu.com/cpuhandou/blog/item/f3c7df01fa26b81c728b65d4.html\">http://hi.baidu.com/cpuhandou/blog/item/f3c7df01fa26b81c728b65d4.html</a></p>\n','2010-09-29 13:18:00','2010-09-29 13:18:00',NULL,NULL,'publish',NULL,'JBPM TASK','/post/2012/7/14/1344938608140.html',1,0),(325,0,'open','<p><span style=\"color: #f92205;\"><strong>1.在tomcat6.0下布署错误</strong></span><br />&nbsp;&nbsp; 基于JBPM4的web项目jsp页面发布出错<br /><span>现象：</span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\"> javax.servlet.ServletException: java.lang.LinkageError: loader constraint violation: when resolving </span><span style=\"color: #0000ff;\">interface</span><span style=\"color: #000000;\"> method </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">javax.servlet.jsp.JspApplicationContext.getExpressionFactory()Ljavax/el/ExpressionFactory;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> the </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> loader (instance of org</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apache</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">jasper</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">servlet</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">JasperLoader) of the current </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">, org</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apache</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">jsp</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">OnDuty</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">wfmanage_jsp, and the </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> loader (instance of org</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apache</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">catalina</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">loader</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">StandardClassLoader) </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> resolved </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">, javax</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">servlet</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">jsp</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">JspApplicationContext, have different Class objects </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> the type javax</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">el</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ExpressionFactory used in the signature<br />       org.apache.jasper.servlet.JspServlet.service(JspServlet.java:</span><span style=\"color: #000000;\">275</span><span style=\"color: #000000;\">)<br />       javax.servlet.http.HttpServlet.service(HttpServlet.java:</span><span style=\"color: #000000;\">717</span><span style=\"color: #000000;\">)<br />。。。<br /> </span></div></pre></div><p>&nbsp;</p><p><br /><span>原因：</span><br />&nbsp;&nbsp; 项目中WEB-INF\\lib中的三个jar包(juel.jar, juel-engine.jar, juel-impl.jar)和tomcat6下lib中jar包(el-api.jar)冲突<br /><br /><span>解决方法：</span><br />&nbsp;&nbsp; 方法一：换成tomcat5.5 一点问题也没有了<br />&nbsp;&nbsp; 方法二：将juel.jar, juel-engine.jar, juel-impl.jar这三个包复制到tomcat6下lib中，并删除原来的el-api.jar，切记要把WEB-INF\\lib中的juel.jar, juel-engine.jar, juel-impl.jar删除。不然还是要冲突。&nbsp;<br /><br /><strong><span style=\"color: #f92205;\">2.无法保存(布署)含有中文的流程定义文件</span></strong><br /><span>现象：</span><br />保存流程定义文件</p>&nbsp;&nbsp;&nbsp;<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"GBK\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"leave\"</span><span style=\"color: #ff0000;\"> xmlns</span><span style=\"color: #0000ff;\">=\"http://jbpm.org/4.0/jpdl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"201,14,48,48\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"开始\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />         </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"-42,-10\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"请假\"</span><span style=\"color: #ff0000;\"> to</span><span style=\"color: #0000ff;\">=\"填写请假单\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      ...</span></div></pre></div><p>&nbsp;</p><p><br />提示错误：<br />&nbsp;&nbsp; MalformedByteSequenceException:Invalid byte 1 of 1-byte UTF-8 sequence<br /><br /><span>原因：</span><br />&nbsp;&nbsp; XML字符串大概经过了下面一些方法才被解析为DOM：</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">org.jbpm.pvm.internal.repository.DeploymentImpl：<br />  </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> NewDeployment addResourceFromString(String resourceName, String text) {  <br />      addResourceFromStreamInput(resourceName, </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringStreamInput(text));  <br />      </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;  <br />  }  <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> NewDeployment addResourceFromString(String resourceName, String text) {<br />  addResourceFromStreamInput(resourceName, </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringStreamInput(text));<br />  </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;<br />}<br /><br />org.jbpm.pvm.internal.stream.StringStreamInput：<br />   </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> StringStreamInput </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> StreamInput {  <br />      String string;  <br />      </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> StringStreamInput(String string) {  <br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">string</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;  <br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.string </span><span style=\"color: #000000;\">=</span><spa n style=\"color: #000000;\"> string;  <br />      }  <br />     <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> InputStream openStream() {  <br />       </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] bytes </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> string.getBytes();  <br />       </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ByteArrayInputStream(bytes);  <br />     }  <br />   }  <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> StringStreamInput </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> StreamInput {<br />  String string;<br />  </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> StringStreamInput(String string) {<br />    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">string</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.string </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> string;<br />  }<br />  </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> InputStream openStream() {<br />    </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] bytes </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> string.getBytes();<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ByteArrayInputStream(bytes);<br />  }<br />}<br /><br />org.jbpm.pvm.internal.xml.Parse：<br />    </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> InputSource getInputSource() {  <br />      </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (inputSource</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {  <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> inputSource;  <br />      }  <br />      </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (streamInput</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {  <br />        inputStream </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> streamInput.openStream();  <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> InputSource(inputStream);  <br />      }  <br />     addProblem(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">no source specified to parse</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;  <br />   }  <br /></span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> InputSource getInputSource() {<br />  </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (inputSource</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> inputSource;<br />  }<br />  </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (streamInput</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />    inputStream </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> streamInput.openStream();<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> InputSource(inputStream);<br />  }<br />  addProblem(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">no source specified to parse</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />  </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />}<br /><br />org.jbpm.pvm.internal.xml.Parser：<br />    </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> Document buildDom(Parse parse) {  <br />      Document document </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;  <br />      </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {  <br />        SAXParser saxParser </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> saxParserFactory.newSAXParser();  <br />        XMLReader xmlReader </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> saxParser.getXMLReader();  <br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> ...  </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">          <br />       InputSource inputSource </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> parse.getInputSource();   <br />       xmlReader.parse(inputSource);  <br />     <br />     } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {  <br />       parse.addProblem(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">couldn\'t parse xml document</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, e);  <br />     }  <br />     <br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> document;  <br />   }  </span></spa></div></pre></div><p>&nbsp;</p><p><br />&nbsp;&nbsp; 经过层层包装、拆包、再包装再拆包，可怜的字符串终于来到SAX解析器的手上。问题是jBPM在中间调用了String.getBytes()：这个方法 会把Java字符串（Unicode）转换为系统默认编码并返回对应的byte[]，但当InputSource中没有设置编码信息 时，SAXParser默认是以UTF-8编码来读取输入流的。我的开发机的系统默认编码是GBK，于是就出问题了。<br /><br /><span>解决方法：</span><br /><span>&nbsp;&nbsp; String&nbsp;xmlStr&nbsp;=&nbsp;<span class=\"string\">\"&lt;?xml&nbsp;version=\\\"1.0\\\"&nbsp;encoding=\\\"\"</span><span>&nbsp;+&nbsp;System.getProperty(</span><span class=\"string\">\"file.encoding\"</span><span>)&nbsp;+&nbsp;</span><span class=\"string\">\"\\\"?&gt;&lt;test&nbsp;name=\\\"名称\\\"&gt;&lt;/test&gt;\"</span><span>;&nbsp;</span></span><br />&nbsp;&nbsp; 这里就用System.getProperty(\"file.encoding\")去获取系统默认编码，以便于String.getBytes()匹配。<br />&nbsp;&nbsp; 如果你能确保你的WEB服务器上运行的字符集是GBK，也可以写成</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"GBK\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"leave\"</span><span style=\"color: #ff0000;\"> xmlns</span>< span style=\"color: #0000ff;\">=\"http://jbpm.org/4.0/jpdl\"<span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"201,14,48,48\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"开始\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"-42,-10\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"请假\"</span><span style=\"color: #ff0000;\"> to</span><span style=\"color: #0000ff;\">=\"填写请假单\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   ...</span></div></pre></div><p>&nbsp;</p><p><br /><br /><span style=\"color: #f92205;\"><strong>3.无法保存(布署)含有中文的流程定义文件</strong></span><br /><span>现象：</span><br />&nbsp;&nbsp; 流程定义已经成功保存到数据库中，但无法执行，<br />&nbsp;&nbsp; 数据库表jbpm4_execution中的任务名称为乱码<br /><br /><span>原因：</span><br />&nbsp;&nbsp; 数据库中任务名称为乱码的根本原因不是hiberate保存到jbpm4_lob中的字段BLOB_VALUE造成的。而是JSP页面传递给servlet流程定义文本时，中文转码错误造成的。即servlet接收的即乱码。<br /><br /><span>解决方法</span><br />&nbsp; 1）JSP页面中显示中文乱码<br />&nbsp;&nbsp;&nbsp;&nbsp; 在JSP文件中使用page命令指定响应结果的MIME类型，如&lt;%@ page language=\"java\" contentType=\"text/html;charset=gbk\" %&gt;<br />&nbsp; 2）表单提交乱码&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; 表单提交时（post和Get方法），使用request.getParameter方法得到乱码，这是因为tomcat处理提交的参数时默认的是iso-8859-1，表单提交get和post处理乱码问题不同，下面分别说明。<br />&nbsp;&nbsp;&nbsp; (1)POST处理<br />&nbsp;&nbsp;&nbsp; 对post提交的表单通过编写一个过滤器的方法来解决，过滤器在用户提交的数据被处理之前被调用，可以在这里改变参数的编码方式，过滤器的代码如下：<br />Java代码</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> example.util;<br />    <br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;<br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.Filter;<br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.FilterChain;<br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.FilterConfig;<br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.ServletException;<br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.ServletRequest;<br />    </span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.ServletResponse;<br />    <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SetCharacterEncodingFilter </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Filter {<br />       </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> String encoding </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />       </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> FilterConfig filterConfig </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />       </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> ignore </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />    <br />     </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> destroy() {<br />      </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.encoding </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />      </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.filterConfig </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />     }<br />    <br />     </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> doFilter(ServletRequest request, ServletResponse response,<br />       FilterChain chain) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException, ServletException {<br />          </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ignore </span><span style=\"color: #000000;\">||</span><span style=\"color: #000000;\"> (request.getCharacterEncoding() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)) {<br />       String encoding </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> selectEncoding(request);<br />       </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (encoding </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />        request.setCharacterEncoding(encoding);<br />       }<br />      }<br />    <br />      </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Pass control on to the next filter</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">      chain.doFilter(request, response);<br />    <br />     }<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> init(FilterConfig filterConfig) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> ServletException {<br />    <br />      </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.filterConfig </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> filterConfig;<br />      </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.encoding </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> filterConfig.getInitParameter(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">encoding</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />      String value </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> filterConfig.getInitParameter(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">ignore</span><span style=\"color\n: #000000;\">\"</span><span style=\"color: #000000;\">);<br />      </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (value </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />       </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.ignore </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />      } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (value.equalsIgnoreCase(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">true</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />       </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.ignore </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />      } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (value.equalsIgnoreCase(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">yes</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />       </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.ignore </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />      } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br />       </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.ignore </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;<br />      }<br />    <br />     }<br />    <br />     </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> String selectEncoding(ServletRequest request) {<br />    <br />      </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.encoding);<br />    <br />     }<br />    <br />    }</span></div></pre></div><p>&nbsp;</p><p><br /><br />web.xml文件加入过滤器</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">Encoding</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-class</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            example.util.SetCharacterEncodingFilter<br />     </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-class</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">init-param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">encoding</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param-value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">gbk</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param-value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">gbk或者gb2312或者utf-8</span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">init-param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">init-param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">ignore</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param-value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">true</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param-value</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">init-param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-mapping</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">Encoding</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">servlet-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">/*</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">servlet-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-mapping</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p><br /><br />(2) Get方法的处理<br />&nbsp;tomcat对post和get的处理方法不一样，所以过滤器不能解决get的乱码问题，它需要在其他地方设置。<br />&nbsp;打开&lt;tomcat_home&gt;\\conf目录下server.xml文件，找到对8080端口进行服务的Connector组件的设置部分，给这个组件添加一个属性：URIEncoding=\"GBK\"。修改后的Connector设置为：<br />&nbsp;&nbsp;<br /></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">Connector </span><span style=\"color: #ff0000;\">port</span><span style=\"color: #0000ff;\">=\"8080\"</span><span style=\"color: #ff0000;\"> maxHttpHeaderSize</span><span style=\"color: #0000ff;\">=\"8192\"</span><span style=\"color: #ff0000;\"><br />               maxThreads</span><span sty\nle=\"color: #0000ff;\">=\"150\"</span><span style=\"color: #ff0000;\"> minSpareThreads</span><span style=\"color: #0000ff;\">=\"25\"</span><span style=\"color: #ff0000;\"> maxSpareThreads</span><span style=\"color: #0000ff;\">=\"75\"</span><span style=\"color: #ff0000;\"><br />               enableLookups</span><span style=\"color: #0000ff;\">=\"false\"</span><span style=\"color: #ff0000;\"> redirectPort</span><span style=\"color: #0000ff;\">=\"8443\"</span><span style=\"color: #ff0000;\"> acceptCount</span><span style=\"color: #0000ff;\">=\"100\"</span><span style=\"color: #ff0000;\"><br />               connectionTimeout</span><span style=\"color: #0000ff;\">=\"20000\"</span><span style=\"color: #ff0000;\"> disableUploadTimeout</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #ff0000;\"> URIEncoding</span><span style=\"color: #0000ff;\">=\"GBK\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span></div></pre></div><p>&nbsp;</p><p><br />&nbsp; * 注意修改后重新启动tomcat才能起作用。<br /><br /><strong><span style=\"color: #f92205;\">4.运行出错时，数据库中的所有数据丢失</span></strong><br /><span>现象：</span><br />&nbsp;&nbsp; 运行出错后，数据库中的所有数据丢失，包括流程定义文件<br /><br /><span>原因：</span><br />&nbsp;&nbsp; jbpm.hibernate.cfg.xml文件中有一个配置</p>&nbsp;&nbsp;&nbsp;<div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"hibernate.hbm2ddl.auto\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"create-drop\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br /><br />   几个参数的意思，我解释一下：<br />   validate    加载hibernate时，验证创建数据库表结构<br />   create      每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。<br />   create-drop 加载hibernate时创建，退出是删除表结构<br />   update      加载hibernate自动更新数据库结构 <br />   none        不进行任何操作</span></div></pre></div><p>&nbsp;</p><p><br /><br />&nbsp;&nbsp; 由于jbpm4的默认配置为create-drop，所以出现以上问题<br /><br /><span>解决方法：</span><br />&nbsp;&nbsp; 将jbpm.hibernate.cfg.xml文件中修改如下</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"hibernate.hbm2ddl.auto\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"none\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> </span></div></pre></div><p>&nbsp;</p><p><br /><br /><span style=\"color: #f83706;\"><strong>5.在eclipse3.5流程设计器上设计流程时，中文出现乱码</strong></span><br /><span>现象：</span><br />&nbsp;&nbsp; 将流程设计好之后，点击保存，再查看代码，发现中文是乱码<br /><br /><span>原因：</span><br />&nbsp;&nbsp; 不清楚，应该是插件的bug<br /><br /><span>解决方法：</span><br />&nbsp;&nbsp; 将流程设计好之后，不要点保存，先将界面切换到代码窗口，这时可以看到中文，再点击保存<br /><br /><strong><span style=\"color: #f83706;\">6.无法布署zip流程定义文件</span></strong><br /><span>现象：</span><br />&nbsp;&nbsp; 提示以下错误</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">   streams type cannot be used in batching<br />   </span><span style=\"color: #000000;\">2009</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">11</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">26</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">15</span><span style=\"color: #000000;\">:</span><span style=\"color: #000000;\">58</span><span style=\"color: #000000;\">:</span><span style=\"color: #000000;\">07</span><span style=\"color: #000000;\"> org.hibernate.event.def.AbstractFlushingEventListener performExecutions<br />   严重: Could not synchronize database state with session<br />   org.hibernate.exception.GenericJDBCException: could not insert: [org.jbpm.pvm.internal.lob.Lob]</span></div></pre></div><p>&nbsp;</p><p><br /><br /><span>原因：</span><br />&nbsp;&nbsp; 当把数据值增加超过100时,hiberate就出现了这个异常--这意味着Oracle JDBC不允许流操作以批量方式执行<br /><br /><span>解决方法：</span><br />&nbsp;&nbsp; 在jbpm.hibernate.cfg.xml文件的&lt;session-factory&gt;下，添加</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"hibernate.jdbc.batch_size\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">0</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p><br />&nbsp;&nbsp; 即可<br /><br /><strong><span style=\"color: #f83706;\">7.无法布署zip流程定义文件</span></strong><br /><span>现象：</span><br />&nbsp;&nbsp; 提示错误</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">   Could not synchronize database state with session<br />   org.hibernate.exception.GenericJDBCException: could not insert: [org.jbpm.pvm.internal.lob.Lob]</span></div></pre></div><p>&nbsp;</p><p><br /><br /><span>原因：</span><br />&nbsp;&nbsp; 布署ZIP流程定义文件时hiberate无法插入blob<br />&nbsp;&nbsp; 用网络上提议的方法，添加以下配置</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"hibernate.jdbc.batch_size\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">0</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"hibernate.jdbc.use_streams_for_binary\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">true</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p><br />&nbsp;&nbsp; 也不行<br /><br /><span>解决方法：</span><br />&nbsp;&nbsp; 采用以上方法，还是无法通过，最后重启操作系统，就解决了，奶奶的。<br /><br /><strong><span style=\"color: #f83706;\">8.布署zip流程定义文件成功，但是数据库中中文为乱码</span></strong><br /><span>现象：</span></p>&nbsp;&nbsp;&nbsp;<div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting pr\noduced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"GBK\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">process </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"leave\"</span><span style=\"color: #ff0000;\"> xmlns</span><span style=\"color: #0000ff;\">=\"http://jbpm.org/4.0/jpdl\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">start </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"201,14,48,48\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"开始\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />         </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">transition </span><span style=\"color: #ff0000;\">g</span><span style=\"color: #0000ff;\">=\"-42,-10\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"请假\"</span><span style=\"color: #ff0000;\"> to</span><span style=\"color: #0000ff;\">=\"填写请假单\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">start</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      ...</span></div></pre></div><p>&nbsp;</p><p><br />&nbsp;&nbsp; 由于我的oracle9数据库格式为GBK，所以XML文件头为&lt;?xml version=\"1.0\" encoding=\"<span>GBK</span>\"?&gt;<br />&nbsp;&nbsp; 含有中文的流程定义zip文件已经成功保存到了blob字段内，但是中文名为乱码<br />&nbsp;&nbsp; 或者提示XML parse error，无法保存到数据库<br /><br /><span>原因：</span><br />&nbsp;&nbsp; repositoryService.createDeployment().addResourcesFromZipInputStream(new ZipInputStream(item.getInputStream())).deploy();<br />&nbsp;&nbsp; 仅上面一句话，就不知道转了多少次编码，经过测试发现，还是编码方式的问题，最后决定将jbpm4.2的源代码复制到项目中来调试。<br /><br /><span>解决方法：</span><br />&nbsp;&nbsp; 在网上发现了这篇文章《<a href=\"http://fruitking.javaeye.com/blog/417305\" target=\"_blank\">Java中压缩与解压--中文文件名乱码解决办法</a>》<br />&nbsp;&nbsp; 结果问题还是没有解决<br />&nbsp;&nbsp; 最后经过测试，将org.jbpm.pvm.internal.repository.DeploymentImpl类中的方法进行修改</p>&nbsp;&nbsp;&nbsp;<div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> NewDeployment addResourcesFromZipInputStream(CnZipInputStream zipInputStream) {<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />          ZipEntry zipEntry </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> zipInputStream.getNextEntry();<br />          </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(zipEntry</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />            String entryName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> zipEntry.getName();<br />            </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] bytes </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> IoUtil.readBytes(zipInputStream);<br />            <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果是流程定义文件(不是图片)，则重新编码，再生成字节数组</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(entryName.endsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">.xml</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)){<br />                String s</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> String(bytes,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">utf-8</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />                bytes</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">s.getBytes();<br />            }<br />                 <br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (bytes</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />              addResourceFromStreamInput(entryName, </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ByteArrayStreamInput(bytes));<br />            }<br />            zipEntry </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> zipInputStream.getNextEntry();<br />          }<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />          </span><span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JbpmException(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">couldn\'t read zip archive</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, e);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;<br />      }</span></div></pre></div><p>&nbsp;</p><p><br />&nbsp;&nbsp; 问题解决，肯定是开始有一步编码方式是用UTF-8，中间你就是再怎么用GBK转码，都不会成功，这里先用UTF-8编码生成字符串，再转一次编码就成功了。<br /><br /></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">参考文献<br /></span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">.dzq2008. JBPM4项目和tomcat6.0的兼容问题. http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dzq0371.javaeye.com/blog/509632</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">2</span><span style=\"color: #000000;\">.碰到jBPM的编码问题了. http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rednaxelafx.javaeye.com/blog/522436</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">3</span><span style=\"color: #000000;\">.如何解决Tomcat下中文乱码问题. http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.javaeye.com/topic/251743?page=1</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">4</span><span style=\"color: #000000;\">.关于Hibernate一个配置参数hibernate.hbm2ddl.auto. http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">linshiquan.javaeye.com/blog/263170</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-09-29 09:12:00','2010-09-29 09:12:00',NULL,NULL,'publish',NULL,'JBPM4常见错误汇总','/post/2012/7/14/1344938608206.html',1,0),(326,0,'open','<p>JBPM版本4.3&nbsp;</p><p>&nbsp;</p><p><br />代码：&nbsp;</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">。。。 <br />ExecutionService executionService </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> processEngine.getExecutionService(); <br />ProcessInstance pi </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> executionService.startProcessInstanceByKey(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">workflowXX</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); <br />String exId </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> pi.findActiveExecutionIn(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">XXState</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">).getId(); <br />executionService.signalExecutionById(exId);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出ORA-01722: 无效数字\"异常 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">。。。</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>跟踪后发现时在执行jbpm.execution.hbm.xml文件中的命名查询findExecutionById时引发的异常,&nbsp;</p><p>最终生成的sql中将execution.id映射成了execution.dbId（生成sql的片段：where executioni0_.DBID_=?）&nbsp;</p><p>由于dbId是long型，而id是String型，所以导致了该异常。&nbsp;</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">query </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"findExecutionById\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;![CDATA[</span><span style=\"color: #808080;\"> <br />     select execution <br />     from org.jbpm.pvm.internal.model.ExecutionImpl as execution <br />     where execution.id = :id <br />    </span><span style=\"color: #0000ff;\">]]&gt;</span><span style=\"color: #000000;\"> <br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">query</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">class </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"ExecutionImpl\"</span><span style=\"color: #ff0000;\"> <br />         table</span><span style=\"color: #0000ff;\">=\"JBPM4_EXECUTION\"</span><span style=\"color: #ff0000;\"> <br />         discriminator-value</span><span style=\"color: #0000ff;\">=\"pvm\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">id </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"dbid\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"DBID_\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">generator </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"assigned\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">id</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">discriminator</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">column </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"CLASS_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">discriminator</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">version </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"dbversion\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"DBVERSION_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"activityName\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"ACTIVITYNAME_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"processDefinitionId\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"PROCDEFID_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"hasVariables\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"HASVARS_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">map </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"variables\"</span><span style=\"color: #ff0000;\"> <br />         cascade</span><span style=\"color: #0000ff;\">=\"all-delete-orphan\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">key </span><span style=\"color: #ff0000;\">foreign-key</span><span style=\"color: #0000ff;\">=\"FK_VAR_EXECUTION\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />         </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">column </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"EXECUTION_\"</span><span style=\"color: #ff0000;\"> index</span><span style=\"color: #0000ff;\">=\"IDX_VAR_EXECUTION\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">key</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">map-key </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"string\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"KEY_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">one-to-many </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"org.jbpm.pvm.internal.type.Variable\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">map</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000\nff;\">&lt;</span><span style=\"color: #800000;\">map </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"systemVariables\"</span><span style=\"color: #ff0000;\"> <br />         cascade</span><span style=\"color: #0000ff;\">=\"all-delete-orphan\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">key </span><span style=\"color: #ff0000;\">foreign-key</span><span style=\"color: #0000ff;\">=\"FK_VAR_EXESYS\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />         </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">column </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"EXESYS_\"</span><span style=\"color: #ff0000;\"> index</span><span style=\"color: #0000ff;\">=\"IDX_VAR_EXESYS\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">key</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">map-key </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"string\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"KEY_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">one-to-many </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"org.jbpm.pvm.internal.type.Variable\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">map</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    <br />    <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"name\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"NAME_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"key\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"KEY_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"id\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"ID_\"</span><span style=\"color: #ff0000;\"> unique</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    试过删除对id属性的映射，发现都不会报错~~ <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"state\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"STATE_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"suspendHistoryState\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"SUSPHISTSTATE_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"priority\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"PRIORITY_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"historyActivityInstanceDbid\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"HISACTINST_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">list </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"executions\"</span><span style=\"color: #ff0000;\"> <br />          cascade</span><span style=\"color: #0000ff;\">=\"all-delete-orphan\"</span><span style=\"color: #ff0000;\"> <br />          inverse</span><span style=\"color: #0000ff;\">=\"false\"</span><span style=\"color: #ff0000;\"> <br />          lazy</span><span style=\"color: #0000ff;\">=\"false\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">key </span><span style=\"color: #ff0000;\">column</span><span style=\"color: #0000ff;\">=\"PARENT_\"</span><span style=\"color: #ff0000;\"> foreign-key</span><span style=\"color: #0000ff;\">=\"FK_EXEC_PARENT\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">list-index </span><span style=\"color: #ff0000;\">column</span><span style=\"color: #0000ff;\">=\"PARENT_IDX_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">one-to-many </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"ExecutionImpl\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">list</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">map </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"swimlanes\"</span><span style=\"color: #ff0000;\"> <br />         cascade</span><span style=\"color: #0000ff;\">=\"all-delete-orphan\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">key </span><span style=\"color: #ff0000;\">foreign-key</span><span style=\"color: #0000ff;\">=\"FK_SWIMLANE_EXEC\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />         </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">column </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"EXECUTION_\"</span><span style=\"color: #ff0000;\"> index</span><span style=\"color: #0000ff;\">=\"IDX_SWIMLANE_EXEC\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">key</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">map-key </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\n\"string\"</span><span style=\"color: #ff0000;\"> column</span><span style=\"color: #0000ff;\">=\"NAME_\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">one-to-many </span><span style=\"color: #ff0000;\">class</span><span style=\"color: #0000ff;\">=\"org.jbpm.pvm.internal.task.SwimlaneImpl\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">map</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">many-to-one </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"parent\"</span><span style=\"color: #ff0000;\"> <br />                 column</span><span style=\"color: #0000ff;\">=\"PARENT_\"</span><span style=\"color: #ff0000;\"> <br />                 class</span><span style=\"color: #0000ff;\">=\"ExecutionImpl\"</span><span style=\"color: #ff0000;\"> <br />                 foreign-key</span><span style=\"color: #0000ff;\">=\"FK_EXEC_PARENT\"</span><span style=\"color: #ff0000;\"> <br />                 index</span><span style=\"color: #0000ff;\">=\"IDX_EXEC_PARENT\"</span><span style=\"color: #ff0000;\"> <br />                 lazy</span><span style=\"color: #0000ff;\">=\"false\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">many-to-one </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"processInstance\"</span><span style=\"color: #ff0000;\"> <br />                 class</span><span style=\"color: #0000ff;\">=\"ExecutionImpl\"</span><span style=\"color: #ff0000;\"> <br />                 column</span><span style=\"color: #0000ff;\">=\"INSTANCE_\"</span><span style=\"color: #ff0000;\"> <br />                 foreign-key</span><span style=\"color: #0000ff;\">=\"FK_EXEC_INSTANCE\"</span><span style=\"color: #ff0000;\"> <br />                 index</span><span style=\"color: #0000ff;\">=\"IDX_EXEC_INSTANCE\"</span><span style=\"color: #ff0000;\"> <br />                 lazy</span><span style=\"color: #0000ff;\">=\"false\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">many-to-one </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"superProcessExecution\"</span><span style=\"color: #ff0000;\"> <br />                 column</span><span style=\"color: #0000ff;\">=\"SUPEREXEC_\"</span><span style=\"color: #ff0000;\"> <br />                 class</span><span style=\"color: #0000ff;\">=\"ExecutionImpl\"</span><span style=\"color: #ff0000;\"> <br />                 foreign-key</span><span style=\"color: #0000ff;\">=\"FK_EXEC_SUPEREXEC\"</span><span style=\"color: #ff0000;\"> <br />                 index</span><span style=\"color: #0000ff;\">=\"IDX_EXEC_SUPEREXEC\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />                 <br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">many-to-one </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"subProcessInstance\"</span><span style=\"color: #ff0000;\"> <br />                 column</span><span style=\"color: #0000ff;\">=\"SUBPROCINST_\"</span><span style=\"color: #ff0000;\"> <br />                 class</span><span style=\"color: #0000ff;\">=\"ExecutionImpl\"</span><span style=\"color: #ff0000;\"> <br />                 foreign-key</span><span style=\"color: #0000ff;\">=\"FK_EXEC_SUBPI\"</span><span style=\"color: #ff0000;\"> <br />                 index</span><span style=\"color: #0000ff;\">=\"IDX_EXEC_SUBPI\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"> <br />                 <br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">class</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> </span></div></pre></div><p>&nbsp;</p><p>这个问题是由于hibernate版本的问题导致的，使用jbpm包里面自带的hibernate后就没有问题了</p>\n','2010-09-28 17:35:00','2010-09-28 17:35:00',NULL,NULL,'publish',NULL,'JBPM executionService.deleteProcessInstanceCascade(id)报错','/post/2012/7/14/1344938608294.html',1,0),(327,0,'open','<p>我能抽象出整个世界．．．&nbsp;&nbsp; </p><p>但是我却不能抽象出你．．．&nbsp;&nbsp; </p><p>你肯定是一个单例，因为你是那样的独一无二...&nbsp;&nbsp; </p><p>所以我的世界并不完整．．．&nbsp;&nbsp; </p><p>我可以重载甚至覆盖这个世界里的任何一种方法．．．&nbsp;&nbsp; </p><p>但是却不能覆盖对你的思念．．． </p><p>&nbsp;</p><p>也许命中注定了 你与我存在于不同的包里... </p><p>在你的世界里，你被烙上了私有的属性... </p><p>我用尽全身力气，也找不到访问你的接口... </p><p>我不愿就此甘心，找到了藏身在\"开源中国\"神殿的巫师，教会了我穿越时空的方法... </p><p>终于，我用反射这把利剑，打开了你空间的缺口... </p><p>并发现了接近你的秘密... </p><p>&nbsp;</p><p>当我迫不及待地调用了爱你这个方法．．．&nbsp;&nbsp; </p><p>并义无返顾的把自己作为参数传进这个方法时．．．&nbsp;&nbsp; </p><p>我才发现爱上你是一个没有终止条件的递归．．．&nbsp;&nbsp; </p><p>它不停的返回我对你的思念并压入我心里的堆栈．．．&nbsp;&nbsp; </p><p>在这无尽的黑夜中 ，终于体验到你对我爱的回调... </p><p>我的内存里已经再也装不下别人...</p><p>当我以为将与你在这个死循环中天荒地老时... </p><p>万恶的系统抛出了爱的异常...</p><p>此刻我才发现，我不过是操纵于虚拟机下的一个线程，你也是... </p><p>但我毫不后悔，因为在爱的洗礼之后... </p><p>我看见了一个新的生命，那是我们的, 继承</p>\n','2010-09-26 17:08:00','2010-09-26 17:08:00',NULL,NULL,'publish',NULL,'经典!','/post/2012/7/14/1344938608358.html',1,0),(328,0,'open','<table><tbody><tr><td><div id=\"blog_text\" class=\"cnt\"><p><span style=\"font-family: 黑体;\">一、前言：</span></p><p><span style=\"font-family: 黑体;\">大家好，今天给大家分享一下Android中的拿来主义，我们时常会碰到一个自己觉得很漂亮很帅气的应用(apk),所以我们会尝试用WinRAR等之类工具查看，而一般的应用程序打包后的目录通常是这样的如下图：</span></p></div></td></tr></tbody></table><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091909585374.gif\" /></span></p><p><span style=\"font-family: 黑体;\">当然res里的图片是可以拿来就用的(笔者的好多应用的图片都是从别人的apk里扣出来的)，而诸如layout里的布局及权限文件 (AndroidManifest.xml)已经是一堆乱码了，完全看不懂，想看看别人是怎么布局的都不容易。还有源代码都被编译成了 classes.dex，完全看不出什么线索。基于以上的困惑，笔者给大家分享一下Android中的拿来主义。</span></p><p><span style=\"font-family: 黑体;\"><strong>二、所需工具(点击各自连接进入下载页面)：</strong></span></p><p><span style=\"font-family: 黑体;\">1.<a href=\"http://code.google.com/p/android4me/downloads/list\">AXMLPrinter2.jar</a></span></p><p><span style=\"font-family: 黑体;\">2.<a href=\"http://code.google.com/p/smali/\">baksmali.jar</a></span></p><p><span style=\"font-family: 黑体;\">3.<a href=\"http://code.google.com/p/smali/\">smali.jar</a></span></p><p><span style=\"font-family: 黑体;\"><strong>三、准备工作</strong></span></p><p><span style=\"font-family: 黑体;\">为了方便起见，作者把AXMLPrinter2.jar, 还有baksmali.jar,还有smali.jar(下下来为了方便重命名)，放在Android SDK tools文件夹中如下图所示:</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091909592975.gif\" /></span></p><p><span style=\"font-family: 黑体;\">为了便于大家更容易程序比对，作者写了一个简单的应用(叫APKInstaller)目录结构如下图所示:</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091910000390.gif\" /></span></p><p><span style=\"font-family: 黑体;\"><strong>四、开始拿来主义</strong></span></p><p><span style=\"font-family: 黑体;\"><strong>1.用 AXMLPrinter2.jar查看apk中的布局xml文件:</strong></span></p><p><span style=\"font-family: 黑体;\">将ApkInstaller应用生成的ApkInstaller.apk(为了方便起见放到tools目录里)用WinRAR等 工具打开，将res/layout/main.xml解压出来(也还是放在tools目录里哦)</span></p><p><span style=\"font-family: 黑体;\">打开main.xml文件，内容如下(一堆天文):</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091910003159.gif\" /></span></p><p><span style=\"font-family: 黑体;\">这时候AXMLPrinter2.jar派上用场了，打开cmd终端，一直进入到tools目录下，输入如下命令:</span></p><p><span style=\"font-family: 黑体;\"><strong>java -jar AXMLPrinter2.jar main.xml &gt; main.txt.</strong>&nbsp;&nbsp;(如下图所示)</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091910011079.gif\" /></span></p><p>&nbsp;</p><p><span style=\"font-family: 黑体;\">打开main.txt代码如下(是不是有个123了呵呵~):</span></p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"font-family: 黑体;\"><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"utf-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">LinearLayout<br />    </span><span style=\"color: #ff0000;\">xmlns:android</span><span style=\"color: #0000ff;\">=\"http://schemas.android.com/apk/res/android\"</span><span style=\"color: #ff0000;\"><br />    android:orientation</span><span style=\"color: #0000ff;\">=\"1\"</span><span style=\"color: #ff0000;\"><br />    android:layout_width</span><span style=\"color: #0000ff;\">=\"-1\"</span><span style=\"color: #ff0000;\"><br />    android:layout_height</span><span style=\"color: #0000ff;\">=\"-1\"</span><span style=\"color: #ff0000;\"><br />    </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">WebView<br />        </span><span style=\"color: #ff0000;\">android:id</span><span style=\"color: #0000ff;\">=\"@7F050000\"</span><span style=\"color: #ff0000;\"><br />        android:layout_width</span><span style=\"color: #0000ff;\">=\"-1\"</span><span style=\"color: #ff0000;\"><br />        android:layout_height</span><span style=\"color: #0000ff;\">=\"-2\"</span><span style=\"color: #ff0000;\"><br />        </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">WebView</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">LinearLayout</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span></span></div></pre></div><p><span style=\"font-family: 黑体;\">为了比对打开源程序中的main.xml代码如下(大家比对一下吧):</span></p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"font-family: 黑体;\"><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml version=\"1.0\" encoding=\"utf-8\"</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">LinearLayout </span><span style=\"color: #ff0000;\">xmlns:android</span><span style=\"color: #0000ff;\">=\"http://schemas.android.com/apk/res/android\"</span><span style=\"color: #ff0000;\"><br />    android:orientation</span><span style=\"color: #0000ff;\">=\"vertical\"</span><span style=\"color: #ff0000;\"><br />    android:layout_width</span><span style=\"color: #0000ff;\">=\"fill_parent\"</span><span style=\"color: #ff0000;\"><br />    android:layout_height</span><span style=\"color: #0000ff;\">=\"fill_parent\"</span><span style=\"color: #ff0000;\"><br />    </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">WebView<br />    </span><span style=\"color: #ff0000;\">android:id</span><span style=\"color: #0000ff;\">=\"@+id/apk_web\"</span><span style=\"color: #ff0000;\"><br />    android:layout_height</span><span style=\"color: #0000ff;\">=\"wrap_content\"</span><span style=\"color: #ff0000;\"><br />    android:layout_width</span><span style=\"color: #0000ff;\">=\"fill_parent\"</span><span style=\"color: #ff0000;\"><br />    <br /></span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">LinearLayout</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><span style=\"font-family: 黑体;\"><strong>2.用baksmali.jar反编译classes.dex:</strong></span></p><p><span style=\"font-family: 黑体;\">将ApkInstaller.apk里的classes.dex解压到tools目录里，然后baksmali.jar就派上用场了，在cmd命令行里输入如下命令:</span></p><p><span style=\"font-family: 黑体;\">j<strong>ava -jar baksmali.jar -o classout/ classes.dex</strong>&nbsp;.(如下图所示:)</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091910032884.gif\" /></span></p><p><span style=\"font-family: 黑体;\">你将会\n发现在tools里多一个classout文件夹里面(我代码的包目录结构清晰可见呀),如下图所示:</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091910040226.gif\" /><br /></span></p><p><span style=\"font-family: 黑体;\">从上面看出除了Android本身资源的类R开头的，我的源程序里只有一个ApkInstaller.java，完全吻合，真TMD的猥琐呵呵~</span></p><p><span style=\"font-family: 黑体;\">下面我们看一下ApkInstaller.smali内容是什么，如以下代码：</span></p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"font-family: 黑体;\"><span style=\"color: #000000;\">.</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Lcom</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">tutor</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apkinstaller</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ApkInstaller;<br />.</span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\"> Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">app</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Activity;<br />.source </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">ApkInstaller.java</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"><br /># instance fields<br />.field </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> apkWeb:Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;<br /># direct methods<br />.method </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> constructor </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">init</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">()V<br />    .registers </span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\"><br />    .prologue<br />    .line </span><span style=\"color: #000000;\">8</span><span style=\"color: #000000;\"><br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">direct {p0}, Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">app</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Activity;</span><span style=\"color: #000000;\">-&gt;&lt;</span><span style=\"color: #000000;\">init</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">()V<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">-</span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"><br />.end method<br /># virtual methods<br />.method </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> onCreate(Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">os</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Bundle;)V<br />    .registers </span><span style=\"color: #000000;\">5</span><span style=\"color: #000000;\"><br />    .parameter </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">savedInstanceState</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"><br />    .prologue<br />    .line </span><span style=\"color: #000000;\">13</span><span style=\"color: #000000;\"><br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\"> {p0, p1}, Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">app</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Activity;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">onCreate(Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">os</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Bundle;)V<br />    .line </span><span style=\"color: #000000;\">14</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">high16 v2, </span><span style=\"color: #000000;\">0x7f03</span><span style=\"color: #000000;\"><br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">virtual {p0, v2}, Lcom</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">tutor</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apkinstaller</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ApkInstaller;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">setContentView(I)V<br />    .line </span><span style=\"color: #000000;\">15</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">high16 v2, </span><span style=\"color: #000000;\">0x7f05</span><span style=\"color: #000000;\"><br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">virtual {p0, v2}, Lcom</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">tutor</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apkinstaller</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ApkInstaller;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">findViewById(I)Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">view</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">View;<br />    move</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">result</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">object v2<br />    check</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">cast v2, Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;<br />    iput</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">object v2, p0, Lcom</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">tutor</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apkinstaller</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ApkInstaller;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">apkWeb:Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;<br />    .line </span><span style=\"color: #000000;\">16</span><span style=\"color: #000000;\"><br />    iget</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">object v2, p0, Lcom</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">tutor</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apkinstaller</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ApkInstaller;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">apkWeb:Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;<br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">virtual {v2}, Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;</span><span style=\"color: #000000;\">-&gt;</span>< span style=\"color: #000000;\">getSettings()Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebSettings;<br />    move</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">result</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">object v1<br />    .line </span><span style=\"color: #000000;\">17</span><span style=\"color: #000000;\"><br />    .local v1, webSettings:Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebSettings;<br />    </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">4</span><span style=\"color: #000000;\"> v2, </span><span style=\"color: #000000;\">0x1</span><span style=\"color: #000000;\"><br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">virtual {v1, v2}, Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebSettings;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">setJavaScriptEnabled(Z)V<br />    .line </span><span style=\"color: #000000;\">19</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">string v0, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://frankiewei.net/apk/demos/main/index.html#home</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"><br />    .line </span><span style=\"color: #000000;\">20</span><span style=\"color: #000000;\"><br />    .local v0, apkUrl:Ljava</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">lang</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">String;<br />    iget</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">object v2, p0, Lcom</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">tutor</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">apkinstaller</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ApkInstaller;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">apkWeb:Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;<br />    invoke</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">virtual {v2, v0}, Landroid</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">webkit</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">WebView;</span><span style=\"color: #000000;\">-&gt;</span><span style=\"color: #000000;\">loadUrl(Ljava</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">lang</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">String;)V<br />    .line </span><span style=\"color: #000000;\">21</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">-</span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"><br />.end method<br /></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><span style=\"font-family: 黑体;\">同样为了比对我们看一下ApkInstaller.java的源代码如下:<br /></span></p><p><span style=\"font-family: 黑体;\">&nbsp;</span></p><div class=\"cnblogs_code\"><pre><div><span style=\"font-family: 黑体;\"><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.tutor.apkinstaller;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.app.Activity;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.os.Bundle;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.webkit.WebSettings;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.webkit.WebView;<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ApkInstaller </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> Activity {<br />   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> WebView apkWeb;<br />    @Override<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> onCreate(Bundle savedInstanceState) {<br />        </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">.onCreate(savedInstanceState);<br />        setContentView(R.layout.main);<br />       apkWeb </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (WebView)findViewById(R.id.apk_web);<br />       WebSettings webSettings </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> apkWeb.getSettings();<br />       webSettings.setJavaScriptEnabled(</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);<br />      <br />       String apkUrl </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://frankiewei.net/apk/demos/main/index.html#home</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />       apkWeb.loadUrl(apkUrl);<br />    }<br />}</span></span></div></pre></div><p>&nbsp;</p><p><span style=\"font-family: 黑体;\">我相信大家 已经能看出来门道来了吧，hoho~</span></p><p>&nbsp;</p><p><span style=\"font-family: 黑体;\"><strong>3.用smali.jar编译classout成classes.dex:</strong></span></p><p><span style=\"font-family: 黑体;\">我们上一步已经将classes.dex反编译成了.smali文件，好了，我们看看smali文件看够了，在偿试把它编译成classes.dex吧，</span></p><p><span style=\"font-family: 黑体;\">输入如下命令:<strong>java -jar smali.jar classout/ -o classes.dex.</strong>&nbsp;如下图所示:</span></p><p><span style=\"font-family: 黑体;\"><img src=\"http://pic002.cnblogs.com/img/gaoyoubo/201009/2010091910062130.gif\" /></span></p><p><span style=\"font-family: 黑体;\">我们可以将新生成的classes.dex塞入ApkInstaller.apk里覆盖原来的classes.dex文件，这样我们的apk还是一样能用的哦~</span></p><p><span style=\"font-family: 黑体;\">Ok~今天就暂时写到这里，这片文章真是不容易呀，写了这么长时间，之间还出现过被来自武汉IP的人把这篇文章删除 过，我又重新写了一遍。希望大家多多进步！thx~</span></p><p>&nbsp;</p><p><span style=\"font-family: 黑体;\">原文地址：<a href=\"http://blog.csdn.net/Android_Tutor/archive/2010/07/09/5724435.aspx\">http://blog.csdn.net/Android_Tutor/archive/2010/07/09/5724435.aspx</a></span></p><p><span style=\"font-family: 黑体;\"><br /></span></p><p><span style=\"font-family: 黑体;\"><br /></span></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-09-19 10:08:00','2010-09-19 10:08:00',NULL,NULL,'publish',NULL,'Android 中的拿来主义(编译，反编译，AXMLPrinter2,smali,baksmali)!','/post/2012/7/14/1344938608413.html',1,0),(329,0,'open','<p align=\"left\">android.os.Environment</p><p align=\"left\">提供访问环境变量</p><p align=\"left\">&nbsp;</p><table border=\"0\" cellpadding=\"0\"><tbody><tr><td colspan=\"2\"><p align=\"left\"><a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/Object.html\">java.lang.Object</a></p></td><td><p align=\"left\">&nbsp;</p></td></tr><tr><td><p align=\"left\">&nbsp;</p></td><td><p align=\"left\">android.os.Environment</p></td><td><p align=\"left\">&nbsp;</p></td></tr><tr height=\"0\"><td width=\"6\"></td><td width=\"180\"></td><td width=\"6\"></td></tr></tbody></table><p align=\"left\">&nbsp;</p><p align=\"left\"><b>Environment&nbsp;</b>静态方法：</p><p align=\"left\">&nbsp;</p><p align=\"left\">方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#getDataDirectory%28%29\">getDataDirectory</a>&nbsp;()</p><p align=\"left\">返回 :&nbsp;<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/io/File.html\">File</a></p><p align=\"left\">解释 : 返回Data的目录</p><p align=\"left\">&nbsp;</p><p align=\"left\">方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#getDownloadCacheDirectory%28%29\">getDownloadCacheDirectory</a>&nbsp;()</p><p align=\"left\">返回 :&nbsp;<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/io/File.html\">File</a></p><p align=\"left\">解释 :&nbsp;返回下载缓冲区目录</p><p align=\"left\">&nbsp;</p><p align=\"left\">方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#getExternalStorageDirectory%28%29\">getExternalStorageDirectory</a>&nbsp;()</p><p align=\"left\">返回 :&nbsp;<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/io/File.html\">File</a></p><p align=\"left\">解释 : 返回扩展存储区目录(SDCard)</p><p align=\"left\">&nbsp;</p><p align=\"left\">方法 :&nbsp;getExternalStoragePublicDirectory&nbsp;(<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/String.html\">String</a>&nbsp;type)</p><p align=\"left\">返回 :&nbsp;<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/io/File.html\">File</a></p><p align=\"left\">解释 : 返回一个高端的公用的外部存储器目录来摆放某些类型的文件(来自网上)</p><p align=\"left\">&nbsp;</p><p align=\"left\">方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#getRootDirectory%28%29\">getRootDirectory</a>&nbsp;()</p><p align=\"left\">返回 :&nbsp;<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/io/File.html\">File</a></p><p align=\"left\">解释 : 返回Android的根目录</p><p align=\"left\">&nbsp;</p><p align=\"left\">方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#getExternalStorageState%28%29\">getExternalStorageState</a>&nbsp;()</p><p align=\"left\">返回 :&nbsp;<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/String.html\">String</a></p><p align=\"left\">解释 : 返回外部存储设备的当前状态</p><p align=\"left\">&nbsp;</p><p align=\"left\"><b><a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#getExternalStorageState%28%29\">getExternalStorageState</a></b><b>&nbsp;</b><b>() </b><b>返回的状态</b><b><a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/String.html\">String</a></b><b>&nbsp;</b><b>类型常量</b><b> :</b></p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_BAD_REMOVAL\">MEDIA_BAD_REMOVAL</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"bad_removal\"</p><p align=\"left\">解释 : 在没有正确卸载SDCard之前移除了</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :MEDIA_CHECKING</p><p align=\"left\">值&nbsp;&nbsp;&nbsp;:&nbsp;\"checking\"</p><p align=\"left\">解释 : 正在磁盘检查</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_MOUNTED\">MEDIA_MOUNTED</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"mounted\"</p><p align=\"left\">解释 : 已经挂载并且拥有可读可写权限</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_MOUNTED_READ_ONLY\">MEDIA_MOUNTED_READ_ONLY</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"mounted_ro\"</p><p align=\"left\">解释 : 已经挂载,但只拥有可读权限</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :MEDIA_NOFS</p><p align=\"left\">值&nbsp;&nbsp;&nbsp;:&nbsp;\"nofs\"</p><p align=\"left\">解释 : 对象空白,或者文件系统不支持</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_REMOVED\">MEDIA_REMOVED</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"removed\"</p><p align=\"left\">解释 : 已经移除扩展设备</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_SHARED\">MEDIA_SHARED</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"shared\"</p><p align=\"left\">解释 : 如果SDCard未挂载,并通过USB大容量存储共享</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_UNMOUNTABLE\">MEDIA_UNMOUNTABLE</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"unmountable\"</p><p align=\"left\">解释 : 不可以挂载任何扩展设备</p><p align=\"left\">&nbsp;</p><p align=\"left\">常量 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/Environment.html#MEDIA_UNMOUNTED\">MEDIA_UNMOUNTED</a></p><p align=\"left\">值&nbsp;&nbsp;&nbsp;: \"unmounted\"</p><p align=\"left\">解释 : 已经卸载</p><p align=\"left\">&nbsp;</p><p align=\"left\"><b>使用时只需先判断</b><b>SDCard</b><b>当前的状态然后取得</b><b>SdCard</b><b>的目录即可</b><b>(</b><b>见源代码</b><b>)</b></p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">SDcard 操作</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">&nbsp;</span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> SDCardTest() {<br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取扩展SD卡设备状态</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">&nbsp;</span><span style=\"color: #000000;\">        String sDStateString </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> android.os.Environment.getExternalStorageState();<br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 拥有可读可写权限</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #008000;\">&nbsp;</span><span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (sDStateString.equals(android.os.Environment.MEDIA_MOUNTED)) {<br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取扩展存储设备的文件目录</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">                File SDFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> android.os.Environment<br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">                        .getExternalStorageDirectory();<br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 打开文件</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">16</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">                File myFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(SDFile.getAbsolutePath()<br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">                        </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> File.separator </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">MyFile.txt</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 判断是否存在,不存在则创建</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">myFile.exists()) {<br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">                    myFile.createNewFile();<br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">                }<br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 写数据</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">                String szOutText </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Hello, World!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">                FileOutputStream outputStream </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileOutputStream(myFile);<br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #000000;\">                outputStream.write(szOutText.getBytes());<br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">                outputStream.close();<br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">            } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> TODO: handle exception</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of try</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">33</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">        }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of if(MEDIA_MOUNTED)<br /></span><span style=\"color: #008080;\">35</span> <span style=\"color: #008000;\">        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 拥有只读权限</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">36</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (sDStateString<br /></span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">                .endsWith(android.os.Environment.MEDIA_MOUNTED_READ_ONLY)) {<br /></span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">39</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取扩展存储设备的文件目录</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">40</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            File SDFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> android.os.Environment.getExternalStorageDirectory();<br /></span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 创建一个文件</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">43</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            File myFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(SDFile.getAbsolutePath() </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> File.separator<br /></span><span style=\"color: #008080;\">44</span> <span style=\"color: #000000;\">                    </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">MyFile.txt</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /></span><span style=\"color: #008080;\">45</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">46</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 判断文件是否存在</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">47</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (myFile.exists()) {<br /></span><span style=\"color: #008080;\">48</span> <span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br /></span><span style=\"color: #008080;\">49</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 读数据</span><span s\ntyle=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">51</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">                    FileInputStream inputStream </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileInputStream(myFile);<br /></span><span style=\"color: #008080;\">52</span> <span style=\"color: #000000;\">                    </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] buffer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[</span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">];<br /></span><span style=\"color: #008080;\">53</span> <span style=\"color: #000000;\">                    inputStream.read(buffer);<br /></span><span style=\"color: #008080;\">54</span> <span style=\"color: #000000;\">                    inputStream.close();<br /></span><span style=\"color: #008080;\">55</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">56</span> <span style=\"color: #000000;\">                } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br /></span><span style=\"color: #008080;\">57</span> <span style=\"color: #000000;\">                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> TODO: handle exception</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">58</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">                }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of try</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">59</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of if(myFile)</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">60</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">        }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of if(MEDIA_MOUNTED_READ_ONLY)</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">61</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">    }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of func</span></div></pre></div><p>&nbsp;</p><h1>计算SDCard的容量大小</h1><h2>android.os.StatFs</h2><p>一个模拟linux的df命令的一个类,获得SD卡和手机内存的使用情况</p><p>&nbsp;</p><table border=\"0\" cellpadding=\"0\"><tbody><tr><td colspan=\"2\"><p><a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/Object.html\">java.lang.Object</a></p></td><td><p>&nbsp;</p></td></tr><tr><td><p>&nbsp;</p></td><td><p>android.os.StatFs</p></td><td><p>&nbsp;</p></td></tr><tr height=\"0\"><td width=\"6\"></td><td width=\"102\"></td><td width=\"6\"></td></tr></tbody></table><p>&nbsp;</p><p>构造方法:</p><p><a href=\"http://www.chinaup.org/docs/reference/android/os/StatFs.html#StatFs%28java.lang.String%29\">StatFs</a>&nbsp;(<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/String.html\">String</a>&nbsp;path)</p><p>&nbsp;</p><p>公用方法:</p><p>&nbsp;</p><p>方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/StatFs.html#getAvailableBlocks%28%29\">getAvailableBlocks</a>&nbsp;()</p><p>返回 : int</p><p>解释 :返回文件系统上剩下的可供程序使用的块</p><p>&nbsp;</p><p>方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/StatFs.html#getBlockCount%28%29\">getBlockCount</a>&nbsp;()</p><p>返回 : int</p><p>解释 : 返回文件系统上总共的块</p><p>&nbsp;</p><p>方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/StatFs.html#getBlockSize%28%29\">getBlockSize</a>&nbsp;()</p><p>返回 : int</p><p>解释 : 返回文件系统 一个块的大小单位byte</p><p>&nbsp;</p><p>方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/StatFs.html#getFreeBlocks%28%29\">getFreeBlocks</a>&nbsp;()</p><p>返回 : int</p><p>解释 : 返回文件系统上剩余的所有块 包括预留的一般程序无法访问的</p><p>&nbsp;</p><p>方法 :&nbsp;<a href=\"http://www.chinaup.org/docs/reference/android/os/StatFs.html#restat%28java.lang.String%29\">restat</a>&nbsp;(<a href=\"http://ophone8.com/doc/android10doc-oms8/docs/reference/java/lang/String.html\">String</a>&nbsp;path)</p><p>返回 : void</p><p>解释 : 执行一个由该对象所引用的文件系统雷斯塔特.(Google翻译)</p><p>&nbsp;</p><p>&nbsp;</p><p>想计算SDCard大小和使用情况时, 只需要得到SD卡总共拥有的Block数或是剩余没用的Block数,再乘以每个Block的大小就是相应的容量大小了单位byte.(见代码)</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">       </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> SDCardSizeTest() {<br /></span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 取得SDCard当前的状态</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">        String sDcString </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> android.os.Environment.getExternalStorageState();<br /></span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (sDcString.equals(android.os.Environment.MEDIA_MOUNTED)) {<br /></span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 取得sdcard文件路径</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            File pathFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> android.os.Environment<br /></span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">                    .getExternalStorageDirectory();<br /></span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">            android.os.StatFs statfs </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> android.os.StatFs(pathFile.getPath());<br /></span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取SDCard上BLOCK总数</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> nTotalBlocks </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> statfs.getBlockCount();<br /></span><span sty\nle=\"color: #008080;\">16</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取SDCard上每个block的SIZE</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> nBlocSize </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> statfs.getBlockSize();<br /></span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取可供程序使用的Block的数量</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> nAvailaBlock </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> statfs.getAvailableBlocks();<br /></span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获取剩下的所有Block的数量(包括预留的一般程序无法使用的块)</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> nFreeBlock </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> statfs.getFreeBlocks();<br /></span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 计算SDCard 总容量大小MB</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">27</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> nSDTotalSize </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> nTotalBlocks </span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\"> nBlocSize </span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\"><br /></span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 计算 SDCard 剩余大小MB</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> nSDFreeSize </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> nAvailaBlock </span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\"> nBlocSize </span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">        }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of if</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #008080;\">32</span> <span style=\"color: #008000;\"></span><span style=\"color: #000000;\">    }</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> end of func</span></div></pre></div><p>&nbsp;</p>\n','2010-09-16 14:38:00','2010-09-16 14:38:00',NULL,NULL,'publish',NULL,'Android SDCard操作(文件读写,容量计算)','/post/2012/7/14/1344938608481.html',1,0),(330,0,'open','<p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> isNaN(String value){<br />        </span><span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(value </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">.equals(value.trim())){<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果没有小数点</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(value.indexOf(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">.</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">) </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">){<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">value.matches(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\\\d+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)){<br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">不是数字</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />                }<br />            }<br />            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(value.indexOf(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">.</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">) </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">){<br />                String[] s_arr </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> value.split(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\\\.</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />                String s1 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> s_arr[</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">];<br />                String s2 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> s_arr[</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">];<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">((</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">s1.matches(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\\\d+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) </span><span style=\"color: #000000;\">||</span><span style=\"color: #000000;\"> (</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">s2.matches(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\\\d+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">))){<br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">不是数字</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />                }<br />            }<br />        }<br />　　　　 </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br />　　　　　　flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\"> ;<br />　　　　}<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> flag;<br />    }</span></div></pre></div></p><p>&nbsp;</p>\n','2010-09-15 15:40:00','2010-09-15 15:40:00',NULL,NULL,'publish',NULL,'Java实现isNaN','/post/2012/7/14/1344938608634.html',1,0),(331,0,'open','<p><span>根据文档描述，输入图片必须为Bitmap RGB565格式。</span></p><p>&nbsp;</p><p><span>人脸的检测方法是用双眼来检测人脸的位置，也就是说无法检测到嘴、侧脸等，双眼必须同时可见，并且眼镜会影响检测的效果。</span></p><p>&nbsp;</p><p><span>实际上，FaceDetector检测到的并不是人的全脸，而只是双眼。</span></p><p>&nbsp;</p><p><span>实际测试中，发现图片太小的话检测不到人脸，试验中使用小于100x100的图片检测不到人脸，但是由于Android内存有限，图片太大的话，会出现无法加载图片的异常。</span></p><p>&nbsp;</p><p><span>检测到的人脸存放到FaceDetector.Face类中，该类无法再扩展。从该类可以获取到人眼的中心位置和双眼之间的具体。</span></p><p><span></span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> name.feisky.face;<br /> <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.app.Activity;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.content.Context;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.graphics.Bitmap;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.graphics.BitmapFactory;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.graphics.Canvas;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.graphics.Color;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.graphics.Paint;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.graphics.PointF;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.media.FaceDetector;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.media.FaceDetector.Face;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.os.Bundle;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> android.view.View;<br /> <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AndroidFaceDetector </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> Activity {<br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"> Called when the activity is first created. </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    @Override<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> onCreate(Bundle savedInstanceState) {<br />        </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">.onCreate(savedInstanceState);<br />        setContentView(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> myView(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">));<br />    }<br /> <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> myView </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> View{<br /> <br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> imageWidth, imageHeight;<br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> numberOfFace </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">5</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> FaceDetector myFaceDetect;<br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> FaceDetector.Face[] myFace;<br />        </span><span style=\"color: #0000ff;\">float</span><span style=\"color: #000000;\"> myEyesDistance;<br />        </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> numberOfFaceDetected;<br /> <br />        Bitmap myBitmap;<br /> <br />        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> myView(Context context) {<br />            </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">(context);<br />            BitmapFactory.Options BitmapFactoryOptionsbfo </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BitmapFactory.Options();<br />            BitmapFactoryOptionsbfo.inPreferredConfig </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Bitmap.Config.RGB_565;<br />            myBitmap </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> BitmapFactory.decodeResource(getResources(), R.drawable.pp, BitmapFactoryOptionsbfo);<br />            imageWidth </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> myBitmap.getWidth();<br />            imageHeight </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> myBitmap.getHeight();<br />            myFace </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FaceDetector.Face[numberOfFace];<br />            myFaceDetect </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FaceDetector(imageWidth, imageHeight, numberOfFace);<br />            numberOfFaceDetected </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> myFaceDetect.findFaces(myBitmap, myFace);<br />        }<br /> <br />        </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> onDraw(Canvas canvas) {<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> TODO Auto-generated method stub</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"> <br />            canvas.drawBitmap(myBitmap, </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">, </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);<br /> <br />            Paint myPaint </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Paint();<br />            myPaint.setColor(Color.GREEN);<br />            myPaint.setStyle(Paint.Style.STROKE);<br />            myPaint.setStrokeWidth(</span><span style=\"color: #000000;\">3</span><span style=\"color: #000000;\">);<br /> <br />            </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> numberOfFaceDetected; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />            {<br />                Face face </span><span style=\"color: #000000;\n\">=</span><span style=\"color: #000000;\"> myFace[i];<br />                PointF myMidPoint </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> PointF();<br />                face.getMidPoint(myMidPoint);<br />                myEyesDistance </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> face.eyesDistance();<br />                canvas.drawRect(<br />                        (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)(myMidPoint.x </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\"> myEyesDistance),<br />                        (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)(myMidPoint.y </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\"> myEyesDistance),<br />                        (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)(myMidPoint.x </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> myEyesDistance),<br />                        (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)(myMidPoint.y </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> myEyesDistance),<br />                        myPaint);<br />            }<br />        }<br />    }<br />}</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p>\n','2010-09-14 10:30:00','2010-09-14 10:30:00',NULL,NULL,'publish',NULL,'Android人脸检测类FaceDetector','/post/2012/7/14/1344938608685.html',1,0),(332,0,'open','<p>本文摘抄自&nbsp;<a title=\"深蓝色右手\" href=\"http://www.cnblogs.com/alamiye010/\">深蓝色右手</a>&nbsp;的&nbsp;<a href=\"http://www.cnblogs.com/alamiye010/archive/2010/07/18/1780250.html\" title=\"Silverlight MMORPG网页游戏开发课程[第一期] 序言\">Silverlight MMORPG网页游戏开发课程[第一期] 序言</a>&nbsp;，感觉对于 Silverlight 的初学者非常有用，于是摘抄于此，希望能对更多的人有用。为了省去大家理解上下文的时间，对其中一些文字做了些修改。</p><p>&nbsp;</p><p>1、新建&nbsp;Silverlight&nbsp;项目</p><p>打开&nbsp;Visual Studio 2010（以下简称&nbsp;VS2010），依次点击：文件-&gt;新建-&gt;项目，找到&nbsp;Silverlight&nbsp;节点并选中，然后在右侧的模板中选择&ldquo;Silverlight应用程序&rdquo;，设置好相应的项目创建路径并为该项目取名后点确定(这里我为该项目取名叫 SilvApp)；此时VS2010还会提示我们选择&nbsp;Silverlight&nbsp;网站类型，直接点击确定使用默认配置即可。</p><p>2、解析&nbsp;Silverlight&nbsp;项目结构</p><p align=\"left\">在&ldquo;解决方案资源管理器&rdquo;中可以看到我们刚才新建的&ldquo;SilvApp解决方案&rdquo;包含有两个子项目，分别为：SlivApp&nbsp;和SlivApp.Web。SlivApp项目是Silverlight应用程序项目，默认包含两个文件：App和MainPage。App的作用是程序启动入口及全局资源配置管理，它继承自封装Silverlight&nbsp;应用程序的Application&nbsp;，其中App.xaml.cs文件记载着程序的启动、离开及错误处理：</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;App() {</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Startup +=&nbsp;this.Application_Startup;</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Exit +=&nbsp;this.Application_Exit;</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.UnhandledException +=&nbsp;this.Application_UnhandledException;</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializeComponent();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>App.xaml则主要用于编写界面全局样式等（同学们可以查阅下Application.Resources还有其他什么作用）：</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Application.Resources&gt;</p><p align=\"left\">&nbsp;</p><p>&lt;/Application.Resources&gt;</p><p>MainPage是默认的程序主控件,在App.xaml.cs文件的启动事件中记录了整个项目是通过MainPage的实例来启动的：</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;Application_Startup(object&nbsp;sender,&nbsp;StartupEventArgs&nbsp;e) {</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.RootVisual =&nbsp;new&nbsp;MainPage();</p><p>&nbsp;&nbsp;&nbsp;}</p><p>MainPage就好比网站中的Index或Default，它是Silverlight程序的入口处(MainPage其实就是一个用户控件，我们可以通过在SlivApp项目上点击右键-&gt;添加-&gt;新建项-&gt;Silverlight用户控件的方式创建一个一模一样的该对象)。</p><p>SlivApp项目是Silverlight应用程序项目，那么SlivApp.Web项目即是承载该应用程序的网站载体，SlivApp项目编译后生成的SlivApp.xap文件即保存于SlivApp.Web项目中的ClientBin文件夹下。SlivApp.Web是一个典型的ASP.NET网站，Web.config让我们倍感亲切。项目自动生成的模板中包含有Default.aspx、SilvAppTestPage.aspx、SilvAppTestPage.html这3个页面，其中Default.aspx是Code-Behind的ASP.NET网站页面，SilvAppTestPage.aspx为单独的ASP.NET页面，而SilvAppTestPage.html则是最简单的静态页面。不难看出微软想告诉开发者们：Silverlight作为网页插件，只需在页面代码（HTML）中通过&lt;object&gt;&hellip;&hellip;&lt;/object&gt;方式进行标记即可呈现而不论是动态的还是静态页面亦或是何种类型网页。大家可以根据自己项目的需要，在相应的页面文件上点击右键-&gt;&ldquo;设置为起始页&rdquo;即可。例如，我暂时不需要额外的动态功能，那么我可以选择通过静态页的方式去展示我的Silverlight应用，接下来我完全可以删除掉Default.aspx和SilvAppeTestPage.aspx，然后将SilvAppTestPage.html改名为Index.htm并设置其为起始页一样是OK的<span style=\"font-family: \'Times New Roman\', serif;\">.</span></p><p>接下来打开Index.htm文件，首先把代码最下面那个&nbsp;&ldquo;(&amp;)&rdquo;符号删除掉(笔者注：在我所用的版本中好像没有\"&amp;\"符号)；接着找到&lt;object&gt;&hellip;&hellip;&lt;/object&gt;这段，其中表示Silverlight应用程序路径的关键代码就在其中：</p><p align=\"left\">&lt;param&nbsp;name=\"source\"&nbsp;value=\"ClientBin/Game.xap\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;另外我们还注意到这么一段Js脚本：&lt;script&nbsp;type=\"text/javascript\"&nbsp;src=\"Silverlight.js\"&gt;&lt;/script&gt;，路径指向Game.Web中的Silverlight.js文件，<a href=\"http://www.cnblogs.com/smwikipedia/archive/2009/09/19/1569823.html\"><span style=\"color: #3366cc;\">其实Silverlight.js不过就是通过javascript脚本动态操作页面DOM结构，在指定的DOM节点处生成HTML元素来调用Silverlight ActiveX plugin，或者在该位置生成提示安装Silverlight plugin的HTML元素</span></a>。说白了就是在网页中解析Silverlight用的。</p>\n','2010-09-08 11:39:00','2010-09-08 11:39:00',NULL,NULL,'publish',NULL,'Silverlight 项目结构解析','/post/2012/7/14/1344938608753.html',1,0),(333,0,'open','<p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">Oracle的分页查询语句基本上可以按照本文给出的格式来进行套用。分页查询格式：<br /> <br /></span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"> A.</span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\">, ROWNUM RN </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> TABLE_NAME) A </span><span style=\"color: #0000ff;\">WHERE</span><span style=\"color: #000000;\"> ROWNUM </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000; font-weight: bold;\">40</span><span style=\"color: #000000;\">)</span><span style=\"color: #0000ff;\">WHERE</span><span style=\"color: #000000;\"> RN </span><span style=\"color: #808080;\">&gt;=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000; font-weight: bold;\">21</span><span style=\"color: #000000;\"><br />其中最内层的查询SELECT </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> TABLE_NAME表示不进行翻页的原始查询语句。ROWNUM </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> 40和RN </span><span style=\"color: #808080;\">&gt;=</span><span style=\"color: #000000;\"> 21控制分页查询的每页的范围。<br />上面给出的这个分页查询语句，在大多数情况拥有较高的效率。分页的目的就是控制输出结果集大小，将结果尽快的返回。在上面的分页查询语句中，这种考虑主要体现在WHERE ROWNUM </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> 40这句上。<br />选择第21到40条记录存在两种方法，一种是上面例子中展示的在查询的第二层通过ROWNUM </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> 40来控制最大值，在查询的最外层控制最小值。而另一种方式是去掉查询第二层的WHERE ROWNUM </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> 40语句，在查询的最外层控制分页的最小值和最大值。这是，查询语句如下：<br /></span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"> A.</span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\">, ROWNUM RN </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> TABLE_NAME) A )</span><span style=\"color: #0000ff;\">WHERE</span><span style=\"color: #000000;\"> RN </span><span style=\"color: #808080;\">BETWEEN</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000; font-weight: bold;\">21</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">AND</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000; font-weight: bold;\">40</span><span style=\"color: #000000;\"><br />对比这两种写法，绝大多数的情况下，第一个查询的效率比第二个高得多。<br />这是由于CBO优化模式下，Oracle可以将外层的查询条件推到内层查询中，以提高内层查询的执行效率。对于第一个查询语句，第二层的查询条件WHERE ROWNUM </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> 40就可以被Oracle推入到内层查询中，这样Oracle查询的结果一旦超过了ROWNUM限制条件，就终止查询将结果返回了。<br />而第二个查询语句，由于查询条件BETWEEN </span><span style=\"color: #800000; font-weight: bold;\">21</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">AND</span><span style=\"color: #000000;\"> 40是存在于查询的第三层，而Oracle无法将第三层的查询条件推到最内层（即使推到最内层也没有意义，因为最内层查询不知道RN代表什么）。因此，对于第二个查询语句，Oracle最内层返回给中间层的是所有满足条件的数据，而中间层返回给最外层的也是所有数据。数据的过滤在最外层完成，显然这个效率要比第一个查询低得多。<br />上面分析的查询不仅仅是针对单表的简单查询，对于最内层查询是复杂的多表联合查询或最内层查询包含排序的情况一样有效。<br /> Oracle查询中rownum与Order by查询的关系<br />在开发应用的时候，把数据按照一定的规则排序后再取前几条数据这种操作是很平常的事情。我们在Oracle中常用的就是order </span><span style=\"color: #0000ff;\">by</span><span style=\"color: #000000;\">，然后取得rownum小于多少的数据这种方法。不过如果对Oracle不熟悉，也许就会发现你写的SQL语句检索出来的值不正确，这个是为什么呢。<br />因为Oracle在检索的时候，会首先把数据都检索出来，然后在排序段中进行排序。假如你有一个SQL语句如下所示。<br /></span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"><br /> EMP_NO<br /></span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"><br /> EMP<br /></span><span style=\"color: #0000ff;\">WHERE</span><span style=\"color: #000000;\"><br /> ROWNUM </span><span style=\"color: #808080;\">&lt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000; font-weight: bold;\">10</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">ORDER</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">BY</span><span style=\"color: #000000;\"><br /> EMP_NO<br />在检索的时候，会首先把数据检索出来，也就是把EMP表数据都检索出来，然后再Order by排序操作。因为ROWNUM 数据是在排序前就检索出来的了，所以不能利用ROWNUM来取得排序后的前10条操作。那么应该如何操作呢。其实很简单，利用子查询，先排序，再取 ROWNUM。如下所示<br /></span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"><br /> EMP_NO<br /></span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"><br /> (<br /> </span><span style=\"color: #0000ff;\">SELECT</span><span style=\"color: #000000;\"><br /> EMP_NO<br /> </span><span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"><br /> EMP<br /> </span><span style=\"color: #0000ff;\">ORDER</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">BY</span><span style=\"color: #000000;\"><br /> EMP_NO<br /> )<br /></span><span style=\"color: #0000ff;\">WHERE</span><span style=\"color: #000000;\"><br /> ROWNUM </span><span style=\"color: #808080;\">&lt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000; font-weight: bold;\">10</span><span style=\"color: #000000;\"><br />这样你就会发现你最后可以检索到你需要的结果了Hibernate 可以实现分页查询，例如： 　　从第2万条开始取出100条记录 <br />　　Query q </span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\"> session.createQuery(\"< /span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> Cat </span><span style=\"color: #0000ff;\">as</span><span style=\"color: #000000;\"> c\"); 　　q.setFirstResult(</span><span style=\"color: #800000; font-weight: bold;\">20000</span><span style=\"color: #000000;\">); 　　q.setMaxResults(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">); 　　List l </span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\"> q.list(); <br />　　那么Hibernate底层如何实现分页的呢？实际上Hibernate的查询定义在net.sf.hibernate.loader.Loader这个类里面，仔细阅读该类代码，就可以把问题彻底搞清楚。 <br />　　Hibernate2.</span><span style=\"color: #800000; font-weight: bold;\">0</span><span style=\"color: #000000;\">.3的Loader源代码第480行以下： <br />　　</span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (useLimit) sql </span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\"> dialect.getLimitString(sql); 　　PreparedStatement st </span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\"> session.getBatcher().prepareQueryStatement(sql, scrollable); <br />　　如果相应的数据库定义了限定查询记录的sql语句，那么直接使用特定数据库的sql语句。 <br />　　然后来看net.sf.hibernate.dialect.MySQLDialect: <br />　　</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> boolean supportsLimit() { 　　</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> true; 　　} 　　</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getLimitString(String sql) { 　　StringBuffer pagingSelect </span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\"> new StringBuffer(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">); 　　pagingSelect.append(sql); 　　pagingSelect.append(\" limit ?, ?\"); 　　</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> pagingSelect.toString(); 　　} <br />　　这是MySQL的专用分页语句，再来看net.sf.hibernate.dialect.Oracle9Dialect: <br />　　</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> boolean supportsLimit() { 　　</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> true; 　　} <br />　　</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getLimitString(String sql) { 　　StringBuffer pagingSelect </span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\"> new StringBuffer(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">); 　　pagingSelect.append(\"</span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> ( </span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> row_.</span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\">, rownum rownum_ </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> ( \"); 　　pagingSelect.append(sql); 　　pagingSelect.append(\" ) row_ </span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> rownum </span><span style=\"color: #808080;\">&lt;=</span><span style=\"color: #000000;\"> ?) </span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> rownum_ </span><span style=\"color: #808080;\">&gt;</span><span style=\"color: #000000;\"> ?\"); 　　</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> pagingSelect.toString(); 　　} <br />　　Oracle采用嵌套3层的查询语句结合rownum来实现分页，这在Oracle上是最快的方式，如果只是一层或者两层的查询语句的rownum不能支持order </span><span style=\"color: #0000ff;\">by</span><span style=\"color: #000000;\">。<br /></span></span></div></pre></div></p><p>&nbsp;</p>\n','2010-08-24 16:32:00','2010-08-24 16:32:00',NULL,NULL,'publish',NULL,'oracle的分页查询','/post/2012/7/14/1344938608810.html',1,0),(334,0,'open','<span class=\"Apple-style-span\" style=\"border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; font-size: medium;\"><span class=\"Apple-style-span\" style=\"font-family: Arial; font-size: 14px; line-height: 22px;\"><pre style=\"margin: 0px; padding: 0px; font-weight: normal; white-space: pre-wrap; word-wrap: break-word; font-size: 14px; line-height: 22px; font-family: Arial;\">◆设定索引！◆在过滤条件中，可以过滤掉最大数量记录的条件必须放在where子句的末尾； ◆FROM子句中写在最后的表（基础表，driving table）将被最先处理，在FROM子句中包含多个表的情况下，你必须选择记录条数最少的表作为基础表。如果有三个以上的连接查询，那就需要选择交叉表（intersection table）作为基础表，交叉表是指那个被其他表所引用的表； ◆采用绑定变量 ◆在WHERE中尽量不要使用OR ◆用EXISTS替代IN、用NOT EXISTS替代NOT IN； ◆避免在索引列上使用计算：WHERE SAL*12&gt;25000； ◆用IN来替代OR： WHERE LOC_ID=10 OR LOC_ID=15 OR LOC_ID=20 ◆避免在索引列上使用IS NULL和IS NOT NULL； ◆总是使用索引的第一个列； ◆用UNION-ALL替代UNION； ◆避免改变索引列的类型：SELECT...FROM EMP WHERE EMPNO=\'123\'，由于隐式数据类型转换，to_char(EMPNO)=\'123\'，因此，将不采用索引，一般在采用字符串拼凑动态SQL语句出现； ◆\'!=\' 将不使用索引； ◆优化GROUP BY； ◆避免带有LIKE参数的通配符，LIKE \'4YE%\'使用索引，但LIKE \'%YE\'不使用索引 ◆避免使用困难的正规表达式，例如select * from customer where zipcode like \"98___\"，即便在zipcode上建立了索引，在这种情况下也还是采用顺序扫描的方式。如果把语句改成select * from customer where zipcode&gt;\"98000\"，在执行查询时就会利用索引来查询，显然会大大提高速度； ◆尽量明确的完成SQL语句，尽量少让数据库工作。比如写SELECT语句时，需要把查询的字段明确指出表名。尽量不要使用SELECT *语句。组织SQL语句的时候，尽量按照数据库的习惯进行组织。 </pre></span></span>\n','2010-08-23 10:47:00','2010-08-23 10:47:00',NULL,NULL,'publish',NULL,'数据库优化','/post/2012/7/14/1344938608870.html',1,0),(335,0,'open','<p>1.首先,在spring的hibernate配置里(我的是applicationContext-hibernate.xml)&nbsp;加上如下属性:</p><p>&lt;bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\"&gt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&lt;property name=\"dataSource\"&gt;<br />&nbsp;&nbsp;&nbsp;&lt;ref bean=\"dataSource\"/&gt;<br />&nbsp;&nbsp;&lt;/property&gt;<br />&nbsp;&nbsp;&lt;property name=\"mappingResources\"&gt;<br />&nbsp;&nbsp;&nbsp;&lt;list&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;org/appfteaching/model/TArticleclass.hbm.xml&lt;/value&gt;<br />&nbsp;&nbsp;&nbsp;&lt;/list&gt;<br />&nbsp;&nbsp;&lt;/property&gt;<br />&nbsp;&nbsp;&lt;property name=\"hibernateProperties\"&gt;<br />&nbsp;&nbsp;&nbsp;&lt;props&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;prop key=\"hibernate.dialect\"&gt;${hibernate.dialect}&lt;/prop&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;prop key=\"hibernate.show_sql\"&gt;${hibernate.show_sql}&lt;/prop&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;prop key=\"hibernate.jdbc.fetch_size\"&gt;${hibernate.jdbc.fetch_size}&lt;/prop&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;prop key=\"hibernate.jdbc.batch_size\"&gt;${hibernate.jdbc.batch_size}&lt;/prop&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #ff0000;\">&lt;prop key=\"hibernate.cache.use_query_cache\"&gt;true&lt;/prop&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;prop key=\"hibernate.cache.provider_class\"&gt;org.hibernate.cache.EhCacheProvider&lt;/prop&gt;<br /></span>&nbsp;&nbsp;&nbsp;&lt;/props&gt;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;<br />&nbsp;&lt;/bean&gt;&nbsp;</p><p>2.其次,在src目录下的ehcache.xml中配置如下信息(如果是默认ehcache.xml则会有&lt;cache name=\"sampleCache1\"&gt;和&lt;cache name=\"sampleCache2&gt;\",去掉)</p><p>&lt;cache name=\"org.hibernate.cache.StandardQueryCache\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsInMemory=\"10000\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal=\"false\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds=\"300\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds=\"4200\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk=\"true\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;!-- Sample cache named sampleCache2<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This cache contains 1000 elements. Elements will always be held in memory.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; They are not expired. --&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;cache name=\"org.hibernate.cache.UpdateTimestampsCache\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsInMemory=\"5000\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal=\"true\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds=\"0\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds=\"0\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk=\"false\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&gt;</p><p>3.将你要缓存的model加进ehcache.xml里</p><p>&lt;cache name=\"org.appfteaching.model.TArticleclass\"&nbsp;<br />&nbsp;&nbsp;&nbsp; &nbsp;maxElementsInMemory=\"1000\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal=\"false\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds=\"100\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds=\"4200\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk=\"true\"<br />&nbsp;&nbsp;&nbsp; &nbsp;/&gt;&nbsp;&nbsp;</p><p>4.最后一步,在TArticleclass.hbm.xml里加上</p><p>&lt;cache usage=\"read-write\"/&gt;</p><p>启动Tomcat,如发现如下错误</p><p>Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.<br />Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.</p><p>则是第二步没有做,加上即可.配置完毕</p>\n','2010-08-19 16:18:00','2010-08-19 16:18:00',NULL,NULL,'publish',NULL,'Spring中配置hibernate二级缓存','/post/2012/7/14/1344938608927.html',1,0),(336,0,'open','<p>一：WebLogic配置问题：<br />由于WebLogic的配置问题，我们的系统运行出现了失败情况。原因是为WebLogic分配的内存太少了。通过修改commom\\bin\\commEnv.cmd文件来增加内存分配。<br />修改的部分如下：<br />:bea<br />if \"%PRODUCTION_MODE%\" == \"true\" goto bea_prod_mode<br />set JAVA_VM=-jrockit<br />set MEM_ARGS=-Xms768m -Xmx1024m<br />set JAVA_OPTIONS=%JAVA_OPTIONS% -Xverify:none<br />goto continue<br />:bea_prod_mode<br />set JAVA_VM=-jrockit<br />set MEM_ARGS=-Xms768m -Xmx1024m&nbsp;&nbsp; //原来是128M~256M，太小了，数据太大<br />goto continue<br />结果修改后，没有效果。还是有失败的情况。<br />发现，原来，在：bea下面还有一段配置信息如下：<br />:sun<br />if \"%PRODUCTION_MODE%\" == \"true\" goto sun_prod_mode<br />set JAVA_VM=-client<br />set MEM_ARGS=-Xms768m -Xmx1024m -XX:MaxPermSize=256m<br />set JAVA_OPTIONS=%JAVA_OPTIONS% -Xverify:none<br />goto continue<br />:sun_prod_mode<br />set JAVA_VM=-server<br />set MEM_ARGS=-Xms768m -Xmx1024m -XX:MaxPermSize=256m<br />goto continue<br /><br />将这里的内存分配修改后见效。<br />原因是，上面对第一段代码是为bea自己的JVM设置的，下面的是为Sun的设置的。而WebLogic默认的是Sun的，所以出了毛病。<br /><br />二,domain中的相关配置:<br />&nbsp;&nbsp;1,修改bea\\user_projects\\domains\\base_domain\\bin\\setDomainEnv.cmd文件.<br />&nbsp;&nbsp;2,修改如下几个位置:以下蓝色部分是需修改的内存大小<br /><br />&nbsp; &nbsp;&nbsp;&nbsp;set MEM_ARGS=-Xms256m -Xmx512m&nbsp;&nbsp; @最主要将这两个值改大,这是此域启动后,虚拟机可使用的内存<br /><br />&nbsp; &nbsp;&nbsp;&nbsp;if \"%JAVA_VENDOR%\"==\"Sun\" (&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;@使用sun服务器开发模式下的JVM配置<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if \"%PRODUCTION_MODE%\"==\"\" (<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;set MEM_DEV_ARGS=-XX:CompileThreshold=8000 -XX ermSize=48m <br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; )<br />&nbsp; &nbsp;&nbsp; &nbsp;)<br /><br />&nbsp; &nbsp; if \"%JAVA_VENDOR%\"==\"Sun\" (&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@使用sun服务器生产模式下的JVM配置<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;set MEM_ARGS=%MEM_ARGS% %MEM_DEV_ARGS% -XX:MaxPermSize=128m<br />&nbsp; &nbsp; )<br />&nbsp; &nbsp;if \"%JAVA_VENDOR%\"==\"HP\" (&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@使用hp服务器生产模式下的JVM配置<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;set MEM_ARGS=%MEM_ARGS% -XX:MaxPermSize=128m<br />&nbsp; &nbsp;)</p>\n','2010-08-18 10:06:00','2010-08-18 10:06:00',NULL,NULL,'publish',NULL,'weblogic内存分配','/post/2012/7/14/1344938608982.html',1,0),(337,0,'open','<div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">方案一 :以原型方式调用，即obj.trim()形式，此方式简单且使用方面广泛，定义方式如下：</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script language</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&rdquo;javascript&rdquo;</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*<br />* 删除左右两端的空格<br /></span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />String.prototype.trim</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">()<br />{<br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(^\\s*)|(\\s*$)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">g, &rdquo;);<br />}<br /></span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*<br />* 删除左边的空格<br /></span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />String.prototype.ltrim</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">()<br />{<br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(^\\s*)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">g,&rdquo;);<br />}<br /></span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*<br />* 删除右边的空格<br /></span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />String.prototype.rtrim</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">()<br />{<br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(\\s*$)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">g,&rdquo;);<br />}<br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">使用示例如下：</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&rdquo;text</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">javascript&rdquo;&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">alert(document.getElementById(&rsquo;abc&rsquo;).value.trim());<br />alert(document.getElementById(&rsquo;abc&rsquo;).value.ltrim());<br />alert(document.getElementById(&rsquo;abc&rsquo;).value.rtrim());<br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">方案二：以工具方式调用，即trim(obj)的形式，此方式可以用于特殊处理需要，定义方式如下：</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&rdquo;text</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">javascript&rdquo;&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*<br />* 删除左右两端的空格<br /></span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> trim(str)<br />{<br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> str.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(^\\s*)|(\\s*$)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">g, &rdquo;);<br />}<br /></span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*<br />* 删除左边的空格<br /></span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> ltrim(str)<br />{<br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> str.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(^\\s*)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">g,&rdquo;);<br />}<br /></span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*<br />* 删除右边的空格<br /></span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> rtrim(str)<br />{<br />     </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> str.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(\\s*$)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">g,&rdquo;);<br />}<br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br />使用示例如下：<br /><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&rdquo;text</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">javascript&rdquo;&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">alert(trim(document.getElementById(&rsquo;abc&rsquo;).value));<br />alert(ltrim(document.getElementById(&rsquo;abc&rsquo;).value));<br />alert(rtrim(document.getElementById(&rsquo;abc&rsquo;).value));<br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br /></span></div></pre></div><p>&nbsp;</p>\n','2010-07-14 09:50:00','2010-07-14 09:50:00',NULL,NULL,'publish',NULL,'javascript trim方法的实现','/post/2012/7/14/1344938609043.html',1,0),(338,0,'open','<div class=\"tit\">css统一设置input样式（区分input类型）</div><div class=\"date\">2009-04-20 15:38</div><table style=\"table-layout: fixed;\"><tbody><tr><td><div class=\"cnt\" id=\"blog_text\"><div><p>当你看到&lt;input&gt;这个html标签的时候，你会想到什么？一个文本框？一个按钮？一个单选框？一个复选框？&hellip;&hellip;对，对，对，它们都对。也许你可能想不到，这个小小的input竟然可以创造出10个不同的东西，下面是个列表，看看，哪些是你没有想到的：</p><p>&lt;input type=\"text\" /&gt; 文本框 <br />&lt;input type=\"password\" /&gt; 密码框 <br />&lt;input type=\"submit\" /&gt; 提交按钮 <br />&lt;input type=\"reset\" /&gt; 重置按钮 <br />&lt;input type=\"radio\" /&gt; 单选框 <br />&lt;input type=\"checkbox\" /&gt; 复选框 <br />&lt;input type=\"button\" /&gt; 普通按钮 <br />&lt;input type=\"file\" /&gt; 文件选择控件 <br />&lt;input type=\"hidden\" /&gt; 隐藏框 <br />&lt;input type=\"image\" /&gt; 图片按钮</p><p>所以你可能会说，input真是一个伟大的东西，竟然这么有&ldquo;搞头&rdquo;，但是当你真正在项目中试图给不同的控件设置不同的样式时，你就会发现，input真的可以把&ldquo;你的头搞大&rdquo;。我不知道为什么当初要给input赋予那么多身份，但是，他的&ldquo;N重身份&rdquo;给网站设计者的确带来了不少的麻烦。好在，劳动人民是伟大的，解决问题的办法还是有滴～，虽然它们都有各自致命的缺点 Orz&hellip; 解放方法大致归纳一下，列表如下（小弟才疏，错误遗漏难免，还请各位高人指点）：</p><p>1.用css的expression判断表达式</p><p>2.用css中的type选择器</p><p>3.用javascript脚本实现</p><p>4.如果你用Microsoft Visual Studio 2005 或者后续版本开发项目，恭喜，你还可以使用skin。</p><p>下面就来讲解一下各个办法的详细实现和它们的优缺点。</p><p><strong><span style=\"color: #800080;\">1：用css的expression判断表达式</span></strong></p><p>实现代码参考：</p><p>&lt;!doctype html public \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"<a href=\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><span style=\"text-decoration: underline;\"><span style=\"color: #0000ff;\">http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</span></span></a>\"&gt;</p><p>&lt;html xmlns=\"<a href=\"http://www.w3.org/1999/xhtml\"><span style=\"text-decoration: underline;\"><span style=\"color: #0000ff;\">http://www.w3.org/1999/xhtml</span></span></a>\" &gt;</p><p>&lt;head&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;title&gt; diffInput2 &lt;/title&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Author\" content=\"JustinYoung\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Keywords\" content=\"\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Description\" content=\"\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;style type=\"text/css\"&gt;</p><p>&nbsp;&nbsp;&nbsp; input</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; background-color:<span style=\"color: #0000ff;\">expression(this.type==\"text\"?\'#FFC\':\'\');</span></p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp; &lt;/style&gt;</p><p>&lt;/head&gt;</p><p>&lt;body&gt;</p><p>&lt;dl&gt;</p><p>&lt;dt&gt;This is normal textbox:&lt;dd&gt;&lt;input type=\"text\" name=\"\"&gt;</p><p>&lt;dt&gt;This is normal button:&lt;dd&gt;&lt;input type=\"button\" value=\"i\'m button\"&gt;</p><p>&lt;/dl&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p><span style=\"color: #ff0000;\">优点：</span>简单，轻量级</p><p><span style=\"color: #ff0000;\">缺点：</span>expression判断表达式FireFox是不支持的。致命的是只能区分出一个（例如例子中就只能区分出text文本框），不要试图设置多个，下面的会将上面的覆盖掉 Orz&hellip;</p><p><strong>★★★★★★★★★★★★★★★★★★★★★★★★★★★</strong></p><p><strong>另一种方法：</strong></p><p>input{<br /><span style=\"color: #ff0000;\">&nbsp;&nbsp;&nbsp; zoom: expression</span>(function(ele){(ele.className)?ele.className+=\" \"+ele.type:ele.className=ele.type; ele.style.zoom = \"1\";}(this));<br />}</p><p><br /><strong>两点：</strong></p><p>1、将 input 的属性取出来，赋给 className。</p><p>2、对于 expression，这里使用一个无关紧要的属性（此处是zoom）来触发，处理完需要做的事情之后，再将此属性覆盖掉以解决 expression 不断执行的效率问题。</p><p><br /><strong>&lt;!--[if lt IE 7]&gt;<br /></strong><br />&lt;style type=\"text/css\" media=\"screen\"&gt;<br />input{ <br /><span style=\"color: #ff0000;\">zoom: expression</span>(function(ele){(ele.className)?ele.className+=\" \"+ele.type:ele.className=ele.type; ele.style.zoom = \"1\";}(this));<br />}<br />input.text{<br />border: 1px solid; border-color: #CCC #EEE #EEE #CCC;<br />background: #F5F5F5;<br />}<br />input.password{<br />border: 1px solid; border-color: #CCC #EEE #EEE #CCC;<br />color: #000; background: #F5F5F5;<br />width: 50px;<br />}<br />input.button{<br />border: 1px solid; border-color: #EEE #CCC #CCC #EEE;<br />color: #000; font-weight: bold; background: #F5F5F5;<br />}<br />input.reset{<br />border: 1px solid; border-color: #EEE #CCC #CCC #EEE;<br />color: #666; background: #F5F5F5;<br />}<br />&lt;/style&gt;<br /><strong>&lt;![endif]--&gt;<br /></strong><br />&lt;style type=\"text/css\" media=\"all\"&gt;<br />input[type=\"text\"]{<br />border: 1px solid; border-color: #CCC #EEE #EEE #CCC;<br />background: #F5F5F5;<br />}<br />input[type=\"password\"]{<br />border: 1px solid; border-color: #CCC #EEE #EEE #CCC;<br />color: #000; background: #F5F5F5;<br />width: 50px;<br />}<br />input[type=\"button\"]{<br />border: 1px solid; border-color: #EEE #CCC #CCC #EEE;<br />color: #000; font-weight: bold; background: #F5F5F5;<br />}<br />input[type=\"reset\"]{<br />border: 1px solid; border-color: #EEE #CCC #CCC #EEE;<br />color: #666; background: #F5F5F5;<br />}<br />&lt;/style&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&lt;input type=\"text\" name=\"xx\" /&gt;<br />&lt;input type=\"password\" name=\"yy\" /&gt;<br />&lt;input type=\"checkbox\" name=\"oo\" /&gt;<br />&lt;input type=\"radio\" name=\"pp\" /&gt;<br />&lt;input type=\"button\" name=\"qq\" value=\"button\" /&gt;<br />&lt;input type=\"reset\" name=\"oo\" value=\"reset\" /&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</p><p>&nbsp;</p><p><strong>★★★★★★★★★★★★★★★★★★★★★★★★★★★</strong></p><p>&nbsp;</p><p><strong><span style=\"color: #800080;\">2：用css中的type选择器</span></strong></p><p>实现参考代码：</p><p>&lt;!doctype html public \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"<a href=\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><span style=\"text-decoration: underline;\"><span style=\"color: #0000ff;\">http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</span></span></a>\"&gt;</p><p>&lt;html xmlns=\"<a href=\"http://www.w3.org/1999/xhtml\"><span style=\"text-decoration: underline;\"><span style=\"color: #0000ff;\">http://www.w3.org/1999/xhtml</span></span></a>\" &gt;</p><p>&lt;head&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;title&gt; diffInput2 &lt;/title&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Author\" content=\"JustinYoung\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Keywords\" content=\"\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Description\" content=\"\"/&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;style type=\"text/css\"&gt;</p><p>&nbsp;&nbsp;&nbsp; <span style=\"color: #0000ff;\">input[type=\"text\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; background-color:#FFC;</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p><span style=\"color: #0000ff;\">&nbsp;&nbsp;&nbsp; input[type=\"password\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; background-image:url(BG.gif);</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p><span style=\"color: #0000ff;\">&nbsp;&nbsp;&nbsp; input[type=\"submit\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; background-color:blue;< /p></p><p>&nbsp;&nbsp;&nbsp; color:white;</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p><span style=\"color: #0000ff;\">&nbsp;&nbsp;&nbsp; input[type=\"reset\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; background-color:navy;</p><p>&nbsp;&nbsp;&nbsp; color:white;</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p><span style=\"color: #0000ff;\">&nbsp;&nbsp; input[type=\"radio\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; /*In FF,Some radio style like background-color not been supported*/</p><p>&nbsp;&nbsp;&nbsp; margin:10px;</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p><span style=\"color: #0000ff;\">&nbsp;&nbsp;&nbsp; input[type=\"checkbox\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; /*In FF,Some checkbox style like background-color not been supported*/</p><p>&nbsp;&nbsp;&nbsp; margin:10px;</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p><span style=\"color: #0000ff;\">&nbsp;&nbsp;&nbsp; input[type=\"button\"]</span></p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; background-color:lightblue;</p><p>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp; &lt;/style&gt;</p><p>&lt;/head&gt;</p><p>&lt;body&gt;</p><p>&lt;dl&gt;</p><p>&lt;dt&gt;This is normal textbox:&lt;dd&gt;&lt;input type=\"text\" name=\"\"&gt;</p><p>&lt;dt&gt;This is password textbox:&lt;dd&gt;&lt;input type=\"password\" name=\"\"&gt;</p><p>&lt;dt&gt;This is submit button:&lt;dd&gt;&lt;input type=\"submit\"&gt;</p><p>&lt;dt&gt;This is reset button:&lt;dd&gt;&lt;input type=\"reset\"&gt;</p><p>&lt;dt&gt;This is radio:&lt;dd&gt;&lt;input type=\"radio\" name=\"ground1\"&gt; &lt;input type=\"radio\" name=\"ground1\"&gt;</p><p>&lt;dt&gt;This is checkbox:&lt;dd&gt;&lt;input type=\"checkbox\" name=\"ground2\"&gt; &lt;input type=\"checkbox\" name=\"ground2\"&gt;</p><p>&lt;dt&gt;This is normal button:&lt;dd&gt;&lt;input type=\"button\" value=\"i\'m button\"&gt;</p><p>&lt;/dl&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p><span style=\"color: #ff0000;\">优点：</span>简单，明了，可以分区出各个input控件形态。</p><p><span style=\"color: #ff0000;\">缺点：</span>type选择器，IE6之前的对web标准支持的不太好的浏览器不能支持（致命呀 Orz&hellip;）</p><p>&nbsp;</p><p><strong><span style=\"color: #800080;\">3：用javascript脚本实现</span></strong></p><p>实现参考代码：</p><p>前台html代码：</p><p>&lt;!doctype html public \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"<a href=\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><span style=\"text-decoration: underline;\"><span style=\"color: #0000ff;\">http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</span></span></a>\"&gt;</p><p>&lt;html xmlns=\"<a href=\"http://www.w3.org/1999/xhtml\"><span style=\"text-decoration: underline;\"><span style=\"color: #0000ff;\">http://www.w3.org/1999/xhtml</span></span></a>\" &gt;</p><p>&lt;head&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;title&gt; diffInput &lt;/title&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Author\" content=\"JustinYoung\"&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Keywords\" content=\"\"&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta name=\"Description\" content=\"\"&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" &gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;style type=\"text/css\"&gt;</p><p>&nbsp;&nbsp;&nbsp; input{behavior:url(\'css.htc\');}</p><p>&nbsp;&nbsp;&nbsp; &lt;/style&gt;</p><p>&lt;/head&gt;</p><p>&lt;body&gt;</p><p>&lt;dl&gt;</p><p>&lt;dt&gt;This is normal textbox:&lt;dd&gt;&lt;input type=\"text\" name=\"\"&gt;</p><p>&lt;dt&gt;This is password textbox:&lt;dd&gt;&lt;input type=\"password\" name=\"\"&gt;</p><p>&lt;dt&gt;This is submit button:&lt;dd&gt;&lt;input type=\"submit\"&gt;</p><p>&lt;dt&gt;This is reset button:&lt;dd&gt;&lt;input type=\"reset\"&gt;</p><p>&lt;dt&gt;This is radio:&lt;dd&gt;&lt;input type=\"radio\" name=\"ground1\"&gt; &lt;input type=\"radio\" name=\"ground1\"&gt;</p><p>&lt;dt&gt;This is checkbox:&lt;dd&gt;&lt;input type=\"checkbox\" name=\"ground2\"&gt; &lt;input type=\"checkbox\" name=\"ground2\"&gt;</p><p>&lt;dt&gt;This is normal button:&lt;dd&gt;&lt;input type=\"button\" value=\"i\'m button\"&gt;</p><p>&lt;/dl&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p><strong>Css.htc代码：</strong></p><p><span style=\"color: #0000ff;\">&lt;script language=javascript&gt;</span></p><p>switch(type)</p><p>{</p><p>&nbsp;&nbsp;&nbsp; case \'text\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundColor=\"red\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; case \'password\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundImage=\"url(BG.gif)\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; case \'submit\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundColor=\"blue\";</p><p>&nbsp;&nbsp;&nbsp; style.color=\"white\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; case \'reset\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundColor=\"navy\";</p><p>&nbsp;&nbsp;&nbsp; style.color=\"white\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; case \'radio\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundColor=\"hotpink\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; case \'checkbox\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundColor=\"green\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; case \'button\':</p><p>&nbsp;&nbsp;&nbsp; style.backgroundColor=\"lightblue\";</p><p>&nbsp;&nbsp;&nbsp; break;</p><p>&nbsp;&nbsp;&nbsp; default: ;//others use default style.</p><p>}</p><p><span style=\"color: #0000ff;\">&lt;/script&gt;</span></p><p><span style=\"color: #ff0000;\">优点：</span>可以分区出各个input控件形态。多种技术的混合使用，满足&ldquo;我是高手&rdquo;的虚荣心。</p><p><span style=\"color: #ff0000;\">缺点：</span>技术牵扯面教广，因为用js后期处理，所以在js没有起作用之前，各个input还是原始状态，然后突然&ldquo;变帅&rdquo;会让你的页面很奇怪。较致命的是FireFox不支持 Orz&hellip;</p><p><strong><span style=\"color: #800080;\">4：Microsoft Visual Studio 2005中使用skin。</span></strong></p><p>Skin文件参考代码：</p><p><span style=\"color: #0000ff;\">&lt;%--Style for common TextBox--%&gt;</span></p><p>&lt;asp:TextBox runat=\"server\" style=\"background-color:#FFC \"&gt;&lt;/asp:TextBox&gt;</p><p>&lt;asp:Button runat=\"server\" style=&rdquo;background-color:red&rdquo;&gt;&lt;/asp:Button&gt;</p><p><br />注意里面的样式是用style加上的，而不是用cssClass，道理很简单，如果用cssClass，前面的再用cssClass就会覆盖这个cssClass。导致失败。当然，skin不能单独使用，还要配合css样式表。</p><p><span style=\"color: #ff0000;\">优点：</span>可以分区出各个控件形态（注意：skin只能对服务器端控件使用，所以现在已经不是单纯的input标签了，虽然这些服务器端控件&ldquo;打到&rdquo;前台的时候仍然是input控件）。除了css，又被分离一层，使得样式的设置能有更好的定制性。其他优点（参考skin的优点）。</p></div></div></td></tr></tbody></table>\n','2010-07-02 15:00:00','2010-07-02 15:00:00',NULL,NULL,'publish',NULL,'css统一设置input样式（区分input类型）','/post/2012/7/14/1344938609101.html',1,0),(339,0,'open','<p>Servlet规范中所引入的filter令人心动不已，因为它引入了一个功能强大的拦截模式。Filter是这样一种Java对象，它能在request到达servlet的服务方法之前拦截HttpServletRequest对象，而在服务方法转移控制后又能拦截HttpServletResponse对象。你可以使用filter来实现特定的任务，比如验证用户输入，以及压缩web内容。但你拟富有成效地使用过滤器的念头却被你不能改变HttpServletRequest对象的参数的现实扫了兴，因为java.util.Map所包装的HttpServletRequest对象的参数是不可改变的。这极大地缩减了filter的应用范围。至少在一半的时间里，你希望可以改变准备传送给filter的对象。如果在HttpServletRequest对象到达Struts的action servlet之前，我们可以通过一个filter将用户输入的多余空格去掉，难道不是更美妙吗？这样的话，你就不必等到在Struts的action表单验证方法中才进行这项工作了。&nbsp;<br style=\"line-height: normal;\" />幸运的是，尽管你不能改变不变对象本身，但你却可以通过使用装饰模式来改变其状态。&nbsp;<br style=\"line-height: normal;\" />现在，让我们来看看，如何编写自己的HttpServletRequest装饰类。&nbsp;<br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" />一个删除空白字符的Filter&nbsp;<br style=\"line-height: normal;\" />本节将以上的理论投入实际使用，通过实现一个删除空白字符的filter，来演示如何使用javax.servlet.http.HttpServletRequestWrapper类来装饰HttpServletRequest对象。在本例中，这个filter将删除所传来的参数中多余的空白字符。&nbsp;<br style=\"line-height: normal;\" />这在许多servlet/JSP应用中是很有用的，包括Struts及JavaServer Faces等应用。例如，Struts通过调用HttpServletRequest对象的getParameterValues()对象来处理action表单。通过覆盖装饰类中此方法，你可以改变当前HttpServletRequest对象的状态。&nbsp;<br style=\"line-height: normal;\" />要创建HttpServletRequest的装饰类，你需要继承HttpServletRequestWrapper并且覆盖你希望改变的方法。列表5中，MyRequestWrapper类将删除getParameterValues()方法返回值的多余空白字符。&nbsp;<br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" />HttpServerletRequest装饰类&nbsp;<br style=\"line-height: normal;\" /><span style=\"line-height: normal;\">&nbsp;</span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> trimmer.filter; <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequest; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequestWrapper; <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MyRequestWrapper </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> HttpServletRequestWrapper { <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MyRequestWrapper(HttpServletRequest servletRequest) { <br /></span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">(servletRequest); <br />} <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String[] getParameterValues(String parameter) { <br />String[] results </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">.getParameterValues(parameter); <br /></span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (results </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) <br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; <br /></span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> count </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> results.length; <br />String[] trimResults </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> String[count]; <br /></span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> count; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) { <br />trimResults[i] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> results[i].trim(); <br />} <br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> trimResults; <br />} <br />} <br />列表6演示了如何载获Http请求并装饰HttpServletRequest对象。[i]列表6：删除空白符的filter <br /><br /><br />列表6演示了如何载获Http请求并装饰HttpServletRequest对象。 <br /><br />[i]列表6：删除空白符的filter <br />程序代码： <br /></span><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> trimmer.filter; <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.Filter; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.FilterChain; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.FilterConfig; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.ServletException; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.ServletRequest; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.ServletResponse; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequest; <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MyFilter </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Filter { <br /></span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> FilterConfig filterConfig; <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> init(FilterConfig filterConfig) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> ServletException { <br />System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Filter initialized</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); <br /></span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.filterConfig </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> filterConfig; <br />} <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> destroy() { <br />System.out.println(<span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Filter destroyed</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); <br /></span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.filterConfig </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; <br />} <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> doFilter(ServletRequest request, ServletResponse response, <br />FilterChain chain) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException, ServletException { <br />chain.doFilter(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MyRequestWrapper((HttpServletRequest) request), <br />response); <br />} <br />} </span></span></div></pre></div><p>&nbsp;</p><p><br />这个程序使用了列表6所示的filter来修整用户输入。要使用这个filter，你需要在web.xml文件中如下设置filter及filter-mapping的元素。&nbsp;<br style=\"line-height: normal;\" />&nbsp;&nbsp;&nbsp;<br style=\"line-height: normal;\" /></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />       </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">TrimmerFilter</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />       </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-class</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">trimmer.filter.MyFilter</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-class</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-mapping</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />       </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">TrimmerFilter</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br />       </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">url-pattern</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">*.do</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">url-pattern</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filter-mapping</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> </span></div></pre></div><p>&nbsp;</p><p><br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" />要测试这个filter，启动这个应用后，在表单中输入一些值，提交表单，看看这个filter是如何修整输入数值的。这是一个实用的装饰模式的应用。&nbsp;<br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" />小结&nbsp;<br style=\"line-height: normal;\" />Servlet filter可以在调用一个servlet的服务方法后，拦载或加工HTTP请求。尽管这非常诱人，但其实际使用却有所限制，因为你不能改变HttpServletRequest对象。&nbsp;<br style=\"line-height: normal;\" />这时候装饰模式派上了用场。本文演示了如何通过应用装饰模式来&ldquo;修改&rdquo;HttpServletRequest对象，从而使你的servlet filter更加有用。在上面filter例子中，filter改了request参数中的用户输入，而这一点，如果没有装饰request对象，你是无论如何也不可能做到的。&nbsp;<br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" /><br style=\"line-height: normal;\" /></p><p><span style=\"line-height: normal;\">&nbsp;</span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> wrapper;   <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.UnsupportedEncodingException;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.URLDecoder;   <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequest;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.http.HttpServletRequestWrapper;   <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> GetHttpServletRequestWrapper </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> HttpServletRequestWrapper {   <br /><br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String charset </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">UTF-8</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> GetHttpServletRequestWrapper(HttpServletRequest request) {   <br />        </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">(request);   <br />    }   <br /><br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"> <br />     * 获得被装饰对象的引用和采用的字符编码 <br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> request <br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> charset <br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> GetHttpServletRequestWrapper(HttpServletRequest request,   <br />            String charset) {   <br />        </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">(request);   <br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.charset </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> charset;   <br />    }   <br /><br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"> <br />     * 实际上就是调用被包装的请求对象的getParameter方法获得参数，然后再进行编码转换 <br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"> <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getParameter(String name) {   <br />        String value </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">.getParam\neter(name);   <br />        value </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> value </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">?</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> : convert(value);   <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> value;   <br />    }   <br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String convert(String target) {   <br />        System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">编码转换之前：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> target);   <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {   <br />            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> String(target.trim().getBytes(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">ISO-8859-1</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">), charset);   <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (UnsupportedEncodingException e) {   <br />            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> target;   <br />        }   <br />    }   <br /><br />} <br /></span><span style=\"color: #000000;\">------------</span><span style=\"color: #000000;\"> <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> doFilter(ServletRequest request, ServletResponse response,   <br />            FilterChain chain) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException, ServletException {   <br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置请求响应字符编码   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        request.setCharacterEncoding(charset);   <br />        response.setCharacterEncoding(charset);   <br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">新增加的代码           </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        HttpServletRequest req </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (HttpServletRequest)request;   <br />           <br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(req.getMethod().equalsIgnoreCase(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">get</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">))   <br />        {   <br />            req </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> GetHttpServletRequestWrapper(req,charset);   <br />        }   <br />           <br />        System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">----请求被</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">config.getFilterName()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">过滤</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);   <br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">传递给目标servlet或jsp的实际上时包装器对象的引用，而不是原始的HttpServletRequest对象   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        chain.doFilter(req, response);   <br />           <br />        System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">----响应被</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">config.getFilterName()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">过滤</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);   <br /><br />    }</span></div></pre></div><p>&nbsp;</p><p>例子下载：<a href=\"http://files.cnblogs.com/gaoyoubo/HttpServletRequestWrapper_Demo.rar\">http://files.cnblogs.com/gaoyoubo/HttpServletRequestWrapper_Demo.rar</a></p>\n','2010-06-28 09:39:00','2010-06-28 09:39:00',NULL,NULL,'publish',NULL,'HttpServletRequestWrapper 用法','/post/2012/7/14/1344938609244.html',1,0);
insert  into `mlog_post`(`_id`,`_comment_count`,`_comment_status`,`_content`,`_create_time`,`_modify_time`,`_password`,`_post_ip`,`_post_status`,`_summary`,`_title`,`_url`,`_post_user`,`_view_count`) values (340,0,'open','<p>这个是我在做Lucene全文检索的时候写的，郁闷的是，我们的环境用的是jdk1.4，但是要解析office2007必须用到POI3.5以上版本，但是POI3.5必须运行在JDK1.5以上的版本，</p><p>~只好寻求其他方法了</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> org.gaoyoubo.resolve;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedReader;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.ByteArrayOutputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.File;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileInputStream;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileReader;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.LineNumberReader;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.OutputStreamWriter;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.ArrayList;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.List;<br /></span><span style=\"color: #000000;\"><span style=\"color: #0000ff;\"><br /></span></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFCell;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFRow;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFSheet;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFWorkbook;<br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Resolve {<br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 得到文件后缀名<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getExt(String path) {<br />        String ext </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (path </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">.equals(path)) {<br />            File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path);<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (file.exists()) {<br />                ext </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> path.substring(path.lastIndexOf(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">.</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">) </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">);<br />            }<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> ext;<br />    }<br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String execute(String path) {<br />        String content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        String ext </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> getExt(path);<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">.equals(ext)) {<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (Const.FILE_TYPE_LIST.contains(ext)) {<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext.equals(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">txt</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                    content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> resolveText(path);<br />                } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext.equals(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">doc</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                    content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> resolveWord2003(path);<br />                } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext.equals(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">docx</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                    content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> resolveWord2007(path);<br />                } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext.equals(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">pdf</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                    content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> resolvePdf(path);<br />                } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext.equals(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">xls</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                    content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> resolveExcel2003(path);<br />                } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ext.equals(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">xlsx</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                    content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> resolveExcel2007(path);<br />                }</span><span style=\"color: #000000;\"><br />            }<br />        }<br />        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br />            System.err.println(</span><spa n style=\"color: #000000;\">\"<span style=\"color: #000000;\">无法解析文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content;<br />    }<br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 解析word2007<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> path 文件路径<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> 文件内容<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String resolveWord2007(String path){<br />        String content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            OPCPackage opcPackage </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> POIXMLDocument.openPackage(path);<br />            POIXMLTextExtractor ex </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> XWPFWordExtractor(opcPackage);<br />            content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ex.getText();<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />            System.err.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">解析文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">失败!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content;<br />    }<br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 解析word2003<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> path 文件路径<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> 文件内容<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String resolveWord2003(String path){<br />        String content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path);<br />            FileInputStream fis </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileInputStream(file);<br />            WordExtractor ex </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> WordExtractor(fis);<br />            content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ex.getText();<br />            fis.close();<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />            System.err.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">解析文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">失败!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content;<br />    }<br />    <br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 解析Excel2003<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> path<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"><br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String resolveExcel2003(String path){<br />        StringBuffer content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringBuffer(</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">);<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path);<br />            FileInputStream fis </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileInputStream(file);<br />            HSSFWorkbook wordbook </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> HSSFWorkbook(fis);<br />            <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">遍历sheet</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> wordbook.getNumberOfSheets(); i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> wordbook.getSheetAt(i)) {<br />                    HSSFSheet sheet </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> wordbook.getSheetAt(i);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">得到sheet<br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">遍历该sheet中的数据</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> j </span><span style=\"\ncolor: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; j </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> sheet.getLastRowNum(); j</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {<br />                        HSSFRow row </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> sheet.getRow(j);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取一行<br />                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">循环遍历cell</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> k </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; k </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> row.getLastCellNum(); k</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {<br />                            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> row.getCell(k)) {<br />                                HSSFCell cell </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> row.getCell(k);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取单元格的值</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                                <br />                                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (cell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> HSSFCell.CELL_TYPE_NUMERIC) {<br />                                    content.append(cell.getNumericCellValue());<br />                                }<br />                                </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (cell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> HSSFCell.CELL_TYPE_BOOLEAN) {<br />                                    content.append(cell.getBooleanCellValue());<br />                                }<br />                                </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br />                                    content.append(cell.getStringCellValue());<br />                                }<br />                                <br />                            }<br />                        }<br />                    }<br />                }<br />            }<br />            <br />            fis.close();<br />            <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />            System.err.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">解析文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">失败!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content.toString();<br />    }<br />    <br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 解析Excel2007<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> path<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"><br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String resolveExcel2007(String path){<br />        StringBuffer content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringBuffer(</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">);<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            XSSFWorkbook wb </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> XSSFWorkbook(path);<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">遍历sheet</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> wb.getNumberOfSheets(); i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {<br />                XSSFSheet sheet </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> wb.getSheetAt(i);<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (sheet </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />                    </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;<br />                }<br />                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">遍历行</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> j </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; j </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> sheet.getLastRowNum(); j</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {<br />                    XSSFRow row </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> sheet.getRow(j);<br />                    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (row </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />                        </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;<br />                    }<br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">遍历单元格</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> k </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; k </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> row.getLastCellNum(); k</span><span style=\"color:\n#000000;\">++</span><span style=\"color: #000000;\">) {<br />                        XSSFCell cell </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> row.getCell(k);<br />                        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (cell </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />                            </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;<br />                        }<br />                        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (cell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> XSSFCell.CELL_TYPE_BOOLEAN) {<br />                            content.append(cell.getBooleanCellValue());<br />                        }<br />                        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (cell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> XSSFCell.CELL_TYPE_NUMERIC) {<br />                            content.append(cell.getNumericCellValue());<br />                        }<br />                        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br />                            content.append(cell.getStringCellValue());<br />                        }<br />                    }<br />                }<br />            }<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />            System.err.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">解析文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">失败!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content.toString();<br />    }<br />    <br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 解析pdf<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> path 文件路径<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> 文件内容<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String resolvePdf(String path) {<br />        String content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">StringBuffer content = new StringBuffer(\"\");</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"><br />            FileInputStream fis = new FileInputStream(path);<br />            PDFParser p = new PDFParser(fis);<br />            p.parse();<br />            PDFTextStripper ts = new PDFTextStripper();<br />            content.append(ts.getText(p.getPDDocument()));<br />            fis.close();<br />            </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />            <br />            <br />            File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path);<br />            PDDocument doc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> PDDocument.load(file);<br />            <br />            ByteArrayOutputStream out </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ByteArrayOutputStream();<br />            OutputStreamWriter writer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> OutputStreamWriter(out);<br />            <br />            PDFTextStripper ts </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> PDFTextStripper();<br />            ts.writeText(doc, writer);<br />            doc.close();<br />            out.close();<br />            writer.close();<br />            </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] contents </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> out.toByteArray();<br />            <br />            content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> String(contents);<br />            <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />            System.err.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">解析文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">失败!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content.toString();<br />    }<br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 解析普通文本文件<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> path<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"><br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String resolveText(String path){<br />        StringBuffer content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringBuffer(</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">);<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(path);<br />            <br />            FileReader reader </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileReader(file);<br />            BufferedReader br </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedReader(reader);<br />            </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> (br.read() </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">) {<br />\ncontent.append(br.readLine());<br />            }<br />            br.close();<br />            reader.close();                        <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />            System.err.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">读取文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> path </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">失败!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content.toString();<br />    }</span><span style=\"color: #000000;\"><br />}<br /></span></spa></div></pre></div><p>&nbsp;</p><p>&nbsp;</p>\n','2010-06-23 09:51:00','2010-06-23 09:51:00',NULL,NULL,'publish',NULL,'Java解析word,excel,pdf','/post/2012/7/14/1344938609306.html',1,0),(341,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">导入类包import org.apache.lucene.search.regex.*; </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br /><br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> regexQuery(String path) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException <br />    { <br />        IndexWriter writer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IndexWriter(path, </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StandardAnalyzer(), </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">); <br />        writer.setUseCompoundFile(</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">); <br /><br />        Document doc1 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Document(); <br />        Document doc2 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Document(); <br />        Document doc3 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Document(); <br /><br />        Field f1 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">url</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, <br />        </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://www.abc.com/product?typeid=1&amp;category=10&amp;item=34</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, <br />        Field.Store.YES, Field.Index.TOKENIZED); <br />        Field f2 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">url</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, <br />        </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://www.def.com/product/show?typeid=3&amp;catagory=10&amp;item=23</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, <br />        Field.Store.YES, Field.Index.TOKENIZED); <br />        Field f3 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field( <br />        </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">url</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, <br />        </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://www.ghi.com/product/list?catagory=4&amp;typeid=19&amp;order=32</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, <br />        Field.Store.YES, Field.Index.TOKENIZED); <br />        doc1.add(f1); <br />        doc2.add(f2); <br />        doc3.add(f3); <br />        <br />        writer.addDocument(doc1); <br />        writer.addDocument(doc2); <br />        writer.addDocument(doc3); <br /><br />        writer.close(); <br /><br />        IndexSearcher searcher </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IndexSearcher(path); <br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">  创建一个正则表达式，用于匹配域名为abc.com的地址 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        String regex </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://[a-z]{1,3}\\.abc\\.com/.*</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; <br /><br />        Term t </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Term(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">url</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, regex); <br />        <br />        RegexQuery query </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> RegexQuery(t); <br />        Query q </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> TermQuery(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Term(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">url</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)); <br />        Hits hits </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> searcher.search(query); <br />        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i  </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> hits.length(); i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) { <br />        System.out.println(hits.doc(i)); <br />        } <br />        searcher.close(); <br />    } </span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-06-22 16:40:00','2010-06-22 16:40:00',NULL,NULL,'publish',NULL,'Lucene使用正则表达式查询','/post/2012/7/14/1344938609373.html',1,0),(342,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">JAVA中实现图片对象转换成图片文件和字节数组(Byte[ ])的方法讨论<br /><br />网上关于这方面的讨论其实有很多，但找起来也不太容易，笔者以JMSL4.0画出的chart对象为例阐释这一过程，希望能带来些启发。<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.imsl.chart.</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.image.BufferedImage;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.imageio.stream.FileImageOutputStream;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.imageio.stream.ImageOutputStream;<br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SampleImageIO {<br /><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] getByteArray() {<br /><br />        </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] b </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br /><br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">{<br /><br />        Chart chart </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> createChart();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">generate image</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />        chart.setScreenSize(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> java.awt.Dimension(</span><span style=\"color: #000000;\">500</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">500</span><span style=\"color: #000000;\">));<br /><br />        BufferedImage bi </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedImage(</span><span style=\"color: #000000;\">500</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">500</span><span style=\"color: #000000;\">, BufferedImage.TYPE_4BYTE_ABGR_PRE);<br /><br />        chart.paintChart(bi.createGraphics()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">generate buffered image<br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">感觉bufferedimage经常和imageIO成对出现作为对图像对象的标准转化形式。</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />        File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">D:\\\\workspace\\\\SampleImageIO1.png</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">deploy file</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />        javax.imageio.ImageIO.write(bi, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">PNG</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, file);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">generate file</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />        ByteArrayOutputStream bos </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ByteArrayOutputStream();<br /><br />        javax.imageio.ImageIO.write(bi, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">png</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, bos);<br /><br />        b </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> bos.toByteArray();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">generate byte[]<br /><br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">check to get the byte[]<br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">其实byte[]的最大的用途应该是网站的图片动态显示，下面的code只是实验一下，也顺便介绍一下byte[]转换成文件的操作。</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />        String newFileName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">d:\\\\temp\\\\wine1.png</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br /><br />        FileImageOutputStream imageOutput </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileImageOutputStream(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> File(newFileName));<br /><br />        imageOutput.write(b, </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">, b.length);<br /><br />        imageOutput.close();<br /><br />        System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Please find image in </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> newFileName);       <br /><br />        }<br /><br />        </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(Exception ex) {<br /><br />            System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Exception: </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> ex);<br /><br />            ex.printStackTrace();           <br /><br />        }<br /><br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> b;<br /><br />    }<br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">jmsl画图的code，挺快的，好用，但是人家是收费的library～～，抛砖引玉吧</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> Chart createChart() {       <br /><br />        Chart chart </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Chart();<br /><br />        AxisXY axis </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AxisXY(chart);     <br /><br />        </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> npoints </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">20</span><span style=\"color: #000000;\">;<br /><br />        </span><span style=\"color: #0000ff;\">double</span><span style=\"color: #000000\n;\"> dx </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> .</span><span style=\"color: #000000;\">5</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\"> Math.PI</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">(npoints</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">);<br /><br />        </span><span style=\"color: #0000ff;\">double</span><span style=\"color: #000000;\"> x[] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">double</span><span style=\"color: #000000;\">[npoints];       <br /><br />        </span><span style=\"color: #0000ff;\">double</span><span style=\"color: #000000;\"> y[] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">double</span><span style=\"color: #000000;\">[npoints];      <br /><br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Generate some data      </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> npoints; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">){           <br /><br />            x[i] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\"> dx;           <br /><br />            y[i] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Math.cos(x[i]);           <br /><br />        }       <br /><br />        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Data(axis, x, y);  <br /><br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> chart;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-06-21 15:02:00','2010-06-21 15:02:00',NULL,NULL,'publish',NULL,'JAVA中实现图片对象转换成图片文件和字节数组(Byte[ ])的方法讨论','/post/2012/7/14/1344938609428.html',1,0),(343,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.sql.ResultSet;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.sql.SQLException;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.document.Document;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.document.Field;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.index.CorruptIndexException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.index.IndexWriter;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.store.Directory;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.store.FSDirectory;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.store.LockObtainFailedException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.lucene.store.RAMDirectory;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.wltea.analyzer.lucene.IKAnalyzer;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.patent.common.connectionManage.ConnectionManage;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.patent.common.connectionManage.ResultManage;<br /><br /></span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br /> * @desc 专利数据索引管理类</span><span style=\"color: #008000;\"><br /> *<br /> </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> IndexManage {<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Directory ramdDirectory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">内存索引目录</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Directory fsdDirectory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">文件索引目录</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> IndexWriter iwriter_ram </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; </span><span style=\"color: #008000;\">//<br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> IndexWriter iwriter_fsd </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; </span><span style=\"color: #008000;\">//<br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> ResultSet Result </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;</span><span style=\"color: #008000;\">//<br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> ConnectionManage connManage </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> currectPage </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\"> ;<br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * @desc 初始化lucene索引。<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> IndexManage(){<br />    <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            fsdDirectory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> FSDirectory.getDirectory(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">E:/temp/index/</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />            iwriter_fsd </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IndexWriter(fsdDirectory,</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IKAnalyzer(),</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">,IndexWriter.MaxFieldLength.LIMITED);<br />            connManage </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConnectionManage();<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {<br />            e.printStackTrace();<br />        }<br />    }<br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 获取结果集<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"><br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> getResult(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> currectPage){<br />        ramdDirectory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> RAMDirectory();<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            iwriter_ram </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IndexWriter(ramdDirectory,</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IKAnalyzer(),</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">,IndexWriter.MaxFieldLength.LIMITED);<br />            <br />            ResultManage rsManage </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ResultManage(connManage.getConnection(),currectPage);<br />            Result </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> rsManage.getResultSet();    <br />            </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> k </span><span style=\"color: #000000;\">=<span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;<br />            </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(Result.next()){<br />                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">System.out.println(currectPage+\" \"+k++);<br />                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加document</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                Document doc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Document();<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">PatentNo</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">PatentNo</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">PublicationDate</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">PublicationDate</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Title</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Title</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Inventors</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Inventors</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">ANA</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">ANA</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">SerialNo</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">SerialNo</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">SeriesCode</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Filed</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Filed</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">USCurrentClass</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">USCurrentClass</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">InternlClass</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">InternlClass</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                doc.add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Field(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Abstract</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,Result.getString(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Abstract</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),Field.Store.YES,Field.Index.ANALYZED));<br />                <br />                iwriter_ram.addDocument(doc);<br />                <br />            }<br />            <br />            iwriter_ram.commit();<br />            iwriter_fsd.addIndexes(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Directory[]{ramdDirectory});<br />            <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (CorruptIndexException e) {<br />            e.printStackTrace();<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (LockObtainFailedException e) {<br />            e.printStackTrace();<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {<br />            e.printStackTrace();<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (SQLException e) {<br />            e.printStackTrace();<br />        }<br />        <br />    }<br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 关闭indexWriter<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> close(){<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(iwriter_fsd </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){<br />            </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />                iwriter_fsd.commit();<br />                iwriter_fsd.close();<br />            } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (CorruptIndexException e) {<br />                e.printStackTrace();<br />            } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {<br />                e.printStackTrace();<br />            }<br />            <br />        }<br />    }<br />    <br />}</span></span></div></pre></div><p>&nbsp;</p>\n','2010-06-18 09:13:00','2010-06-18 09:13:00',NULL,NULL,'publish',NULL,'Lucene索引数据库','/post/2012/7/14/1344938609486.html',1,0),(344,0,'open','<p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\"><span style=\"font-size: 10pt;\"><span style=\"color: #0000ff;\">这周额外分配的任务是对office2007的文档进行解析，以前采用的是poi3.0版本，其只能对office2003版本的文档进行解析，还无法解析office2007.网上查了一下有人提供了最原始的解决方法，但是发现其实poi在3.5版本已经解决了这个问题。</span></span></p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\"><span style=\"font-size: 10pt;\"><span style=\"color: #0000ff;\">下面是网上搜的一篇文章：</span></span></p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\"><span style=\"font-size: 10pt;\"><span style=\"color: #0000ff;\">其实不需要完全匹配下面该文章提供的jar包，本人就是下载了poi-bin-3.6-20091214包，然后把poi-bin-3.6-20091214\\poi-3.6和poi-bin-3.6-20091214\\poi-3.6\\ooxml-lib目录下的jar包导入到项目就ok了。</span></span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.test;   <br />  <br /></span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">  <br /> * 需要的jar包：  <br /> * poi-3.0.2-FINAL-20080204.jar  <br /> * poi-contrib-3.0.2-FINAL-20080204.jar  <br /> * poi-scratchpad-3.0.2-FINAL-20080204.jar  <br /> * poi-3.5-beta6-20090622.jar  <br /> * geronimo-stax-api_1.0_spec-1.0.jar  <br /> * ooxml-schemas-1.0.jar  <br /> * openxml4j-bin-beta.jar  <br /> * poi-ooxml-3.5-beta6-20090622.jar  <br /> * xmlbeans-2.3.0.jar  <br /> * dom4j-1.6.1.jar  <br /> </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">  <br />  <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileInputStream;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.InputStream;   <br />  <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.POIXMLDocument;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.POIXMLTextExtractor;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFCell;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFRow;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFSheet;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hssf.usermodel.HSSFWorkbook;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.hwpf.extractor.WordExtractor;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.openxml4j.exceptions.OpenXML4JException;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.openxml4j.opc.OPCPackage;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.xssf.usermodel.XSSFCell;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.xssf.usermodel.XSSFRow;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.xssf.usermodel.XSSFSheet;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.xssf.usermodel.XSSFWorkbook;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.poi.xwpf.extractor.XWPFWordExtractor;   <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.apache.xmlbeans.XmlException;   <br />  <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> WordAndExcelExtractor {   <br /> </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args){   <br />  </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">{   <br />   String wordFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">D:/松山血战.docx</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;   <br />   String wordText2007 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> WordAndExcelExtractor.extractTextFromDOC2007(wordFile);   <br />   System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">wordText2007=======</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">wordText2007);   <br />      <br />   InputStream is </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileInputStream(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">D:/XXX研发中心技术岗位职位需求.xls</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);      <br />   String excelText </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> WordAndExcelExtractor.extractTextFromXLS(is);      <br />   System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text2003==========</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> excelText);   <br />      <br />   String excelFile </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">D:/Hello2007.xlsx</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;      <br />   String excelText2007 </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> WordAndExcelExtractor.extractTextFromXLS2007(excelFile);   <br />   System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">excelText2007==========</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> excelText2007);   <br />  <br />      <br />  }</span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(Exception e ){   <br />   e.printStackTrace();   <br />  }   <br /> }   <br />    <br /> </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">  <br />  * @Method: extractTextFromDOCX  <br />  * @Description: 从word 2003文档中提取纯文本  <br />  *  <br />  * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\">   <br />  * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> String  <br />  * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\">  <br />  </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">  <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> String extractTextFromDOC(InputStream is) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException {   <br />\nWordExtractor ex </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> WordExtractor(is); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">is是WORD文件的InputStream    </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> ex.getText();   <br />    }   <br />    <br /> </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">  <br />  * @Method: extractTextFromDOCX  <br />  * @Description: 从word 2007文档中提取纯文本  <br />  *  <br />  * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\">   <br />  * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> String  <br />  * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\">  <br />  </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">  <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> String extractTextFromDOC2007(String fileName) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException, OpenXML4JException, XmlException {   <br />     OPCPackage opcPackage </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> POIXMLDocument.openPackage(fileName);   <br />     POIXMLTextExtractor ex </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> XWPFWordExtractor(opcPackage);      <br />  <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> ex.getText();   <br />    }   <br />    <br /> </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">  <br />  * @Method: extractTextFromXLS  <br />  * @Description: 从excel 2003文档中提取纯文本  <br />  *  <br />  * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\">   <br />  * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> String  <br />  * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\">  <br />  </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">  <br />    @SuppressWarnings(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">deprecation</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)   <br /> </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> String extractTextFromXLS(InputStream is)   <br />        </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException {   <br />        StringBuffer content  </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringBuffer();   <br />        HSSFWorkbook workbook </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> HSSFWorkbook(is); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建对Excel工作簿文件的引用    </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  <br />        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> numSheets </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; numSheets </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> workbook.getNumberOfSheets(); numSheets</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {   <br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> workbook.getSheetAt(numSheets)) {   <br />                HSSFSheet aSheet </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> workbook.getSheetAt(numSheets); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获得一个sheet   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  <br />                </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> rowNumOfSheet </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; rowNumOfSheet </span><span style=\"color: #000000;\">&lt;=</span><span style=\"color: #000000;\"> aSheet.getLastRowNum(); rowNumOfSheet</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {   <br />                    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> aSheet.getRow(rowNumOfSheet)) {   <br />                        HSSFRow aRow </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> aSheet.getRow(rowNumOfSheet); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获得一行   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  <br />                        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">short</span><span style=\"color: #000000;\"> cellNumOfRow </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; cellNumOfRow </span><span style=\"color: #000000;\">&lt;=</span><span style=\"color: #000000;\"> aRow.getLastCellNum(); cellNumOfRow</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {   <br />                            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> aRow.getCell(cellNumOfRow)) {   <br />                                HSSFCell aCell </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> aRow.getCell(cellNumOfRow); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获得列值   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                                                                   <br />                                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(aCell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> HSSFCell.CELL_TYPE_NUMERIC){   <br />                                 content.append(aCell.getNumericCellValue());   <br />                                }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(aCell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> HSSFCell.CELL_TYPE_BOOLEAN){   <br />                                 content.append(aCell.getBooleanCellValue());   <br />                                }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {   <br />                                 content.append(aCell.getStringCellValue())\n;   <br />                                }   <br />                            }   <br />                        }   <br />                    }   <br />                }   <br />            }   <br />        }   <br />  <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content.toString();   <br />    }   <br />       <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">  <br />     * @Method: extractTextFromXLS2007  <br />     * @Description: 从excel 2007文档中提取纯文本  <br />     *  <br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\">   <br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> String  <br />     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\">  <br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">  <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> String extractTextFromXLS2007(String fileName) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception{   <br />     StringBuffer content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StringBuffer();   <br />        <br />     </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">构造 XSSFWorkbook 对象，strPath 传入文件路径       </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  XSSFWorkbook xwb </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> XSSFWorkbook(fileName);   <br />     <br />  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">循环工作表Sheet   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> numSheet </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; numSheet </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> xwb.getNumberOfSheets(); numSheet</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">){   <br />   XSSFSheet xSheet </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> xwb.getSheetAt(numSheet);    <br />   </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(xSheet </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){   <br />    </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;   <br />   }   <br />      <br />   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">循环行Row   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">   </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> rowNum </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; rowNum </span><span style=\"color: #000000;\">&lt;=</span><span style=\"color: #000000;\"> xSheet.getLastRowNum(); rowNum</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">){   <br />    XSSFRow xRow </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> xSheet.getRow(rowNum);   <br />    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(xRow </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){   <br />     </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;   <br />    }   <br />       <br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">循环列Cell   </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> cellNum </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; cellNum </span><span style=\"color: #000000;\">&lt;=</span><span style=\"color: #000000;\"> xRow.getLastCellNum(); cellNum</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">){   <br />     XSSFCell xCell </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> xRow.getCell(cellNum);   <br />     </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(xCell </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){   <br />      </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;   <br />     }   <br />        <br />     </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(xCell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> XSSFCell.CELL_TYPE_BOOLEAN){   <br />      content.append(xCell.getBooleanCellValue());   <br />     }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(xCell.getCellType() </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> XSSFCell.CELL_TYPE_NUMERIC){   <br />      content.append(xCell.getNumericCellValue());   <br />     }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{   <br />      content.append(xCell.getStringCellValue());   <br />     }   <br />    }   <br />   }   <br />  }   <br />     <br />  </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> content.toString();   <br />    }   <br />       <br />}   </span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p>\n','2010-06-17 10:35:00','2010-06-17 10:35:00',NULL,NULL,'publish',NULL,'Java解析word2007和Excel2007','/post/2012/7/14/1344938609572.html',1,0),(345,0,'open','<p>　　JMF是SUN推出的用来提供给Java开发者使用Java开发视频与音频播放程序的开发库，JMF的推出已经有几年的历史了，目前最新的版本为 2.1.1e，这里我们来讲述使用Java的AWT组件来开发一个视频播放器，采用JMF作为视频的播放库，希望能够抛砖引玉，使得更多的人能够对JMF 进行更加深入的研究，并贡献出自己的研究所得。&nbsp;<br />　　首先，您需要下载用于自身操作系统的JMF安装包，下载地址：http://java.sun.com/products/java-media/jmf /2.1.1/download.html，我们这里针对Windows操作系统进行JMF的开发。要注意的是，JMF针对不同平台的实现是有少许差别的，不同的平台对媒体文件格式的支持可能存在差异，具体的平台对媒体文件格式的支持细节，您可以直接查看：http://java.sun.com /products/java-media/jmf/2.1.1/formats.html。安装过程就不用多解释了，您可以直接运行安装文件，选择自己所希望的目录完成安装，我们这里不多做说明。&nbsp;<br />　　接下来，我们可以使用Eclipse新建一个普通的java应用程序，把JMF安装目录下的lib中的jmf.jar、mediaplayer.jar、 sound.jar三个jar文件加入到项目的classpath（如果您对classpath不了解，可以在我的博客中找到关于classpath的详细解释的文章）中，到这里，编译和运行项目的基本配置都准备好了，下面可以编写代码了。&nbsp;<br />　　在项目中添加一个类JMFSample，代码和具体的解释如下：&nbsp;</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.jmfsample2; <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.BorderLayout; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.Component; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.Dimension; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.Frame; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.Panel; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.event.WindowAdapter; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.awt.event.WindowEvent; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.MalformedURLException; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.URL; <br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.ControllerEvent; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.ControllerListener; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.EndOfMediaEvent; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.Manager; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.MediaLocator; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.NoPlayerException; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.Player; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.PrefetchCompleteEvent; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.RealizeCompleteEvent; <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.media.Time; <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> JMFSample </span><span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> ControllerListener { <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) { <br />        JMFSample sp </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JMFSample(); <br />        sp.play(); <br />    } <br />   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Frame f; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Player player; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Panel panel; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Component visual; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Component control </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; <br />   <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> play(){ <br />        f </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Frame(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">JMF Sample1</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); <br />        f.addWindowListener(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> WindowAdapter() { <br />            </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> windowClosing(WindowEvent we) { <br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(player </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) { <br />                    player.close(); <br />                } <br />                System.exit(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">); <br />            } <br />        }); <br />        f.setSize(</span><span style=\"color: #000000;\">500</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">400</span><span style=\"color: #000000;\">); <br /><br />        f.setVisible(</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">); <br />        URL url </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">; <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> { <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">准备一个要播放的视频文件的URL </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            url </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> URL(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">file:/E:/c-d.avi</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (MalformedURL\nException e) { <br />            e.printStackTrace(); <br />        }       <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> { <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">通过调用Manager的createPlayer方法来创建一个Player的对象 <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这个对象是媒体播放的核心控制对象 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            player </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Manager.createPlayer(url); <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (NoPlayerException e1) { <br />            e1.printStackTrace(); <br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e1) { <br />            e1.printStackTrace(); <br />        } <br /><br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">对player对象注册监听器，能噶偶在相关事件发生的时候执行相关的动作 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        player.addControllerListener(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">); <br />       <br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">让player对象进行相关的资源分配 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        player.realize(); <br />    } <br />   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> videoWidth </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> videoHeight </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> controlHeight </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">30</span><span style=\"color: #000000;\">; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> insetWidth </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">10</span><span style=\"color: #000000;\">; <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> insetHeight </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">30</span><span style=\"color: #000000;\">; <br />   <br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">监听player的相关事件 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> controllerUpdate(ControllerEvent ce) { <br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ce </span><span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> RealizeCompleteEvent) { <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">player实例化完成后进行player播放前预处理 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            player.prefetch(); <br />        } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ce </span><span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> PrefetchCompleteEvent) { <br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (visual </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) <br />                </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">; <br /><br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">取得player中的播放视频的组件，并得到视频窗口的大小 <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">然后把视频窗口的组件添加到Frame窗口中， </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> ((visual </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> player.getVisualComponent()) </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) { <br />                Dimension size </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> visual.getPreferredSize(); <br />                videoWidth </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> size.width; <br />                videoHeight </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> size.height; <br />                f.add(visual); <br />            } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> { <br />                videoWidth </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">320</span><span style=\"color: #000000;\">; <br />            } <br />           <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">取得player中的视频播放控制条组件，并把该组件添加到Frame窗口中 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> ((control </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> player.getControlPanelComponent()) </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) { <br />                controlHeight </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> control.getPreferredSize().height; <br />                f.add(control, BorderLayout.SOUTH); <br />            } <br />           <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设定Frame窗口的大小，使得满足视频文件的默认大小 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            f.setSize(videoWidth </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> insetWidth, videoHeight </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> controlHeight </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> insetHeight); <br />            f.validate(); <br />           <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">启动视频播放组件开始播放 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            player.start(); <br />        } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000\n;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (ce </span><span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> EndOfMediaEvent) { <br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当播放视频完成后，把时间进度条恢复到开始，并再次重新开始播放 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            player.setMediaTime(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Time(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">)); <br />            player.start(); <br />        } <br />    } <br /><br />} </span></div></pre></div><p>&nbsp;</p><p>&nbsp;完成上述代码，直接编译运行就可以了，是不是您的视频播放器开始工作了？恭喜你，成功了！</p><p>&nbsp;</p>\n','2010-06-12 09:03:00','2010-06-12 09:03:00',NULL,NULL,'publish',NULL,'JMF入门（Java Media Framework）','/post/2012/7/14/1344938609635.html',1,0),(346,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.yhj.common.counter;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedReader;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.File;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileNotFoundException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.FileReader;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.text.SimpleDateFormat;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.ArrayList;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Date;<br /> <br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> com.yhj.common.io.FileUtil;<br /> <br /></span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br /> * com.yhj.common.counter.CodeCounter.java<br /> * be created by 2009-12-10 下午05:21:31+<br /> * 本类的主要功能：<br /> * &lt;p&gt;<br /> * 统计某个文件夹下文件 Java文件  以及<br /> * 统计指定目录下以及其子目录下的所有java文件中代码行数 注释数 空行数等<br /> * &lt;/p&gt;<br /> * </span><span style=\"color: #808080;\">@author</span><span style=\"color: #008000;\"> 一线天色 天宇星辰<br /> *<br /> </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> CodeCounter {<br />    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> codeLines </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">代码行数</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> commentLines </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">注释行署</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> blankLines </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;      </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">空白行数</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> totalFileCount </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">总共文件数目</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> totalFolderCount </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">文件夹文件数目</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> javaFileCount </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Java文件数目</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> isOne</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;      </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将每次生成的文件生成到一个文件中的标示</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ArrayList</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">File</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> fileArray </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArrayList</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">File</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">();<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> String fileName</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br /> <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 可以统计指定目录下以及其子目录下的所有java文件中代码<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br /> <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> codeCounter(String path) {<br />       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">统计程序运行时间</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">       </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> beginTime </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> System.currentTimeMillis();<br />       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">统计运行消耗的内存</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">       </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> beginMemory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Runtime.getRuntime().freeMemory();<br />       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">要统计的文件夹</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">       File file </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><s pan style=\"color: #000000;\"> File(path);<br />       SimpleDateFormat simpleDateFormat<span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimpleDateFormat(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">yyyy-MM-dd HH:mm:ss</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       String beginDetailTime</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">simpleDateFormat.format(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Date());<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">=====================================</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">=====================================</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">开始扫描文件夹 </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">path</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">...</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">开始扫描文件夹 </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">path</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">...</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">存储文件的数据</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">       ArrayList</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">File</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> al </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> getFile(file);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">=====================================</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">=====================================</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">开始统计文件...</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">开始统计文件...</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (File f : al) {<br />           </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (f.getName().matches(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">.*\\\\.java$</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 匹配java格式的文件</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">           {<br />              System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">正在统计文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">f.getPath());<br />              writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">正在统计文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">f.getPath());<br />              javaFileCount</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              count(f);<br />           }<br />       }<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">完成统计!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">完成统计!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">=====================================</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">=====================================</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">统计结果如下:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">统计结果如下:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">文件夹总数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> totalFolderCount</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 个</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">文件夹总数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> totalFolderCount</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 个</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">文件总个数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> totalFileCount</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 个</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">文件总个数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> totalFileCount</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 个</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">Java文件数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> javaFileCount</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 个</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #0000\n00;\">Java文件数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> javaFileCount</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 个</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">代码行数: </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> codeLines);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">代码行数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> codeLines);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">注释行数: </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> commentLines);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">注释行数：</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> commentLines);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">空白行数: </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> blankLines);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">空白行数： </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> blankLines);<br />       </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> endMemory </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Runtime.getRuntime().freeMemory();<br />       </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> billMemory</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">beginMemory</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">endMemory;<br />       </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> endTime </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> System.currentTimeMillis();<br />       </span><span style=\"color: #0000ff;\">long</span><span style=\"color: #000000;\"> sec</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">(endTime</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">beginTime)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">1000</span><span style=\"color: #000000;\">;<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序开始时间:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">beginDetailTime);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序开始时间:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">beginDetailTime);<br />       String endDetailTime</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">simpleDateFormat.format(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Date());<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序结束时间:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">endDetailTime);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序结束时间:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">endDetailTime);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序运行共耗时间:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">sec</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">60</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">分</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">sec</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">60</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">秒</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序运行共耗时间:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">sec</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">60</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">分</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">sec</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">60</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">秒</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序运行共耗内存:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">billMemory</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">1.0</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">KB</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">程序运行共耗内存:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">billMemory</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">1.0</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">1024</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">KB</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /> <br />    }<br /> <br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 获得目录下的文件和子目录下的文件</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ArrayList</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">File</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> getFile(File f) {<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">开始扫描子文件夹</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">f.getPath()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">...</span><span style\n=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">开始扫描子文件夹</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">f.getPath()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">...</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       File[] ff </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> f.listFiles();<br />       </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (File child : ff) {<br />           </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (child.isDirectory()) {<br />              System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">发现文件夹:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">child.getPath());<br />              writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">发现文件夹:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">child.getPath());<br />              totalFolderCount</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              getFile(child);<br />           } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />           {<br />              fileArray.add(child);<br />              totalFileCount</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">发现文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">child.getPath());<br />              writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">发现文件:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">child.getPath());<br />           }<br /> <br />       }<br />       System.out.println(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">文件夹</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">f.getPath()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">扫描结束!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       writeToLog(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">文件夹</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">f.getPath()</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">扫描结束!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />       </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> fileArray;<br /> <br />    }<br /> <br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 统计文件</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> count(File f) {<br />       BufferedReader br </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />       </span><span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;<br />       </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />           br </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BufferedReader(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FileReader(f));<br />           String line </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />           </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> ((line </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> br.readLine()) </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />              line </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> line.trim(); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 除去注释前的空格</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">              </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (line.matches(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">^[ ]*$</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) { </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 匹配空行</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                  blankLines</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (line.startsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">//</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                  commentLines</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (line.startsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">/*</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">) </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">line.endsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">*/</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                  commentLines</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />                  flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />              } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (line.startsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">/*</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">) </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> line.endsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">*/</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                  commentLines</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              } </span><span style=\"color: #0000ff;\">else</span><span style=\"color:\n#000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (flag </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">) {<br />                  commentLines</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;   <br />                  </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (line.endsWith(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">*/</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)) {<br />                     flag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;<br />                  }<br />              } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br />                  codeLines</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">;<br />              }<br />           }<br />       } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (FileNotFoundException e) {<br />           e.printStackTrace();<br />       } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {<br />           e.printStackTrace();<br />       } </span><span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {<br />           </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (br </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />              </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />                  br.close();<br />                  br </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />              } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {<br />                  e.printStackTrace();<br />              }<br />           }<br />       }<br />    }<br /> <br /> <br />   <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> writeToLog(String data) {<br />       </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />           </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">isOne)<br />           {<br />              SimpleDateFormat simpleDateFormat</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimpleDateFormat(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">yyyy-MM-dd HH.mm.ss</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />              fileName</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">simpleDateFormat.format(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Date())</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">.log</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />              isOne</span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />           }<br />           FileUtil.writeStringToFile(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">F:/YHJ日志生成区</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,fileName, data</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">\\n</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">UTF-8</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);<br />       } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {<br />           </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> TODO Auto-generated catch block</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">           e.printStackTrace();<br />       }<br /> <br />    }<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {<br />       codeCounter(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">C:/Program Files</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    }<br />}</span></s></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-06-07 12:58:00','2010-06-07 12:58:00',NULL,NULL,'publish',NULL,'Java文件扫描','/post/2012/7/14/1344938609698.html',1,0),(347,0,'open','<p>理解webwork配置文件的作用和配置方法&nbsp;</p><p>&nbsp;</p><p>这么多配置文件，头都晕了。到底每个配置文件都干么用的呢？&nbsp;<br />1、先了解一下web.xml&nbsp;<br />该文件是web服务器启动的时候调用的一个配置文件，我们需要在这个配置文件中告诉web服务器，在启动的时候，还需要加载启动哪些东西。上述的web.xml中，&nbsp;<br />我们启动了velocity，对应的类文件是：com.opensymphony.webwork.views.velocity.WebWorkVelocityServlet。&nbsp;<br />还启动了webwork，对应的类文件是：com.opensymphony.webwork.dispatcher.ServletDispatcher。&nbsp;<br />并且我们在这个配置文件中定义了servlet映射：*.action结尾的servlet请求，都交给webwork即com.opensymphony.webwork.dispatcher.ServletDispatcher这个servlet去处理。&nbsp;<br />所有*.vm结尾的servlet请求都由velocity即com.opensymphony.webwork.views.velocity.WebWorkVelocityServlet这个类去处理。&nbsp;<br />并且告诉web服务器，我们引用了一个webwork的taglib库，该库所在的位置是：/WEB-INF/lib/webwork-2.1.7.jar。（注：jbulder编译的时候，会自动将webwork-2.1.7.jar拷贝到WEB-INF/lib/目录下）&nbsp;<br />2、xwork.xml&nbsp;<br />xwork.xml是webwork的核心配置文件的所在了。这个文件在web服务器启动的时候调用。具体的来说，该文件是在webflow这个部分的 com.opensymphony.webwork.webFlow.XworkConfigRetriever.java这个类中初始化的时候调用。&nbsp;<br />Xwork.xml文件的作用就是要告诉服务器的webwork解释器，遇到什么样子的action请求，要到哪个类中去调用相关的方法。举个例子来说，假如有一个请求action叫做/userList.action，那么xwork.xml就负责告诉webwork解释器，当请求这个action的时候，要到com.lovefanx.action.user.UserAction这个类去寻找相应的方法。&nbsp;<br />来看一个简单的xwork的配置文件：&nbsp;</p><div class=\"bar\"><div class=\"tools\" style=\"text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE xwork PUBLIC \"-//OpenSymphony Group//XWork 1.0//EN\" \"http://www.opensymphony.com/xwork/xwork-1.0.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">xwork</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">UserAction Config，Path is:user</span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">package </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"User\"</span><span style=\"color: #ff0000;\"> extends</span><span style=\"color: #0000ff;\">=\"webwork-default\"</span><span style=\"color: #ff0000;\"> namespace</span><span style=\"color: #0000ff;\">=\"/user\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">Get User List</span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">action </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"userList\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"com.lovefan.action.user.UserAction\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"list\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">interceptor-ref </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"defaultStack\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">interceptor-ref </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"loginCheck\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">result </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"success\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"dispatcher\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">param </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"location\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">/user/user/userList.jsp</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">param</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">result</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">action</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">xwork</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span></div></pre></div><p>&nbsp;</p></div></div><p>在这个webwork配置文件中，我们首先定义了一个package，包。这个包其实是一个逻辑概念。它仅对于webwork负责。包的作用就是将一些 或者一组action放在同一个逻辑区域。当需要调用对应的action的时候，需要加上包定义中的namespace（名称空间）属性值。&nbsp;<br />就拿上述的例子来说，其中定义了一个包叫做User，其名称空间是/user。在这个包中定义了一个action，叫做userList，这个action的method是 list，对应的action类是com.lovefan.action.user.UserAction。那么，当浏览器请求/user/userList.action的时候，webwork解释器就会根据这个配置，去 访问com.lovefan.action.user.UserAction这个类中的list方法。那么在这个调用中，webwork会先调用一个叫做defaultStack的拦截器，然后调用一个 叫做loginCheck的拦截器，然后才会调用UserAction的list方法，如果list方法返回success，那么web服务器将浏览器定向到/user/userList.jsp去。&nbsp;<br />不妨来看看UserAction.java这个类的list方法：&nbsp;</p><div class=\"bar\"><div class=\"tools\" style=\"text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> UserAction </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> CIMSActionSupport{<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> UserAction() {<br />}<br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String list(){<br />UserDAO userDAO </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> UserDAO();<br /></span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.page </span><span style=\"color: #000000;\">=</span><span style=\"color: #0\n00000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> PageSplit(userDAO.getCount(),</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.pageNo);<br />userBeanList </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> userDAO.findAll(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.page.getStartRecord(),</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.page.getPageSize());<br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> SUCCESS;<br />}<br />}<br /></span></div></pre></div><p>&nbsp;</p></div></div><p>这样，根据一个servlet请求，webwork就可以通过ServletDispacher这个总管，去调用相关的UserAction类，并且知道需要调用的方法是哪一个。 可见xwork文件的职责所在。&nbsp;<br />Xwork.xml还有一个巨大的好处，就是他可以用嵌套的方式来进行配置。这样就很适合用于团队开发。不同的人员编写自己那个部分的配置文件， 最后统一通过嵌套文件名称的方式，合成到xwork.xml中来。特别简单，下面来看一个xwork..xml嵌套其他配置文件的例子。&nbsp;</p><p><span style=\"font-family: \'Courier New\';\"><span style=\"line-height: 12px;\"><strong>&nbsp;</strong></span></span></p><p><span style=\"font-family: \'Courier New\';\"><strong>&nbsp;</strong></span></p><p><span style=\"font-family: \'Courier New\';\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE xwork PUBLIC \"-//OpenSymphony Group//XWork 1.0//EN\" \"http://www.opensymphony.com/xwork/xwork-1.0.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">xwork</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">include </span><span style=\"color: #ff0000;\">file</span><span style=\"color: #0000ff;\">=\"webwork-default.xml\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">include </span><span style=\"color: #ff0000;\">file</span><span style=\"color: #0000ff;\">=\"com/lovefan/config/user.cfg.xml\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">include </span><span style=\"color: #ff0000;\">file</span><span style=\"color: #0000ff;\">=\"com/lovefan/config/security.cfg.xml\"</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">xwork</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span></div></pre></div><p>一个配置文件中，是可以描述说明多个Action的。&nbsp;<br />3、Webwork-default.xml文件&nbsp;<br />我们在xwork.xml文件例子中，看到了这个webwork-default.xml文件被嵌套到了xwork.xml中。这个default文件是webwork提供的，它描述了webwork在工作过程中用到的各个Servlet的返回值类型、各拦截器的名称及其相对应的类 。&nbsp;<br />4、Webwork.properties&nbsp;<br />这个文件定义了一些webwork工作过程中的全局性的值。&nbsp;<br />例如webwork.locale=zh_CN&nbsp;<br />webwork.multipart.saveDir=\\temp #定义当文件上传的时候，临时文件目录&nbsp;<br />webwork.multipart.maxSize=12345 #定义可以上传的文件的最大大小。&nbsp;<br />webwork.velocity.tag.path = com.opensymphony.webwork.views.velocity.ui, org.displaytag.tags&nbsp;<br />webwork.xslt.nocache=false #定义对于xslt程序，不使用cache&nbsp;<br />webwork.ui.templateDir = template #定义了webwork的ui模板库的目录&nbsp;<br />webwork.i18n.encoding = GBK #定义webwork运行时数据传输过程中数据的编码格式&nbsp;<br />5、Velocity.properties&nbsp;<br />定义webwork中使用velocity模版库得方式。&nbsp;<br />velocimacro.library = webwork.vm, tigris-macros.vm #包含两个库webwork.vm和tigris-macros.vm&nbsp;<br />input.encoding=GB2312 #模版文件输入编码为GB2312&nbsp;<br />output.encoding=GB2312 #模版文件输出编码为GB2312&nbsp;<br />default.contentType=text/html; charset=GB2312 #默认的文件contentType类型为以GB2312编码的html文件&nbsp;<br />6、Validators.xml&nbsp;<br />这个配置文件是用来配置数据校验用的。在这个文件中定义了各中名称的校验器对应的校验处理的类。这些都是webwork的release版本中已经提供了的校验器。我们可以不用配置该文件，直接copy过来就用了。&nbsp;<br />但是如果你觉得webwork提供的这些校验器还不够用的话，那么就要自己定义或者开发相关的校验类，并且将对应的配置加到这个validators.xml文件中来。&nbsp;<br />到此，webwork使用的配置文件基本都介绍完了，相信仔细阅读了上述内容以后，一定会对webwork的配置文件有了一个比较全面的认识，并且对webwork的工作原理也有了一定的了解。下面让我们更加深入的来了解一下在webwork中，jsp程序，java类、这些开发者自己开发的程序之间的调用关系。</p></span></p><p>&nbsp;</p>\n','2010-06-01 09:46:00','2010-06-01 09:46:00',NULL,NULL,'publish',NULL,'【webwork】理解webwork配置文件','/post/2012/7/14/1344938609771.html',1,0),(348,0,'open','&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html\" /&gt;\n&lt;title&gt;图片放大效果&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;style type=\"text/css\"&gt;\n.img_box,.show_box{border:1px solid #CCC; width:200px;height:200px;float:left;float:left;margin:20px;margin:20px; overflow:hidden;}\n.img_box,.show_box{ background-position:0 0; background-repeat:no-repeat; }\n.ms_box{width:50px; height:50px;border:1px solid #CCC;background:#000;filter:alpha(opacity=20);opacity:0.2; display:none}\n.show_box{display:none}\n&lt;/style&gt;\n&lt;!--&lt; span style=\"color: #008000;\"&gt;html--&gt;\n&lt;div class=\"img_box\" id=\"j_warp\"&gt;\n&lt;div class=\"ms_box\" id=\"j_ms\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"show_box\" id=\"j_show\"&gt;&lt;/div&gt;\n&lt;!--end--&gt;\n\n&lt;!--辅助--&gt;\n&lt;div style=\"clear:both;\"&gt;&lt;/div&gt;\n&lt;input type=\"button\" value=\"OK!我想换张图片\" style=\"margin-left:50px;\" onclick=\"jelle(imgss[Math.floor(Math.random()*4)]);\" /&gt;\n&lt;!--辅助 end--&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar $j=function(id){return document.getElementById(id);};\nvar getstyle=function (obj,attribute){\nreturn obj.currentStyle?obj.currentStyle[attribute]:document.defaultView.getComputedStyle(obj,false)[attribute]\n};\n\nvar mp=function (e,j){//获取鼠标坐标 请传递evnet参数\ne = e || window.event;\nreturn (e.pageX || e.pageY)?{ x:e.pageX, y:e.pageY } :\n{x:e.clientX + document.body.scrollLeft - document.body.clientLeft, y:e.clientY + document.body.scrollTop - document.body.clientTop + j};\n};\n\nvar sys=(function(){//不必紧张这只是一个判断浏览器的函数,你可以使用很多方法来判断浏览器\nwindow.sys={};\nvar ua=navigator.userAgent.toLowerCase();\nsys.firefox=ua.match(/firefox\\/([\\d\\.]+)/);\nsys.ie=ua.match(/msie\\s([\\d\\.]+)/);\nsys.chrome=ua.match(/chrome\\/([\\d\\.]+)/);\nreturn sys;\n})()\n\nvar zoomImg=function(imgs){\n\nvar o=$j(\"j_warp\"),//鼠标相应的区域\nt=$j(\"j_ms\"),//跟随鼠标移动的div\ns=$j(\"j_show\"),//显示大图的div\nby_o={x:o.offsetLeft,y:o.offsetTop},//最外面容器 具体页面的 x,y\nmsw=parseInt(getstyle(t,\"width\")),//跟随鼠标移动的DIV宽度\nmsh=parseInt(getstyle(t,\"height\")),//高度\nmaxy=parseInt(getstyle(o,\"height\"))-msh,//减去移动框的高度 MS_box的拖动界限 y\nmaxx=parseInt(getstyle(o,\"width\"))-msw,//减去移动框的宽度 MS_box的拖动界限 x\ntoggle=function(status){//用户鼠标激活以后显示或者隐藏需要的box\nt.style.display=status;\ns.style.display=status;\n},\nsetBackgroundImg=function(imgs){\no.style.backgroundImage=\'url(\'+imgs[\'small\']+\')\';\ns.style.backgroundImage=\'url(\'+imgs[\'big\']+\')\';\n},\nj=0;//被卷曲的高度 --IE获得鼠标的坐标还要加上被卷曲的高度\n//当然其实还应该加上 --水平被卷曲的高度。这里没做。一般也不需要\nsetBackgroundImg(imgs);\n\nif(sys.ie){\nwindow.onscroll=function(){//哎 为了获取一个被卷去的高度 居然写了N多代码。看样子是该写个通用的方法了。\nj=parent?(parent.document.body.scrollTop+parent.document.documentElement.scrollTop) : (document.body.scrollTop+document.documentElement.scrollTop);\n}\n};\no.onmousemove=function(e){\ntoggle(\"block\");//显示盒子\n//var by={x:t.offsetLeft,y:t.offsetTop};\nvar ms=mp(e,j),//获取当前鼠标位置\njy=ms.y-by_o.y-msw/2,\n//获取当前移动的ms_box位置 计算方法是 鼠标坐标 - 最外面容器的坐标 - 盒子的宽(高)的/2\njx=ms.x-by_o.x-msh/2,\ny= jy&gt;=maxy ? maxy : jy&lt;=-1? -1 : jy,//判断是否超过界限\nx= jx&gt;=maxx ? maxx : jx&lt;=-1? -1 : jx,\nxx= x*4 &lt; 0 ? 0 : x*4,//计算显示box的背景 的 x y\nyy= y*4 &lt; 0 ? 0 : y*4;//这里*4 是因为我的大图跟小图的比例是4:1 请注意大盒子与小盒子的比例也要4:1\n//不然可能会给你带来麻烦。当然你也可以使用其他比例！\nt.style.marginTop=y+\"px\";//设置ms_box的位置\nt.style.marginLeft=x+\"px\";\n\n$j(\"j_show\").style.backgroundPosition=\"-\"+xx+\"px -\"+yy+\"px\";//设置背景的xy坐标\n}\n\no.onmouseout=function(){\ntoggle(\"none\");\n}\nreturn setBackgroundImg;//我们返回这个换图的方法。这样就可以变换图片了。\n}\n\n//-----------\nvar imgss=[\n{\'big\':\"http://images.365sleep.com/taobao/100222/b1.jpg\",\'small\':\"http://images.cnblogs.com/cnblogs_com/idche/245996/r_s1.jpg\"},\n{\'big\':\"http:///images.365sleep.com/taobao/100222/b2.jpg\",\'small\':\"http://images.cnblogs.com/cnblogs_com/idche/245996/r_s2.jpg\"},\n{\'big\':\"http://images.365sleep.com/taobao/100222/b3.jpg\",\'small\':\"http://images.cnblogs.com/cnblogs_com/idche/245996/r_s3.jpg\"},\n{\'big\':\"http://images.365sleep.com/taobao/100222/b4.jpg\",\'small\':\"http://images.cnblogs.com/cnblogs_com/idche/245996/r_s4.jpg\"}\n];//img地址数据\n\nvar jelle=zoomImg(imgss[1])//开始，了我比较喜欢最后一组图片\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;','2010-05-31 13:10:00','2012-03-26 00:14:51',NULL,NULL,'publish',NULL,'JQuery实现图片放大','/post/2012/7/14/1344938609938.html',1,1),(349,0,'open','<p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">在线的HTML内容编辑器为用户提供文本的样式控制，例如文字的颜色、字体大小等。虽然现在网上有不少功能强大的编辑器（如：FCKEditor），但是在使用中需要许多复杂的配置，而且代码往往比较&ldquo;臃肿&rdquo;。本文的目的就是介绍如何开发一个HTML编辑器。应用本文介绍的方法，可以方便的开发出满足自己需求的，代码相对比较精简的HTML编辑器。以下是一个应用本文方法开发的HTML编辑器，实现了一些简单的功能：</p><p><a href=\"http://files.cnblogs.com/lucc/richeditor.zip\" style=\"text-decoration: none; color: #000000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #333333; padding: 0px; margin: 0px;\">代码下载</a><br style=\"padding: 0px; margin: 0px;\" /><iframe frameborder=\"0\" src=\"http://www.luchuncheng.cn/demo/richeditor/richeditor.htm\" style=\"width: 650px; height: 300px; padding: 0px; margin: 0px;\"></iframe></p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">开发方法如下：</p><h1 style=\"margin-top: 6px; margin-right: 0px; margin-bottom: 6px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 16px; font-family: Verdana; padding: 0px;\">1.添加一个可编辑的iframe</h1><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">实现HTML编辑器的第1步就是在网页中放置一个可编辑的iframe用来输入文本，使iframe可编辑方法相当简单，只需要将iframe的designMode设置为on即可，具体步骤如下：</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> editor </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> document.getElementById(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">IFRAME的ID</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /><br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> editorDoc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> editor.contentWindow.document;<br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> editorWindow </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> editor.contentWindow;<br /><br />editorDoc.designMode </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">on</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br /><br />editorDoc.open();<br />editorDoc.write(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=\'margin:0px; padding: 0px;\'&gt;&lt;/body&gt;&lt;/html&gt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />editorDoc.close();</span></div></pre></div><p>&nbsp;</p><h1 style=\"margin-top: 6px; margin-right: 0px; margin-bottom: 6px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 16px; font-family: Verdana; padding: 0px;\">2.设置选中文本的样式</h1><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">设置选中文本样式的方法最简单的方式就是使用document.execCommand,但是execCommand功能比较局限，有时不能满足需求，例如：execCommand设置字体大小只能是1-7,不能使用像素大小，而且如果你在点击工具栏按钮到调用execCommand的过程中点击了其他的DIV，iframe的选中内容会消失，这时调用execCommand是无效的。因此本文介绍另一种方法，基本思路如下：<br style=\"padding: 0px; margin: 0px;\" /><br style=\"padding: 0px; margin: 0px;\" /><strong><span style=\"font-family: 宋体; color: #ff0000; padding: 0px; margin: 0px;\">(1) 获取选中的HTML；<br style=\"padding: 0px; margin: 0px;\" />(2) 修改HTML的样式；<br style=\"padding: 0px; margin: 0px;\" />(3) 用修改后的HTML替换选中的HTML。<br style=\"padding: 0px; margin: 0px;\" /></span></strong></p><h2 style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 14px; font-family: Verdana; padding: 0px;\">2.1 获取选中的HTML</h2><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">在不同的浏览器中获取选中的HTML的方法是不同的，在IE中可以使用</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> document.selection.createRange()</span></div></pre></div><p>&nbsp;</p><p>在Firefox,Chrome中则使用</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> window.getSelection().getRangeAt(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">);</span></div></pre></div><p>&nbsp;</p><h2 style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 14px; font-family: Verdana; padding: 0px;\">2.2 替换选中的HTML</h2><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">通过2.1的方法获取了表示选中内容的对象后，就可以调用其方法来替换掉选中的内容。在不同的浏览器中替换选中的HTML的方法有所差异，在IE中可以只需调用range.pasteHTML就行了，在Firefox,Chrome中则使用range.deleteContents 和 range.insertNode 两个方法来实现</p><h2 style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 14px; font-family: Verdana; padding: 0px;\">2.3 封装一个操作选中HTML的类</h2><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">由于2.1中获取的range对象的方法在不同浏览器中差异很大，因此，为了方便实现2.1和2.2提到的两个操作，封装了一个操作选中HTML的类SelectionRange，该类有两个方法，GetSelectedHtml和Replace，分别用于获取HTML和替换HTML。其代码如下：</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code\nhighlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">用于记录浏览器的类型</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> browser </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> {};<br /><br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> ua </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> navigator.userAgent.toLowerCase();<br /><br />browser.msie </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">msie ([\\d.]+)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">).test(ua);<br />browser.firefox </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">firefox\\</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">([\\d.]</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">).test(ua);</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">browser.chrome </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">chrome\\</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">([\\d.]</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">)</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">).test(ua);</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取多个节点的HTML</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> GetInnerHTML(nodes)<br />{<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> builder </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> [];<br />    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> nodes.length; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />    {<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (nodes[i].nodeValue </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined)<br />        {<br />            builder.push(nodes[i].innerHTML);<br />        }<br />        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />        {<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (nodes[i].textContent) builder.push(nodes[i].textContent.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">\\&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ig, </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() { </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; }));<br />            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (nodes[i].nodeValue) builder.push(nodes[i].nodeValue.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">\\&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ig, </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() { </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; }));<br />        }<br />    }<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> builder.join(</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">);<br />}<br /><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> SelectionRange(doc, range)<br />{<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取选中的内容的HTML</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.GetSelectedHtml </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">()<br />    {<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (range </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br /><br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (browser.msie)<br />        {<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (range.htmlText </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined) </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> range.htmlText;<br />            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        }<br />        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (browser.firefox </span><span style=\"color: #000000;\">||</span><span style=\"color: #000000;\"> browser.chrome)<br />        {<br />            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> GetInnerHTML(range.cloneContents().childNodes);<br />        }<br />        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />        {<br />            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">;<br />        }<br />    }<br /><br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">用html替换选中的内容的HTML</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.Replace </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(html)<br />    {<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (range </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />        {<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (browser.msie)<br />            {<br />\n</span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (range.pasteHTML </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined)<br />                {<br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当前选中html可能以为某种原因（例如点击了另一个DIV）而丢失，重新选中</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    range.select();<br />                    range.pasteHTML(html);<br />                    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />                }<br />            }<br />            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (browser.firefox </span><span style=\"color: #000000;\">||</span><span style=\"color: #000000;\"> browser.chrome)<br />            {<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (range.deleteContents </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> range.insertNode </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined)<br />                {<br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将文本html转换成DOM对象</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> temp </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> doc.createElement(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">DIV</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />                    temp.innerHTML </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> html;<br /><br />                    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> elems </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> [];<br />                    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> temp.childNodes.length; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />                    {<br />                        elems.push(temp.childNodes[i]);<br />                    }<br />                    <br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">删除选中的节点</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    range.deleteContents();<br />                    <br />                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将html对应的节点(即temp的所有子节点)逐个插入到range中，并从temp中删除</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">                    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> i </span><span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> elems)<br />                    {<br />                        temp.removeChild(elems[i]);<br />                        range.insertNode(elems[i]);<br />                    }<br />                    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;<br />                }<br />            }<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;<br />    }<br />}</span></div></pre></div><p>&nbsp;</p><p>与此同时，还实现了一个函数GetSelectionRange用于获取当前选中文本对应的SelectionRange对象，</p><p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> GetSelectionRange(win)<br />{<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br /><br />    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (browser.msie)<br />    {<br />        range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> win.document.selection.createRange();<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (range.parentElement().document </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> win.document)<br />        {<br />            range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />        }<br />    }<br />    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (browser.firefox </span><span style=\"color: #000000;\">||</span><span style=\"color: #000000;\"> browser.chrome)<br />    {<br />        </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> sel </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> win.getSelection();<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (sel.rangeCount </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">) range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> sel.getRangeAt(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">); </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />    }<br /><br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SelectionRange(win.document, range);<br />}</span></div></pre></div><p>&nbsp;</p><h2 style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 14px; font-family: Verdana; padding: 0px;\">2.4 修改选中的HTML的样式</h2><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">修改选中的HTML的样式方法并不复杂，只需要将HTML转成DOM对象，然后递归的设置每一个节点对应的样式的值即可,具体代码如下：</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighte\nr.com/<br /><br />--><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> SetNodeStyle(doc, node, name, value)<br />{<br />    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (node.innerHTML </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> undefined)<br />    {<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> node;<br />    }<br />    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />    {<br />        node.style[name] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> value;<br /><br />        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> node.childNodes.length; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />        {<br />            </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> cn </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> node.childNodes[i];<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (node.innerHTML </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined)<br />            {<br />                SetNodeStyle(doc, cn, name, value);<br />            }<br />        }<br /><br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> node;<br />    }<br />}<br /><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> SetStyle(doc, html, name, value)<br />{<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> dom </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> doc.createElement(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">DIV</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    dom.innerHTML </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> html;<br /><br />    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> dom.childNodes.length; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />    {<br />        </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> node </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> dom.childNodes[i];<br /><br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (node.innerHTML </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> undefined)<br />        {<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果是文本节点，则转换转换成span</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> span </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> doc.createElement(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">SPAN</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />            span.style[name] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> value;<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (node.nodeValue </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined) span.innerHTML </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> node.nodeValue.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">\\&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ig, </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() { </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; });<br />            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (node.textContent </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> undefined) span.innetHTML </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> node.textContent.replace(</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">\\&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">ig, </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() { </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; });<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">替换掉文本节点</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            dom.replaceChild(span, node);<br />        }<br />        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />        {<br />            SetNodeStyle(doc, node, name, value);<br />        }<br />    }<br /><br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> dom.innerHTML;<br />}</span></div></pre></div><p>&nbsp;</p><h2 style=\"margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 14px; font-family: Verdana; padding: 0px;\">2.5 示例</h2><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">使用以上的代码，就可以相当方便的实现一个HTML编辑器，例如，以下代码实现将选中文本的字体大小设置为32px：</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> range </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> GetSelectionRange(editorWindow);<br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> html </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> SetStyle(editorDoc, range.GetSelectedHtml(), </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">fontSize</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">32px</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />range.Replace(html);</span></div></pre></div><p>&nbsp;</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">同理，你可以实现设置行距，缩进，插入图片等功能。\n</p><h1 style=\"margin-top: 6px; margin-right: 0px; margin-bottom: 6px; margin-left: 0px; font-weight: bold; color: #000000; font-size: 16px; font-family: Verdana; padding: 0px;\">3.总结</h1><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">本文给出的代码兼容IE，Firefox和Chrome，如果有其它问题可以通过EMail或者WebIM与我联系。</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">作者：卢春城 <br />E</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">mail：mrlucc@</span><span style=\"color: #000000;\">126</span><span style=\"color: #000000;\">.com <br />出处：http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">lucc.cnblogs.com/ </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接。</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p style=\"margin-top: 12px; margin-right: auto; margin-bottom: 12px; margin-left: auto; text-indent: 0px; line-height: 24px; font-size: 14px; font-family: Verdana; padding: 0px;\">&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-05-31 12:38:00','2010-05-31 12:38:00',NULL,NULL,'publish',NULL,'如何开发HTML编辑器','/post/2012/7/14/1344938609993.html',1,0),(350,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;!</span><span style=\"color: #000000;\">DOCTYPE HTML PUBLIC </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">-//W3C//DTD HTML 4.0 Transitional//EN</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">HTML</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">HEAD</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">TITLE</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">Progress Bar</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">TITLE&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">style type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/css</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />        #graph{ <br />            width:450px; <br />            border:1px solid #F8B3D0; <br />            height:25px; <br />        } <br /><br />        #bar{ <br />            display:block; <br />            background:#FFE7F4; <br />            </span><span style=\"color: #0000ff;\">float</span><span style=\"color: #000000;\">:left; <br />            height:</span><span style=\"color: #000000;\">100</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">; <br />            text</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">align:center; <br />        } <br />    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">style&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> ProgressBar(bar) {<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.bar </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> bar;<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.speed </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">50</span><span style=\"color: #000000;\">;<br />        }<br /><br />        ProgressBar.prototype.move </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(moveing, callback) {<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.bar.style.width </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> parseInt(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.bar.style.width) </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; <br />            <br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.bar.style.width </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">100%</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">){ <br />                window.clearInterval(moveing);<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (callback </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br />                    callback();<br />                }<br />            } <br /><br />        }<br /><br />        ProgressBar.prototype.start </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(callback) {<br />            </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> moveing </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> window.setInterval(</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() {<br />                bar.move(moveing, callback);<br />            }, </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.speed);<br />        }<br /><br />        ProgressBar.prototype.clear </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() {<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.bar.style.width </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">1%</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">; <br />        }<br />    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">script&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">HEAD&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">BODY</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">div id</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">graph</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> <br />            </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">strong id</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">bar</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> style</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">width:1%;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">strong&gt; </span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">        </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">div&gt; </span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">BODY&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #000000;\">&l\nt;</span><span style=\"color: #000000;\">SCRIPT type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/JavaScript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> src</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">ProgressBar.js</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">SCRIPT&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">SCRIPT type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/JavaScript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #000000;\">&lt;!--</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> a() {<br />            alert(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">finish</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">);<br />        }<br /><br />        </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> bar </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ProgressBar(document.getElementById(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">bar</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">)); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 构造方法，参数必须填</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        bar.speed </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">20</span><span style=\"color: #000000;\">; </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 设定间隔时间，非必须</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        bar.start(a); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> a为回调方法，非必须</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">SCRIPT&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">HTML&gt;</span><span style=\"color: #000000;\"><br /></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-05-31 12:25:00','2010-05-31 12:25:00',NULL,NULL,'publish',NULL,'JavaScrpit简易进度条','/post/2012/7/14/1344938610064.html',1,0),(351,0,'open','<p>SQLite作为一个开源的嵌入式数据库产品，具有系统开销小，检索效率高的特性，适用于手机、PDA、机顶盒设备等电器，并且作为嵌入式数据库在可下载的消费类应用程序中运行的很好。这篇文章介绍嵌入式数据库产品SQLite的技术特点，并着重讨论研究与Java语言之间的接口，并以实例说明如何使用JAVA开发基于SQLite的应用程序。</p><p>&nbsp;</p><p>通常我们采用各种数据库产品来实现对数据的存储、检索等功能，例如，Oracle，SQL Server，MySQL等等。这些产品除提供基本的查询，删除，添加等功能外，也提供了很多高级特性，如触发器，存储过程，数据备份恢复，全文检索功能等。但实际上，很多的应用，仅仅利用到了这些数据库产品的基本特性而已。而且在一些小型应用上，或者某些特殊场合的应用，比如桌面程序，这些数据库产品就明显有一些臃肿。在这些情况下，嵌入式数据库的优势就特别明显了。</p><p>&nbsp;</p><p>嵌入式数据库无须独立运行的数据库引擎，它是由程序直接调用相应的API去实现对数据的存取操作。更直白的讲，嵌入式数据库是一种具备了基本数据库特性的数据文件。嵌入式数据库与其它数据库产品的区别是，前者是程序驱动式, 而后者是引擎响应式。嵌入式数据库的一个很重要的特点是它们的体积非常小，编译后的产品也不过几十K。这不但对桌面程序的数据存储方案是一个很好的选择，也使得它们可以应用到一些移动设备上。同时，很多嵌入式数据库在性能上也优于其它数据库，所以在高性能的应用上也常见嵌入式数据库的身影。</p><p>&nbsp;</p><p>下面介绍的是开放源代码的嵌入式数据库，SQLite。同时侧重研究如何应用Java连接SQLite数据库，并开发基于SQLite的应用程序。</p><p>&nbsp;</p><p>SQLite 是D &middot;理查德&middot;希普开发出来的用一个小型C 库实现的一种强有力的嵌入式关系数据库管理体制。它提供了对SQL92 的大多数支持: 支持多表和索引、事务、视图、触发和一系列的用户接口及驱动</p><p>&nbsp;</p><p>SQLite 实现了完备的、可嵌入的、零配置的SQL数据库引擎。它的特点包括：</p><p>&nbsp;</p><p>1、事务处理是原子的、一致的、独立的和持久的（ACID）,即使在系统崩溃和掉电以后。</p><p>&nbsp;</p><p>2、零配置，即不需要设置和管理。</p><p>&nbsp;</p><p>3、实现了绝大部分的SQL92标准。</p><p>&nbsp;</p><p>4、一个单独的磁盘文件存储一个完整的数据库。</p><p>&nbsp;</p><p>5、数据库文件在机器之间可自由共享。</p><p>&nbsp;</p><p>6、支持数据库文件大小至2TB。</p><p>&nbsp;</p><p>7、字符串和BLOG的大小只受限于可用存储器容量。</p><p>&nbsp;</p><p>8、代码量小，即小于30K的C代码行和小于250K的代码空间（gcc 在i486上）</p><p>&nbsp;</p><p>9、对于绝大多数普通操作来说，比流行的C/S 模式的数据库引擎运行速度快。</p><p>&nbsp;</p><p>10、API 简单、易用。</p><p>&nbsp;</p><p>可以看出，基于以上特点，SQLite非常适合应用于嵌入式移动数据库。SQLite的版权允许无任何限制的应用，包括商业性的产品。SQLite官方主站上可以下载到编译后的SQLite程序。</p><p>&nbsp;</p><p>SQLite是无数据类型的数据库。虽然在生成表结构的时候，要声明每个域的数据类型，但SQLite并不做任何检查。开发人员要靠自己的程序控制输入与读出数据的类型是正确的。这里有一个例外，就是当主键为整型值时，如果要插入一个非整型值时会产生异常。另外，虽然在插入或读出数据的时候是不区分类型的，但在比较的时候，不同数据类型是有区别的。比如：</p><p>&nbsp;</p><p>&nbsp;</p><pre class=\"brush:sql\">CREATE TABLE MyTable(a INTEGER, b TEXT);INSERT INTO MyTable VALUES(0,0);</pre><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>当执行下面的查询：</p><p>&nbsp;</p><p>SELECT count(*) FROM MyTable WHERE a==\'00\';</p><p>&nbsp;</p><p>会返回一条记录，因为字段a的类型是整型，而数字00与0是相等的。而执行下面的查询则不会返</p><p>&nbsp;</p><p>&nbsp;回记录：</p><p>&nbsp;</p><p>SELECT count(*) FROM MyTable WHERE b==\'00\';</p><p>&nbsp;</p><p>因为字段b是字符类型，字符\"00\"与\"0\"是不相等的。</p><p>&nbsp;</p><p>SQLite提供了对Transaction的支持。应用Transaction即保证了数据的完整性，也会提高运行速度，因为多条语句一起提交给数据库的速度会比一条一条的提交方式更快。</p><p>&nbsp;</p><p>SQLite库包括一个简单的命令行工具，该工具名称对应SQLite-3_2_2版本叫做sqlite3,用户使用这个工具可以对一个SQLite数据库手工输入和执行SQL命令。例如建立一个名叫wgy的SQLite数据库，并建立一个名叫user的表的步骤如下：</p><p>&nbsp;</p><p>Sqlite3 wgy</p><p>&nbsp;</p><p>SQLite version <st1:chsdate year=\"1899\" month=\"12\" day=\"30\" islunardate=\"False\" isrocdate=\"False\" w:st=\"on\">3.2.1</st1:chsdate></p><p>&nbsp;</p><p>Enter \".help\" for instructions</p><p>&nbsp;</p><p>sqlite&gt; create table user(usernamevarchar(10), password varchar(10));</p><p>&nbsp;</p><p>sqlite&gt; insert into user values(\'Marry\',\'111111\');</p><p>&nbsp;</p><p>sqlite&gt; insert into tbl1 values(\'Helen\',\'222222\');</p><p>&nbsp;</p><p>sqlite&gt; select * from user;</p><p>&nbsp;</p><p>Marry|111111</p><p>&nbsp;</p><p>Helen|222222</p><p>&nbsp;</p><p>Sqlite&gt;</p><p>&nbsp;</p><p>用户结束操作只需按CTRL+C组合键。注意每条SQL命令后要加分号。</p><p>&nbsp;</p><p>用户可能对命令行方式的操作感到不直观，不太容易使用。那么用户可以使用SQLite Database Browser 软件，这是一个免费的、公用域的、开源的可视化工具，可以用来建立、编辑SQLite数据库文件。这就意味着用户可以不必学习复杂的SQL命令，而直接使用熟悉的可视化图形界面设计、编辑SQLite数据库。用户可从http://sqlitebrowser.sourceforge.net/下载该工具软件。</p><p>&nbsp;</p><p>SQLite源代码是C，而且官方网站上只提供了C和Tcl语言的接口。为了应用Java接口，要采用第三方的接口驱动程序，可在http://www.ch-werner.de/javasqlite 中找到这个Java接口程序。这个接口提供了两种连接SQLite的方式：一是直接用JNI技术调用SQLite的C语言接口，这种方式要求开发人员要对SQLite本身的API也有一定的了解。在第二种方式中，接口程序实现了Java标准规范的JDBC接口，这样开发人员只要对JDBC有了解就可以了。</p><p>&nbsp;</p><p>第三方接口库中的Java代码包含JNI接口和多个版本的JDBC接口程序，可根据你的JRE的版本选择相应的JDBC程序。Java类包加上Sqlite_jni.dll文件，组成了SQLite的Java接口库，在应用Java语言调用JDBC或JNI接口时，都是通过应用Java的本地化技术调用Sqlite_jni.dll文件，完成对SQLite数据库的操作。</p><p>&nbsp;</p><p>下面这段代码演示如何应用JNI接口操作SQLite。可以看到Database类的exec()方法是执行SQL语句的关键：</p><p>&nbsp;</p><pre class=\"brush:javascript\">Database db = new Database();try {//打开数据库db.open(\"c:\\\\temp\\\\mydata.slt\",0666);db.interrupt();db.busy_timeout(1000);db.busy_handler(null);db.exec(\"create table account (namevarchar(10),gale boolean)\",result);db.exec(\"insert into accountvalues(\'steve\',\'m\')\", result);db.exec(\"select * fromaccount\",result);Author：YiYun QQ：33252040 / 99593311//关闭数据库db.close();} catch (Exception e) {e.printStackTrace();}</pre><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>用户一定要保证在类路径class_path中有&ldquo;sqlite.jar&rdquo;,并且保证在你的JAVA库路径JAVAlibrary path 中有本地库nativelibrary。用\"SQLite.JDBCDriver\"作为JDBC的驱动程序类名。连接JDBC的URL格式为jdbc:sqlite:/path。这里的path\n为指定到SQLite数据库文件的路径，例如：</p><p>&nbsp;</p><p>jdbc:sqlite://dirA/dirB/dbfile</p><p>&nbsp;</p><p>jdbc:sqlite://DRIVE:/dirA/dirB/dbfile</p><p>&nbsp;</p><p>jdbc:sqlite://COMPUTERNAME/shareA/dirB/dbfile</p><p>&nbsp;</p><p>参考下面的应用JDBC连接SQLite的例程：</p><p>&nbsp;</p><p>//声明JDBC驱动程序</p><p>&nbsp;</p><p>Class clz =Class.forName(\"SQLite.JDBCDriver\");</p><p>&nbsp;</p><p>//连接数据库</p><p>&nbsp;</p><p>Connection conn =DriverManager.getConnection(\"jdbc:sqlite:/c:/temp/e2.db\");</p><p>&nbsp;</p><p>Statement stmt = conn.createStatement();</p><p>&nbsp;</p><p>//生成person表，包含名子和年龄字段</p><p>&nbsp;</p><p>stmt.execute(\"create table person(name varchar(100),age int)\");</p><p>&nbsp;</p><p>//插入数据</p><p>&nbsp;</p><p>stmt.execute(\"insert into personvalues(\'steve\',25)\");</p><p>&nbsp;</p><p>//用SQL语句读出数据</p><p>&nbsp;</p><p>result = stmt.executeQuery(\"select *from person\");</p><p>&nbsp;</p><p>while(result.next()){</p><p>&nbsp;</p><p>System.out.println(result.getString(1));</p><p>&nbsp;</p><p>System.out.println(result.getInt(2));</p><p>&nbsp;</p><p>}</p><p>&nbsp;</p><p>运行程序时要在Java.exe命令行加入选项java.library.path指定到Sqlite_jni.dll所在的路径。例如，如果Sqlite_jni.dll放在c:\\sqliteNative 路径下面，运行类com.YiYun.MyClass 的命令行将会是这样：java-Djava.library.path=c:\\sqliteNative com.YiYun.MyClass。</p><p>&nbsp;</p><p>SQLite已于<st1:chsdate year=\"2005\" month=\"6\" day=\"13\" islunardate=\"False\" isrocdate=\"False\" w:st=\"on\">2005年6月13日</st1:chsdate>发布了Version <st1:chsdate year=\"1899\" month=\"12\" day=\"30\" islunardate=\"False\" isrocdate=\"False\" w:st=\"on\">3.2.2</st1:chsdate>,该版本不仅修正了许多的BUG,而且访问速度更快，产生的代码量更少。而JAVA程序又具有简单易学、面向对象、平台无关性、稳定安全等特点。两者结合起来开发的应用程序必然兼具两方面的优势。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><pre><span style=\"font-family: verdana, \'courier new\';\"><span style=\"white-space: normal;\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"white-space: pre;\"><span style=\"font-family: verdana, \'courier new\';\"><span style=\"white-space: normal;\"><pre class=\"brush:java\">import java.sql.*; public class Test {  public static void main(String[] args) throws Exception {    Class.forName(\"org.sqlite.JDBC\");    Connection conn =      DriverManager.getConnection(\"jdbc:sqlite:test.db\");    Statement stat = conn.createStatement();    stat.executeUpdate(\"drop table if exists people;\");    stat.executeUpdate(\"create table people (name, occupation);\");    PreparedStatement prep = conn.prepareStatement(      \"insert into people values (?, ?);\");     prep.setString(1, \"Gandhi\");    prep.setString(2, \"politics\");    prep.addBatch();    prep.setString(1, \"Turing\");    prep.setString(2, \"computers\");    prep.addBatch();    prep.setString(1, \"Wittgenstein\");    prep.setString(2, \"smartypants\");    prep.addBatch();     conn.setAutoCommit(false);    prep.executeBatch();    conn.setAutoCommit(true);     ResultSet rs = stat.executeQuery(\"select * from people;\");    while (rs.next()) {      System.out.println(\"name = \" + rs.getString(\"name\"));      System.out.println(\"job = \" + rs.getString(\"occupation\"));    }    rs.close();    conn.close();  }}</pre><br /></span></span></span></span></span></span></pre>\n','2010-05-31 12:16:00','2010-05-31 12:16:00',NULL,NULL,'publish',NULL,'SQLite','/post/2012/7/14/1344938610122.html',1,0),(352,0,'open','<p>这周心血来潮，翻看了现在比较流行的几个JS脚本框架的底层代码，虽然是走马观花，但也受益良多，感叹先人们的伟大&hellip;&hellip;</p><p>感叹是为了缓解严肃的气氛并引出今天要讲的话题，&rdquo;javascript面向对象编程&rdquo;，接下来，我们围绕面向对象的几大关键字：<em>封装</em>，<em>继承</em>，<em>多态</em>，展开。</p><p><strong>封装</strong>：javascript中创建对象的模式中，个人认为通过闭包才算的上是真正意义上的<em>封装</em>，所以首先我们先来简单介绍一下闭包，看下面这个例子：</p><div class=\"default javascript codecolorer-container\" style=\"overflow: auto; white-space: nowrap;\"><div class=\"codecolorer javascript\" style=\"white-space: nowrap;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> myInfo(){<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">老鱼</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,age </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">27</span><span style=\"color: #000000;\">;<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> myInfo </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">my name is</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> name </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">i am</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> age </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">years old</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />    </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showInfo(){<br />      alert(myInfo);<br />    }<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> showInfo;<br />  }<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> oldFish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> myInfo();<br />  oldFish();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p></div></div><p>是不是很眼熟呢？没错了，这其实就是一个简单的闭包应用了。简单解释一下：上面的函数myInfo中定义的变量，在它的内嵌函数showInfo中是可访问的（这个很好理解），但是当我们把这个内嵌函数的返回引用赋值给一个变量oldFish，这个时候函数showInfo是在myInfo函数体外被调用，但是同样可以访问到定义在函数体内的变量。oh yeah!</p><p>总结一下闭包的原理吧：<em>函数是运行在定义他们的作用域中而不是调用他们的作用域中。</em>其实返回一个内嵌函数也是创建闭包最常用的一种方法！</p><p>如果觉得上面的解释太抽象的话，那么我们一起重塑上面的函数，看看这样是否层次鲜明一些：</p><p class=\"More\"><span id=\"more-905\">&nbsp;</span></p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> ioldFish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(name,age){<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> name,age </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> age;<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> myInfo </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">my name is</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> name </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">i am</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> age </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">years old</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">{<br />      showInfo:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />        alert(myInfo);  <br />      } <br />    }<br />  }<br />  ioldFish(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">老鱼</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">27</span><span style=\"color: #000000;\">).showInfo();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>上例中的编码风格是<em>ext</em> <em>yui</em>中比较常见的，公私分明，一目了然。通过闭包，我们可以很方便的把一些不希望被外部直接访问到的东西隐藏起来，你要访问函数内定义的变量，只能通过特定的方法才可以访问的到，直接从外部访问是访问不到的，写的挺累，饶了一圈终于转回来了，封装嘛，不就是把不希望被别人看到的东西隐藏起来嘛！哈哈&hellip;&hellip;</p><p>上例如果转换成<em>JQ</em>的风格的话，应该如下例所写， 这样的封装模式属于门户大开型模式，里面定义的变量是可以被外部访问到的（下面的例子如果你先实例化一个对象，然后在函数外部访问对象的name或者age属性都是可以读取到的）当然这种模式下我们可以设置一些&rdquo;潜规则&rdquo;，让团队开发成员明白哪些变量是私用的，通常我们人为的在私有变量和方法前加下划线&rdquo;_&rdquo;，标识警戒讯号！从而实现&rdquo;封装&rdquo;</p><div class=\"default javascript codecolorer-container\" style=\"overflow: aut\no; white-space: nowrap;\"><span style=\"line-height: normal; white-space: normal; font-size: small;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> ioldFish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(name,age){<br />      </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> ioldFish.func.init(name,age);  <br />    };<br />    ioldFish.func </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ioldFish.prototype </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">{<br />        init:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(name,age){<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> name;<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.age </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> age;<br />            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;<br />        },<br />        showInfo:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />            </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> info </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">my name is</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">i am </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.age</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">years old</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />            alert(info);<br />        }<br />    };<br />    ioldFish.func.init.prototype </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ioldFish.func;<br />    ioldFish(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> 老 鱼</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">27</span><span style=\"color: #000000;\">).showInfo();<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var oldFish = new ioldFish(\"老鱼\",27);</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">alert(oldFish.name);</span><span style=\"color: #008000;\"><br />//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p><br /></span></div><p>可能有人会问，哪种模式好呢？这个怎么说呢？两种方式都有优缺点，结合着用呗！总之一个原则，一定一定不能直接被外部对象访问的东西，就用闭包封装吧。&rdquo;一定一定&rdquo;四个字很深奥，不断实践中才能体会真谛！</p><p><strong>继承</strong>：提到这个的时候，要顺便再补充一句：闭包封装中的一个缺点，不利于子类的派生，所以闭包有风险，封装需谨慎！直观起见，下面例子中创建对象的方式，采用&rdquo;门户大开型&rdquo;模式。</p><p>在javascript中<em>继承</em>一般分为三种方式：&rdquo;类式继承&rdquo;，&rdquo;原型继承&rdquo;,&rdquo;掺元类&rdquo;。下面简单的介绍一下三类继承方式的原理。</p><p><strong>A.类式继承：</strong>这个是现在主流框架中常用的继承方式，看下例：</p><div class=\"default javascript codecolorer-container\" style=\"overflow: auto; white-space: nowrap;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(name){<br />    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> name;<br />  };<br />  Name.prototype.getName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />    alert(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name);<br />  };<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Fish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(name,age){<br />    Name.call(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">,name);<br />    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.age </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> age;<br />  };<br />  Fish.prototype </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Name();<br />  Fish.prototype.constructor </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Fish;<br />  Fish.prototype.showInfo </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />   alert(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.age);<br />  }<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> ioldFish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Fish(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">老鱼</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">27</span><span style=\"color: #000000;\">);<br />  ioldFish.getName();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p></div><p>上述子类Fish中并没定义getName方法，但是子类Fish的实例对象ioldFish依然调用到了该方法，这是因为子类Fish继承了超类Name中定义的getName方法。解释一下，这里子类Fish的prototype指到了超类的一个实例，在子类Fish中虽然没有申明getName方法，但是根据原型链原理，会向prototype指向的上一级对象中去查找是否有该方法，如果没找到该方法，会一直搜索到最初的原型对象。这其实也就是继承的原理了。这里特别说明一下，Fish.prototype.constructor = Fish;这句，由于默认子类的prototype应该是指向本身的，但是之前把prototype指向到了超类的实例对象，所以在这里要把它设置回来。当然这里可以把相关代码通过一个函数来组织起来，起到伪装extend的作用，这里不再阐述，可以关注本人下篇博文&hellip;&hellip;</p><p><strong>B.原型继承</strong>，从内存性能上看优于类式继承。</p><div class=\"default javascript codecolorer-container\" style=\"overflow: auto; white-space: nowrap;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> clone(object){<br />    </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> F </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){};<br />    F.prototype </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> object;<br />    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> F();<br />  };<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> {<br />    name:</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">who\'s name</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,<br />    showInfo:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />      alert(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name);<br />    }<br />  };<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Fish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> clone(Name);<br />  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Fish.name = \"老鱼\";</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  Fish.showInfo();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p></div><p>很明显，原型继承核心就是这个clone函数，同样是原型链的原理，不同的是它直接克隆超类，这样的话子类就继承了超类的所有属性和方法.特别说一下，这类继承并不需要创建构造函数，只需要创建一个对象字变量，定义相应的属性和方法，然后在子类中只需要通过圆点&rdquo;.&rdquo;符号来引用属性和方法就可以了.</p><p><strong>C.掺元类：</strong>把一些常用通用性比较大的方法统一封装在一个函数中，然后通过下面这个函数分派给要用到这些方法的类．还可以针对不同的类，选择性的传递需要的方法。</p><div class=\"default javascript codecolorer-container\" style=\"overflow: auto; white-space: nowrap;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> agument(receveClass,giveClass){<br />    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(arguments[</span><span style=\"color: #000000;\">2</span><span style=\"color: #000000;\">]){<br />      </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> len </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> arguments.length;<br />      </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(i</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">2</span><span style=\"color: #000000;\">;i</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">len;i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">){<br />        receveClass.prototype[arguments[i]] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> giveClass.prototype[arguments[i]];<br />      }<br />    }<br />    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{<br />      </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(method </span><span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> giveClass.prototype){<br />        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">receveClass.prototype[method]){<br />          receveClass.prototype[method] </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> giveClass.prototype[method];<br />        }<br />      }<br />    }<br />  };<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){};<br />  Name.prototype </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">{<br />    sayLike:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />      alert(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">i like oldfish</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    },<br />    sayLove:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){<br />      alert(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">i love oldfish</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br />    }<br />  }<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Fish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(){};<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> ioldFish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Fish();<br />  agument(Fish,Name,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">sayLove</span><span style=\"color: #00000\n0;\">\"</span><span style=\"color: #000000;\">);<br />  ioldFish.sayLove();<br />  ioldFish.sayLike();<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p></div><p><strong>多态</strong>：个人觉得这个比较抽象，很难言传，所以下面就从重载和覆盖两个方面来简单阐述一下。</p><p><em>重载</em>：上面这个例子中agument函数初始带了两个参数，但是在后面的调用中，agument(Fish,Name,&rdquo;sayLove&rdquo;)同样可以带入任意多个参数，javascript的重载，是在函数中由用户自己通过操作arguments这个属性来实现的。</p><p><em>覆盖</em>：这个很简单，就是子类中定义的方法如果与从超类中继承过来的的方法同名，就覆盖这个方法（这里并不是覆盖超类中的方法，注意一下），这里就不累赘了！</p><p>最后重点着墨说一下<strong>this和执行上下文</strong>，在前面举的封装例子中，this都是表示this所在的类的实例化对象本身，但是并不是千篇一律的，打个比方，通过HTML属性定义的事件处理代码，见如下代码：</p><div class=\"default javascript codecolorer-container\" style=\"overflow: auto; white-space: nowrap;\"><span style=\"line-height: normal; white-space: normal; font-size: small;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">script type</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/javascript</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> &lt;![CDATA[</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> Name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(name) {<br />  </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> name;<br />  </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.getName </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> () {<br />   alert(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.name);<br />  }<br /> };<br />   </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> ioldFish </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Name(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">老鱼</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">),<br />   btn </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> document.getElementById(</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">btn</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">);<br />   btn.onclick </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ioldFish.getName;<br />   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">btn.onclick = function(){ioldFish.getName.call(ioldFish)};</span><span style=\"color: #008000;\"><br />//</span><span style=\"color: #008000;\"> ]]&gt;&lt;/script&gt;</span></div></pre></div><p>&nbsp;</p><br /></span></div><p>上例中点了按钮以后弹出框里并没有显示出实例对象的属性，这是因为this的执行上下文已经改变了，他现在所在的上下文应该是input这个HTML标签，但是该标签又不存在getName这个属性，所以自然无法输出这个属性的属性值了！从这个例子我们不难看出：执行上下文是在执行时才确定的，它随时可以变。</p><p>当然你可以去掉上面我注释掉的那段代码，通过call改变this的执行上下文，从而获取getName方法。apply方法同样可以实现改变执行上下文的功能，不过在prototype框架中发现了一个更为优美的实现方法bind。看一下这个方法的实现吧，不得不感叹先人的伟大&hellip;&hellip;</p><div class=\"default javascript codecolorer-container\" style=\"overflow: auto; white-space: nowrap;\"><span style=\"line-height: normal; white-space: normal; font-size: small;\"><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">Function.prototype.bind </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(obj) {<br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> method </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">,<br />temp </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">() {<br /></span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> method.apply(obj, arguments);<br />};<br />}</span></div></pre></div><p>&nbsp;</p><br /></span></div><p>相信如果能看明白的话，您已经可以靠这些知识点，去写一个简单的脚本框架了，多多实践，相信不久的将来就能高手进级了！如果没看明白，也不用着急，面向对象本来就有些抽象，多练习练习，应该OK的了，加油&hellip;&hellip;</p><p>这篇先写到这吧，下篇文章可以和大家一起探讨一下，javascript的设计模式，敬请期待。</p>\n','2010-05-25 14:40:00','2010-05-25 14:40:00',NULL,NULL,'publish',NULL,'浅谈javascript面向对象编程','/post/2012/7/14/1344938610182.html',1,0),(353,0,'open','<p align=\"left\">&nbsp;&nbsp;最近做的一个项目中运用&nbsp;xml&nbsp;数据岛技术，所以把数据岛方面的知识总结一下。</p><p align=\"left\">&nbsp;&nbsp;XML&nbsp;数据岛&nbsp;（&nbsp;data islands&nbsp;）就是被&nbsp;html&nbsp;页面引用或者包含的&nbsp;xml&nbsp;数据，是从&nbsp;IE5&nbsp;开始引入的一项技术。可以通过&nbsp;xml&nbsp;标签很轻松将数据岛插入到&nbsp;html&nbsp;文档中。那么怎么访问&nbsp;xml&nbsp;数据岛的数据呢，很简单，通过&nbsp;xml&nbsp;的&nbsp;id&nbsp;。在页面中的数据岛和其他的&nbsp;xml&nbsp;数据一样，可以通过标准的dom&nbsp;方法来进行访问。</p><p align=\"left\">&nbsp;&nbsp;&nbsp;数据岛的优点是可以很容易的将&nbsp;xml&nbsp;中的数据和&nbsp;html&nbsp;元素进行绑定，免去了手工把数据填充到&nbsp;html&nbsp;中的麻烦。修改数据岛中的数据，页面上与之绑定的html元素的值也随之改变。&nbsp;OK&nbsp;，先来看个数据岛之&nbsp;Hello World&nbsp;版，</p><p align=\"left\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">数据岛其实就是一串 xml ，必须要用 xml 标签围起来，示例如下：<br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">xml </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">= \"island\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">root</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">p1</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> magicdoom </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">age</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> 24 </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">age</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">email</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> magicdoom@gmail.com </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">email</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">p1</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">  <br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">root</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">xml</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />数据岛有三种定义方式，一种是直接将上述 xml 嵌入到 html 页面中，</span></div><div><span style=\"color: #000000;\">另一种是见 xml 数据保存在单独的 xml 文件中，在页面只需嵌入 <br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">xml </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">= \"island\"</span><span style=\"color: #ff0000;\"> src</span><span style=\"color: #0000ff;\">= \"xxx.xml\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">xml</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />第三种是：<br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"xml\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">root</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">p1</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　　　　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">magicdoom </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　　　　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">age</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">24 </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">age</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　　　　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">email</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">magicdoom@gmail.com</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">email</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　　　</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">p1</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">root</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p align=\"left\">其中的&nbsp;src&nbsp;属性值为保存&nbsp;xml&nbsp;数据的那个文件的位置。</p><p align=\"left\">&nbsp;&nbsp;&nbsp;如何将上面定义好的&nbsp;xml&nbsp;数据岛绑定到&nbsp;html&nbsp;控件上呢？答案是通过&nbsp;datasrc&nbsp;，&nbsp;datafld&nbsp;属性，下面是一个将&nbsp;xml&nbsp;数据岛绑定到&nbsp;html&nbsp;控件上的示例：</p><p align=\"left\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">table </span><span style=\"color: #ff0000;\">width</span><span style=\"color: #0000ff;\">= \"100%\"</span><span style=\"color: #ff0000;\"> datasrc</span><span style=\"color: #0000ff;\">= \"#island\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">thead</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> Name </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">th</span><span styl\ne=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> Age </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> Email </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">thead</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tbody</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />      </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td </span><span style=\"color: #ff0000;\">align</span><span style=\"color: #0000ff;\">= \"center\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">span  </span><span style=\"color: #ff0000;\">datafld</span><span style=\"color: #0000ff;\">= \"name\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">span</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td </span><span style=\"color: #ff0000;\">align</span><span style=\"color: #0000ff;\">= \"center\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">spandatafld</span><span style=\"color: #0000ff;\">= \"age\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">span</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td </span><span style=\"color: #ff0000;\">align</span><span style=\"color: #0000ff;\">= \"center\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">spandatafld</span><span style=\"color: #0000ff;\">= \"email\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">span</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />       </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tbody</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">table</span><span style=\"color: #0000ff;\">&gt;</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p align=\"left\">例中&nbsp;table&nbsp;的&nbsp;datasrc&nbsp;属性的&nbsp;value&nbsp;为&nbsp;xml&nbsp;数据岛中的定义的&nbsp;id&nbsp;，注意必须要在前头加上&nbsp;#&nbsp;。</p><p align=\"left\">表格中的&nbsp;datafld&nbsp;属性对应于&nbsp;xml&nbsp;中的元素的名称。</p><p align=\"left\">将上述数据岛和&nbsp;html&nbsp;代码保存到一个&nbsp;html&nbsp;文件中，在&nbsp;IE&nbsp;中打开，可以看到结果如下：</p><table border=\"0\" cellpadding=\"0\" style=\"width: 100%;\"><thead>  <tr><td><p align=\"center\"><strong>Name</strong></p></td><td><p align=\"center\"><strong>Age</strong></p></td><td><p align=\"center\"><strong>Email</strong></p></td></tr></thead> <tbody><tr><td><p align=\"center\">magicdoom</p></td><td><p align=\"center\">24</p></td><td><p align=\"center\"><a href=\"mailto:magicdoom@gmail.com\">magicdoom@gmail.com</a></p></td></tr></tbody></table><p align=\"left\">&nbsp;</p><p align=\"left\">下面我们来看看在&nbsp;javascript&nbsp;中怎样通过DOM访问数据岛中的数据</p><p align=\"left\">&nbsp;</p><p align=\"left\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">xmldoc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">island;     </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 取数据岛</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> rootElement </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> xmldoc.documentElement.firstChild;  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 取根元素 </span><span style=\"color: #008000;\"><br />//</span><span style=\"color: #008000;\"> 实现打印出数据岛中第一个元素的值</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (rootElement.hasChildNodes()) <br />  alert (rootElement.firstChild.text) ;<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 创建一个新的元素，添加到数据岛中</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> test </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> xmldoc.createElement( </span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">test</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\"> );<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> testTxt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> xmldoc.createTextNode( </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">This is atest!</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> );<br />  test.appendChild(testTxt);<br />  rootElement.appendChild(test);<br />  alert (rootElement.lastChild.text) ;<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 删除数据岛中的一个元素</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">rootElement.removeChild(rootElement.lastChild) ;<br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 修改数据岛中的一个元素的值</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">rootElement.firstChild.text</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">new value</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\"> ;<br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查找xml元素 使用getElementsByTagName返回一个element的数组</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">rootElement.getElementsByTagName(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">name</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">).text <br /><br /></span><span style=\"color: #008000;\">//</span><span style=\"color:\n#008000;\">测试数据岛绑定的效果</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">在页面中定义</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">button  onclick</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">testDSO()</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">testDSO</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">button&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">  testDSO()<br />{<br /> rootElement.getElementsByTagName(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">name</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)(</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">).text</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">modefiedname</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;<br />}<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">点击按钮后就会发现页面上的Name的值也随之改变</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p align=\"left\">&nbsp;</p><p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;XML&nbsp;数据岛的应用很容易和其他的技术进行结合。我当前做的一个项目中,就是和&nbsp;HTC&nbsp;以及&nbsp;XmlHttp&nbsp;技术进行结合。&nbsp;htc&nbsp;做了一些功能强大的控件(比如Tree非常好用)，底层通过XmlHttp&nbsp;与后台的服务器进行交互，可以达到无刷新提交页面。前台通过js来操纵页面中的数据岛和发送数据到后台的java类，项目的&nbsp;框架支持在js调用后台&nbsp;java&nbsp;类的方法，有点类似于&nbsp;DWR&nbsp;。后台的&nbsp;java&nbsp;类返回&nbsp;XML&nbsp;数据到前台的&nbsp;js&nbsp;，&nbsp;js&nbsp;再将xml数据注入到页面的数据岛中。<br />&nbsp;&nbsp; 项目采用的框架是国内的一家公司的商业产品，&nbsp;通过几个月的实际使用，虽然还有一些问题，但是这个框架确实是大大提高了开发效率。</p><p align=\"left\">最后总结一下&nbsp;xml&nbsp;数据岛的最大优点是可以和html元素进行绑定，修改数据岛中的数据，与之绑定的html元素的值也会随之改变。但是也要看到它的缺点：</p><p align=\"left\">1.只能在&nbsp;IE&nbsp;下运行，firefox等其他的浏览器下无法使用。</p><p align=\"left\">2.安全性，&nbsp;xml&nbsp;数据岛可以通过查看&nbsp;html&nbsp;的源代码获取。</p><p align=\"left\">&nbsp;</p><p align=\"left\">另：在&nbsp;DWR&nbsp;中，提供有一些便捷的&nbsp;js&nbsp;函数，可以将后台&nbsp;java&nbsp;方法传回的&nbsp;json&nbsp;格式的&nbsp;js&nbsp;对象的属性值，赋给&nbsp;html&nbsp;页面中的&nbsp;html&nbsp;元素，&nbsp;dwr&nbsp;会根据&nbsp;html&nbsp;元素的&nbsp;id&nbsp;进行自动赋值。这种方式也蛮简单方便的。&nbsp;</p><p align=\"left\">&nbsp;</p><p align=\"left\">&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">HTML</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">HEAD</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">TITLE</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"> New Document </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">TITLE</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">META </span><span style=\"color: #ff0000;\">NAME</span><span style=\"color: #0000ff;\">=\"Generator\"</span><span style=\"color: #ff0000;\"> CONTENT</span><span style=\"color: #0000ff;\">=\"EditPlus\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">META </span><span style=\"color: #ff0000;\">NAME</span><span style=\"color: #0000ff;\">=\"Author\"</span><span style=\"color: #ff0000;\"> CONTENT</span><span style=\"color: #0000ff;\">=\"\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">META </span><span style=\"color: #ff0000;\">NAME</span><span style=\"color: #0000ff;\">=\"Keywords\"</span><span style=\"color: #ff0000;\"> CONTENT</span><span style=\"color: #0000ff;\">=\"\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">META </span><span style=\"color: #ff0000;\">NAME</span><span style=\"color: #0000ff;\">=\"Description\"</span><span style=\"color: #ff0000;\"> CONTENT</span><span style=\"color: #0000ff;\">=\"\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">HEAD</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /><br /> </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">BODY</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">xml </span><span style=\"color: #ff0000;\">ID</span><span style=\"color: #0000ff;\">=\"XMLID\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">root</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">customer</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">张三</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">name</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">customerId</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">1</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">customerId</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">customer</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">root</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">xml</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">table </span><span style=\"color: #ff0000;\">datasrc</span><span style=\"color: #0000ff;\">=\"#XMLID\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style\n=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">thead</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">姓名</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">编号</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">thead</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tbody</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">span </span><span style=\"color: #ff0000;\">datafld</span><span style=\"color: #0000ff;\">=\"name\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">span</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">span </span><span style=\"color: #ff0000;\">datafld</span><span style=\"color: #0000ff;\">=\"customerId\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">span</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />        </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tbody</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">table</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">button </span><span style=\"color: #ff0000;\">onclick</span><span style=\"color: #0000ff;\">=\"getData()\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">获取数据岛数据</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">button</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">button </span><span style=\"color: #ff0000;\">onclick</span><span style=\"color: #0000ff;\">=\"createData()\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">创建新数据</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">button</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">button </span><span style=\"color: #ff0000;\">onclick</span><span style=\"color: #0000ff;\">=\"modifyData()\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">修改数据岛中的数据</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">button</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">button </span><span style=\"color: #ff0000;\">onclick</span><span style=\"color: #0000ff;\">=\"isLoadSuccess()\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">查看是否加载成功</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">button</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">BODY</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /><br /> </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text/javascript\"</span><span style=\"color: #ff0000;\"> language</span><span style=\"color: #0000ff;\">=\"javascript\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\"><br />    </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\"> 实现打印出数据岛中第一个元素的</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> getData(){<br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> XMLID;</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">获取数据岛</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> rootElement </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc.firstChild;</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">根节点</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(rootElement.hasChildNodes()){<br />            alert(rootElement.lastChild.text);<br />        }<br />    }<br /><br />    </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">创建一个新的元素，添加到数据岛中</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> createData(){<br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><spa n style=\"background-color: #f5f5f5; color: #000000;\"> XMLID;<span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">获取数据岛</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> rootElement </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc.firstChild;</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">根节点</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\"><br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> customer_element </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc.createElement(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">customer</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">);</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">创建一个客户</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\"><br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> customer_name_element </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc.createElement(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">name</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">);</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">客户名字</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> customer_customerid_element </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc.createElement(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">customerId</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">);</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">客户编号</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\"><br />        customer_name_element.appendChild(xmldoc.createTextNode(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">李四</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">));<br />        customer_customerid_element.appendChild(xmldoc.createTextNode(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">2</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">));<br /><br />        </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">将name和customerId添加到customer节点</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        customer_element.appendChild(customer_name_element);<br />        customer_element.appendChild(customer_customerid_element);<br /><br />        rootElement.appendChild(customer_element);</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">将新创建的customer对象添加到根节点</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        <br />        </span><span style=\"background-color: #f5f5f5; color: #008000;\">/*</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br />        var list = xmldoc.getElementsByTagName(\"customer\");<br />        alert(\"数据岛元素个数：\" + list.length);<br />        </span><span style=\"background-color: #f5f5f5; color: #008000;\">*/</span><span style=\"background-color: #f5f5f5; color: #000000;\"><br />    }<br /><br />    </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">修改数据岛中元素的值</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> modifyData(){<br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> xmldoc </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> XMLID;</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">获取数据岛</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">        xmldoc.getElementsByTagName(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">name</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">)(</span><span style=\"background-color: #f5f5f5; color: #000000;\">0</span><span style=\"background-color: #f5f5f5; color: #000000;\">).text </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">修改后的名字</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br />    }<br /><br />    </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">xml数据岛是否完全加载</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> isLoadSuccess(){<br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(XMLID.readyState </span><span style=\"background-color: #f5f5f5; color: #000000;\">==</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #\nf5f5f5; color: #000000;\">complete</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">){<br />            alert(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">XML文档加载完成</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">);<br />        }<br />        </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">else</span><span style=\"background-color: #f5f5f5; color: #000000;\">{<br />            alert(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">XML文档没有加载成功！</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">);<br />        }<br />    }<br /> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">HTML</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span></spa></div></pre></div><p>&nbsp;</p><p>&nbsp;</p>\n','2010-05-25 12:40:00','2010-05-25 12:40:00',NULL,NULL,'publish',NULL,'IE数据岛','/post/2012/7/14/1344938610251.html',1,0),(354,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=gb2312\"</span><span style=\"color: #ff0000;\"> </span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">控件cloneNode（）方法的使用</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">language</span><span style=\"color: #0000ff;\">=\"javascript\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\"><br /> i</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">1</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br /> </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> AddRow()<br /> {<br />   </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> tableObject</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">new</span><span style=\"background-color: #f5f5f5; color: #000000;\"> Object();<br />   <br />   </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> isneed</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">true</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br />   <br />   tableObject</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">CloneNodeShow</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">);<br />   </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">判断是否有必要添加新的输入行</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">   </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">for</span><span style=\"background-color: #f5f5f5; color: #000000;\">(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> j</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">0</span><span style=\"background-color: #f5f5f5; color: #000000;\">;j</span><span style=\"background-color: #f5f5f5; color: #000000;\">&lt;</span><span style=\"background-color: #f5f5f5; color: #000000;\">tableObject.all.tags(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">input</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">).length;j</span><span style=\"background-color: #f5f5f5; color: #000000;\">++</span><span style=\"background-color: #f5f5f5; color: #000000;\">)<br />   {<br />    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> inputs </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> tableObject.all.tags(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">input</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">)[j]; <br />    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(inputs.type</span><span style=\"background-color: #f5f5f5; color: #000000;\">==</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">text</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">&amp;&amp;</span><span style=\"background-color: #f5f5f5; color: #000000;\"> inputs.value</span><span style=\"background-color: #f5f5f5; color: #000000;\">==</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">)<br />    {<br />     isneed</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">false</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br />    }<br />   }<br />   </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(isneed)<br />   {<br />    </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">添加一行   </span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> newTR</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">tableObject.insertRow();<br />    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> td0</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">newTR.insertCell();<br />    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> td1</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">newTR.insertCell();<br />    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> td2</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">newTR.insertCell();<br />    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><sp an style=\"background-color: #f5f5f5; color: #000000;\"> td3<span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">newTR.insertCell();<br />    <br />    td0.innerHTML</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">(</span><span style=\"background-color: #f5f5f5; color: #000000;\">++</span><span style=\"background-color: #f5f5f5; color: #000000;\">i)</span><span style=\"background-color: #f5f5f5; color: #000000;\">+</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">.</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br />    td1.innerHTML</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">&lt;input type=\"text\" name=\"username\"/&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br />    </span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">true表示深度克隆</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">    </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> newSelect</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">sexType</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">).cloneNode(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">true</span><span style=\"background-color: #f5f5f5; color: #000000;\">);<br />    newSelect.id</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">sexType</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">+</span><span style=\"background-color: #f5f5f5; color: #000000;\">i;<br />    td2.appendChild(newSelect);<br />    td3.innerHTML</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">&lt;input type=\"text\" name=\"age\" onchange=\"AddRow()\"/&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">;   <br />   }<br /> }<br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">table </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"CloneNodeShow\"</span><span style=\"color: #ff0000;\"> border</span><span style=\"color: #0000ff;\">=\"2\"</span><span style=\"color: #ff0000;\"> bordercolor</span><span style=\"color: #0000ff;\">=\"#000000\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">姓名</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">性别</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">年龄</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">th</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tr </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"signTR\"</span><span style=\"color: #ff0000;\">  </span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">1.</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"username\"</span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">select </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"sexType\"</span><span style=\"color: #ff0000;\"> id</span><span style=\"color: #0000ff;\">=\"sexType\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"%\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">请选择性别</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">男</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />     </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"1\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">女</span><span style=\"color: #0000ff;\">&lt;/<span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">select</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />   </span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"age\"</span><span style=\"color: #ff0000;\"> onchange</span><span style=\"color: #0000ff;\">=\"AddRow()\"</span><span style=\"color: #0000ff;\">/&gt;&lt;/</span><span style=\"color: #800000;\">td</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tr</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /> </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">table</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></span></sp></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-05-25 12:30:00','2010-05-25 12:30:00',NULL,NULL,'publish',NULL,'JavaScript   cloneNode的使用','/post/2012/7/14/1344938610339.html',1,0),(355,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Data;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Management;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Configuration;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Web;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Web.Security;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Web.UI;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Web.UI.WebControls;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Web.UI.WebControls.WebParts;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Web.UI.HtmlControls;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Text.RegularExpressions;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Diagnostics;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Runtime.InteropServices; <br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">partial</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> _Default : System.Web.UI.Page <br />{<br />    [DllImport(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Iphlpapi.dll</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">extern</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> SendARP(Int32 dest, Int32 host, </span><span style=\"color: #0000ff;\">ref</span><span style=\"color: #000000;\"> Int64 mac, </span><span style=\"color: #0000ff;\">ref</span><span style=\"color: #000000;\"> Int32 length);<br />    [DllImport(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Ws2_32.dll</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">extern</span><span style=\"color: #000000;\"> Int32 inet_addr(</span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> ip);<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Page_Load(</span><span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> sender, System.EventArgs e)<br />    {<br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 在此处放置用户代码以初始化页面</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"><br />        {<br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> userip </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Request.UserHostAddress;<br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strClientIP </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> Request.UserHostAddress.ToString().Trim();<br />            Int32 ldest </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> inet_addr(strClientIP); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的地的ip </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            Int32 lhost </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> inet_addr(</span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">本地服务器的ip </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            Int64 macinfo </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Int64();<br />            Int32 len </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">;<br />            </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> res </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> SendARP(ldest, </span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">, </span><span style=\"color: #0000ff;\">ref</span><span style=\"color: #000000;\"> macinfo, </span><span style=\"color: #0000ff;\">ref</span><span style=\"color: #000000;\"> len);<br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> mac_src </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> macinfo.ToString(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">X</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (mac_src </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)<br />            {<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (userip </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">127.0.0.1</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)<br />                    Response.Write(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">正在访问Localhost!</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />                </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />                    Response.Write(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">欢迎来自IP为</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> userip </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">的朋友！</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">&lt;br&gt;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />                </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">;<br />            }<br /><br />            </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> (mac_src.Length </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">12</span><sp an style=\"color: #000000;\">)<br />            {<br />                mac_src <span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> mac_src.Insert(</span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">, </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            }<br /><br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> mac_dest </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">;<br /><br />            </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">11</span><span style=\"color: #000000;\">; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />            {<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> (i </span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">))<br />                {<br />                    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (i </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">)<br />                    {<br />                        mac_dest </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> mac_dest.Insert(</span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">, mac_src.Substring(i, </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">));<br />                    }<br />                    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />                    {<br />                        mac_dest </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> mac_dest.Insert(</span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">, mac_src.Substring(i, </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">));<br />                    }<br />                }<br />            }<br /><br />            Response.Write(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">欢迎来自IP为</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> userip </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">&lt;br&gt;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">,MAC地址为</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> mac_dest </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">的朋友！</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"><br /><br />             </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">&lt;br&gt;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br />        </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception err)<br />        {<br />            Response.Write(err.Message);<br />        }<br />    }<br /><br />    </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Button1_Click(</span><span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> sender, EventArgs e)<br />    {<br />    }<br />}</span></sp></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-22 17:47:00','2010-04-22 17:47:00',NULL,NULL,'publish',NULL,'ASP.NET得到客户端IP和MAC','/post/2012/7/14/1344938610404.html',1,0),(356,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">在搜索引擎的开发中，我们需要对网页的Html内容进行检索，难免的就需要对Html进行解析。拆分每一个节点并且获取节点间的内容。此文介绍两种C#解析Html的方法。<br />第一种方法：<br />用System.Net.WebClient下载Web Page存到本地文件或者String中，用正则表达式来分析。这个方法可以用在Web Crawler等需要分析很多Web Page的应用中。<br />估计这也是大家最直接，最容易想到的一个方法。<br />转自网上的一个实例：所有的href都抽取出来：<br /><br /><br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Net;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Text;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Text.RegularExpressions;<br /></span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> HttpGet<br />{<br />    </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Class1<br />    {<br />        [STAThread]<br />        </span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Main(</span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">[] args)<br />        {<br />            System.Net.WebClient client </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> WebClient();<br />            </span><span style=\"color: #0000ff;\">byte</span><span style=\"color: #000000;\">[] page </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> client.DownloadData(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">http://www.google.com</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> System.Text.Encoding.UTF8.GetString(page);<br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> regex </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">href=[\\\\\\</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\\\\\\</span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">](http:\\\\/\\\\/|\\\\.\\\\/|\\\\/)?\\\\w+(\\\\.\\\\w+)*(\\\\/\\\\w+(\\\\.\\\\w+)?)*(\\\\/|\\\\?\\\\w*=\\\\w*(&amp;\\\\w*=\\\\w*)*)?[\\\\\\\"\\\\\\</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">;</span><span style=\"color: #800000;\"><br /></span><span style=\"color: #000000;\">            Regex re </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Regex(regex);<br />            MatchCollection matches </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> re.Matches(content);<br /><br />            System.Collections.IEnumerator enu </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> matches.GetEnumerator();<br />            </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> (enu.MoveNext() </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> enu.Current </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />            {<br />                Match match </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (Match)(enu.Current);<br />                Console.Write(match.Value </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">\\r\\n</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            }<br />        }<br />    }<br />}<br /><br />一些爬虫的HTML解析中也是用的类似的方法。<br />第二种方法：<br />利用Winista.Htmlparser.Net 解析Html。这是.NET平台下解析Html的开源代码，网上有源码下载，百度一下就能搜到，这里就不提供了。并且有英文的帮助文档。找不到的留下邮箱。<br />个人认为这是.net平台下解析html不错的解决方案，基本上能够满足我们对html的解析工作。<br />自己做了个实例：<br /><br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Collections.Generic;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.ComponentModel;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Data;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Drawing;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Linq;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Text;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Windows.Forms;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Winista.Text.HtmlParser;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Winista.Text.HtmlParser.Lex;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Winista.Text.HtmlParser.Util;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Winista.Text.HtmlParser.Tags;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Winista.Text.HtmlParser.Filters;<br /><br /><br /></span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> HTMLParser<br />{<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">partial</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Form1 : Form<br />    {<br />        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Form1()<br />        {<br />            InitializeComponent();<br />            AddUrl();<br />        }<br /><br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> btnParser_Click(</span><span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> sender, EventArgs e)<br />        {<br />            </span><span style=\"color: #0000ff;\">#region</span><span style=\"color: #000000;\"> 获得网页的html</span><span style=\"color: #000000;\"><br />            </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"><br />            {<br /><br />                txtHtmlWhole.Text </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">;<br />                </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> url </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> CBUrl.SelectedItem.ToString().Trim();<br />                System.Net.WebClient aWebClient </span><span style=\"color: #000000;\">=</span><span style=\"co\nlor: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> System.Net.WebClient();<br />                aWebClient.Encoding </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> System.Text.Encoding.Default;<br />                </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> html </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> aWebClient.DownloadString(url);<br />                txtHtmlWhole.Text </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> html;<br />            }<br />            </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception ex)<br />            {<br />                MessageBox.Show(ex.Message);<br />            }<br />            </span><span style=\"color: #0000ff;\">#endregion</span><span style=\"color: #000000;\"><br /><br />            </span><span style=\"color: #0000ff;\">#region</span><span style=\"color: #000000;\"> 分析网页html节点</span><span style=\"color: #000000;\"><br />            Lexer lexer </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Lexer(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.txtHtmlWhole.Text);<br />            Parser parser </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Parser(lexer);<br />            NodeList htmlNodes </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> parser.Parse(</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.treeView1.Nodes.Clear();<br />            </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.treeView1.Nodes.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            TreeNode treeRoot </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.treeView1.Nodes[</span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">];<br />            </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> htmlNodes.Count; i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />            {<br />                </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.RecursionHtmlNode(treeRoot, htmlNodes[i], </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);<br />            }<br /><br />            </span><span style=\"color: #0000ff;\">#endregion</span><span style=\"color: #000000;\"><br /><br />        }<br /><br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> RecursionHtmlNode(TreeNode treeNode, INode htmlNode, </span><span style=\"color: #0000ff;\">bool</span><span style=\"color: #000000;\"> siblingRequired)<br />        {<br />            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (htmlNode </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">||</span><span style=\"color: #000000;\"> treeNode </span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">;<br /><br />            TreeNode current </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> treeNode;<br />            TreeNode content ;<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">current node</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (htmlNode </span><span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ITag)<br />            {<br />                ITag tag </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (htmlNode </span><span style=\"color: #0000ff;\">as</span><span style=\"color: #000000;\"> ITag);<br />                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">tag.IsEndTag())<br />                {<br />                    </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> nodeString </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> tag.TagName;<br />                    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (tag.Attributes </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> tag.Attributes.Count </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)<br />                    {<br />                        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (tag.Attributes[</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ID</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">] </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />                        {<br />                            nodeString </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> nodeString </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\"> { id=\\</span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #800000;\"> + tag.Attributes[</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">ID</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">].ToString() + </span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\\</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\"> }</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">;<br />                        }<br />                        </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (tag.Attributes[</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">HREF</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">] </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />                        {<br />                            nodeString </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> nodeString </span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\"> { href=\\</span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #800000;\"> + tag.Attributes[</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">HREF</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">].ToString() + </span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\\</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\"> }</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">;<br />                        }<br />                    }<br />                    <br />                    current </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> TreeNode(nodeString);<br />                    treeNode.Nodes.Add(current);<br />                }<br />            }<br /><br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取节点间的内容</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (htmlNode.Children </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> htmlNode.Children.Count </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)<br />            {<br />                </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.RecursionHtmlNode(current, htmlNode.FirstChild, </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);<br />                content </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> TreeNode(htmlNode.FirstChild.GetText());<br />                treeNode.Nodes.Add(content);<br />            }<br /><br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">the sibling nodes</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (siblingRequired)<br />            {<br />                INode sibling </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> htmlNode.NextSibling;<br />                </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\"> (sibling </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />                {<br />                    </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.RecursionHtmlNode(treeNode, sibling, </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);<br />                    sibling </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> sibling.NextSibling;<br />                }<br />            }<br />        }<br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> AddUrl()<br />        {<br />            CBUrl.Items.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">http://www.hao123.com</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            CBUrl.Items.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">http://www.sina.com</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />            CBUrl.Items.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">http://www.heuet.edu.cn</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />        }<br /><br />        <br /><br />    }<br />}<br />运行效果：<br />实现取来很容易，结合Winista.Htmlparser源码很快就可以实现想要的效果。<br /><br />小结：<br />简单介绍了两种解析Html的方法，大家有什么其他好的方法还望指教。</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-22 14:07:00','2010-04-22 14:07:00',NULL,NULL,'publish',NULL,'C#解析HTML','/post/2012/7/14/1344938610466.html',1,0),(357,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">spring </span><span style=\"color: #000000;\">3</span><span style=\"color: #000000;\"> 里面新增加了下面两个类，用来方便的实现rss和atom <br />org.springframework.web.servlet.view.feed.AbstractRssFeedView <br />org.springframework.web.servlet.view.feed.AbstractAtomFeedView <br /><br />下面演示用spring 3实现rss,除了加入spring 3的web.servlet包外，还要加入rome</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">1.0</span><span style=\"color: #000000;\">.jar和jdom.jar <br /><br />在spring配置文件中加入 <br />Xml代码 <br /></span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">bean </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">org.springframework.web.servlet.view.BeanNameViewResolver</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">/&gt;</span><span style=\"color: #000000;\">  <br /><br /><br />用于显示数据的Item <br />Java代码 <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> RssItem {  <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String title;  <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String author;  <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Date datePublished;  <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String description;  <br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String link;  <br />}  <br /><br /><br />用spring mvc 来处理一个地址请求 <br />Java代码 <br />@Controller  <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> FeedController {  <br />      <br />    @RequestMapping(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">/rss</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)  <br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String rss(Model model) {  <br />  <br />        List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">RssItem</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> rssItems </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArrayList</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">RssItem</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">();  <br />  <br />        RssItem n </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> RssItem();  <br />        n.setTitle(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">中国内地发现8例甲流病毒变异病例</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        n.setDescription(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">世卫组织证实内地曾出现甲流病毒变种...</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        n.setLink(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://news.163.com/09/1125/17/5OVTJVQF000120GU.html</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        n.setAuthor(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">新华网</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        n.setDatePublished(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Date());   <br />  <br />        rssItems.add(n);  <br />  <br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">加入一个Demo的list数据  </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        model.addAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">rssItemList</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, rssItems);  <br />          <br /> </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">频道的相关信息  </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        model.addAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">feedTitle</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">网易头条新闻</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        model.addAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">feedDesc</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">头条新闻</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        model.addAttribute(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">feedLink</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">,</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">http://news.163.com/</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />          <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">rssView</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">;  <br />    }  <br />  <br />}  <br /><br /><br />继承AbstractRssFeedView类，实现buildFeedMetadata，buildFeedItems方法 <br />Java代码 <br />@Component(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">rssView</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)  <br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> RssView </span><span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> AbstractRssFeedView {  <br />  <br />    @Override  <br />    </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> buildFeedMetadata(Map</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">String,Object</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> model, Channel feed,  <br />            HttpServletRequest request) {  <br />          <br />        String feedTitle </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (String)model.get(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">feedTitle</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        String feedDesc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (String)model.get(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">feedDesc</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />        String feedLink </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (String)model.get(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">feed\nLink</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />          <br />        feed.setTitle(feedTitle);  <br />        feed.setDescription(feedDesc);  <br />        feed.setLink(feedLink);  <br />    }  <br />  <br />    @Override  <br />    </span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">Item</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> buildFeedItems(Map</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">String, Object</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> model,  <br />            HttpServletRequest request, HttpServletResponse response)  <br />            </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception {  <br />  <br />        @SuppressWarnings(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">unchecked</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">)  <br />        List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">RssItem</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> rssItems </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> (List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">RssItem</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">) model.get(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">rssItemList</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />  <br />        List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">Item</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> feedItems </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArrayList</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">Item</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\">();  <br />        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (RssItem rssItem : rssItems) {  <br />            Item feedItem </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Item();  <br />            feedItem.setTitle(rssItem.getTitle());  <br />            feedItem.setAuthor(rssItem.getAuthor());  <br />            feedItem.setPubDate(rssItem.getDatePublished());  <br />  <br />            Description desc </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Description();  <br />            desc.setType(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">text/html</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);  <br />            desc.setValue(rssItem.getDescription());  <br />            feedItem.setDescription(desc);  <br />  <br />            feedItem.setLink(rssItem.getLink());  <br />            feedItems.add(feedItem);  <br />        }  <br />  <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> feedItems;  <br />    }  <br />}  <br /></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-22 13:10:00','2010-04-22 13:10:00',NULL,NULL,'publish',NULL,'用spring，rome实现rss,atom','/post/2012/7/14/1344938610621.html',1,0),(358,0,'open','<p>&nbsp;</p>\r\n<div class=\"cnblogs_code\">\r\n<div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">最近又接到一个任务，做一套push RSS的系统，主要的问题是要一并爬取正文然后push个用户，用户直接就可以查看<br /><br />这个项目的主要难点在获取文章的正文部分，大家也知道网页是千奇百怪，想找到正文部分是不容易的哦<br /><br />下面先给大家一段解析rss的代码<br /><br />URL rssUrl </span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> URL(url);<br /><br />URLConnection connection </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> rssUrl.openConnection();<br /><br />connection.setRequestProperty(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">User-Agent</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">nbg</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);<br /><br />SyndFeedInput input </span><span style=\"color: #000000;\">=</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SyndFeedInput();<br /><br />SyndFeed feed </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> input.build(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> XmlReader(connection));<br /><br />Date pubDate </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> feed.getPublishedDate();<br /><br /></span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (pubDate </span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {<br /><br />urlBean.setTime(pubDate.getTime());<br /><br />} </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {<br /><br />urlBean.setTime(System.currentTimeMillis());<br /><br />}<br /><br />List</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">SyndEntry</span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> list </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> feed.getEntries();<br /><br />解析用的是rome</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">1.0</span><span style=\"color: #000000;\">.jar的开源工程，大家也知道，做java嘛，能有好的开源尽量用开源，自己只完成自己项目特殊的部分，不过不建议大家修改源码哦（特殊情况除外，为了以后兼容）<br /><br />这部分很简单，可以很容易获得rss内容的List，connection.setRequestProperty(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">User-Agent</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">, </span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">nbg</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">);这行肯定有人问，加它干啥，不为别的google的rss认这个你用什么agent都可以，</span></div>\r\n<div><span style=\"color: #000000;\">就是不能用默认的，默认的那个是什么java....，反正它会认为你是程序，然后就封你<br /><br />取得了每个rss的标题，介绍不是我们需要的，我们需要的网页的正文，下面就来弄我们最重要的部分<br /><br />我们采用的Htmlunit的开源工程，是用来解析html的不错的java程序，htmlunit的应用还算是比较复杂，这部分有时间的时候单写一篇文章<br /><br />我们这里假设大家已经可以得到了 文章对应的htmlpage对象了<br /><br />我这里有几个封装好的 函数 是用来查找 正文标签的，只是个初级版本，以后我会继续完善的，（小弟心理素质不好，可别随便泼水哦）<br /><br /></span>\r\n<pre class=\"brush: java\">/**\r\n\r\n* 自动查找最合适的节点\r\n\r\n* \r\n\r\n* @param page\r\n\r\n* @return\r\n\r\n*/\r\n\r\npublicstatic DomNode getAutoNode(HtmlPage page) {\r\n\r\n    if (page == null) {\r\n\r\n        returnnull;\r\n\r\n    }\r\n\r\n    DomNode nodeMax = null;\r\n\r\n    String tagName = \"p\";\r\n\r\n    int allLength = page.asText().length();\r\n\r\n    double cell = 0;\r\n\r\n    NodeList list = page.getElementsByTagName(tagName);\r\n\r\n    for (int i = 0; i &lt; list.getLength(); i++) {\r\n\r\n        DomNode domNode = (DomNode) list.item(i);\r\n\r\n        DomNode parentNode = domNode.getParentNode();\r\n\r\n        if (parentNode != null) {\r\n\r\n            int length = parentNode.asText().length();\r\n\r\n            NodeList nodeList = parentNode.getChildNodes();\r\n\r\n            int childNum = nodeList.getLength();\r\n\r\n            int k = 0;\r\n\r\n            for (int j = 0; j &lt; childNum; j++) {\r\n\r\n                if (tagName.equals(nodeList.item(j).getNodeName())) {\r\n\r\n                    k++;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (k &gt; 2) {\r\n\r\n                childNum = length / childNum;\r\n\r\n                if (childNum &gt; cell &amp;&amp; allLength / length &lt; 30) {\r\n\r\n                    cell = childNum;\r\n\r\n                    nodeMax = parentNode;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if (nodeMax != null) {\r\n\r\n        HtmlElement element = page.createElement(nodeMax.getNodeName());\r\n\r\n        Iterable &lt; HtmlElement &gt; elements = nodeMax.getAllHtmlChildElements();\r\n\r\n        for (HtmlElement htmlElement: elements) {\r\n\r\n            String name = htmlElement.getNodeName();\r\n\r\n            HtmlElement tagElement = page.createElement(tagName);\r\n\r\n            if (tagName.equals(name)) {\r\n\r\n                tagElement.setTextContent(htmlElement.asText());\r\n\r\n                element.appendChild(tagElement);\r\n\r\n            }\r\n            elseif(\"div\".equals(name)) {\r\n\r\n                tagElement.setTextContent(htmlElement.getTextContent());\r\n\r\n                element.appendChild(tagElement);\r\n\r\n            }\r\n            elseif(\"img\".equals(name)) {\r\n\r\n                element.appendChild(htmlElement.cloneNode(false));\r\n\r\n            }\r\n\r\n        }\r\n\r\n        Iterable &lt; HtmlElement &gt; iterable = element.getAllHtmlChildElements();\r\n\r\n        for (HtmlElement htmlElement: iterable) {\r\n\r\n            htmlElement.removeAttribute(\"xpath\");\r\n\r\n        }\r\n\r\n        return element;\r\n\r\n    } else {\r\n\r\n        String title = page.getTitleText().trim();\r\n\r\n        DomNode node = page.getFirstByXPath(\"/html/body\");\r\n\r\n        if (node != null &amp;&amp; node instanceof HtmlElement) {\r\n\r\n            HtmlElement element = (HtmlElement) node;\r\n\r\n            Iterable &lt; HtmlElement &gt; iterable = element\r\n\r\n            .getAllHtmlChildElements();\r\n\r\n            Map &lt; String,\r\n            HtmlElement &gt; nodeMap = new ConcurrentHashMap &lt; String,\r\n            HtmlElement &gt; ();\r\n\r\n            for (HtmlElement childNode: iterable) {\r\n\r\n                String text = childNode.asText().trim();\r\n\r\n                if (isEqualTitle(title, text)) {\r\n\r\n                    String xpath = childNode.getAttribute(\"xpath\");\r\n\r\n                    nodeMap.put(xpath, childNode);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            Set &lt; String &gt; keySet = nodeMap.keySet();\r\n\r\n            String keyStr = \"\";\r\n\r\n            for (String key: keySet) {\r\n\r\n                if (key.length() &gt; keyStr.length()) {\r\n\r\n                    keyStr = key;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (keyStr.length() &gt; 0) {\r\n\r\n                HtmlElement childNode = nodeMap.get(keyStr);\r\n\r\n                int localLength = childNode.asText().length();\r\n\r\n                while (localLength &lt; 100) {\r\n\r\n                    logger.debug(\"6:| localLength:|\" + localLength);\r\n\r\n                    DomNode parent = childNode.getParentNode();\r\n\r\n                    if (parent instanceof HtmlElement) {\r\n\r\n                        if (parent != null) {\r\n\r\n                            childNode = (HtmlElement) parent;\r\n\r\n                            localLength = childNode.asText().length();\r\n\r\n                        } else {\r\n\r\n                            break;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return childNode;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    returnnull;\r\n\r\n}\r\n\r\n/**\r\n\r\n* 判断文本内容和网页标题是否相同\r\n\r\n* \r\n\r\n* @param title\r\n\r\n* @param text\r\n\r\n* @return\r\n\r\n*/\r\n\r\nprivatestaticboolean isEqualTitle(String title, String text) {\r\n\r\n    if (isNotEmpty(title) &amp;&amp; isNotEmpty(text)) {\r\n\r\n        text = text.trim();\r\n\r\n        title = title.trim();\r\n\r\n        if (text.endsWith(\")\")) {\r\n\r\n            int a = text.lastIndexOf(\'(\');\r\n\r\n            int b = text.lastIndexOf(\')\');\r\n\r\n            if (a &gt; 0 &amp;&amp; b &gt; a) {\r\n\r\n                String num = text.substring(a + 1, b);\r\n\r\n                try {\r\n\r\n                    Integer.parseInt(num);\r\n\r\n                    text = text.substring(0, a);\r\n\r\n                } catch(NumberFormatException e) {\r\n\r\n}\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (title.startsWith(text)) {\r\n\r\n            returntrue;\r\n\r\n        }\r\n\r\n        String[] tStr = title.split(\"\");\r\n\r\n        for (String string: tStr) {\r\n\r\n            if (text.equalsIgnoreCase(string.trim())) {\r\n\r\n                returntrue;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    returnfalse;\r\n\r\n}\r\n\r\nprivatestaticboolean isNotEmpty(String title) {\r\n\r\n    return title != null &amp;&amp; title.length() &gt; 0;\r\n\r\n}\r\n\r\npublic &lt; /span&gt;static String htmlToText(HtmlPage page, String text)\r\n\r\nthrows SAXException, IOException {\r\n\r\nfinal HtmlElement element = page.createElement(\"pqrs\");\r\n\r\nHTMLParser.parseFragment(element, text);\r\n\r\nreturn element.asText();\r\n\r\n}\r\n\r\npublicstaticvoid getContentList(HtmlPage page, DomNode domNode,\r\n\r\nList&lt;ContentTag&gt; contentList) {\r\n\r\nString text = domNode.asText();\r\n\r\ncontentList.add(new ContentTag(\"text\", text));\r\n\r\nIterable&lt;HtmlElement&gt; iterator = domNode.getAllHtmlChildElements();\r\n\r\nfor (HtmlElement htmlElement : iterator) {\r\n\r\nif (htmlElement instanceof HtmlImage) {\r\n\r\nHtmlImage image = (HtmlImage) htmlElement;\r\n\r\nString src = image.getSrcAttribute();\r\n\r\ntry {\r\n\r\nsrc = getFullHref(page, src);\r\n\r\ncontentList.add(new ContentTag(\"image\", src));\r\n\r\nlogger.info(\"load image src:{}\", src);\r\n\r\n} catch (MalformedURLException e) {\r\n\r\nlogger.info(\"error\", e);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nprivatestatic String getFullHref(HtmlPage page, String url)\r\n\r\nthrows MalformedURLException {\r\n\r\nurl = page.getFullyQualifiedUrl(url).toString();\r\n\r\nwhile (url.indexOf(\"/.. / \") &gt;0) {\r\n\r\nurl = url.replaceAll(\" / .. / \", \" / \");\r\n\r\n}\r\n\r\nreturn url;\r\n\r\n}\"</pre>\r\n</div>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>','2010-04-22 12:52:00','2012-08-15 17:03:32','',NULL,'publish','','解析RSS+查找新闻网页的正文部分','/post/2012/7/14/1344938610675.html',1,1),(359,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">一、将已经编译后的java中Class文件进行打包；打包命令JAR<br />如：将某目录下的所有class文件夹全部进行打包处理；<br />使用的命令：jar cvf test.jar </span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">C com</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\"> .<br />其中test.jar为要生成的jar包；com</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\"> . 为指定的当前目录下的文件夹，该文件夹包括子文件夹及class文件；<br />二、到IKVM官方网站下载IKVM需要的组件  http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.ikvm.net/</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">　　ikvm</span><span style=\"color: #000000;\">-</span><span style=\"color: #800080;\">0.42</span><span style=\"color: #000000;\">.</span><span style=\"color: #800080;\">0.3</span><span style=\"color: #000000;\">.zip<br />　　ikvmbin</span><span style=\"color: #000000;\">-</span><span style=\"color: #800080;\">0.42</span><span style=\"color: #000000;\">.</span><span style=\"color: #800080;\">0.3</span><span style=\"color: #000000;\">.zip<br />　　openjdk6</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">b16</span><span style=\"color: #000000;\">-</span><span style=\"color: #000000;\">stripped.zip<br />三、设置路径<br />解压ikvm</span><span style=\"color: #000000;\">-</span><span style=\"color: #800080;\">0.42</span><span style=\"color: #000000;\">.</span><span style=\"color: #800080;\">0.3</span><span style=\"color: #000000;\">.zip,并将</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">IKVM_HOME</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">\\bin添加到path中。此处的</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">IKVM_HOME</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">是指解压后ikvm的主目录。<br />四、将java的jar包转换为.dll控件<br />使用的命令：ikvmc </span><span style=\"color: #000000;\">-</span><span style=\"color: #0000ff;\">out</span><span style=\"color: #000000;\">:IKVM.dll test.jar<br />其中IKVM.dll为将要生成的.dll控件文件名；test.jar为之前打包好的jar包文件。<br />五、在C#项目中添加所需的控件<br />  </span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">、新建一个C#.NET项目，首先添加一下必须的DLLs<br />　　</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">IKVM_HOME</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">\\bin\\IKVM.OpenJDK.Core.dll<br />　　</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">IKVM_HOME</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">\\bin\\IKVM.Runtime.dll<br />　　</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">IKVM_HOME</span><span style=\"color: #000000;\">%</span><span style=\"color: #000000;\">\\bin\\IKVM.Runtime.JNI.dll<br />  </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">、添加已生成的.dll文件<br />      将之前生成好的.dll文件加载到C#项目中<br />六、测试<br />在C#项目中使用java类，其方法同java。但对包的引用使用C#的语法using<br /> <br />源代码：<br />Java源代码：<br />package com.zht;<br /></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">要调用的Java类 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Test {<br />   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">要调用的Java方法 </span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String returnString() {<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Hello, zht!</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">;<br />    }<br /><br />}<br /> <br />C#窗体源代码：<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Collections.Generic;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.ComponentModel;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Data;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Drawing;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Linq;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Text;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Windows.Forms;<br /></span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> com.zht; <br /><br /></span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> KIVMTest<br />{<br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">partial</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Form1 : Form<br />    {<br />        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Form1()<br />        {<br />            InitializeComponent();<br />        }<br /><br />        </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Form1_Load(</span><span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> sender, EventArgs e)<br />        {<br />            Test t </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Test(); <br />            </span><span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> str </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> t.returnString(); <br />            MessageBox.Show(str);<br />        }<br />    }<br />}</span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-22 12:43:00','2010-04-22 12:43:00',NULL,NULL,'publish',NULL,'C#调用Java类的方法','/post/2012/7/14/1344938610754.html',1,0),(360,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #000000;\">　　然后，来看我们的JSP文件：<br /></span><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">MyHtml.html</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"keywords\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"keyword1,keyword2,keyword3\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"description\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"this is my page\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /><br /></span><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./styles.css\"&gt;</span><span style=\"color: #008000;\">--&gt;</span><span style=\"color: #000000;\"><br /><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text/javascript\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> getResult(stateVal) {<br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> url </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">servlet/SelectCityServlet?state=</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">+</span><span style=\"background-color: #f5f5f5; color: #000000;\">stateVal; <br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\"> (window.XMLHttpRequest) { <br />　　req </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">new</span><span style=\"background-color: #f5f5f5; color: #000000;\"> XMLHttpRequest(); <br />　　}</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">else</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\"> (window.ActiveXObject) { <br />　　req </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">new</span><span style=\"background-color: #f5f5f5; color: #000000;\"> ActiveXObject(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">Microsoft.XMLHTTP</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">); <br />　　} <br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\">(req){ <br />　　req.open(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">GET</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">,url, </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">true</span><span style=\"background-color: #f5f5f5; color: #000000;\">); <br />　　req.onreadystatechange </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> complete; <br />　　req.send(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">null</span><span style=\"background-color: #f5f5f5; color: #000000;\">); <br />　　} <br />} <br /></span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> complete(){<br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\"> (req.readyState </span><span style=\"background-color: #f5f5f5; color: #000000;\">==</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">4</span><span style=\"background-color: #f5f5f5; color: #000000;\">) { <br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">if</span><span style=\"background-color: #f5f5f5; color: #000000;\"> (req.status </span><span style=\"background-color: #f5f5f5; color: #000000;\">==</span><span style=\"background-color: #f5f5f5; color: #000000;\"> </span><span style=\"background-color: #f5f5f5; color: #000000;\">200</span><span style=\"background-color: #f5f5f5; color: #000000;\">) { <br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> city </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> req.responseXML.getElementsByTagName(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">city</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">); <br />　　file:</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">alert(city.length);</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> str</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">new</span><span style=\"background-color: #f5f5f5; color: #000000;\"> Array();<br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">for</span><span style=\"background-color: #f5f5f5; color: #000000;\">(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> i</span><spa n style=\"background-color: #f5f5f5; color: #000000;\">=<span style=\"background-color: #f5f5f5; color: #000000;\">0</span><span style=\"background-color: #f5f5f5; color: #000000;\">;i</span><span style=\"background-color: #f5f5f5; color: #000000;\">&lt;</span><span style=\"background-color: #f5f5f5; color: #000000;\">city.length;i</span><span style=\"background-color: #f5f5f5; color: #000000;\">++</span><span style=\"background-color: #f5f5f5; color: #000000;\">){<br />　　str[i]</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">city[i].firstChild.data;<br />　　}<br />　　file:</span><span style=\"background-color: #f5f5f5; color: #008000;\">//</span><span style=\"background-color: #f5f5f5; color: #008000;\">alert(document.getElementById(\"city\"));</span><span style=\"background-color: #f5f5f5; color: #008000;\"><br /></span><span style=\"background-color: #f5f5f5; color: #000000;\">　　buildSelect(str,document.getElementById(</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">city</span><span style=\"background-color: #f5f5f5; color: #000000;\">\"</span><span style=\"background-color: #f5f5f5; color: #000000;\">));<br />　　}<br />　　}<br />}<br /></span><span style=\"background-color: #f5f5f5; color: #0000ff;\">function</span><span style=\"background-color: #f5f5f5; color: #000000;\"> buildSelect(str,sel) {<br />　　sel.options.length</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">0</span><span style=\"background-color: #f5f5f5; color: #000000;\">;<br />　　</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">for</span><span style=\"background-color: #f5f5f5; color: #000000;\">(</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">var</span><span style=\"background-color: #f5f5f5; color: #000000;\"> i</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\">0</span><span style=\"background-color: #f5f5f5; color: #000000;\">;i</span><span style=\"background-color: #f5f5f5; color: #000000;\">&lt;</span><span style=\"background-color: #f5f5f5; color: #000000;\">str.length;i</span><span style=\"background-color: #f5f5f5; color: #000000;\">++</span><span style=\"background-color: #f5f5f5; color: #000000;\">) {<br />　　sel.options[sel.options.length]</span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #0000ff;\">new</span><span style=\"background-color: #f5f5f5; color: #000000;\"> Option(str[i],str[i])<br />　　}<br />}<br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">select </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"state\"</span><span style=\"color: #ff0000;\"> onChange</span><span style=\"color: #0000ff;\">=\"getResult(this.value)\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">Select</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">&gt;<br />　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"zj\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">ZEHJIANG</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">&gt;<br />　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"zs\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">JIANGSU</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">&gt;<br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">select</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">select </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"city\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />　　</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">option </span><span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"/blog/\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">CITY</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">option</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">select</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></spa></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-21 12:12:00','2010-04-21 12:12:00',NULL,NULL,'publish',NULL,'Ajax','/post/2012/7/14/1344938610811.html',1,0),(361,0,'open','<p>LI代码的格式化:&nbsp;<br />A).运用CSS格式化列表符：&nbsp;ul&nbsp;li{&nbsp;<br />list-style-type:none;&nbsp;<br />}&nbsp;<br />B).如果你想将列表符换成图像，则：&nbsp;ul&nbsp;li{&nbsp;<br />list-style-type:none;&nbsp;<br />list-style-image:&nbsp;url(/blog/images/icon.gif);&nbsp;<br />}&nbsp;<br />C).为了左对齐，可以用如下代码：&nbsp;ul{&nbsp;<br />list-style-type:none;&nbsp;<br />margin:0px;&nbsp;<br />}&nbsp;<br />D).如果想给列表加背景色，可以用如下代码：&nbsp;ul{&nbsp;<br />list-style-type:&nbsp;none;&nbsp;<br />margin:0px;&nbsp;<br />}&nbsp;<br />ul&nbsp;li{&nbsp;<br />background:#CCC;&nbsp;<br />}&nbsp;<br />E).如果想给列表加MOUSEOVER背景变色效果，可以用如下代码：&nbsp;ul{&nbsp;list-style-type:&nbsp;none;&nbsp;margin:0px;&nbsp;}&nbsp;<br />ul&nbsp;li&nbsp;a{&nbsp;display:block;&nbsp;width:&nbsp;100%;&nbsp;background:#ccc;&nbsp;}&nbsp;<br />ul&nbsp;li&nbsp;a:hover{&nbsp;background:#999;&nbsp;}说明：display:block;这一行必须要加的，这样才能块状显示！&nbsp;</p><p>&nbsp;</p><p>F).LI中的元素水平排列,关键FLOAT:LEFT：&nbsp;ul{&nbsp;<br />list-style-type:none;&nbsp;<br />width:100%;&nbsp;<br />}&nbsp;<br />ul&nbsp;li{&nbsp;<br />width:80px;&nbsp;<br />float:left;&nbsp;<br />}&nbsp;<br />&lt;ul&gt;&lt;li&gt;的区别&nbsp;<br />&lt;LI&gt;&nbsp;的参数设定（常用）：&nbsp;</p><p>&nbsp;</p><p>例如：&nbsp;&lt;li&nbsp;type=\"square\"&nbsp;value=\"4\"&gt;&nbsp;</p><p>type=\"square\"&nbsp;<br />只适用于非顺序清单，设定符号款式，其值有三种，如下，内定为&nbsp;type=\"disc\"：&nbsp;<br />符号&nbsp;是当&nbsp;type=\"disc\"&nbsp;时的列项符号。&nbsp;<br />符号&nbsp;if\"&nbsp;width=10&nbsp;height=10&nbsp;border=0&gt;&nbsp;是当&nbsp;type=\"circle\"&nbsp;时的列项符号。&nbsp;<br />符号&nbsp;是当&nbsp;type=\"square\"&nbsp;时的列项符号。&nbsp;<br />value=\"4\"&nbsp;<br />只适用于顺序清单，设定该一项的数目，其后各项将以此作为起始数目而递增，但前面各项则不受影响，其值只能是&nbsp;1,2,3..&nbsp;等整数，没有内定值。&nbsp;<br />&lt;UL&gt;称为无序清单标记。&nbsp;<br />所谓无序清单就是在每一项前面加上&nbsp;、、等符号，故又称符号清单。&nbsp;<br />&lt;UL&gt;&nbsp;的参数设定（常用）：&nbsp;<br />例如：&nbsp;&lt;UL&nbsp;type=\"square\"&gt;&nbsp;</p><p>type=\"square\"&nbsp;<br />设定符号款式，其值有三种，如下，内定为&nbsp;type=\"disc\"：&nbsp;<br />符号&nbsp;是当&nbsp;type=\"disc\"&nbsp;时的列项符号。&nbsp;<br />符号&nbsp;是当&nbsp;type=\"circle\"&nbsp;时的列项符号。&nbsp;<br />符号&nbsp;是当&nbsp;type=\"square\"&nbsp;时的列项符号。&nbsp;</p><p>&lt;ul&gt;是项目列表，&lt;li&gt;是列表项，项目列表就是用符号来列的，所以你列出来默认的就是黑点啦，还有一个是&lt;ol&gt;这个是编号列表，用数字来列的，也是用&lt;li&gt;做列表项&nbsp;</p><p>&lt;li&gt;是&nbsp;list&nbsp;item&nbsp;即列表项，但列表有很两种，所以外面得有&nbsp;&lt;ul&gt;&nbsp;或者&nbsp;&lt;ol&gt;&nbsp;用来区别无序列表（小点点）和有序列表（1,2,3...）。</p>\n','2010-04-21 11:01:00','2010-04-21 11:01:00',NULL,NULL,'publish',NULL,'UL  LI','/post/2012/7/14/1344938610873.html',1,0),(362,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> a.</span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 a </span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">count</span><span style=\"color: #000000;\">(</span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\">) </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 </span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> 字段</span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\">a.字段)</span><span style=\"color: #808080;\">&gt;</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\"><br /><br /><br /></span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 </span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> 字段 </span><span style=\"color: #808080;\">in</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> 字段 </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 </span><span style=\"color: #0000ff;\">group</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">by</span><span style=\"color: #000000;\"> 字段 </span><span style=\"color: #0000ff;\">having</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">count</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\">)</span><span style=\"color: #808080;\">&gt;</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\">) <br /><br /></span><span style=\"color: #008080;\">--</span><span style=\"color: #008080;\">如果不能通过一个字段确定一行的话,可以把多个字段都转换成字符型串起来 </span><span style=\"color: #008080;\"><br /></span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 </span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">convert</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">varchar</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">),字段1)</span><span style=\"color: #808080;\">+</span><span style=\"color: #ff00ff;\">convert</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">varchar</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">),字段2) </span><span style=\"color: #808080;\">in</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">convert</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">varchar</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">),字段1)</span><span style=\"color: #808080;\">+</span><span style=\"color: #ff00ff;\">convert</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">varchar</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">),字段2) </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 </span><span style=\"color: #0000ff;\">group</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">by</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">convert</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">varchar</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">),字段1)</span><span style=\"color: #808080;\">+</span><span style=\"color: #ff00ff;\">convert</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">varchar</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">100</span><span style=\"color: #000000;\">),字段2) </span><span style=\"color: #0000ff;\">having</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">count</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\">)</span><span style=\"color: #808080;\">&gt;</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\">)<br /><br /><br /><br /><br /></span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> 字段1,字段2,字段3,字段4...(所有字段) <br /></span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> t1 <br /></span><span style=\"color: #0000ff;\">group</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">by</span><span style=\"color: #000000;\"> 字段1,字段2,字段3,字段4...(所有字段) <br /></span><span style=\"color: #0000ff;\">having</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">count</span><span style=\"color: #000000;\">(</span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\">)</span><span style=\"color: #808080;\">&gt;</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\"><br /><br /><br /><br /><br /></span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #808080;\">*</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 t <br /></span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">count</span><span style=\"color: #000000;\">(</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\">) <br /></span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> 表 <br /></span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> 字段1</span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\">t.字段1 <br /></span><span style=\"color: #808080;\">and</span><span style=\"color: #000000;\"> 字段2</span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\">t.字段2 <br /></span><span style=\"color: #808080;\">and</span><span style=\"color: #000000;\"> 字段3</span><span style=\"color: #808080;\">=</span><span style=\"color: #000000;\">t.字段3 <br />............. <br />)</span><span style=\"color: #808080;\">&gt;</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\"> <br /> <br /><br /><br /></span><span style=\"color: #0000ff;\">select</span><span style=\"color: #000000;\"> PermissionString <br /></span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> roleadmin <br /></span><span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> roleid </span><span style=\"color: #808080;\">in</span><span style=\"color: #000000;\"> (</span><span style=\"color: #800000; font-weight: bold;\">1</span><span style=\"color: #000000;\">,</span><span style=\"color: #800000; font-weight: bold;\">3</span><span styl\ne=\"color: #000000;\">)<br /></span><span style=\"color: #0000ff;\">group</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">by</span><span style=\"color: #000000;\"> PermissionString <br /></span><span style=\"color: #0000ff;\">having</span><span style=\"color: #000000;\"> </span><span style=\"color: #ff00ff;\">count</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">distinct</span><span style=\"color: #000000;\"> roleid)</span><span style=\"color: #808080;\">=</span><span style=\"color: #800000; font-weight: bold;\">2</span><span style=\"color: #000000;\"><br /></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-21 09:11:00','2010-04-21 09:11:00',NULL,NULL,'publish',NULL,'SQL group by','/post/2012/7/14/1344938610930.html',1,0),(363,0,'open','<p>&nbsp;</p><div onclick=\"cnblogs_code_show(\'9361a1c2-bd5f-4b08-8a9e-fa9ed6ae16da\')\" class=\"cnblogs_code\"><img style=\"display: none;\" id=\"code_img_closed_9361a1c2-bd5f-4b08-8a9e-fa9ed6ae16da\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" /><img onclick=\"cnblogs_code_hide(\'9361a1c2-bd5f-4b08-8a9e-fa9ed6ae16da\',event)\" id=\"code_img_opened_9361a1c2-bd5f-4b08-8a9e-fa9ed6ae16da\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" /><div id=\"cnblogs_code_open_9361a1c2-bd5f-4b08-8a9e-fa9ed6ae16da\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> p</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">   <br /></span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> switchSysBar()<br />{   <br />  </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(p</span><span style=\"color: #000000;\">==</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">)<br />  {   <br />      switchPoint.innerHTML</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;img src=/myimages/1/toggler_1.gif&gt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">   <br />      document.all(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">frmTitle</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">).style.display</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">none</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">   <br />      p</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">   <br />  }   <br />  </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />      {   <br />      switchPoint.innerHTML</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">&lt;img src=/myimages/1/toggler_2.gif&gt;</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">   <br />      document.all(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">frmTitle</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">).style.display</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\"\"</span><span style=\"color: #000000;\">   <br />      p</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">   <br />    }   <br />  } <br />  <br /> </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> SetCwinHeight(){<br />  </span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> iframeid</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">document.getElementById(</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">frmright</span><span style=\"color: #000000;\">\"</span><span style=\"color: #000000;\">); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">iframe id</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (document.getElementById){<br />   </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (iframeid </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">window.opera){<br />    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (iframeid.contentDocument </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> iframeid.contentDocument.body.offsetHeight){<br />     iframeid.height </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> iframeid.contentDocument.body.offsetHeight;<br />    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(iframeid.Document </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> iframeid.Document.body.scrollHeight){<br />     iframeid.height </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> iframeid.Document.body.scrollHeight;<br />    }<br />   }<br />  }<br /> }<br /><br /></span></div></pre></div></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-20 13:13:00','2010-04-20 13:13:00',NULL,NULL,'publish',NULL,'JavaScript侧边栏收缩','/post/2012/7/14/1344938610989.html',1,0),(364,0,'open','<p>&nbsp;</p><div class=\"cnblogs_code\"><pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> org.gaoyoubo.dao;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.sql.</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">;<br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">;<br /><br /></span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> javax.servlet.jsp.jstl.sql.</span><span style=\"color: #000000;\">*</span><span style=\"color: #000000;\">;<br /><br /></span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> CommanDao {<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Connection con;<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String sql;<br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> List parameters;<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置连接</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setCon(Connection con) {<br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.con </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> con;<br />    }<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置sql语句；</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setSql(String sql) {<br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.sql </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> sql;<br />    }<br />    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置sql语句参数；</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setParameters(List aparametersrameters) {<br />        </span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.parameters </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> aparametersrameters;<br />    }<br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 执行查询；<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"><br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Result  executeQuery(){<br />        Result result </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />        ResultSet rs </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />        PreparedStatement pstmt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />        <br />        <br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果sql语句有参数；</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(parameters </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> parameters.size() </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">){<br />                pstmt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> con.prepareStatement(sql);<br />                setParameters(pstmt, parameters);<br />                rs </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> pstmt.executeQuery();<br />            }<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果没有参数；</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{<br />                pstmt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> con.prepareStatement(sql);<br />                rs </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> pstmt.executeQuery();<br />            }<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (SQLException e) {<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> TODO: handle exception</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            e.printStackTrace();<br />        }<br />        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将ResultSet转换成Result;</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">        result </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> ResultSupport.toResult(rs);        <br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;<br />    }<br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 执行更新；<br />     * </span><span style=\"color: #808080;\">@return</span><span style=\"color: #008000;\"> 返回受影响行数；<br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> executeUpdate(){<br />        </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> noOfRows </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;<br />        ResultSet rs </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />        PreparedStatement pstmt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果参数不为空；</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(parameters </span><span style=\"color: #000000;\">!=</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">null</span>\n<span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\"> parameters.size() </span><span style=\"color: #000000;\">&gt;</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">){<br />                pstmt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> con.prepareStatement(sql);<br />                setParameters(pstmt, parameters);<br />                noOfRows </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> pstmt.executeUpdate();<br />            }<br />            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{<br />                pstmt </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> con.prepareStatement(sql);<br />                noOfRows </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> pstmt.executeUpdate();<br />            }<br />        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (SQLException e) {<br />            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> TODO Auto-generated catch block</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">            e.printStackTrace();<br />        }<br />        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> noOfRows;<br />    }<br />    <br />    <br />    </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\"><br />     * 方法，为sql语句设置参数；<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> pstmt 指令<br />     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> parameters 参数集合；<br />     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\"> SQLException <br />     </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\"><br />    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> setParameters(PreparedStatement pstmt,List parameters) </span><span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> SQLException{<br />        </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (</span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> i </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> </span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">; i </span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\"> parameters.size(); i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">) {<br />            Object v </span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\"> parameters.get(i);<br />            pstmt.setObject(i</span><span style=\"color: #000000;\">+</span><span style=\"color: #000000;\">1</span><span style=\"color: #000000;\">, v);<br />        }<br />    }<br />    <br />}<br /></span></div></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>\n','2010-04-20 11:19:00','2010-04-20 11:19:00',NULL,NULL,'publish',NULL,'java通用DAO（上学的时候写的）','/post/2012/7/14/1344938611045.html',1,0),(365,0,'open','<p><span style=\"font-family: Verdana, 宋体, sans-serif; font-size: small;\"><span style=\"line-height: 18px;\"><b><br /></b></span></span></p><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"line-height: normal; width: 86%; padding: 0px; margin: 0px;\"><tbody><tr><td style=\"font-size: 12px; font-family: Verdana, 宋体, sans-serif; line-height: 18px; padding: 0px; margin: 0px;\"><span class=\"STYLE42\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><strong style=\"font-weight: bold;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">-&gt;&nbsp;<span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">配置文件SmartRewrite.ini：</span></span></span></strong></span><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><p>&nbsp;</p><p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>SmartRewrite通过WEB服务扩展完成URL请求的重定向和网址映射。在SmartRewrite.ini文件中，对每个需处理的站点均要按要求构建正确的url重写规则，当客户端发出http请求时，SmartRewrite根据对应规则将URL与正则表达式匹配，并对网址做相应的转换后将URL请求发送给IIS处理，完成网址的重定向。</span></p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><p>　　 以下为 SmartRewrite.ini的配置示例（以域名<a href=\"http://www.url.com/\" style=\"text-decoration: underline; color: #22550f;\">url.com</a>为例）：</p></span><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"line-height: normal; width: 99%; padding: 0px; margin: 0px;\"><tbody><tr><td width=\"5%\" style=\"font-size: 12px; font-family: Verdana, 宋体, sans-serif; line-height: 18px; padding: 0px; margin: 0px;\">&nbsp;<wbr></wbr></td><td width=\"95%\" style=\"font-size: 12px; font-family: Verdana, 宋体, sans-serif; line-height: 18px; padding: 0px; margin: 0px;\"><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\">RewriteCond Domain:<span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #0000cc;\">url.com</span></span><br /></span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\">//定义一个域 url.com</span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000;\">RewriteRule</span>&nbsp;<span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000; font-size: x-small;\">^(www.url.com/)$ /</span></span></span></span></span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">//定义规则，用户请求http://www.url.com,访问的也是http://www.url.com,<strong style=\"font-weight: bold;\">这一句必须有，且应放在最前面。</strong></span></span></span></span></span></span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000;\">RewriteRule</span>&nbsp;<span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000; font-size: x-small;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 21px; color: #000000; font-size: small;\">^(</span><span style=\"word-wrap: normal; word-break: normal; line-height: 21px; font-size: small;\">www.url.com/index.html)$</span>&nbsp;/</span></span></span></span></span></span></span></span></span></span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wra\np: normal; word-break: normal; line-height: 19px; font-size: x-small;\">//定义规则，与上一句相同，请求为http://www.url.com/index.html,访问的是http://www.url.com</span></span></span></span></span></span></span></span></span></span></span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">RewriteRule</span>&nbsp;<span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">^({[A-Za-z0-9]+}.url.com/)$</span></span>&nbsp;<span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #000000; font-size: x-small;\">/user/index.asp?uid=$0</span><br /></span></span></span><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">//定义规则，中间一段为正则表达式构建的静态网址，最后一段为实际访问的动态网址。按上述规则，如用户的请求为http://best.url.com,实际访问的是http://www.url.com/user/index.asp?uid=best</span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-family: 宋体; color: #ff0000;\">RewriteRule</span></span>&nbsp;^({[A-Za-z0-9]+}.url.com/index.html)$ /user/index.asp?uid=$0</span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">//定义规则，同上</span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-family: 宋体; color: #ff0000;\">RewriteRule</span></span>&nbsp;^(www.{[A-Za-z0-9]+}.url.com/)$ /info/index.asp?sort=$0</span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">//定义规则，<br /></span></span><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体; color: #ff0000;\">RewriteRule /r{[0-9]+}/{[0-9]+}/topic/{</span></span><span class=\"STYLE24\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #009900;\">[0-9]+</span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">}.html /detail.asp?id=</span></span><span class=\"STYLE28\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #009900;\">$2</span></span></span><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><br /></span><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">//每个匹配组由大括号</span></span><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体; color: #ff0000;\">｛｝</span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\">引起来，组号从0组开始，后面的$2表示id取第二组的值。<br />如http://www.aaa.com/r01/11/topic/1234.html，实际访问的则是http://</span><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\">www.aaa.com/detail.asp?id=1234。第0和1组在此仅从静态网址上体现一种虚拟目录结构。如不需该值可直接取$2的值即可。</span><br /></span><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">RewriteRule /topic/{</span></span><span class=\"STYLE28\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #009900;\">[0-9]</span></span><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">+}.html /detail.asp?id=</span></span></span><span class=\"STYLE28\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体; color: #009900;\">$0<br />......<br /></span></span></p><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\">RewriteCond Host:www.bbb.com</span><br /></span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\">//定义主机www.bbb.com</span><br /></span><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE23\" style=\"word-wrap: norma\nl; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">RewriteRule /{</span><span class=\"STYLE24\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #009900;\">[0-9]+</span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">}/{</span><span class=\"STYLE30\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #0000ff;\">[0-9]+</span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">}/index.html /list.asp?code1=</span></span><span class=\"STYLE28\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #009900;\">$0</span></span><span class=\"STYLE23\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #ff0000;\">&amp;code2=</span></span></span><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; color: #0000ff;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体;\"><span class=\"STYLE26\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\">$1</span><br /></span></span>。。。。。。</p><p>&nbsp;</p></td></tr></tbody></table><p style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; list-style-type: none; list-style-position: initial; list-style-image: initial; word-wrap: normal; word-break: normal; line-height: 18px; padding: 0px; border: 0px initial initial;\"><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><strong style=\"font-weight: bold;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000;\"><span class=\"STYLE42\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\">-&gt; 注意的几个问题：</span></span></strong></span></span></p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><strong style=\"font-weight: bold;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000;\"></span></strong></span><p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>1. 设计时建立的链接应相对于根，而不是相对于文档，如：/images/123.pic，否则有些链接可能不正确。&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>2. 规则修改后必须重新启动IIS。<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>3. 在ABC_Rewrite.ini配置中可配置多个主机，IIS中需对所有使用ABC_Rewrite的相关站点配置筛选器，配置文件中两条规则之间不能加注释。<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>4. 匹配规则的格式为：<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr></span><span class=\"STYLE28\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 18px; font-family: 宋体; color: #009900;\">RewriteRule 匹配表达式格式化表达式</span></span><span class=\"STYLE5\" style=\"word-wrap: normal; word-break: normal; line-height: 18px;\"><br /><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>注：中间有空格<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>5. 匹配组用大括号{}分隔，组号从0开始，因此取值次序 从$0-$N，当然可以直接取某一组的值，如上例中的id=$2。<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>6. 每个主机的相关配置中较长的规则应放在该节的前面。<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr></span></span></p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"></span><p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><strong style=\"font-weight: bold;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000;\"><span class=\"STYLE42\" style=\"word-wrap: normal; word-break: normal; line-height: 19px;\">-&gt; 试用版和正式版的区别（非常重要）：</span></span></strong></span></p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\"><strong style=\"font-weight: bold;\"><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; color: #ff0000;\"></span></strong></span><p><span style=\"word-wrap: normal; word-break: normal; line-height: 19px; font-size: x-small;\">&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>1. 功能上没有区别，试用版最大处理请求数为200,超过重写组件将失去作用，除非IIS重启。<br />&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>&nbsp;<wbr></wbr>2. 试用版和正式版均支持多个虚拟主机,支持多参数传递。</span></p></span></td></tr></tbody></table>\n','2010-04-07 18:28:00','2010-04-07 18:28:00',NULL,NULL,'publish',NULL,'SmartRewrite组件配置规则','/post/2012/7/14/1344938611127.html',1,0),(366,0,'open','<p><pre class=\"brush:java\">&lt;%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%&gt;&lt;%@ page import=\"java.net.URLEncoder\" %&gt;&lt;%@ page import=\"java.io.*\" %&gt;&lt;%@ page import=\"java.util.*\" %&gt;&lt;%@ page import=\"org.apache.tools.zip.ZipEntry\" %&gt;&lt;%@ page import=\"org.apache.tools.zip.ZipOutputStream\" %&gt;&lt;%!	public void zip(String inputFileName, String zipFileName) throws Exception {		zip(zipFileName, new File(inputFileName));	}	private void zip(String zipFileName, File inputFile) throws Exception {		ZipOutputStream out = new ZipOutputStream(new FileOutputStream(				zipFileName));		zip(out, inputFile, \"\");		out.close();	}	private void zip(ZipOutputStream out, File f, String base) throws Exception {		if (f.isDirectory()) {			File[] fl = f.listFiles();			out.putNextEntry(new org.apache.tools.zip.ZipEntry(base + \"/\"));			base = base.length() == 0 ? \"\" : base + \"/\";			for (int i = 0; i &lt; fl.length; i++) {				zip(out, fl[i], base + fl[i].getName());			}		} else {			out.putNextEntry(new org.apache.tools.zip.ZipEntry(base));			FileInputStream in = new FileInputStream(f);			int b;			while ((b = in.read()) != -1) {				out.write(b);			}			in.close();		}	}			//创建文件夹	public String createFolder()	{		int y,m,d; 		Calendar cal=Calendar.getInstance(); 		y=cal.get(Calendar.YEAR); 		m=cal.get(Calendar.MONTH); 		d=cal.get(Calendar.DATE);		//List&lt;String&gt; folders = new ArrayList&lt;String&gt;();		String nowDate = y + \"-\" + m + \"-\" + d;		File file = new File(\"E:\\\\apache-tomcat-5.5.26\\\\hz\\\\huazhong_system_root\\\\bgraserver.gicp.net\\\\webapps\\\\ROOT\\\\cccccc\\\\\" + nowDate);		file.mkdir();		return file.getPath();	}%&gt;&lt;%	String path = createFolder();//创建文件夹，并得到文件夹路径	File file = new File(path);	String zipName = file.getParent() + \"\\\\\" + file.getName() + \".zip\";	zip(path, zipName);	out.println(zipName);	out.println(\"压缩成功，&lt;a href=\'\" + file.getName() + \".zip\'&gt;点击这里下载&lt;/a&gt;\");	%&gt;</pre></p>\n','2010-04-07 08:46:00','2010-04-07 08:46:00',NULL,NULL,'publish',NULL,'Java文件压缩','/post/2012/7/14/1344938611291.html',1,0),(367,0,'open','<p>代码如下，但还要加入jMail.dll并且注册它，可以到 <a href=\"http://www.fly263.com/Soft/ShowSoft.asp?SoftID=4\">http://www.fly263.com/Soft/ShowSoft.asp?SoftID=4</a> 下载一个。</p><p>下载以后里面有一个 install.bat 文件双击就可以把jMail.dll等文件复制到c:/windows/system32里并且注册它，然后就可以用JavaScript发邮件了。 </p><p>&lt;html&gt;</p><p>&lt;head&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;title&gt;mail&lt;/title&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;script&gt;</p><p>&nbsp;&nbsp;&nbsp; function SendEMail(subject,infor)</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var jMail = new ActiveXObject(\"Jmail.message\");&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.Silent = true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.Charset = \"gb2312\";&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.FromName = \"from name\"&nbsp;&nbsp;&nbsp; //发件人</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.From = \"from EMail\";&nbsp;&nbsp; //发送人的邮件地址</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.AddRecipient(\"to EMail\");&nbsp; //收件人的邮件地址</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.Subject = subject;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //要发送的邮件主题</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.Body = infor;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //要发送的邮件信息</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.MailServerUserName=\"from user name\";&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //发件人邮箱登陆名</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.MailServerPassWord=\"password\";&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //发件人邮箱登陆密码</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var ret = jMail.Send(\"smtp.163.com\");&nbsp; //发件人的stmp服务器地址</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(ret == false)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(\"发送失败\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(\"发送成功\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jMail.Close();</p><p>&nbsp;&nbsp;&nbsp; }</p><p>SendEMail(\'title\',\'body\');</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/script&gt;</p><p>&nbsp;&nbsp;&nbsp; &lt;/head&gt;</p><p>&nbsp;&nbsp;&nbsp; </p><p>&lt;/html&gt;</p><p>函数名：SendMail </p><p>\'作 用：用Jmail组件发送邮件 </p><p>\'参 数：MailtoAddress -----收信人信箱 </p><p>\' MailtoName -----收信人姓名 </p><p>\' Subject -----主题 </p><p>\' MailBody -----信件内容 </p><p>\' MailFrom -----发信人信箱 </p><p>\' FromName -----发信人姓名 </p><p>\' Priority -----信件优先级 </p><p>\' MailServerUser -----登陆邮箱用户名 </p><p>\' MailServerPass -----登陆邮箱密码 </p><p>\' MailDomain -----邮箱域名 </p><p>\' MailServer -----发件SMTP服务器 </p><p>\'************************************************** </p><p>Function SendMail(MailtoAddress,MailtoName,Subject,MailBody,MailFrom,FromName,MailServerUser,MailServerPass,MailDomain,MailServer) </p><p>\' on error resume next </p><p>Dim JMail,JMailstat </p><p>Set JMail=Server.CreateObject(\"JMail.Message\") </p><p>if err then </p><p>err.clear </p><p>Response.Write \"组件检测失败\" </p><p>JMail.close() </p><p>Set JMail=nothing </p><p>exit function </p><p>end if </p><p>JMail.Charset=\"gb2312\" \'邮件字符集 </p><p>JMail.silent=True \'忽略错误 </p><p>JMail.ContentType = \"text/html\" \'邮件编码 </p><p>JMail.AddRecipient MailtoAddress,MailtoName \'收件人地址 </p><p>JMail.ReturnReceipt = True \'是否收条（验证中） </p><p>JMail.From = MailFrom \'发件人邮箱 </p><p>JMail.MailDomain=MailDomain \'邮箱所在域名（验证中） </p><p>JMail.FromName = FromName \'发件人姓名 </p><p>JMail.MailServerUserName=MailServerUser \'邮箱用户名 </p><p>JMail.MailServerPassWord=MailServerPass \'邮箱密码 </p><p>JMail.Subject=Subject \'邮件主题 </p><p>JMail.Body=MailBody \'邮件正文（纯文本格式） </p><p>\'JMail.HMTLBody=MailBody \'邮件正文（HTML格式） </p><p>JMail.Priority=1 \'邮件等级，1为加急，3为普通，5为低级 </p><p>JMailstat=JMail.Send(MailServer) </p><p>If JMailstat then </p><p>response.write \"成功\" </p><p>else </p><p>response.write \"失败\" </p><p>end if </p><p>JMail.close() </p><p>Set JMail=nothing </p><p>End Function </p><p>说明： </p><p>本文来源：<a href=\"http://www.pczs120.cn/articleshow.asp?artid=46\">http://www.pczs120.cn/articleshow.asp?artid=46</a> </p><p>JMail4.5组件下载及中文操作手册下载详见<a href=\"http://www.pczs120.cn/softview.asp?softid=40v\">http://www.pczs120.cn/softview.asp?softid=40v</a></p>\n','2010-03-30 11:49:00','2010-03-30 11:49:00',NULL,NULL,'publish',NULL,'JavaScript+JMail邮件发送','/post/2012/7/14/1344938611341.html',1,0),(368,0,'open','<p>Microsoft VBScript语法错误(0x800A040E)--&gt;\'loop\' 语句缺少 \'do\' <br />Microsoft VBScript语法错误(0x800A040F)--&gt;无效的 \'exit\' 语句 <br />Microsoft VBScript语法错误(0x800A0410)--&gt;循环控制变量 \'for\' 无效 <br />Microsoft VBScript语法错误(0x800A0411)--&gt;名称重定义 <br />Microsoft VBScript语法错误(0x800A0412)--&gt;必须是行中的第一个语句 <br />Microsoft VBScript语法错误(0x800A0413)--&gt;不能为 non-ByVal 参数赋值 <br />Microsoft VBScript语法错误(0x800A0414)--&gt;调用子程序时不能使用括号 <br />Microsoft VBScript语法错误(0x800A0415)--&gt;缺少文字常数 <br />Microsoft VBScript语法错误(0x800A0416)--&gt;缺少 \'In\' <br />Microsoft VBScript语法错误(0x800A0417)--&gt;缺少 \'Class\' <br />Microsoft VBScript语法错误(0x800A0418)--&gt;必须在一个类的内部定义 <br />Microsoft VBScript语法错误(0x800A0419)--&gt;在属性声明中缺少 Let , Set 或 Get <br />Microsoft VBScript语法错误(0x800A041A)--&gt;缺少 \'Property\' <br />Microsoft VBScript语法错误(0x800A041B)--&gt;在所有属性的规范中，变量的数目必须一致 <br />Microsoft VBScript语法错误(0x800A041C)--&gt;在一个类中不允许有多个缺省的属性/方法 <br />Microsoft VBScript语法错误(0x800A041D)--&gt;类的初始化或终止程序没有参数 <br />Microsoft VBScript语法错误(0x800A041E)--&gt;属性的 set 或 let 必须至少有一个参数 <br />Microsoft VBScript语法错误(0x800A041F)--&gt;错误的 \'Next\' <br />Microsoft VBScript语法错误(0x800A0420)--&gt;\'Default\' 只能在 \'Property\' , \'Function\' 或 \'Sub\' 中指定 <br />Microsoft VBScript语法错误(0x800A0421)--&gt;指定 \'Default\' 时必须同时指定 \'Public\' \") <br />Microsoft VBScript语法错误(0x800A0422)--&gt;只能在 Property Get 中指定 \'Default\' <br />Microsoft VBScript 运行时错误(0x800A0005)--&gt;无效的过程调用或参数 <br />Microsoft VBScript 运行时错误(0x800A0006)--&gt;溢出 <br />Microsoft VBScript 运行时错误(0x800A0007)--&gt;内存不足 <br />Microsoft VBScript 运行时错误(0x800A0009)--&gt;下标越界 <br />Microsoft VBScript 运行时错误(0x800A000A)--&gt;该数组为定长的或临时被锁定 <br />Microsoft VBScript 运行时错误(0x800A000B)--&gt;被零除 <br />Microsoft VBScript 运行时错误(0x800A000D)--&gt;类型不匹配 <br />Microsoft VBScript 运行时错误(0x800A000E)--&gt;字符串空间不够 <br />Microsoft VBScript 运行时错误(0x800A0011)--&gt;不能执行所需的操作 <br />Microsoft VBScript 运行时错误(0x800A001C)--&gt;堆栈溢出 <br />Microsoft VBScript 运行时错误(0x800A0023)--&gt;未定义过程或函数 <br />Microsoft VBScript 运行时错误(0x800A0030)--&gt;加载 DLL 时出错 <br />Microsoft VBScript 运行时错误(0x800A0033)--&gt;内部错误 <br />Microsoft VBScript 运行时错误(0x800A0034)--&gt;错误的文件名或号码 <br />Microsoft VBScript 运行时错误(0x800A0035)--&gt;文件未找到 <br />Microsoft VBScript 运行时错误(0x800A0036)--&gt;错误的文件模式</p>\n','2010-03-29 10:47:00','2010-03-29 10:47:00',NULL,NULL,'publish',NULL,'ASP错误代号','/post/2012/7/14/1344938611397.html',1,0),(369,0,'open','<p><span id=\"Code_Open_Text_085553\" style=\"display: inline;\"><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\">&nbsp;save_db(){<br />&nbsp;&nbsp;&nbsp;&nbsp;SqlConnection&nbsp;conn&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\">&nbsp;SqlConnection(ConfigurationSettings.AppSettings[</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\"></span><span style=\"color: #800000;\">...\"</span><span style=\"color: #000000;\">].ToString());<br />&nbsp;&nbsp;&nbsp;&nbsp;SqlCommand&nbsp;comm&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\">&nbsp;SqlCommand();<br />&nbsp;&nbsp;&nbsp;&nbsp;conn.Open();<br />&nbsp;&nbsp;&nbsp;&nbsp;SqlTransaction&nbsp;rollbk2</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;conn.BeginTransaction();<br />&nbsp;&nbsp;&nbsp;&nbsp;comm.Connection</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">conn;<br />&nbsp;&nbsp;&nbsp;&nbsp;comm.Transaction</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">rollbk2;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(i...){<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comm.CommandText</span><span style=\"color: #000000;\">=</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">insert&nbsp;into ...</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comm.ExecuteNonQuery();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rollbk2.Commit();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\">(Exception&nbsp;exp)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rollbk2.Rollback();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Response.Write(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">save_fail</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.Close();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;Response.Write(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">save_ok</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);<br />}</span></span></p>\n','2010-03-24 16:37:00','2010-03-24 16:37:00',NULL,NULL,'publish',NULL,'C# 数据回滚实例','/post/2012/7/14/1344938611450.html',1,0),(370,0,'open','<p>我的xml文件Login.xml如下.</p><div style=\"border: 1px solid #cccccc; padding: 4px 5px 4px 4px; font-size: 13px; width: 98%; background-color: #eeeeee;\"><span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">xml&nbsp;version=\"1.0\"&nbsp;encoding=\"utf-8\"&nbsp;</span><span style=\"color: #0000ff;\">?&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">Login</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">Character</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">C&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"热血\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">C</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">C&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"弱气\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"1\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">C</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">C&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"激情\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"2\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">C</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">C&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"冷静\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"3\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">C</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">C&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"冷酷\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"4\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">C</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">Character</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">Weapon</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">W&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"光束剑\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">W</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">W&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"光束配刀\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"1\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">W</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">Weapon</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">EconomyProperty</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">P&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"平均型\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"0\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">P</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">P&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"重视攻击\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"1\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">P</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">P&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"重视敏捷\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"2\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">P</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">P&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"重视防御\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"3\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">P</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">P&nbsp;</span><span style=\"color: #ff0000;\">Text</span><span style=\"color: #0000ff;\">=\"重视命中\"</span><span style=\"color: #ff0000;\">&nbsp;Value</span><span style=\"color: #0000ff;\">=\"4\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">P</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">EconomyProperty</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\"><br /></span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">Login</span><span style=\"color: #0000ff;\">&gt;</span></div><p><br />现在我需要对这个xml文件的内容进行操作.<br />首先,我们需要加载这个xml文件,js中加载xml文件,是通过XMLDOM来进行的.</p><div style=\"border: 1px solid #cccccc; padding: 4px 5px 4px 4px; font-size: 13px; width: 98%; background-color: #eeeeee;\"><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">&nbsp;加载xml文档</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">loadXML&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(xmlFile)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;xmlDoc;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(window.ActiveXObject)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlDoc&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\">&nbsp;ActiveXObject(\'Microsoft.XMLDOM\');<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlDoc.async&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlDoc.load(xmlFile);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">&nbsp;(document.implementation</span><span style=\"color: #000000;\">&amp;&amp;</span><span style=\"color: #000000;\">document.implementation.createDocument)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlDoc&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;document.implementation.createDocument(\'\',&nbsp;\'\',&nbsp;</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlDoc.load(xmlFile);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">&nbsp;xmlDoc;<br />}</span></div><p>xml文件对象出来了, 接下去我就要对这个文档进行操作了.<br />比如说,我们现在需要得到节点Login/Weapon/W的第一个节点的属性,那么我们可以如下进行.</p><div style=\"border: 1px solid #cccccc; padding: 4px 5px 4px 4px; font-size: 13px; width: 98%; background-color: #eeeeee;\"><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">&nbsp;首先对xml对象进行判断</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #000000;\">checkXMLDocObj&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(xmlFile)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;xmlDoc&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;loadXML(xmlFile);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(xmlDoc</span><span style=\"color: #000000;\">==</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(\'您的浏览器不支持xml文件读取,于是本页面禁止您的操作,推荐使用IE5.0以上可以解决此问题</span><span style=\"color: #000000;\">!</span><span style=\"color: #000000;\">\');<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.location.href</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">\'</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Index.aspx\';<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">&nbsp;xmlDoc;<br />}<p>&nbsp;</p><p>&nbsp;</p></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">&nbsp;然后开始获取需要的Login/Weapon/W的第一个节点的属性值</span><span style=\"color: #008000;\"><br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;xmlDoc&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;checkXMLDocObj(\'</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">EBS</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">XML</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Login.xml\');<br /></span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;xmlDoc.getElementsByTagName(\'Login</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Weapon</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">W\')[</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">].childNodes.getAttribute(\'Text\')</span></div><p>而我在我的程序中的写法是这样子的,当然我在程序中的写法是已经应用到实际中的了.一并给出来,以供查看</p><div style=\"border: 1px solid #cccccc; padding: 4px 5px 4px 4px; font-size: 13px; width: 98%; background-color: #eeeeee;\"><span style=\"color: #000000;\">initializeSelect&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(oid,&nbsp;xPath)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;xmlDoc&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;checkXMLDocObj(\'</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">EBS</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">XML</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">Login.xml\');<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;n;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;l;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;e&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;$(oid);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(e</span><span style=\"color: #000000;\">!=</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;xmlDoc.getElementsByTagName(xPath)[</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">].childNodes;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;n.length;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\">(</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;i</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">0</span><span style=\"color: #000000;\">;&nbsp;i</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #000000;\">l;&nbsp;i</span><span style=\"color: #000000;\">++</span><span style=\"color: #000000;\">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&n\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\">&nbsp;option&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;document.createElement(\'option\');<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option.value&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;n[i].getAttribute(\'Value\');<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option.innerHTML&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #000000;\">=</span><span style=\"color: #000000;\">&nbsp;n[i].getAttribute(\'Text\');<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.appendChild(option);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}</span></div><p><br />上面的访问代码中,我们是通过xmlDoc.getElementsByTagName(xPath)来进行的.<br />还可以通过xmlDoc.documentElement.childNodes(1)..childNodes(0).getAttribute(\'Text\')进行访问.<br />一些常用方法:<br />xmlDoc.documentElement.childNodes(0).nodeName,可以得到这个节点的名称.<br />xmlDoc.documentElement.childNodes(0).nodeValue,可以得到这个节点的值. 这个值是来自于这样子的xml格式:&lt;a&gt;b&lt;/b&gt;, 于是可以得到b这个值.<br />xmlDoc.documentElement.childNodes(0).hasChild,可以判断是否有子节点</p><p>&nbsp;</p><p>根据我的经验,最好是使用getElementsByTagName(xPath)的方法对节点进行访问,因为这样子可以直接通过xPath来定位节点,这样子会有更好的性能.</p>\n','2010-03-19 15:55:00','2010-03-19 15:55:00',NULL,NULL,'publish',NULL,'JavaScript操作XML','/post/2012/7/14/1344938611586.html',1,0),(371,0,'open','<div id=\"blog_text\" class=\"cnt\"><p>一、功能实现核心：FileSystemObject 对象 <br />&nbsp;&nbsp;&nbsp;  要在javascript中实现文件操作功能，主要就是依靠FileSystemobject对象。<br />二、FileSystemObject编程 <br />使用FileSystemObject 对象进行编程很简单，一般要经过如下的步骤： 创建FileSystemObject对象、应用相关方法、访问对象相关属性 。 <br />（一）创建FileSystemObject对象 <br />创建FileSystemObject对象的代码只要1行： <br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />上述代码执行后，fso就成为一个FileSystemObject对象实例。 <br />（二）应用相关方法 <br />创建对象实例后，就可以使用对象的相关方法了。比如，使用CreateTextFile方法创建一个文本文件： <br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />var f1 = fso.createtextfile(\"c:\\\\myjstest.txt\",true\"); <br />（三）访问对象相关属性 <br />要访问对象的相关属性，首先要建立指向对象的句柄，这就要通过get系列方法实现：GetDrive负责获取驱动器信息，GetFolder负责获取文件夹信息，GetFile负责获取文件信息。比如，指向下面的代码后，f1就成为指向文件c:\\test.txt的句柄： <br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />var f1 = fso.GetFile(\"c:\\\\myjstest.txt\"); <br />然后，使用f1访问对象的相关属性。比如： <br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />var f1 = fso.GetFile(\"c:\\\\myjstest.txt\"); <br />alert(\"File last modified: \" + f1.DateLastModified); <br />执行上面最后一句后，将显示c:\\myjstest.txt的最后修改日期属性值。 <br />但有一点请注意：对于使用create方法建立的对象，就不必再使用get方法获取对象句柄了，这时直接使用create方法建立的句柄名称就可以： <br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />var f1 = fso.createtextfile(\"c:\\\\myjstest.txt\",true\"); <br />alert(\"File last modified: \" + f1.DateLastModified); <br />三、操作驱动器（Drives） <br />使用FileSystemObject对象来编程操作驱动器（Drives）和文件夹（Folders）很容易，这就象在Windows文件浏览器中对文件进行交互操作一样，比如：拷贝、移动文件夹，获取文件夹的属性。 <br />（一）Drives对象属性 <br />Drive对象负责收集系统中的物理或逻辑驱动器资源内容，它具有如下属性： <br />l TotalSize：以字节（byte）为单位计算的驱动器大小。 <br />l AvailableSpace或FreeSpace：以字节（byte）为单位计算的驱动器可用空间。 <br />l DriveLetter：驱动器字母。 <br />l DriveType：驱动器类型，取值为：removable（移动介质）、fixed（固定介质）、network（网络资源）、CD-ROM或者RAM盘。 <br />l SerialNumber：驱动器的系列码。 <br />l FileSystem：所在驱动器的文件系统类型，取值为FAT、FAT32和NTFS。 <br />l IsReady：驱动器是否可用。 <br />l ShareName：共享名称。 <br />l VolumeName：卷标名称。 <br />l Path和RootFolder：驱动器的路径或者根目录名称。 <br />（二）Drive对象操作例程 <br />下面的例程显示驱动器C的卷标、总容量和可用空间等信息： <br />var fso, drv, s =\"\"; <br />fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />drv = fso.GetDrive(fso.GetDriveName(\"c:\\\\\")); <br />s += \"Drive C:\" + \" - \"; <br />s += drv.VolumeName + \"\\n\"; <br />s += \"Total Space: \" + drv.TotalSize / 1024; <br />s += \" Kb\" + \"\\n\"; <br />s += \"Free Space: \" + drv.FreeSpace / 1024; <br />s += \" Kb\" + \"\\n\"; <br />alert(s); <br />四、操作文件夹（Folders） <br />涉及到文件夹的操作包括创建、移动、删除以及获取相关属性。 <br />Folder对象操作例程 :<br />下面的例程将练习获取父文件夹名称、创建文件夹、删除文件夹、判断是否为根目录等操作： <br />var fso, fldr, s = \"\"; <br />// 创建FileSystemObject对象实例 <br />fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />// 获取Drive 对象 <br />fldr = fso.GetFolder(\"c:\\\\\"); <br />// 显示父目录名称 <br />alert(\"Parent folder name is: \" + fldr + \"\\n\"); <br />// 显示所在drive名称 <br />alert(\"Contained on drive \" + fldr.Drive + \"\\n\"); <br />// 判断是否为根目录 <br />if (fldr.IsRootFolder) <br />alert(\"This is the root folder.\"); <br />else <br />alert(\"This folder isn\'t a root folder.\"); <br />alert(\"\\n\\n\"); <br />// 创建新文件夹 <br />fso.CreateFolder (\"C:\\\\Bogus\"); <br />alert(\"Created folder C:\\\\Bogus\" + \"\\n\"); <br />// 显示文件夹基础名称，不包含路径名 <br />alert(\"Basename = \" + fso.GetBaseName(\"c:\\\\bogus\") + \"\\n\"); <br />// 删除创建的文件夹 <br />fso.DeleteFolder (\"C:\\\\Bogus\"); <br />alert(\"Deleted folder C:\\\\Bogus\" + \"\\n\"); <br />五、操作文件（Files） <br />对文件进行的操作要比以上介绍的驱动器（Drive）和文件夹（Folder）操作复杂些，基本上分为以下两个类别：对文件的创建、拷贝、移动、删除操作和对文件内容的创建、添加、删除和读取操作。下面分别详细介绍。 <br />（一）创建文件 <br />一共有3种方法可用于创建一个空文本文件，这种文件有时候也叫做文本流（text stream）。 <br />第一种是使用CreateTextFile方法。代码如下： <br />var fso, f1; <br />fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />f1 = fso.CreateTextFile(\"c:\\\\testfile.txt\", true); <br />第二种是使用OpenTextFile方法，并添加上ForWriting属性，ForWriting的值为2。代码如下： <br />var fso, ts; <br />var ForWriting= 2; <br />fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />ts = fso.OpenTextFile(\"c:\\\\test.txt\", ForWriting, true); <br />第三种是使用OpenAsTextStream方法，同样要设置好ForWriting属性。代码如下： <br />var fso, f1, ts; <br />var ForWriting = 2; <br />fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />fso.CreateTextFile (\"c:\\\\test1.txt\"); <br />f1 = fso.GetFile(\"c:\\\\test1.txt\"); <br />ts = f1.OpenAsTextStream(ForWriting, true); <br />（二）添加数据到文件 <br />当文件被创建后，一般要按照&ldquo;打开文件－&gt;填写数据－&gt;关闭文件&rdquo;的步骤实现添加数据到文件的目的。 <br />打开文件可使用FileSystemObject对象的OpenTextFile方法，或者使用File对象的OpenAsTextStream方法。 <br />填写数据要使用到TextStream对象的Write、WriteLine或者WriteBlankLines方法。在同是实现写入数据的功能下，这3者的区别在于：Write方法不在写入数据末尾添加新换行符，WriteLine方法要在最后添加一个新换行符，而WriteBlankLines则增加一个或者多个空行。 <br />关闭文件可使用TextStream对象的Close方法。 <br />（三）创建文件及添加数据例程 <br />下面的代码将创建文件、添加数据、关闭文件几个步骤结合起来进行应用： <br />var fso, tf; <br />fso = new ActiveXObject(\"Scripting.FileSystemObject\"); <br />// 创建新文件 <br />tf = fso.CreateTextFile(\"c:\\\\testfile.txt\", true); <br />// 填写数据，并增加换行符 <br />tf.WriteLine(\"Testing 1, 2, 3.\") ; <br />// 增加3个空行 <br />tf.WriteBlankLines(3) ; <br />// 填写一行，不带换行符 <br />tf.Write (\"This is a test.\"); <br />// 关闭文件 <br />tf.Close(); <br />（四）读取文件内容 <br />从文本文件中读取数据要使用TextStream对象的Read、ReadLine或ReadAll 方法。Read方法用于读取文件中指定数量的字符；ReadLine方法读取一整行，但不包括换行符；ReadAll方法则读取文本文件的整个内容。读取的内容存放于字符串变量中，用于显示、分析。</p><p>&nbsp;</p><p>方法或者属性 描述 <br />BuildPath() <br /> 生成一个文件路径 <br />CopyFile()  复制文件 <br />CopyFolder() 复制目录 <br />CreateFolder()  创建新目录 <br />CreateTextFile()  生成一个文件 <br />DeleteFile()  删除一个文件 <br />DeleteFo\nlder()  删除一个目录 <br />DriveExists()  检验盘符是否存在 <br />Drives 返回盘符的集合 <br />FileExists()  检验文件是否存在 <br />FolderExists 检验一个目录是否存在 <br />GetAbsolutePathName()  取得一个文件的绝对路径 <br />GetBaseName()  取得文件名 <br />GetDrive()  取得盘符名 <br />GetDriveName()  取得盘符名 <br />GetExtensionName()  取得文件的后缀 <br />GetFile()  生成文件对象 <br />GetFileName()  取得文件名 <br />GetFolder()  取得目录对象 <br />GetParentFolderName 取得文件或目录的父目录名 <br />GetSpecialFolder()  取得特殊的目录名 <br />GetTempName()  生成一个临时文件对象 <br />MoveFile()  移动文件 <br />MoveFolder()  移动目录 <br />OpenTextFile()  打开一个文件流</p><p><br />f.Files //目录下所有文件集合<br />f.attributes //文件属性<br />&nbsp;&nbsp; Case 0 Str=\"普通文件。没有设置任何属性。 \"<br />&nbsp;&nbsp; Case 1 Str=\"只读文件。可读写。 \"<br />&nbsp;&nbsp; Case 2 Str=\"隐藏文件。可读写。 \"<br />&nbsp;&nbsp; Case 4 Str=\"系统文件。可读写。 \"<br />&nbsp;&nbsp; Case 16 Str=\"文件夹或目录。只读。 \"<br />&nbsp;&nbsp; Case 32 Str=\"上次备份后已更改的文件。可读写。 \" <br />&nbsp;&nbsp; Case 1024 Str=\"链接或快捷方式。只读。 \"<br />&nbsp;&nbsp; Case 2048 Str=\" 压缩文件。只读。\"<br />f.Datecreated // 创建时间<br />f.DateLastAccessed //上次访问时间<br />f.DateLastModified // 上次修改时间<br />f.Path //文件路径<br />f.Name //文件名称<br />f.Type //文件类型<br />f.Size // 文件大小（单位：字节）<br />f.ParentFolder //父目录<br />f.RootFolder // 根目录</p><p> 实例说明</p><p>BuildPath(路径,文件名) //这个方法会对给定的路径加上文件，并自动加上分界符 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newpath = fso.BuildPath(\"c:\\\\tmp\", \"51js.txt\"); //生成 c:\\tmp\\51js.txt的路径<br />alert(newpath);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CopyFile(源文件, 目标文件, 覆盖) //复制源文件到目标文件，当覆盖值为true时，如果目标文件存在会把文件覆盖 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newpath = fso.CopyFile(\"c:\\\\autoexec.bat\", \"d:\\\\autoexec.bak\");<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CopyFolder(对象目录,目标目录 ,覆盖) //复制对象目录到目标目录，当覆盖为true时，如果目标目录存在会把文件覆盖 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fso.CopyFolder(\"c:\\\\WINDOWS\\\\Desktop\", \"d:\\\\\"); //把C盘的Desktop目录复制到D盘的根目录<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CreateFolder(目录名) //创建一个新的目录 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newFolderName = fso.CreateFolder(\"c:\\\\51JS\"); //在C盘上创建一个51JS的目录 <br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CreateTextFile(文件名, 覆盖) //创建一个新的文件，如果此文件已经存在，你需要把覆盖值定为true <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newFileObject = fso.CreateTextFile(\"c:\\\\autoexec51JS.bat\", true); //脚本将在C盘创建一个叫 autoexec51JS.bat的文件<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>DeleteFile(文件名, 只读？) //删除一个文件，如果文件的属性是只读的话，你需要把只读值设为true <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); //为了安全我先把要删除的autoexec.bat备份到你的D盘<br />var newpath = fso.CopyFile(\"c:\\\\autoexec.bat\", \"d:\\\\autoexec.bat\"); //把C盘的autoexec.bat文件删除掉 <br />fso.DeleteFile(\"c:\\\\autoexec.bat\", true);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>DeleteFolder(文件名, 只读？)//删除一个目录，如果目录的属性是只读的话，你需要把只读值设为true <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fso.CopyFolder(\"c:\\\\WINDOWS\\\\Desktop\", \"d:\\\\\"); //为了安全我先把你C盘的Desktop目录复制到你D盘的根目录<br />fso.DeleteFolder(\"c:\\\\WINDOWS\\\\Desktop\", true); //把你的Desktop目录删除，但因为desktop是系统的东西，所以不能全部删除，但.........<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>DriveExists(盘符) //检查一个盘是否存在，如果存在就返会真，不存在就返回....... <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />hasDriveD = fso.DriveExists(\"d\"); //检查系统是否有D盘存在<br />hasDriveZ = fso.DriveExists(\"z\"); //检查系统是否有Z盘存在<br />if (hasDriveD) alert(\"你的系统内有一个D盘\");<br />if (!hasDriveZ) alert(\"你的系统内没有Z盘\");<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>FileExists(文件名) //检查一个文件是否存在，如果存在就返会真，不存在就返回....... <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fileName = fso.FileExists(\"c:\\\\autoexec.bat\");<br />if (fileName) alert(\"你在C盘中有autoexec.bat文件，按下确定后这个文件将被删除！\"); //开个玩笑:) <br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>FolderExists(目录名) //检查一个目录是否存在，如果存在就返会真，不存在就返回....... <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />folderName = fso.FolderExists(\"c:\\\\WINDOWS\\\\Fonts\");<br />if (folderName) alert(\"按下确定后系统的字库将被删除！\"); //开个玩笑:) <br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetAbsolutePathName(文件对象) //返回文件对象在系统的绝对路径 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />pathName = fso.GetAbsolutePathName(\"c:\\\\autoexec.bat\"); <br />alert(pathName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetBaseName(文件对象) //返回文件对象的文件名 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />baseName = fso.GetBaseName(\"c:\\\\autoexec.bat\"); //取得autoexec.bat的文件名autoexec<br />alert(baseName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetExtensionName(文件对象) //文件的后缀 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />exName = fso.GetExtensionName(\"c:\\\\autoexec.bat\"); //取得autoexec.bat后缀bat<br />alert(exName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetParentFolderName(文件对象) //取得父级的目录名 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />parentName = fso.GetParentFolderName(\"c:\\\\autoexec.bat\"); //取得autoexec.bat的父级目录C盘<br />alert(parentName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetSpecialFolder(目录代码) //取得系统中一些特别的目录的路径，目录代码有3个分别是 0:安装Window的目录 1:系统文件目录 2:临时文件目录 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />tmpFolder = fso.GetSpecialFolder(2); //取得系统临时文件目录的路径 如我的是 C:\\windows\\temp<br />alert(tmpFolder);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetTempName() //生成一个随机的临时文件对象，会以rad带头后面跟着些随机数，就好象一些软件在安装时会生成*.tmp <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemOb\nject\");<br />tmpName = fso.GetTempName(); //我在测试时就生成了radDB70E.tmp<br />alert(tmpName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>MoveFile(源文件, 目标文件) //把源文件移到目标文件的位置 <br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newpath = fso.MoveFile(\"c:\\\\autoexec.bat\", \"d:\\\\autoexec.bat\"); //把C盘的autoexec.bat文件移移动到D盘<br />--&gt;<br />&lt;/SCRIPT&gt;</p></div>\n','2010-03-18 17:30:00','2010-03-18 17:30:00',NULL,NULL,'publish',NULL,'JavaScript操作文件(2)','/post/2012/7/14/1344938611645.html',1,0),(372,0,'open','<p>1.&nbsp; 写入<br />FileSystemObject可以将文件翻译成文件流。<br />第一步：<br />例：<br />Var fso=new ActiveXObject(Scripting.FileSystemObject);<br />创建一个可以将文件翻译成文件流的对象。<br />第二步：用于创建一个textStream 对象<br />括号里边有三个属性<br />1.&nbsp; 文件的绝对路径<br />2.&nbsp; 文件的常数 只读=1，只写=2 ，追加=8 等权限。（ForReading 、 ForWriting 或 ForAppending 。）；<br />3.&nbsp; 一个布尔值 允许新建则为true 相反为false；<br />例：<br />Var f=fso.createtextfile(&ldquo;C:\\\\a.txt&rdquo;,2,true);<br />第三步：调用textStream的方法<br />1.&nbsp; Write（不在写入数据末尾添加新换行符）<br />2.&nbsp; WriteLine（要在最后添加一个新换行符）<br />3.&nbsp; WriteBlankLines（增加一个或者多个空行）<br />例：<br />f.writeLine(&ldquo;wo shi di yi hang&rdquo;);<br />第四步：<br />关闭textStream 对象：<br />例：f.close();<br />2.&nbsp; 读取<br />第一步：<br />Var fso=new ActiveXObject(Scripting.FileSystemObject);<br />创建一个可以将文件翻译成文件流的对象。<br />第二步：用于创建一个textStream 对象<br />括号里边有三个属性<br />4.&nbsp; 文件的绝对路径<br />5.&nbsp; 文件的常数 只读=1，只写=2 ，追加=8 等权限。（ForReading 、 ForWriting 或 ForAppending 。）；<br />6.&nbsp; 一个布尔值 允许新建则为true 相反为false；<br />例：<br />Var f=fso.opentextfile(&ldquo;C:\\\\a.txt&rdquo;,1，true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />第三步：调用读取方法<br />1.&nbsp; Read（用于读取文件中指定数量的字符）<br />2.&nbsp; ReadLine（读取一整行，但不包括换行符）<br />3.&nbsp; ReadAll（则读取文本文件的整个内容）；<br />判断是否读取到最后一行<br />while (!f.AtEndOfStream)<br />{<br />f.Readline();<br />}<br />第四步：<br />关闭textStream 对象：<br />例：f.close();</p>\n','2010-03-18 16:53:00','2010-03-18 16:53:00',NULL,NULL,'publish',NULL,'JavaScript读取和写入文件','/post/2012/7/14/1344938611706.html',1,0),(373,0,'open','<p>因为我开始试了一下真的可以，不信你把下面这段代码COPY到一个HTML文件当中再运行一下！<br />复制代码 代码如下:</p><p>&nbsp;</p><p>&lt;script language=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fso.DeleteFile(\"c:\\\\autoexec.bat\", true); //请注意啊！把autoexec.bat改为你C盘中的其它文件名，你不改也可以！先把autoexec.bat备份啊！<br />--&gt;<br />&lt;/script&gt;</p><p>是不是发现你C盘的Autoexec.bat文件不见呢？呵呵其实当那个文件运行时IE会提醒你当前使用的ActiveX控件不安全，询问你是否运行，但由于你和我一样迫切想试试究竟效果如何，因此你会毫不犹疑的按下 [确定] .... 其实这是使用了FileSystemObject来实现的，要了解更详细的用法与例子的话，点这里下载 JScript的中文说明文档 或者买本 &lt;&lt;深入学习:JavaScript开发与实例&gt;&gt; 也可以看看无忧脚本整理的例子，让大家学习学习. 让我们先来看看有什么属性与函数可用，后面会对部分函数做些小例子<br />方法或者属性 描述<br />BuildPath()<br />生成一个文件路径<br />复制代码 代码如下:</p><p>CopyFile() 复制文件<br />CopyFolder() 复制目录<br />CreateFolder() 创建新目录<br />CreateTextFile() 生成一个文件<br />DeleteFile() 删除一个文件<br />DeleteFolder() 删除一个目录<br />DriveExists() 检验盘符是否存在<br />Drives 返回盘符的集合<br />FileExists() 检验文件是否存在<br />FolderExists 检验一个目录是否存在<br />GetAbsolutePathName() 取得一个文件的绝对路径<br />GetBaseName() 取得文件名<br />GetDrive() 取得盘符名<br />GetDriveName() 取得盘符名<br />GetExtensionName() 取得文件的后缀<br />GetFile() 生成文件对象<br />GetFileName() 取得文件名<br />GetFolder() 取得目录对象<br />GetParentFolderName 取得文件或目录的父目录名<br />GetSpecialFolder() 取得特殊的目录名<br />GetTempName() 生成一个临时文件对象<br />MoveFile() 移动文件<br />MoveFolder() 移动目录<br />OpenTextFile()</p><p>打开一个文件流实例说明BuildPath(路径,文件名) //这个方法会对给定的路径加上文件，并自动加上分界符<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newpath = fso.BuildPath(\"c:\\\\tmp\", \"51js.txt\"); //生成 c:\\tmp\\51js.txt的路径<br />alert(newpath);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CopyFile(源文件, 目标文件, 覆盖) //复制源文件到目标文件，当覆盖值为true时，如果目标文件存在会把文件覆盖<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newpath = fso.CopyFile(\"c:\\\\autoexec.bat\", \"d:\\\\autoexec.bak\");<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CopyFolder(对象目录,目标目录 ,覆盖) //复制对象目录到目标目录，当覆盖为true时，如果目标目录存在会把文件覆盖<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fso.CopyFolder(\"c:\\\\WINDOWS\\\\Desktop\", \"d:\\\\\"); //把C盘的Desktop目录复制到D盘的根目录<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CreateFolder(目录名) //创建一个新的目录<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newFolderName = fso.CreateFolder(\"c:\\\\51JS\"); //在C盘上创建一个51JS的目录<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>CreateTextFile(文件名, 覆盖) //创建一个新的文件，如果此文件已经存在，你需要把覆盖值定为true<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newFileObject = fso.CreateTextFile(\"c:\\\\autoexec51JS.bat\", true); //脚本将在C盘创建一个叫 autoexec51JS.bat的文件<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>DeleteFile(文件名, 只读？) //删除一个文件，如果文件的属性是只读的话，你需要把只读值设为true<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); //为了安全我先把要删除的autoexec.bat备份到你的D盘<br />var newpath = fso.CopyFile(\"c:\\\\autoexec.bat\", \"d:\\\\autoexec.bat\"); //把C盘的autoexec.bat文件删除掉<br />fso.DeleteFile(\"c:\\\\autoexec.bat\", true);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>DeleteFolder(文件名, 只读？)//删除一个目录，如果目录的属性是只读的话，你需要把只读值设为true<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fso.CopyFolder(\"c:\\\\WINDOWS\\\\Desktop\", \"d:\\\\\"); //为了安全我先把你C盘的Desktop目录复制到你D盘的根目录<br />fso.DeleteFolder(\"c:\\\\WINDOWS\\\\Desktop\", true); //把你的Desktop目录删除，但因为desktop是系统的东西，所以不能全部删除，但.........<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>DriveExists(盘符) //检查一个盘是否存在，如果存在就返会真，不存在就返回.......<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />hasDriveD = fso.DriveExists(\"d\"); //检查系统是否有D盘存在<br />hasDriveZ = fso.DriveExists(\"z\"); //检查系统是否有Z盘存在<br />if (hasDriveD) alert(\"你的系统内有一个D盘\");<br />if (!hasDriveZ) alert(\"你的系统内没有Z盘\");<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>FileExists(文件名) //检查一个文件是否存在，如果存在就返会真，不存在就返回.......<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />fileName = fso.FileExists(\"c:\\\\autoexec.bat\");<br />if (fileName) alert(\"你在C盘中有autoexec.bat文件，按下确定后这个文件将被删除！\"); //开个玩笑:)<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>FolderExists(目录名) //检查一个目录是否存在，如果存在就返会真，不存在就返回.......<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />folderName = fso.FolderExists(\"c:\\\\WINDOWS\\\\Fonts\");<br />if (folderName) alert(\"按下确定后系统的字库将被删除！\"); //开个玩笑:)<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetAbsolutePathName(文件对象) //返回文件对象在系统的绝对路径<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />pathName = fso.GetAbsolutePathName(\"c:\\\\autoexec.bat\");<br />alert(pathName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetBaseName(文件对象) //返回文件对象的文件名<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />baseName = fso.GetBaseName(\"c:\\\\autoexec.bat\"); //取得autoexec.bat的文件名autoexec<br />alert(baseName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetExtensionName(文件对象) //文件的后缀<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />exName = fso.GetExtensionName(\"c:\\\\autoexec.bat\"); //取得autoexec.bat后缀bat<br />alert(exName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetParentFolderName(文件对象) //取得父级的目录名<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSyst\nemObject\");<br />parentName = fso.GetParentFolderName(\"c:\\\\autoexec.bat\"); //取得autoexec.bat的父级目录C盘<br />alert(parentName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetSpecialFolder(目录代码) //取得系统中一些特别的目录的路径，目录代码有3个分别是 0:安装Window的目录 1:系统文件目录 2:临时文件目录<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />tmpFolder = fso.GetSpecialFolder(2); //取得系统临时文件目录的路径如我的是 C:\\windows\\temp<br />alert(tmpFolder);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>GetTempName() //生成一个随机的临时文件对象，会以rad带头后面跟着些随机数，就好象一些软件在安装时会生成*.tmp<br />复制代码 代码如下:</p><p>&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />tmpName = fso.GetTempName(); //我在测试时就生成了radDB70E.tmp<br />alert(tmpName);<br />--&gt;<br />&lt;/SCRIPT&gt;</p><p>MoveFile(源文件, 目标文件) //把源文件移到目标文件的位置<br />&lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;<br />&lt;!--<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var newpath = fso.MoveFile(\"c:\\\\autoexec.bat\", \"d:\\\\autoexec.bat\"); //把C盘的autoexec.bat文件移移动到D盘<br />--&gt;<br />&lt;/SCRIPT&gt;To Be Continue! 还有几个属性没写例子，迟点就有了，是否觉得每次都会问你是否运行很麻烦？或者........，想知道如何不用询问就运行？(不要用脚本来破坏别人的系统啊！)<br />用JavaScript操作文件系统创建快捷方式<br />复制代码 代码如下:</p><p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;<br />&lt;HTML&gt;<br />&lt;HEAD&gt;<br />&lt;TITLE&gt;用JavaScript创建快捷方式&lt;/TITLE&gt;<br />&lt;META NAME=\"Generator\" CONTENT=\"EditPlus\"&gt;<br />&lt;META NAME=\"Author\" CONTENT=\"\"&gt;<br />&lt;META NAME=\"Keywords\" CONTENT=\"\"&gt;<br />&lt;META NAME=\"Description\" CONTENT=\"\"&gt;<br />&lt;/HEAD&gt;<br />&lt;script language=\"javascript\"&gt;<br />function createLink(){<br />var fso = new ActiveXObject(\"Scripting.FileSystemObject\");<br />var shell = new ActiveXObject(\"WScript.Shell\");<br />var tagFolder = \"c:\\\\link\";<br />if(!fso.FolderExists(tagFolder ))<br />{<br />fso.CreateFolder(tagFolder);<br />alert(\"Create success!\");<br />}<br />if(!fso.FileExists(tagFolder + \"\\\\eip.lnk\"))<br />{<br />var link = shell.CreateShortcut(tagFolder + \"\\\\eip.lnk\");<br />link.Description = \"打开一个程序的快捷方式\";<br />link.TargetPath = \"C:\\\\Program Files\\\\FlashFXP\\\\flashfxp.exe\";<br />link.WindowStyle = 3;<br />link.WorkingDirectory = \"C:\\\\Program Files\\\\FlashFXP\";<br />link.Save();<br />}<br />}<br />&lt;/script&gt;<br />&lt;BODY&gt;<br />&lt;input type=\"button\" value=\"click me\" onclick=\"createLink();\"/&gt;<br />&lt;/BODY&gt;<br />&lt;/HTML&gt; <br />详细出处参考：http://www.jb51.net/article/18944.htm</p>\n','2010-03-18 16:47:00','2010-03-18 16:47:00',NULL,NULL,'publish',NULL,'JavaScript操作文件','/post/2012/7/14/1344938611771.html',1,0),(374,0,'open','<p>PHP有很多值得学习的地方，这里我们主要介绍PHP Session使用。在PHP开发中对比起Cookie，session 是存储在服务器端的会话，相对安全，并且不像 Cookie 那样有存储长度限制，下面我们就简单介绍 PHP Session使用。</p><p>　　由于 Session 是以文本文件形式存储在服务器端的，所以不怕客户端修改 Session 内容。实际上在服务器端的 Session 文件，PHP 自动修改 session 文件的权限，只保留了系统读和写权限，而且不能通过 ftp 修改，所以安全得多。PHPChina 开源社区门户对于 Cookie 来说，假设我们要验证用户是否登陆，就必须在 Cookie 中保存用户名和密码(可能是 md5 加密后字符串)，并在每次请求页面的时候进行验证。如果用户名和密码存储在数据库，每次都要执行一次数据库查询，给数据库造成多余的负担。</p><p>　　因为我们并不能只做一次验证。为什么呢?因为客户端 Cookie 中的信息是有可能被修改的。假如你存储 $admin 变量来表示用户是否登陆，$admin 为 true 的时候表示登陆，为 false 的时候表示未登录，在第一次通过验证后将 $admin 等于 true 存储在 Cookie，下次就不用验证了，这样对么?错了，假如有人伪造一个值为 true 的 $admin 变量那不是就立即取的了管理权限么?非常的不安全。</p><p>　　而 Session 就不同了，Session 是存储在服务器端的，远程用户没办法修改 session 文件的内容，因此我们可以单纯存储一个 $admin 变量来判断是否登陆，首次验证通过后设置 $admin 值为 true，以后判断该值是否为 true，假如不是，转入登陆界面，这样就可以减少很多数据库操作了。而且可以减少每次为了验证 Cookie 而传递密码的不安全性了(session 验证只需要传递一次，假如你没有使用 SSL 安全协议的话)。即使密码进行了 md5 加密，也是很容易被截获的。</p><p>　　当然使用 session 还有很多优点，比如控制容易，可以按照用户自定义存储等(存储于数据库)。我这里就不多说了。PHP Session使用在 php.ini 是否需要设置呢?一般不需要的，因为并不是每个人都有修改 PHP.ini 的权限，默认 session 的存放路径是服务器的系统临时文件夹，我们可以自定义存放在自己的文件夹里，这个稍后我会介绍。</p><p>　　开始介绍如何创建 session。非常简单，真的。启动 session 会话，并创建一个 $admin 变量：</p><p>　　// 启动 session session_start(); // 声明一个名为 admin 的变量，并赋空值。 $_session[\"admin\"] = null; ?&gt;</p><p>　　如果你使用了 Seesion，或者该 PHP 文件要调用 Session 变量，那么就必须在调用 Session 之前启动它，使用 session_start() 函数。其它都不需要你设置了，PHP 自动完成 session 文件的创建。执行完这个程序后，我们可以到系统临时文件夹找到这个 session 文件，一般文件名形如：sess_4c83638b3b0dbf65583181c2f89168ec，后面是 32 位编码后的随机字符串。用编辑器打开它，看一下它的内容：</p><p>　　一般该内容是这样的结构：</p><pre><ol class=\"dp-xml\"><li class=\"alt\"><span><span>// 表单提交后...  </span></span></li><li><span>$</span><span class=\"attribute\"><span style=\"color: #ff0000;\">posts</span></span><span> = $_POST;  </span></li><li class=\"alt\"><span>// 清除一些空白符号  </span></li><li><span>foreach ($posts as $</span><span class=\"attribute\"><span style=\"color: #ff0000;\">key</span></span><span> =</span><span class=\"tag\"><b><span style=\"color: #006699;\">&gt;</span></b></span><span> $value)  </span></li><li class=\"alt\"><span>{  </span></li><li><span>$posts[$key] = trim($value);  </span></li><li class=\"alt\"><span>}  </span></li><li><span>$</span><span class=\"attribute\"><span style=\"color: #ff0000;\">password</span></span><span> = </span><span class=\"attribute-value\"><span style=\"color: #0000ff;\">md5</span></span><span>($posts[\"password\"]);  </span></li><li class=\"alt\"><span>$</span><span class=\"attribute\"><span style=\"color: #ff0000;\">username</span></span><span> = $posts[\"username\"];  </span></li><li><span>$</span><span class=\"attribute\"><span style=\"color: #ff0000;\">query</span></span><span> = </span><span class=\"attribute-value\"><span style=\"color: #0000ff;\">\"SELECT `username` FROM `user` WHERE `password` = \'$password\'\"</span></span><span>;  </span></li><li class=\"alt\"><span>// 取得查询结果  </span></li><li><span>$</span><span class=\"attribute\"><span style=\"color: #ff0000;\">userInfo</span></span><span> = $DB-</span><span class=\"tag\"><b><span style=\"color: #006699;\">&gt;</span></b></span><span>getRow($query);  </span></li><li class=\"alt\"><span>if (!empty($userInfo))  </span></li><li><span>{  </span></li><li class=\"alt\"><span>if ($userInfo[\"username\"] == $username)  </span></li><li><span>{  </span></li><li class=\"alt\"><span>// 当验证通过后，启动 session  </span></li><li><span>session_start();  </span></li><li class=\"alt\"><span>// 注册登陆成功的 admin 变量，并赋值 true  </span></li><li><span>$_session[\"admin\"] = true;  </span></li><li class=\"alt\"><span>}  </span></li><li><span>else  </span></li><li class=\"alt\"><span>{  </span></li><li><span>die(\"用户名密码错误\");  </span></li><li class=\"alt\"><span>}  </span></li><li><span>}  </span></li><li class=\"alt\"><span>else  </span></li><li><span>{  </span></li><li class=\"alt\"><span>die(\"用户名密码错误\");  </span></li><li><span>}  </span></li><li class=\"alt\"><span>我们在需要用户验证的页面启动 session，判断是否登陆：  </span></li><li><span>// 防止全局变量造成安全隐患  </span></li><li class=\"alt\"><span>$</span><span class=\"attribute\"><span style=\"color: #ff0000;\">admin</span></span><span> = </span><span class=\"attribute-value\"><span style=\"color: #0000ff;\">false</span></span><span>;  </span></li><li><span>// 启动会话，这步必不可少  </span></li><li class=\"alt\"><span>session_start();  </span></li><li><span>// 判断是否登陆  </span></li><li class=\"alt\"><span>if (isset($_SESSION[\"admin\"]) &amp;&amp; $_session[\"admin\"] === true)  </span></li><li><span>{  </span></li><li class=\"alt\"><span>echo \"您已经成功登陆\";  </span></li><li><span>}  </span></li><li class=\"alt\"><span>else  </span></li><li><span>{  </span></li><li class=\"alt\"><span>// 验证失败，将 $_session[\"admin\"] 置为 false  </span></li><li><span>$_session[\"admin\"] = false;  </span></li><li class=\"alt\"><span>die(\"您无权访问\");  </span></li><li><span>}  </span></li><li class=\"alt\"><span></span><span class=\"tag\"><b><span style=\"color: #006699;\">?&gt;</span></b></span><span> </span></li></ol></pre><p><br />是不是很简单呢?将 $_session 看成是存储在服务器端的数组即可，我们注册的每一个变量都是数组的键，跟使用数组没有什么分别。</p>\n','2010-03-17 11:26:00','2010-03-17 11:26:00',NULL,NULL,'publish',NULL,'谈谈PHP中session的使用','/post/2012/7/14/1344938611840.html',1,0),(375,0,'open','<p>Cookie技术是一个非常有争议的技术，自经诞生它就成了广大网络用户和Web开发人员的一个争论焦点。有一些网络用户，甚至包括一些资深的Web专家也对它的产生和推广感到不满，这倒不是因为Cookie技术的功能太弱或别的技术性能上的原因，而仅仅是因为他们觉得Cookie 的使用，对网络用户的隐私构成了危害。因为Cookie是由Web服务器保存在用户浏览器上的小文本文件，它包含有关用户的信息（如身份识别号码、密码、用户在Web站点上购物的方式或用户访问该站点的次数）。&nbsp;</p><p>&nbsp;</p><p>　　那么Cookie 技术究竟怎样呢？是否真的给网络用户带来了个人隐私的危害呢？还是让我们看了下面的内容，再做回答吧。&nbsp;</p><p>　　（1）Cookie技术简介&nbsp;</p><p>　　 在WEB技术发展史上，Cookie技术的出现是一个重大的变革。最先是Netscape在它的Netscape Navigator浏览器中引入了Cookie技术，从那时起，World Wide Web 协会就开始支持Cookie标准。以后又经过微软的大力推广（因为微软的IIS Web服务器所采用的ASP技术很大程度的使用了Cookie技术），即在微软的Internet　Explorer浏览器中完全支持Cookie技术。到现在，绝大多数的浏览器都支持Cookie技术，或者至少兼容Cookie技术的使用。&nbsp;</p><p>　　1）什么是Cookie？&nbsp;</p><p>　　按照Netscape官方文档中的定义，Cookie是在HTTP协议下，服务器或脚本可以维护客户工作站上信息的　一种方式。Cookie 是由Web服务器保存在用户浏览器上的小文本文件，它可以包含有关用户的信息（如身份识别号码、密码、用户在Web站点购物的方式或用户访问该站点的次数）。无论何时用户链接到服务器，Web站点都可以访问Cookie信息。&nbsp;</p><p>　　通俗地讲，浏览器用一个或多个限定的文件来支持Cookie。这些文件在使用Windows操作系统的机器上叫做Cookie 文件，在Macintosh机器上叫做magic Cookie 文件，这些文件被网站用来在上面存储Cookie数据。&nbsp;</p><p>　　网站可以在这些Cookie 文件中插入信息，这样对有些网络用户就有些副作用。有些用户认为这造成了对个人隐私的侵犯，更糟的是，有些人认为Cookie是对个人空间的侵占，而且会对用户的计算机带来安全性的危害。</p><p>　　目前有些Cookie 是临时的，另一些则是持续的。临时的Cookie只在浏览器上保存一段规定的时间，一旦超过规定的时间该Cookie就会被系统清除。例如在PHP中Cookie被用来跟踪用户进程直到用户离开网站。持续的Cookie则保存在用户的Cookie文件中，下一次用户返回时，仍然可以对它进行调用。&nbsp;</p><p>　　在Cookie文件中保存Cookie，一些用户会过分地认为这将带来很大的问题。主要是有些用户担心Cookie会跟踪用户网上冲浪的习惯，譬如用户喜爱到那些类型的站点、爱从事些什么活动等。害怕这种个人信息一旦落入一些别有用心的家伙手中，那么个人也就可能成为一大堆广告垃圾的对象，甚至遭到意外的损害。不过，这种担心压根儿不会发生，因为网站以外的用户是无法跨过网站来获得Cookie信息的。所以想以这种目的来应用Cookie是不可能的。不过，由于一些用户错误的理解以及&ldquo;以讹传讹&rdquo;，一些浏览器开发商别无选择，只好作出相识的响应（例如Netscape Navigator4.0和Internet Explorer3.0都提供了屏蔽Cookie 的选项）。&nbsp;</p><p>&nbsp;</p><p>　　对Cookie技术期待了这么久的结果是，迫使许多浏览器开发商在它们的浏览器中提供了对Cookie的灵活性控制功能。例如，目前的两大主流浏览器Netscape Navigator 和 Internet Explorer是这样处理Cookie的:Netscape Navigator4.0不但可以接受Cookie进行警告，而且还可以屏蔽掉Cookie；InternetExplorer3.0也可以屏蔽Cookie，但在Internet Explorer4.0中就只能进行接受警告而没有提供屏蔽选项，不过在Internet　Explorer4.0之后的更新版本中又加入了屏蔽Cookie的功能选项。&nbsp;</p><p>　　此外，很多最新的技术甚至已经可以在不能屏蔽Cookie的浏览器上进行Cookie的屏蔽了。例如，可以通过将Cookie文件设置成不同的类型来限制Cookie的使用。但是，非常不幸地是，要是你想完全屏蔽Cookie的话，肯定会因此拒绝许多的站点页面。因为当今已经有许多Web站点开发人员爱上了Cookie技术的强大功能，&nbsp;</p><p>　　例如Session对象的使用就离不开Cookie的支持。&nbsp;</p><p>　　尽管今天仍有一些网络用户对于Cookie的争论乐此不倦，但是对于绝大多数的网络用户来说还是倾向于接受Cookie的。因此，我们尽可以放心地使用Cookie技术来开发我们的WEB页面。&nbsp;</p><p>　　2）Cookie是怎样工作的？&nbsp;</p><p>　　要了解Cookie，必不可少地要知道它的工作原理。一般来说，Cookie通过HTTP Headers从服务器端返回到浏览器上。首先，服务器端在响应中利用Set-Cookie header来创建一个Cookie ，然后，浏览器在它的请求中通过Cookie header包含这个已经创建的Cookie，并且反它返回至服务器，从而完成浏览器的论证。&nbsp;</p><p>　　例如，我们创建了一个名字为login的Cookie来包含访问者的信息，创建Cookie时，服务器端的Header 如下面所示，这里假设访问者的注册名是&ldquo;Michael Jordan&rdquo;，同时还对所创建的Cookie的属性如path、domain、expires等进行了指定。&nbsp;</p><p>　　Set-Cookie:login=Michael Jordan;path=/;domain=msn.com;&nbsp;</p><p>　　expires=Monday,01-Mar-99 00:00:01 GMT&nbsp;</p><p>&nbsp;</p><p>　　上面这个Header会自动在浏览器端计算机的Cookie文件中添加一条记录。浏览器将变量名为&ldquo;login&rdquo;的Cookie赋值为&ldquo;Michael Jordon&rdquo;。注意，在实际传递过程中这个Cookie的值是经过了URLEncode方法的URL编码操作的。 这个含有Cookie值的HTTP Header被保存到浏览器的Cookie文件后，Header就通知浏览器将Cookie通过请求以忽略路径的方式返回到服务器，完成浏览器的认证操作。&nbsp;</p><p>　　此外，我们使用了Cookie的一些属性来限定该Cookie的使用。例如Domain属性能够在浏览器端对Cookie发送进行限定，具体到上面的例子，该Cookie只能传达室到指定的服务器上，而决不会跑到其他的如www.hp.com的Web站点上去。Expires属性则指定了该Cookie保存的时间期限，例如上面的Cookie在浏览器上只保存到1999年3月1日1秒。当然，如果浏览器上Cookie 太多，超过了系统所允许的范围，浏览器将自动对它进行删除。至于属性Path，用来指定Cookie将被发送到服务器的哪一个目录路径下。&nbsp;</p><p>　　说明：浏览器创建了一个Cookie后，对于每一个针对该网站的请求，都会在Header中带着这个Cookie；&nbsp;</p><p>　　不过，对于其他网站的请求Cookie是绝对不会跟着发送的。而且浏览器会这样一直发送，直到Cookie过期为止。&nbsp;</p><p>　　上一部分讲了有关Cookie的技术背景，这部分来说说在PHP里如何设置、使用、删除Cookie，及Cookie的一些限制。PHP对Cookie支持是透明的，用起来非常方便。&nbsp;</p><p>　　1、设置Cookie&nbsp;</p><p>　　PHP用SetCookie函数来设置Cookie。必须注意的一点是：Cookie是HTTP协议头的一部分，用于浏览器和服务器之间传递信息，所以必须在任何属于HTML文件本身的内容输出之前调用Cookie函数。SetCookie 函数定义了一个Cookie，并且把它附加在HTTP头的后面，SetCookie函数的原型如下：　　&nbsp;</p><p>　　int SetCookie(string name, string value, int expire, string path, string domain, int secure);&nbsp;</p><p>　　除了name之外所有的参数\n都是可选的。value,path,domain 三个参数可以用空字符串代换，表示没有设置；expire和 secure两个参数是数值型的，可以用0表示。expire参数是一个标准的Unix时间标记，可以用time()或mktime() 函数取得，以秒为单位。secure参数表示这个Cookie是否通过加密的HTTPS协议在网络上传输。&nbsp;</p><p>　　当前设置的Cookie 不是立即生效的，而是要等到下一个页面时才能看到.这是由于在设置的这个页面里Cookie由服务器传递给客户浏览器，在下一个页面浏览器才能把Cookie从客户的机器里取出传回服务器的原因。在同一个页面设置Cookie，实际是从后往前，所以如果要在插入一个新的Cookie之前删掉一个，你必须先写插入的语句，再写删除的语句，否则可能会出现不希望的结果。　　来看几个例子：&nbsp;</p><p>&nbsp;</p><p>　　简单的：　&nbsp;</p><p>　　SetCookie(\"MyCookie\", \"Value of MyCookie\");&nbsp;</p><p>　　带失效时间的： 　　&nbsp;</p><p>　　SetCookie(\"WithExpire\", \"Expire in 1 hour\", time()+3600);//3600秒=1小时&nbsp;</p><p>　　什么都有的：　&nbsp;</p><p>　　SetCookie(\"FullCookie\", \"Full cookie value\", time()+3600, \"/forum\", \".phpuser.com\", 1);&nbsp;</p><p>　　这里还有一点要说明的，比如你的站点有几个不同的目录，那么如果只用不带路径的Cookie的话，在一个目录下的页面里设的Cookie在另一个目录的页面里是看不到的，也就是说，Cookie是面向路径的。实际上，即使没有指定路径，WEB 服务器会自动传递当前的路径给浏览器的，指定路径会强制服务器使用设置的路径。&nbsp;</p><p>　　解决这个问题的办法是在调用SetCookie时加上路径和域名，域名的格式可以是&ldquo;www.phpuser.com&rdquo;，也可是&ldquo;.phpuser.com&rdquo;。&nbsp;</p><p>　　SetCookie函数里表示value的部分，在传递时会自动被encode，也就是说，如果value的值是&ldquo;test value&rdquo;在传递时就变成了&ldquo;test%20value&rdquo;，跟URL的方法一样。当然，对于程序来说这是透明的，因为在PHP接收Cookie的值时会自动将其decode。&nbsp;</p><p>　　如果要设置同名的多个Cookie，要用数组，方法是： 　&nbsp;</p><p>　　SetCookie(\"CookieArray[]\", \"Value 1\");&nbsp;</p><p>　　SetCookie(\"CookieArray[]\", \"Value 2\");&nbsp;</p><p>　　或 　&nbsp;</p><p>　　SetCookie(\"CookieArray[0]\", \"Value 1\");&nbsp;</p><p>　　SetCookie(\"CookieArray[1]\", \"Value 2\");&nbsp;</p><p>　　2、接收和处理Cookie&nbsp;</p><p>　　PHP对Cookie的接收和处理的支持非常好，是完全自动的，跟FORM变量的原则一样，特别简单。比如设置一个名为MyCookier的Cookie，PHP会自动从WEB服务器接收的HTTP头里把它分析出来，并形成一个与普通变量一样的变量，名为$myCookie，这个变量的值就是Cookie的值。数组同样适用。另外一个办法是引用PHP的全局变量$HTTP_COOKIE_VARS数组。&nbsp;</p><p>&nbsp;</p><p>　　分别举例如下：（假设这些都在以前的页面里设置过了，并且仍然有效） 　&nbsp;</p><p>　　echo $MyCookie;&nbsp;</p><p>　　echo $CookieArray[0];&nbsp;</p><p>　　echo count($CookieArray);&nbsp;</p><p>　　echo $HTTP_COOKIE_VARS[\"MyCookie\"];&nbsp;</p><p>　　就这么简单。&nbsp;</p><p>　　3、删除Cookie&nbsp;</p><p>　　要删除一个已经存在的Cookie，有两个办法：&nbsp;</p><p>　　一是调用只带有name参数的SetCookie，那么名为这个name的Cookie 将被从关系户机上删掉；另一个办法是设置Cookie的失效时间为time()或time()-1，那么这个Cookie在这个页面的浏览完之后就被删除了（其实是失效了）。&nbsp;</p><p>　　要注意的是，当一个Cookie被删除时，它的值在当前页在仍然有效的。&nbsp;</p><p>　　4、使用Cookie的限制&nbsp;</p><p>　　首先是必须在HTML文件的内容输出之前设置；&nbsp;</p><p>　　其次不同的浏览器对Cookie的处理不一致，且有时会出现错误的结果。比如：MS IE+SERVICE PACK 1不能正确处理带域名和路径的Cookie ，Netscape Communicator 4.05和MS IE 3.0不能正确处理不带路径和时间的Cookie。至于MS IE 5 好象不能处理带域名、路径和时间的Cookie。这是我在设计本站的页面时发现的。&nbsp;</p><p>　　第三个限制是在客户端的。一个浏览器能创建的Cookie数量最多为30个，并且每个不能超过4KB，每个WEB站点能设置的Cookie总数不能超过20个。&nbsp;</p><p>　　关于Cookie的话题，就说到这儿了。&nbsp;</p><p>　　（由于Cookie最初由Netscape定义的，所以附上Netscape公司关于Cookie的官方原始定义的网址：&nbsp;</p><p>　　_spec.html\" target=_blank&gt;http://www.netscape.com/newsref/std/cookie_spec.html</p>\n','2010-03-17 09:31:00','2010-03-17 09:31:00',NULL,NULL,'publish',NULL,'PHP中Cookie及其使用','/post/2012/7/14/1344938611986.html',1,0),(376,0,'open','<p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\">&nbsp;sql2000备份的数据库还原到sql2005后，选择&ldquo;数据库关系图&rdquo;提示：此数据库没有有效所有者，因此无法安装数据库关系图支持对象。若要继续，请首先使用&ldquo;数据库属性&rdquo;对话框的&ldquo;文件&rdquo;页或&nbsp; ALTER&nbsp; AUTHORIZATION&nbsp; 语句将数据库所有者设置为有效登录名，然后再添加数据库关系图支持对象。&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />解决方法如下：&nbsp;<br /><span class=\"Title\" style=\"line-height: 21px;\"><span style=\"font-size: x-small;\">1、设置兼容级别为90（2005为90）</span>&nbsp;&nbsp;<br /></span>USE&nbsp; [master]&nbsp;&nbsp;<br />GO&nbsp;&nbsp;<br />EXEC&nbsp; dbo.sp_dbcmptlevel&nbsp; @dbname=\'数据库名\',&nbsp; @new_cmptlevel=90&nbsp;&nbsp;<br />GO&nbsp; &nbsp;</p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\">或是选责你还原的数据库，点右键，选属性-&gt;选项-&gt;兼容级别，选择sqlserver2005(90) 然后确定，</p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这时,你在该数据库下展开&ldquo;数据库关系图&rdquo;节点时会有个提示，\"此数据库缺少一个或多个使用数据库关系图所需的支持对象，是否创建\"，选择&ldquo;是&rdquo;即可。</p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\"><span class=\"Title\" style=\"line-height: 21px;\"><span style=\"font-size: x-small;\">2、通过以上的方法操作，如果问题依然存在的话，按下列方法继续</span></span></p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\">选择你的数据库，然后选择\"安全性\"-&gt;\"用户\",选择dbo,打开属性页，如登录名为空的话，新建查询，然后</p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\">use [你的数据库名]<br />EXEC&nbsp;&nbsp; sp_changedbowner&nbsp;&nbsp; \'sa\'&nbsp;</p><p style=\"margin-top: 1em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;\">执行成功后，你再选择\"数据库关系图\"节点，时提示 &ldquo;此数据库缺少一个或多个使用数据库关系图所需的支持对象，是否创建\"，选择&ldquo;是&rdquo;即可。 就可以看到原先建的关系图了。</p>\n','2010-03-12 15:21:00','2010-03-12 15:21:00',NULL,NULL,'publish',NULL,'sql2000备份的数据库还原到sql2005后，选择“数据库关系图”提示：此数据库没有有效所有者，因此无法安装数据库关系图支持对象\"的解决方法','/post/2012/7/14/1344938612050.html',1,0),(377,0,'open','<p><strong>Demo。</strong></p>  <p>Demo页面：主页面 <a href=\"http://ued.koubei.com/wp-content/iframe_a.html\">iframe_a.html</a> ，被包含页面 <a href=\"http://ued.koubei.com/wp-content/iframe_b.html\">iframe_b.htm</a> 和 <a href=\"http://ued.koubei.com/wp-content/iframe_c.html\">iframe_c.html</a></p>  <p>下面开始讲：</p>  <p>通过Google搜索iframe 自适应高度，结果5W多条，搜索iframe 高度自适应，结果2W多条。    <br />我翻了前面的几十条，刨去大量的转载，有那么三五篇是原创的。而这几篇原创里面，基本上只谈到如何自适应静的东西，就是没有考虑到JS操作DOM之后，如何做动态同步的问题。另外，在兼容性方面，也研究的不彻底。</p>  <p>这篇文章，希望在这两个方面再做一些深入。</p>  <p>可能有人还没接触到这个问题过，先说明一下，什么是自适应高度吧。所谓iframe自适应高度，就是，基于界面美观和交互的考虑，隐藏了iframe的border和scrollbar，让人看不出它是个iframe。如果iframe始终调用同一个固定高度的页面，我们直接写死iframe高度就可以了。而如果iframe要切换页面，或者被包含页面要做DOM动态操作，这时候，就需要程序去同步iframe高度和被包含页的实际高度了。</p>  <p>顺便说下，iframe在迫不得已的时候才去用，它会给前端开发带来太多的麻烦。</p>  <p>传统做法大致有两个：    <br />方法一，在每个被包含页在本身内容加载完毕之后，执行JS取得本页面的高度，然后去同步父页面的iframe高度。     <br />方法二，在主页面iframe的onload事件中执行JS，去取得被包含页的高度内容，然后去同步高度。     <br />在代码维护角度考虑，方法二是优于方法一的，因为方法一，每个被包含页都要去引入一段相同的代码来做这个事情，创建了好多副本。</p>  <p>两个方法都只处理了静的东西，就是只在内容加载的时候执行，如果JS去操作DOM引起的高度变化，都不太方便。</p>  <p>如果在主窗口做一个Interval，不停的来获取被包含页的高度，然后做同步，是不是即方便，又解决了JS操作DOM的问题了呢？答案是肯定的。</p>  <p>Demo页面：主页面 <a href=\"http://ued.koubei.com/wp-content/iframe_a.html\">iframe_a.html</a> ，被包含页面 <a href=\"http://ued.koubei.com/wp-content/iframe_b.html\">iframe_b.htm</a> 和 <a href=\"http://ued.koubei.com/wp-content/iframe_c.html\">iframe_c.html</a></p>  <p>主页面代码示例：</p>  <div>   <pre>&lt;iframe id=&quot;<span style=\"color: #8b0000\">frame_content</span>&quot; src=&quot;<span style=\"color: #8b0000\">iframe_b.html</span>&quot; scrolling=&quot;<span style=\"color: #8b0000\">no</span>&quot; frameborder=&quot;<span style=\"color: #8b0000\">0</span>&quot;&gt;&lt;/iframe&gt;&lt;script type=&quot;<span style=\"color: #8b0000\">text/javascript</span>&quot;&gt;<span style=\"color: #0000ff\">function</span> reinitIframe(){<span style=\"color: #0000ff\">var</span> iframe = document.getElementById(&quot;<span style=\"color: #8b0000\">frame_content</span>&quot;);<span style=\"color: #0000ff\">try</span>{iframe.height =  iframe.contentWindow.document.documentElement.scrollHeight;}<span style=\"color: #0000ff\">catch</span> (ex){}}window.setInterval(&quot;<span style=\"color: #8b0000\">reinitIframe()</span>&quot;, 200);&lt;/script&gt;</pre></div><br /><p></p><p>一直执行，效率会不会有问题？   <br />我做了测试，同时开5个窗口（IE6、IE7、FF、Opera、Safari）执行这个代码，不会对CPU有什么影响，甚至调整到2ms，也没影响（基本维持在0%占用率）。</p><p>下面谈谈各浏览器的兼容性问题，如何获取到正确的高度，主要是对body.scrollHeight和documentElement.scrollHeight两个值得比较。注意本文用的是这个doctype，不同的doctype应该不会影响结果，但是假如你的页面没有申明doctype，那还是先去加一个吧。</p><div>  <pre>&lt;!DOCTYPE HTML PUBLIC &quot;<span style=\"color: #8b0000\">-//W3C//DTD HTML 4.01//EN</span>&quot; &quot;<span style=\"color: #8b0000\">http://www.w3.org/TR/html4/strict.dtd</span>&quot;&gt;</pre></div><br /><p></p><p>在主页面追加以下测试代码，以输出这两个值，代码示例：</p><div>  <pre><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">div</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">button</span> <span style=\"color: #ff0000\">onclick</span>=<span style=\"color: #0000ff\">&quot;checkHeight()&quot;</span><span style=\"color: #0000ff\">&gt;</span>Check Height<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">button</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">div</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">script</span> <span style=\"color: #ff0000\">type</span>=<span style=\"color: #0000ff\">&quot;text/javascript&quot;</span><span style=\"color: #0000ff\">&gt;</span>function checkHeight() {var iframe = document.getElementById(&quot;frame_content&quot;);var bHeight = iframe.contentWindow.document.body.scrollHeight;var dHeight = iframe.contentWindow.document.documentElement.scrollHeight;alert(&quot;bHeight:&quot; + bHeight + &quot;, dHeight:&quot; + dHeight);}<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">script</span><span style=\"color: #0000ff\">&gt;</span></pre></div><br /><p></p><p>被加载页面，可以切换一个绝对定位的层，来使页面高度动态改变。如果层展开，则会撑高页面高度。代码示例：</p><div>  <pre>&lt;div&gt;&lt;button onclick=&quot;<span style=\"color: #8b0000\">toggleOverlay()</span>&quot;&gt;Toggle Overlay&lt;/button&gt;&lt;/div&gt;&lt;div style=&quot;<span style=\"color: #8b0000\">height:160px;position:relative</span>&quot;&gt;&lt;div id=&quot;<span style=\"color: #8b0000\">overlay</span>&quot; style=&quot;<span style=\"color: #8b0000\">position:absolute;width:280px;height:280px;display:none;</span>&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type=&quot;<span style=\"color: #8b0000\">text/javascript</span>&quot;&gt;<span style=\"color: #0000ff\">function</span> toggleOverlay() {<span style=\"color: #0000ff\">var</span> overlay = <span style=\"color: #0000ff\">document</span>.getElementById(\'overlay\');overlay.style.display = (overlay.style.display == \'none\') ? \'block\' : \'none\';}&lt;/script&gt;</pre></div><br /><p></p><p>下面列出以上代码在各浏览器的测试值：   <br />（bHeight = body.scrollHeight, dHeight = documentElement.scrollHeight, 红色 = 错误值, 绿色 = 正确值）</p><p>&#160;</p><p>&#160;</p><p>暂且无视Opera比别人少3像素的问题…可以看出，如果没有绝对定位的东西，两个值是相等的，取哪个都无所谓。  <br />但是如果有，那么各个浏览器的表现不太相同，单取哪个值都不对。但可以找到了一条规律，那就是取两个值得最大值可以兼容各浏览器。所以我们的主页面代码就要改造成这样了：</p><p>&#160;</p><div>  <pre><span style=\"color: #0000ff\">function</span> reinitIframe(){<span style=\"color: #0000ff\">var</span> iframe = <span style=\"color: #0000ff\">document</span>.getElementById(&quot;<span style=\"color: #8b0000\">frame_content</span>&quot;);<span style=\"color: #0000ff\">try</span>{<span style=\"color: #0000ff\">var</span> bHeight = iframe.contentWindow.<span style=\"color: #0000ff\">document</span>.body.scrollHeight;<span style=\"color: #0000ff\">var</span> dHeight = iframe.contentWindow.<span style=\"color: #0000ff\">document</span>.documentElement.scrollHeight;<span style=\"color: #0000ff\">var</span> height = <span style=\"color: #0000ff\">Math</span>.max(bHeight, dHeight);iframe.height =  height;}<span style=\"color: #0000ff\">catch</span> (ex){}}<span style=\"color: #0000ff\">window</span>.<span style=\"color: #0000ff\">setInterval</span>(&quot;<span style=\"color: #8b0000\">reinitIframe()</span>&quot;, 200);</pre></div><br /><p></p><p>这样子，基本解决了兼容性问题。顺便说下，不光绝对定位的层会影响到值，float也会导致两个值的差异。</p><p>如果你演示Demo后，会发现，除了IE，其他浏览器中，当层展开后再隐藏，取到的高度值还是维持在展开的高度303，而非隐藏回去的真正值184，就是说长高了之后缩不回去了。这个现象在不同被包含页面之间做切换也会发生，当从高的页面切换到矮页面的时候，取到的高度还是那个高的值。  <br />可以归纳为，当iframe窗体高度高于文档实际高度的时候，高度取的是窗体高度，而当窗体高度低于实际文档高度时，取的是文档实际高度。因此，要想办法在同步高度之前把高度设置到一个比实际文档低的值。所以，在iframe的添加 onload=”this.height=100″，让页面加载的时候先缩到足够矮，然后再同步到一样的高度。  <br />这个值，在实际应用中决定，足够矮但又不能太矮，否则在FF等浏览器里会有很明显的闪烁。DOM操作的时候主页面无法监听到，只能DOM操作完了之后把高度变小了。  <br />在我的一个实际项目中，在成本和收益之间权衡，我并没有做这个事情，因为每个DOM函数中都要插入这个代码，代价太高，其实层缩回去不缩掉也不是那么致命。包括Demo里，也没有去做这个事情。如果读者有更好的方法，请告诉我。</p><p>这是最终的主页面的代码：</p><p>&#160;</p><div>  <pre>&lt;iframe id=&quot;<span style=\"color: #8b0000\">frame_content</span>&quot; src=&quot;<span style=\"color: #8b0000\">iframe_b.html</span>&quot; scrolling=&quot;<span style=\"color: #8b0000\">no</span>&quot; frameborder=&quot;<span style=\"color: #8b0000\">0</span>&quot; onload=&quot;<span style=\"color: #8b0000\">this.height=100</span>&quot;&gt;&lt;/iframe&gt;&lt;script type=&quot;<span style=\"color: #8b0000\">text/javascript</span>&quot;&gt;<span style=\"color: #0000ff\">function</span> reinitIframe(){<span style=\"color: #0000ff\">var</span> iframe = <span style=\"color: #0000ff\">document</span>.getElementById(&quot;<span style=\"color: #8b0000\">frame_content</span>&quot;);<span style=\"color: #0000ff\">try</span>{<span style=\"color: #0000ff\">var</span> bHeight = iframe.contentWindow.<span style=\"color: #0000ff\">document</span>.body.scrollHeight;<span style=\"color: #0000ff\">var</span> dHeight = iframe.contentWindow.<span style=\"color: #0000ff\">document</span>.documentElement.scrollHeight;<span style=\"color: #0000ff\">var</span> height = <span style=\"color: #0000ff\">Math</span>.max(bHeight, dHeight);iframe.height =  height;}<span style=\"color: #0000ff\">catch</span> (ex){}}<span style=\"color: #0000ff\">window</span>.<span style=\"color: #0000ff\">setInterval</span>(&quot;<span style=\"color: #8b0000\">reinitIframe()</span>&quot;, 200);&lt;/script&gt;</pre></div><br /><p></p><p>附Demo页面： 主页面 <a href=\"http://ued.koubei.com/wp-content/iframe_a.html\">iframe_a.html</a> ，被包含页面 <a href=\"http://ued.koubei.com/wp-content/iframe_b.html\">iframe_b.htm</a> 和 <a href=\"http://ued.koubei.com/wp-content/iframe_c.html\">iframe_c.html</a></p><p>&#160;</p><p>&#160;</p><p><strong><font size=\"5\"><em>我使用的方法:</em></font></strong></p><div>  <pre>&lt;script language=&quot;<span style=\"color: #8b0000\">javascript</span>&quot;&gt; 			<span style=\"color: #008000\">//输入你希望根据页面高度自动调整高度的iframe的名称的列表 </span>			<span style=\"color: #008000\">//用逗号把每个iframe的ID分隔. 例如: [&quot;myframe1&quot;, &quot;myframe2&quot;]，可以只有一个窗体，则不用逗号。 </span>			<span style=\"color: #008000\">//定义iframe的ID </span>			<span style=\"color: #0000ff\">var</span> iframeids=[&quot;<span style=\"color: #8b0000\">frmMain</span>&quot;];			<span style=\"color: #008000\">//如果用户的浏览器不支持iframe是否将iframe隐藏 yes 表示隐藏，no表示不隐藏 </span>			<span style=\"color: #0000ff\">var</span> iframehide=&quot;<span style=\"color: #8b0000\">yes</span>&quot;; 			<span style=\"color: #0000ff\">function</span> dyniframesize() 			{ 				<span style=\"color: #0000ff\">var</span> dyniframe=<span style=\"color: #0000ff\">new</span> <span style=\"color: #0000ff\">Array</span>() 				<span style=\"color: #0000ff\">for</span> (i=0; i&lt;iframeids.<span style=\"color: #0000ff\">length</span>; i++) 				{ 					<span style=\"color: #0000ff\">if</span> (<span style=\"color: #0000ff\">document</span>.getElementById) 					{ 						<span style=\"color: #008000\">//自动调整iframe高度 </span>						dyniframe[dyniframe.<span style=\"color: #0000ff\">length</span>] = <span style=\"color: #0000ff\">document</span>.getElementById(iframeids[i]); 						<span style=\"color: #0000ff\">if</span> (dyniframe[i] &amp;&amp; !<span style=\"color: #0000ff\">window</span>.opera) 						{ 							dyniframe[i].style.display=&quot;<span style=\"color: #8b0000\">block</span>&quot;; 							<span style=\"color: #0000ff\">if</span> (dyniframe[i].contentDocument &amp;&amp; dyniframe[i].contentDocument.body.offsetHeight) <span style=\"color: #008000\">//如果用户的浏览器是NetScape </span>							dyniframe[i].height = dyniframe[i].contentDocument.body.offsetHeight; 							<span style=\"color: #0000ff\">else</span> <span style=\"color: #0000ff\">if</span> (dyniframe[i].Document &amp;&amp; dyniframe[i].Document.body.scrollHeight) <span style=\"color: #008000\">//如果用户的浏览器是IE </span>							dyniframe[i].height = dyniframe[i].Document.body.scrollHeight; 						} 					} 					<span style=\"color: #008000\">//根据设定的参数来处理不支持iframe的浏览器的显示问题 </span>					<span style=\"color: #0000ff\">if</span> ((<span style=\"color: #0000ff\">document</span>.all || <span style=\"color: #0000ff\">document</span>.getElementById) &amp;&amp; iframehide==&quot;<span style=\"color: #8b0000\">no</span>&quot;) 					{ 						<span style=\"color: #0000ff\">var</span> tempobj=<span style=\"color: #0000ff\">document</span>.all? <span style=\"color: #0000ff\">document</span>.all[iframeids[i]] : <span style=\"color: #0000ff\">document</span>.getElementById(iframeids[i]); 						tempobj.style.display=&quot;<span style=\"color: #8b0000\">block</span>&quot;; 					} 				} 			} 			<span style=\"color: #0000ff\">if</span> (<span style=\"color: #0000ff\">window</span>.addEventListener)			<span style=\"color: #0000ff\">window</span>.addEventListener(&quot;<span style=\"color: #8b0000\">load</span>&quot;, dyniframesize, <span style=\"color: #0000ff\">false</span>); 			<span style=\"color: #0000ff\">else</span> <span style=\"color: #0000ff\">if</span> (<span style=\"color: #0000ff\">window</span>.attachEvent) 			<span style=\"color: #0000ff\">window</span>.attachEvent(&quot;<span style=\"color: #8b0000\">onload</span>&quot;, dyniframesize); 			<span style=\"color: #0000ff\">else</span> 			<span style=\"color: #0000ff\">window</span>.onload=dyniframesize; 		&lt;/script&gt;</pre></div><br /><p></p><strong><em><font size=\"5\"></font></em></strong>\n','2010-02-10 17:07:00','2010-02-10 17:07:00',NULL,NULL,'publish',NULL,'iframe自适应高度','/post/2012/7/14/1344938612110.html',1,0),(378,0,'open','<p>原文地址<a href=\"http://hi.baidu.com/huqiwen/blog/item/7d36b15113fddd1e377abe7d.html\">http://hi.baidu.com/huqiwen/blog/item/7d36b15113fddd1e377abe7d.html</a></p>  <p>由于FckEditor for java 2.4相对于2.3而言做了许多改变，这些改变使得我们的Fckeditor配置起来更方便。例如：</p>  <p>基础包名从：com.fredck.FCKeditor 改为 <tt>net.fckeditor</tt>.</p>  <p>文件上传SimpleUploaderServle整合到了ConnectorServlet里面，WEB,XML的配置就简单多了，下面通过一个实例说明配置详细步骤</p>  <p>1、首先登陆<a href=\"http://www.fckeditor.net/download\">www.fckeditor.net/download</a>下载FCKeditor的最新版本，需要下载2个压缩包，一个是基本应用。另一个是在为在jsp下所准备的配置。</p>  <p>最新版本为：FckEditor2.6.3和FckEditor for java 2.4</p>  <p>FCKeditor 2.6.3下载地址：sourceforge.net/project/downloading.php&#160;&#160;&#160;&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160; 具体下载地址：<a href=\"http://easynews.dl.sourceforge.net/sourceforge/fckeditor/FCKeditor_2.6.3.zip\">http://easynews.dl.sourceforge.net/sourceforge/fckeditor/FCKeditor_2.6.3.zip</a>    <br />&#160;&#160;&#160;&#160;&#160;&#160; FCKeditor for Java 下载地址：sourceforge.net/project/downloading.php    <br />&#160;&#160;&#160;&#160; 具体下载地址：<a href=\"http://switch.dl.sourceforge.net/sourceforge/fckeditor/fckeditor-java-2.4\">http://switch.dl.sourceforge.net/sourceforge/fckeditor/fckeditor-java-2.4-bin.zip</a>（发行版，如果需要源码或者demo包请另行下载）</p>  <p>请下载demo包，否则会出现留言中那位朋友的错误！</p>  <p>下载之后分别为：FCKeditor_2.6.3.zip 和 fckeditor-java-2.4-bin.zip（fckeditor-java-demo-2.4.war）将它们分别解压。</p>  <p>2、首先在MyEclipse(或者其他的IDE)下建立一个新项目例如：</p>  <p>现在将解压后的FCKeditor_2.6.3.zip 里面的fckeditor文件夹拷贝到当前的项目的webroot文件夹下</p>  <p>3、配置web.xml。配置文件如下，这就是全部了，其他的不需要再配置，由于SimpleUploaderServle整合到了ConnectorServlet里面，所以文件上传等都不需要再配置。</p>  <div>   <pre>&lt;servlet&gt;   &lt;servlet-name&gt;Connector&lt;/servlet-name&gt;   &lt;servlet-<span style=\"color: #0000ff\">class</span>&gt;    net.fckeditor.connector.ConnectorServlet   &lt;/servlet-<span style=\"color: #0000ff\">class</span>&gt;   &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt;   &lt;servlet-name&gt;Connector&lt;/servlet-name&gt;   &lt;url-pattern&gt;    /fckeditor/editor/filemanager/connectors<span style=\"color: #008000\">/*   &lt;/url-pattern&gt;&lt;/servlet-mapping&gt;</span></pre></div><br /><p>4、在src目录下面建立fckeditor.properties资源文件，在里面写入这么一行“connector.userActionImpl=net.fckeditor.requestcycle.impl.UserActionImpl”</p><p>5、下面写测试页面：</p><p>index.jsp</p><div>  <pre><span style=\"color: #0000ff\">&lt;</span>%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%<span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span>%@ taglib uri=&quot;http://java.fckeditor.net&quot; prefix=&quot;FCK&quot; %<span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">html</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">head</span><span style=\"color: #0000ff\">&gt;</span>        <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">title</span><span style=\"color: #0000ff\">&gt;</span>FckEditor测试<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">title</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">head</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">body</span> <span style=\"color: #ff0000\">style</span>=<span style=\"color: #0000ff\">&quot;text-align: center;&quot;</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">div</span> <span style=\"color: #ff0000\">style</span>=<span style=\"color: #0000ff\">&quot;text-align: center;width: 600pt&quot;</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">h2</span><span style=\"color: #0000ff\">&gt;</span>FckEditor测试<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">h2</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">hr</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">form</span> <span style=\"color: #ff0000\">action</span>=<span style=\"color: #0000ff\">&quot;ShowData.jsp&quot;</span> <span style=\"color: #ff0000\">method</span>=<span style=\"color: #0000ff\">&quot;post&quot;</span><span style=\"color: #0000ff\">&gt;</span>     <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #c71585\">FCK</span>:<span style=\"color: #800000\">editor</span> <span style=\"color: #ff0000\">instanceName</span>=<span style=\"color: #0000ff\">&quot;test&quot;</span> <span style=\"color: #ff0000\">height</span>=<span style=\"color: #0000ff\">&quot;400pt&quot;</span><span style=\"color: #0000ff\">&gt;</span>   <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #c71585\">jsp</span>:<span style=\"color: #800000\">attribute</span> <span style=\"color: #ff0000\">name</span>=<span style=\"color: #0000ff\">&quot;value&quot;</span><span style=\"color: #0000ff\">&gt;</span> 这里是<span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">a</span> <span style=\"color: #ff0000\">href</span>=<span style=\"color: #0000ff\">&quot;http://hi.baidu.com/huqiwen&quot;</span><span style=\"color: #0000ff\">&gt;</span>数据测试<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">a</span><span style=\"color: #0000ff\">&gt;</span>   <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #c71585\">jsp</span>:<span style=\"color: #800000\">attribute</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #c71585\">FCK</span>:<span style=\"color: #800000\">editor</span><span style=\"color: #0000ff\">&gt;</span>         <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">input</span> <span style=\"color: #ff0000\">type</span>=<span style=\"color: #0000ff\">&quot;submit&quot;</span> <span style=\"color: #ff0000\">value</span>=<span style=\"color: #0000ff\">&quot;提交&quot;</span><span style=\"color: #0000ff\">/&gt;</span>   <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">input</span> <span style=\"color: #ff0000\">type</span>=<span style=\"color: #0000ff\">&quot;reset&quot;</span> <span style=\"color: #ff0000\">value</span>=<span style=\"color: #0000ff\">&quot;重置&quot;</span><span style=\"color: #0000ff\">/&gt;</span>   <span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">form</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">div</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">html</span><span style=\"color: #0000ff\">&gt;</span></pre></div><br /><p>显示数据的页面：ShowData.jsp</p><div>  <pre><span style=\"color: #0000ff\">&lt;</span>%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;pageEncoding=&quot;UTF-8&quot;%<span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">head</span><span style=\"color: #0000ff\">&gt;</span>   <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">title</span><span style=\"color: #0000ff\">&gt;</span>FCKeditor - 显示数据<span style=\"color: #0000ff\">&lt;/</span>< span style=\"color: #800000\">title<span style=\"color: #0000ff\">&gt;</span>   <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">meta</span> <span style=\"color: #ff0000\">http</span>-<span style=\"color: #ff0000\">equiv</span>=<span style=\"color: #0000ff\">&quot;Content-Type&quot;</span> <span style=\"color: #ff0000\">content</span>=<span style=\"color: #0000ff\">&quot;text/html; charset=utf-8&quot;</span> <span style=\"color: #0000ff\">/&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">head</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span>%   request.setCharacterEncoding(&quot;UTF-8&quot;);   String data = request.getParameter(&quot;test&quot;);%<span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">&gt;</span>   <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">h1</span><span style=\"color: #0000ff\">&gt;</span>FCKeditor - 显示数据<span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">h1</span><span style=\"color: #0000ff\">&gt;</span>     <span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">hr</span><span style=\"color: #0000ff\">/&gt;</span><span style=\"color: #0000ff\">&lt;</span><span style=\"color: #800000\">br</span> <span style=\"color: #0000ff\">/&gt;</span>   <span style=\"color: #0000ff\">&lt;</span>%=data%<span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">body</span><span style=\"color: #0000ff\">&gt;</span><span style=\"color: #0000ff\">&lt;/</span><span style=\"color: #800000\">html</span><span style=\"color: #0000ff\">&gt;</span></pre></div><br /><p>6、结果截图</p><p>index.jsp</p><p><img border=\"0\" alt=\"\" src=\"http://hiphotos.baidu.com/huqiwen/pic/item/171ec995165ef253d1135e07.jpg\" /></p><p>ShowData.jsp</p><p><img border=\"0\" alt=\"\" src=\"http://hiphotos.baidu.com/huqiwen/pic/item/19e77acb151ead07be09e6fa.jpg\" /></p><p>6、给FckEditor瘦身</p><p>&#160;&#160;&#160;&#160;&#160; 删除fckeditor目录下面所有以“_”开头的文件或者文件夹，像&quot;_samples&quot;、&quot;_documentation.html“等</p><p>&#160;&#160;&#160;&#160; 删除fckeditor目录下面除了，fckconfig.js&#160;&#160; fckpackage.xml fckstyles.xml&#160;&#160; fcktemplates.xml外的所有文件，当然要保留editor文件夹</p><p>&#160;&#160;&#160;&#160; 删除fckeditor/editor/lang目录下面除了en.js、 zh-cn.js外的所有文件</p><p>&#160;&#160;&#160;&#160; 删除fckeditor\\editor\\filemanager目录下面的connectors文件夹</p><p>&#160;&#160;&#160;&#160; 删除editor\\skins目录下面除了default下面的文件夹，这个里面是皮肤，共有三种，可以在fckconfig.js里面设置。</p><p>PS：demo下载：<a href=\"http://www.namipan.com/d/7218d2c0bf3e33e8aedf972b41d5d09f3efab0d8f53b0900\">http://www.namipan.com/d/7218d2c0bf3e33e8aedf972b41d5d09f3efab0d8f53b0900</a></p><p>再PS:有关中文乱码问题请参考：<a href=\"http://hi.baidu.com/huqiwen/blog/item/c709aa18fa187a0135fa4103.html\">http://hi.baidu.com/huqiwen/blog/item/c709aa18fa187a0135fa4103.html</a></p>\n','2010-02-10 15:09:00','2010-02-10 15:09:00',NULL,NULL,'publish',NULL,'fckeditor配置','/post/2012/7/14/1344938612170.html',1,1),(379,0,'open','<p><font color=\"#008080\" size=\"2\">1.独自在街道上游荡，看着街道上熙熙攘攘的人群，那些欢笑着的脸孔，那些都是不属于自己的， <br /><br />自己只是一个过客，什么也带不走，什么也留不下 <br />再怎样的热闹，再怎样的繁华，却越发衬托自己的形单影只 <br /><br />在人群中，默然抬起头，却找不到一张熟悉的面孔…… <br /><br />2.一个人蜷缩在床上，无法入睡，脑子里想着莫名其妙的问题，黑暗犹如一张巨大的蛛网把自己包裹在内，厚厚的棉被里，感觉好冷 <br /><br />从枕头下掏出手机，却发现不知道该打给谁，于是，无奈的又塞回枕头中 <br />把头缩进被子里，轻轻的抱住自己的膝盖，像一个孩子 <br /><br />把自己抱紧一点，那么，就不会冷了吧…… <br />3.恨一些人，一些事，甚至恨着这个世界 <br />总是在想，为什么是自己 <br /><br />为什么承受一切痛苦的都必须是自己 <br />只想做一个普普通通的小孩子，开心过完自己的童年，读书，找工作，恋爱…… <br /><br />可是，这么普通的一切，却如此的难…… <br />感觉背后似乎有一双眼睛，带着讽刺的笑意看着自己 <br />然后，摇摇头，走开了…… <br /><br />4.面对着电脑发呆，身边的咖啡已经渐渐发凉，耳机里绵延出悠扬的音乐声，此时，已是凌晨 <br /><br />也不知道是什么时候变成这样的，像是一个穴居动物一般，躲在自己的窝里不想出来 <br /><br />什么时候，开始害怕外面的阳光，讨厌出门，面对着门外的那些人，觉得他们甚至没有自己那台冰冷的电脑亲切 <br />有时，虚拟世界，确实要比现实世界美丽…… <br /><br />5.靠在窗边，透过蒙蒙细雨，静静的看着这个陌生的城市 <br />不知道要在这里停留多久，不知道自己会遇见什么样的人，不也不知道自己会留下怎样的回忆…… <br /><br />点一支烟，烟雾缭绕中，静静的咪上眼，享受这一刻的寂静 <br />过去的一切就让他这样过去吧，从今开始，要学会认识陌生的人，做陌生的事，过陌生的生活…… <br /><br />独在异乡为异客…… <br />6.习惯一个人学校的走道上手插口袋漫步徜徉，没有目标，没有终点，只是想这样一步一步的走下去，走到自己筋疲力尽为止 <br /><br />学会在这种只属于一个人的时间里，独自思考着解开一些问题，无论自己的结论是对是错，都已经不重要了…… <br />看着那热闹的操场，嘴角，轻轻上扬着一丝微笑 <br /><br />夕阳下，影子拉的好长…… <br />7.在梦里看到她/他的离开，哭泣着从梦里醒来 <br />看着空荡的房间，静静的走到洗脸台前 <br /><br />看着镜子里，自己苍白而憔悴的脸 <br />一瞬间泪流满面…… <br /><br />8.清晨起床，家中空无一人，给自己泡了一杯牛奶，呵着暖暖的热气坐在阳台上的沙发里，随手翻开着旁边厚厚的书籍 <br />冬日的阳光懒散而温暖的照在身上 <br /><br />周围寂静而安详 <br />不知不觉中，再次睡着，轻声打着呼噜，如同一只懒猫 <br />9.一直沉醉在回忆里，不愿意醒来 <br /><br />想起以前和朋友在一起的场面，便会微微发笑 <br />想起以前的一些窘事，便会微微脸红 <br />想起以前的一些无奈，便会轻声长叹 <br /><br />想起了她，便会死死的咬住下唇 <br />害怕……自己会哭出声来…… <br />10.在酒吧里点一支啤酒，听着震耳欲聋的音乐，看着舞池里扭动着的人群，漫无表情 <br /><br />冰冷的啤酒从食道一直凉到胃里，轻声的**…… <br />然后，随着眩目的灯光，脚轻轻的打着拍子 <br />巴台上，自己的背影像是一尊石像…… <br /><br />11.学会不再哭泣，学会不再透露自己的感情，他们说自己冷血，自己却只是在那里微笑 <br />知道，没有必要试图让别人了解自己 <br /><br />知我者为我分忧，不知我者谓我何求 <br />眼泪解决不了任何问题，只会带来吵闹 <br />很多的事情，我们可以感动，却不能流泪 <br /><br />因为一旦放任自己的感情，怕会让自己泣不成声 <br />12.参加一场聚会，喝很多酒，却一直没有醉倒 <br />咪着一双眼睛看这个世界，光怪而陆离 <br /><br />告诉自己，喜欢这种感觉 <br />独自去洗脸台，泼了点冷水在脸上，然后看着镜子一个人傻笑 <br />醉后……世界好美…… <br /><br />13.默默的喜欢上她/他，却不敢玷污这份感情，一直将它默默珍藏，无论她/他多么的骄横，无论她/他多么的不讲道理，无论她/他让自己气上多少次，都一直在让着她/他 <br /><br />明白自己现在给不了她/他什么，明白现实比爱情残酷，明白，等自己能够给她/他想要的东西时，才配去爱她/他…… <br /><br />最后，当自己鼓起勇气去找她/他，去寻觅每一个她/他可能在的角落，想跟她/他说明白一切时，却发现她/他的身边，已经有了一个能够让她/他幸福的人 <br /><br />不爱她/他的理由有很多，爱她/他的理由……已经不存在了……</font></p><br /><br /><div class=\"zemanta-pixie\"><img class=\"zemanta-pixie-img\" alt=\"\" src=\"http://img.zemanta.com/pixy.gif?x-id=d7c8691d-7048-834b-ae8a-dfbf2ff6b439\" /></div>\n','2010-02-02 17:40:00','2010-02-02 17:40:00',NULL,NULL,'publish',NULL,'十三种寂寞 你有过吗?『最无奈的是第13种』','/post/2012/7/14/1344938612230.html',1,2),(380,0,'open','<div class=\"cnblogs_code\"><pre><img id=\"Code_Closed_Image_21682\" onclick=\"this.style.display=\'none\'; document.getElementById(\'Code_Closed_Text_21682\').style.display=\'none\'; document.getElementById(\'Code_Open_Image_21682\').style.display=\'inline\'; document.getElementById(\'Code_Open_Text_21682\').style.display=\'inline\';\" align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/ContractedBlock.gif\" width=\"11\" height=\"16\"/><img style=\"display: none\" id=\"Code_Open_Image_21682\" onclick=\"this.style.display=\'none\'; document.getElementById(\'Code_Open_Text_21682\').style.display=\'none\'; getElementById(\'Code_Closed_Image_21682\').style.display=\'inline\'; getElementById(\'Code_Closed_Text_21682\').style.display=\'inline\';\" align=\"top\" src=\"http://www.cnblogs.com/Images/OutliningIndicators/ExpandedBlockStart.gif\" width=\"11\" height=\"16\"/><span id=\"Code_Closed_Text_21682\" class=\"cnblogs_code_Collapse\"></span><span style=\"display: none\" id=\"Code_Open_Text_21682\"><span style=\"color: #808080\">/// &lt;summary&gt;</span>        <span style=\"color: #808080\">/// 调整画面布局</span>        <span style=\"color: #808080\">/// &lt;/summary&gt;</span>        <span style=\"color: #808080\">/// &lt;param name=\"videoNum\"&gt;&lt;/param&gt;</span>        <span style=\"color: #808080\">/// &lt;returns&gt;&lt;/returns&gt;</span>        <span style=\"color: #0000ff\">private</span> <span style=\"color: #0000ff\">bool</span> InitializeVideo(<span style=\"color: #0000ff\">int</span> videoNum)        {            <span style=\"color: #008000\">//计算行列</span>            <span style=\"color: #0000ff\">int</span> rowcol;            <span style=\"color: #0000ff\">if</span> (videoNum &lt;= 0 || !<span style=\"color: #0000ff\">int</span>.TryParse(Math.Sqrt(videoNum).ToString(), <span style=\"color: #0000ff\">out</span> rowcol))            {                <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">false</span>;            }            <span style=\"color: #008000\">//计算宽高</span>            <span style=\"color: #0000ff\">int</span> WidthHeight = (<span style=\"color: #0000ff\">int</span>)(MainPanel.Width / rowcol);                        <span style=\"color: #008000\">//重新设置表格</span>            <span style=\"color: #008000\">//MainPanel为TableLayoutPanel控件</span>            MainPanel.Controls.Clear();            MainPanel.RowCount = MainPanel.ColumnCount = rowcol;            MainPanel.CellBorderStyle = TableLayoutPanelCellBorderStyle.Single;            MainPanel.Refresh();            <span style=\"color: #0000ff\">for</span> (<span style=\"color: #0000ff\">int</span> i = 0; i &lt; MainPanel.ColumnStyles.Count; i++)            {                MainPanel.ColumnStyles[i].SizeType = SizeType.Absolute;                MainPanel.ColumnStyles[i].Width = WidthHeight;            }            <span style=\"color: #0000ff\">for</span> (<span style=\"color: #0000ff\">int</span> i = 0; i &lt; MainPanel.RowStyles.Count; i++)            {                MainPanel.RowStyles[i].SizeType = SizeType.Absolute;                MainPanel.RowStyles[i].Height = WidthHeight;            }            <span style=\"color: #008000\">//添加控件</span>            <span style=\"color: #0000ff\">for</span> (<span style=\"color: #0000ff\">int</span> i = 0; i &lt; videoNum; i++)            {                PictureBox pVideo = <span style=\"color: #0000ff\">new</span> PictureBox();                pVideo.Padding = pVideo.Margin = <span style=\"color: #0000ff\">new</span> Padding(0);                pVideo.Name = \"<span style=\"color: #8b0000\">pVideo</span>\" + i.ToString();                pVideo.Width = pVideo.Height = WidthHeight;                pVideo.Dock = DockStyle.Fill;                pVideo.BackgroundImage = Resources.bg;                pVideo.BackgroundImageLayout = ImageLayout.Stretch;                pVideo.Click += <span style=\"color: #0000ff\">new</span> EventHandler(pVideo_Click);                MainPanel.Controls.Add(pVideo, i % rowcol, i / rowcol);            }            <span style=\"color: #0000ff\">return</span> <span style=\"color: #0000ff\">true</span>;        }        <span style=\"color: #808080\">/// &lt;summary&gt;</span>        <span style=\"color: #808080\">/// 点击图像事件</span>        <span style=\"color: #808080\">/// &lt;/summary&gt;</span>        <span style=\"color: #808080\">/// &lt;param name=\"sender\"&gt;&lt;/param&gt;</span>        <span style=\"color: #808080\">/// &lt;param name=\"e\"&gt;&lt;/param&gt;</span>        <span style=\"color: #0000ff\">private</span> <span style=\"color: #0000ff\">void</span> pVideo_Click(<span style=\"color: #0000ff\">object</span> sender, EventArgs e)        {            PictureBox pVideo = (PictureBox)sender;            <span style=\"color: #008000\">//MessageBox.Show(pVideo.Name);</span>            <span style=\"color: #0000ff\">if</span> (MainPanel.GetColumnSpan(pVideo) == 1)            {                <span style=\"color: #008000\">//隐藏其它控件</span>                <span style=\"color: #0000ff\">foreach</span> (Control ctr <span style=\"color: #0000ff\">in</span> MainPanel.Controls)                {                    <span style=\"color: #0000ff\">if</span> (ctr.Name != pVideo.Name)                        ctr.Visible = <span style=\"color: #0000ff\">false</span>;                }                pos = MainPanel.GetPositionFromControl(pVideo);                MainPanel.SetCellPosition(pVideo, <span style=\"color: #0000ff\">new</span> TableLayoutPanelCellPosition(0, 0));                MainPanel.SetRowSpan(pVideo, MainPanel.RowCount);                MainPanel.SetColumnSpan(pVideo, MainPanel.ColumnCount);            }            <span style=\"color: #0000ff\">else</span>            {                <span style=\"color: #008000\">//显示所有控件</span>                <span style=\"color: #0000ff\">foreach</span> (Control ctr <span style=\"color: #0000ff\">in</span> MainPanel.Controls)                {                    ctr.Visible = <span style=\"color: #0000ff\">true</span>;                }                MainPanel.SetCellPosition(pVideo, pos);                MainPanel.SetRowSpan(pVideo, 1);                MainPanel.SetColumnSpan(pVideo, 1);            }        }</span></pre></div><br />\n','2010-02-01 13:46:00','2010-02-01 13:46:00',NULL,NULL,'publish',NULL,'c# TableLayoutPanel控件应用 动态添加控件及事件','/post/2012/7/14/1344938612285.html',1,0),(381,0,'open','<p>&#160;</p>  <p>2009-07-02 15:31   <table border=\"0\" cellpadding=\"0\"><tbody>       <tr>         <td>           <p>因为lucene索引的时候是将String型的信息建立索引的，所以这里必须是将word/pdf/html等文件的内容转化问字符型。             <br />lucene的jar包自己去下载。              <br />首先是建立索引的代码：</p>            <p>public class TextFileIndexer {&#160;&#160;&#160; <br />public static void main(String[] args) throws Exception {&#160;&#160;&#160; <br />/* 指明要索引文件夹的位置,这里是d盘的s文件夹下 */              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; File fileDir = new File(&quot;d:\\\\s&quot;);&#160;&#160;&#160; <br />/* 这里放索引文件的位置 */              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; File indexDir = new File(&quot;d:\\\\index&quot;);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Analyzer luceneAnalyzer = new StandardAnalyzer();&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; IndexWriter indexWriter = new IndexWriter(indexDir, luceneAnalyzer,&#160;&#160;&#160; <br />true);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; File[] textFiles = fileDir.listFiles();&#160;&#160;&#160; <br />long startTime = new Date().getTime();&#160;&#160;&#160; <br />//增加document到索引去              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;File正在被索引<a href=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/lucenewordpdfhtmltxt_97EB/clip_image001_3.gif\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"clip_image001\" border=\"0\" alt=\"clip_image001\" src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/lucenewordpdfhtmltxt_97EB/clip_image001_thumb.gif\" width=\"19\" height=\"24\" /></a>.&quot;);&#160;&#160; <br />/*              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * 注意要变的就是这里，路径和读取文件的方法              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * */              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String path =&quot;d:\\\\s\\\\2.doc&quot;;              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String temp = ReadFile.readWord(path);              <br />//&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String path =&quot;d:\\\\s\\\\index.htm&quot;;              <br />//&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String temp = ReadFile.readHtml(path);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Document document = new Document();&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field FieldPath = new Field(&quot;path&quot;,path,              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field.Store.YES, Field.Index.NO);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field FieldBody = new Field(&quot;body&quot;, temp, Field.Store.YES,&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field.Index.TOKENIZED,&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field.TermVector.WITH_POSITIONS_OFFSETS);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; document.add(FieldPath);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; document.add(FieldBody);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; indexWriter.addDocument(document);&#160;&#160;&#160; <br />//optimize()方法是对索引进行优化              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; indexWriter.optimize();&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; indexWriter.close();&#160;&#160;&#160; <br />//测试一下索引的时间              <br />long endTime = new Date().getTime();&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .println(&quot;这花费了&quot;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; + (endTime - startTime)&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; + &quot; 毫秒来把文档增加到索引里面去!&quot;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; + fileDir.getPath());&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160; }&#160;&#160; <br />}</p>            <p>上面已经注释了要换的地方，我们要做的就是换文件的路径和读取文件的方法。             <br />下面来具体看下读取文件的方法              <br />1.首先来看WORD文档：              <br />我这里用的是poi，相关jar包自己去下载，然后加到工程中（以下所要用的jar包也是，不再重复说）。              <br />来看相关代码：</p>            <p>public static String readWord(String path) {             <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; StringBuffer content = new StringBuffer(&quot;&quot;);// 文档内容              <br />try {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; HWPFDocument doc = new HWPFDocument(new FileInputStream(path));              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Range range = doc.getRange();              <br />int paragraphCount = range.numParagraphs();// 段落              <br />for (int i = 0; i &lt; paragraphCount; i++) {// 遍历段落读取数据              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Paragraph pp = range.getParagraph(i);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; content.append(pp.text());              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (Exception e) {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />return content.toString().trim();              <br />&#160;&#160;&#160;&#160; }</p>            <p>2.PDF文件用的是PDFbox：</p>            <p>public static String readPdf(String path) throws Exception {             <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; StringBuffer content = new StringBuffer(&quot;&quot;);// 文档内容              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FileInputStream fis = new FileInputStream(path);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; PDFParser p = new PDFParser(fis);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; p.parse();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; PDFTextStripper ts = new PDFTextStr\nipper();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; content.append(ts.getText(p.getPDDocument()));              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; fis.close();              <br />return content.toString().trim();              <br />&#160;&#160;&#160;&#160; }</p>            <p>3.html文件：</p>            <p>public static String readHtml(String urlString) {             <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; StringBuffer content = new StringBuffer(&quot;&quot;);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; File file = new File(urlString);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FileInputStream fis = null;              <br />try {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; fis = new FileInputStream(file);              <br />// 读取页面              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; BufferedReader reader = new BufferedReader(new InputStreamReader(              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; fis,&quot;utf-8&quot;));//这里的字符编码要注意，要对上html头文件的一致，否则会出乱码              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String line = null;              <br />while ((line = reader.readLine()) != null) {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; content.append(line + &quot;\\n&quot;);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; reader.close();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (Exception e) {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; e.printStackTrace();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String contentString = content.toString();              <br />return contentString;              <br />&#160;&#160;&#160;&#160; }</p>            <p>4.txt文件：</p>            <p>public static String readTxt(String path) {             <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; StringBuffer content = new StringBuffer(&quot;&quot;);// 文档内容              <br />try {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FileReader reader = new FileReader(path);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; BufferedReader br = new BufferedReader(reader);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String s1 = null;              <br />while ((s1 = br.readLine()) != null) {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; content.append(s1 + &quot;\\r&quot;);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; br.close();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; reader.close();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (IOException e) {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; e.printStackTrace();              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />return content.toString().trim();              <br />&#160;&#160;&#160;&#160; }</p>            <p>接下来数搜索代码：</p>            <p>public class TestQuery {&#160;&#160;&#160; <br />public static void main(String[] args) throws IOException, ParseException {&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Hits hits = null;&#160;&#160;&#160; <br />//搜索内容自己换              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; String queryString = &quot;根据国务院的决定&quot;;&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Query query = null;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; IndexSearcher searcher = new IndexSearcher(&quot;d:\\\\index&quot;); //这里注意索引存放的路径              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Analyzer analyzer = new StandardAnalyzer();&#160;&#160;&#160; <br />try {&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; QueryParser qp = new QueryParser(&quot;body&quot;, analyzer);&#160;&#160;&#160; <br />/**              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; * 建索引的时候我们指定了body建立为内容，我们搜索的时候也是针对body的，所以              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; *&#160;&#160;&#160; QueryParser qp = new QueryParser(&quot;body&quot;, analyzer);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; *&#160;&#160;&#160; 这句和建立索引时候              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field FieldBody = new Field(&quot;body&quot;, temp, Field.Store.YES,&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field.Index.TOKENIZED,&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Field.TermVector.WITH_POSITIONS_OFFSETS);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; *的这句的&quot;body&quot;是对应的。              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; */              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; query = qp.parse(queryString);&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; } catch (ParseException e) {              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;异常&quot;);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }&#160;&#160;&#160; <br />if (searcher != null) {&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; hits = searcher.search(query);&#160;&#160;&#160; <br />if (hits.length() &gt; 0) {&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;找到:&quot; + hits.length() + &quot; 个结果!&quot;);&#160;&#160; <br />for (int i = 0; i &lt; hits.length(); i++) {//输出搜索信息<a href=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/lucenewordpdfhtmltxt_97EB/clip_image001%5B1%5D.gif\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"clip_image001[1]\" border=\"0\" alt=\"clip_image001[1]\" src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/WindowsLiveWriter/lucenewordpdfhtmltxt_97EB/clip_image001%5B1%5D_thumb.gif\" width=\"19\" height=\"24\" /></a>              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Document document = hits.doc(i);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;contents：&quot;+document.get(&quot;body&quot;));              <br />//同样原理这里的document.get(&quot;body&quot;)就是取得建立在索引文件里面的额body的所有内容\n<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; //你若想输出文件路径就用document.get(&quot;path&quot;)就可以了              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; } else{              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; System.out.println(&quot;0个结果!&quot;);              <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }&#160;&#160; <br />&#160;&#160;&#160;&#160; }</p>         </td>       </tr>     </tbody></table></p>\n','2010-02-01 10:48:00','2010-02-01 10:48:00',NULL,NULL,'publish',NULL,'lucene索引word/pdf/html/txt文件及检索(搜索引擎)','/post/2012/7/14/1344938612340.html',1,0),(382,0,'open','<p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">2006 </span><span style=\"font-family:宋体\">年</span><span style=\"font-family:Verdana\"> 7 </span><span style=\"font-family:宋体\">月</span><span style=\"font-family:Verdana\"> 13 </span><span style=\"font-family:宋体\">日</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">是一个基于</span><span style=\"font-family:Verdana\"> Java </span><span style=\"font-family:宋体\">的全文检索工具包，你可以利用它来为你的应用程序加入索引和检索功能。</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">目前是著名的</span><span style=\"font-family:Verdana\"> Apache Jakarta </span><span style=\"font-family:宋体\">家族中的一个开源项目，下面我们即将学习</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的索引机制以及它的索引文件的结构。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">在这篇文章中，我们首先演示如何使用</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">来索引文档，接着讨论如何提高索引的性能。最后我们来分析</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的索引文件结构。需要记住的是，</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">不是一个完整的应用程序，而是一个信息检索包，它方便你为你的应用程序添加索引和搜索功能。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black\"><span style=\"font-family:宋体; font-size:13pt\"><strong><a name=\"N1004B\"/>架构概览</strong></span><span style=\"font-family:Verdana; font-size:9pt\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">图一显示了</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的索引机制的架构。</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">使用各种解析器对各种不同类型的文档进行解析。比如对于</span><span style=\"font-family:Verdana\"> HTML </span><span style=\"font-family:宋体\">文档，</span><span style=\"font-family:Verdana\">HTML </span><span style=\"font-family:宋体\">解析器会做一些预处理的工作，比如过滤文档中的</span><span style=\"font-family:Verdana\"> HTML </span><span style=\"font-family:宋体\">标签等等。</span><span style=\"font-family:Verdana\">HTML </span><span style=\"font-family:宋体\">解析器的输出的是文本内容，接着</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的分词器</span><span style=\"font-family:Verdana\">(Analyzer)</span><span style=\"font-family:宋体\">从文本内容中提取出索引项以及相关信息，比如索引项的出现频率。接着</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的分词器把这些信息写到索引文件中。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N10056\"/>图一：</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">索引机制架构</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene1.jpg\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene2.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene3.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p style=\"text-align: right\"><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene4.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene5.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:13pt\"><strong><span style=\"font-family:宋体\"><a name=\"N10066\"/>用</span><span style=\"font-family:Arial\">Lucene</span><span style=\"font-family:宋体\">索引文档</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">接下来我将一步一步的来演示如何利用</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">为你的文档创建索引。只要你能将要索引的文件转化成文本格式，</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">就能为你的文档建立索引。比如，如果你想为</span><span style=\"font-family:Verdana\"> HTML </span><span style=\"font-family:宋体\">文档或者</span><span style=\"font-family:Verdana\"> PDF </span><span style=\"font-family:宋体\">文档建立索引，那么首先你就需要从这些文档中提取出文本信息，然后把文本信息交给</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">建立索引。我们接下来的例子用来演示如何利用</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">为后缀名为</span><span style=\"font-family:Verdana\"> txt </span><span style=\"font-family:宋体\">的文件建立索引。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">．</span><span style=\"font-family:Verdana\">			</span><span style=\"font-family:宋体\">准备文本文件</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">首先把一些以</span><span style=\"font-family:Verdana\"> txt </span><span style=\"font-family:宋体\">为后缀名的文本文件放到一个目录中，比如在</span><span style=\"font-family:Verdana\"> Windows </span><span style=\"font-family:宋体\">平台上，你可以放到</span><span style=\"font-family:Verdana\"> C:\\\\files_to_index </span><span style=\"font-family:宋体\">下面。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">．</span><span style=\"font-family:Verdana\">			</span><span style=\"font-family:宋体\">创建索引</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">清单</span><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">是为我们所准备的文档创建索引的代码。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N1007B\"/>清单</span><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">：用</span><span style=\"\nfont-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">索引你的文档</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">package lucene.index;</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import java.io.File;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import java.io.FileReader;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import java.io.Reader;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import java.util.Date;</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import org.apache.lucene.analysis.Analyzer;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import org.apache.lucene.analysis.standard.StandardAnalyzer;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import org.apache.lucene.document.Document;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import org.apache.lucene.document.Field;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">import org.apache.lucene.index.IndexWriter;</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">/**</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> * This class demonstrates the process of creating an index with Lucene </span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> * for text files in a directory.</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> */</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">public class TextFileIndexer {</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> public static void main(String[] args) throws Exception{</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   //fileDir is the directory that contains the text files to be indexed</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   File   fileDir  = new File(\"C:\\\\files_to_index \");</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   //indexDir is the directory that hosts Lucene\'s index files</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   File   indexDir = new File(\"C:\\\\luceneIndex\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   Analyzer luceneAnalyzer = new StandardAnalyzer();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   IndexWriter indexWriter = new IndexWriter(indexDir,luceneAnalyzer,true);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   File[] textFiles  = fileDir.listFiles();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   long startTime = new Date().getTime();</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   //Add documents to the index</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   for(int i = 0; i &lt; textFiles.length; i++){</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">     if(textFiles[i].isFile() &gt;&gt; textFiles[i].getName().endsWith(\".txt\")){</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">       System.out.println(\"File \" + textFiles[i].getCanonicalPath() </span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">              + \" is being indexed\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">       Reader textReader = new FileReader(textFiles[i]);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">       Document document = new Document();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">       document.add(Field.Text(\"content\",textReader));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">       document.add(Field.Text(\"path\",textFiles[i].getPath()));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">       indexWriter.addDocument(document);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">     }</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   }</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   indexWriter.optimize();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   indexWriter.close();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   long endTime = new Date().getTime();</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">   System.out.println(\"It took \" + (endTime - startTime) </span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">              + \" milliseconds to create an index for the files in the directory \"</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">              + fileDir.getPath());</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">  }</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">}</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">正如清单</span><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">所示，你可以利用</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">非常方便的为文档创建索引。接下来我们分析一下清单</span><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">中的比较关键的代码，我们先从下面的一条语句开始看起。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p> </p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">Analyzer luceneAnalyzer = new StandardAnalyzer();</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这条语句创建了类</span><span style=\"font-family:Verdana\"> StandardAnalyzer </span><span style=\"font-family:宋体\">的一个实例，这个类是用来从文本中提取出索引项的。它只是抽象类</span><span style=\"font-family:Verdana\"> Analyzer </span><span style=\"font-family:宋体\">的其中一个实现。</span><span style=\"font-family:Verdana\">Analyzer </span><span style=\"font-family:宋体\">也有一些其它的子类，比如</span><span style=\"font-family:Verdana\"> SimpleAnalyzer </span><span style=\"font-family:宋体\">等。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">我们接着看另外一条语句：</span><span style=\"font-family:Verdana\">			</span></span></p><p> </p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">IndexWriter indexWriter = new IndexWriter(indexDir,luceneAnalyzer,true);</span></p></td></tr></tbody></table></div><p> </p><p><span style=\n\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这条语句创建了类</span><span style=\"font-family:Verdana\"> IndexWriter </span><span style=\"font-family:宋体\">的一个实例，该类也是</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">索引机制里面的一个关键类。这个类能创建一个新的索引或者打开一个已存在的索引并为该所引添加文档。我们注意到该类的构造函数接受三个参数，第一个参数指定了存储索引文件的路径。第二个参数指定了在索引过程中使用什么样的分词器。最后一个参数是个布尔变量，如果值为真，那么就表示要创建一个新的索引，如果值为假，就表示打开一个已经存在的索引。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">接下来的代码演示了如何添加一个文档到索引文件中。</span><span style=\"font-family:Verdana\">			</span></span></p><p> </p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">Document document = new Document();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">document.add(Field.Text(\"content\",textReader));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">document.add(Field.Text(\"path\",textFiles[i].getPath()));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.addDocument(document);</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">首先第一行创建了类</span><span style=\"font-family:Verdana\"> Document </span><span style=\"font-family:宋体\">的一个实例，它由一个或者多个的域</span><span style=\"font-family:Verdana\">(Field)</span><span style=\"font-family:宋体\">组成。你可以把这个类想象成代表了一个实际的文档，比如一个</span><span style=\"font-family:Verdana\"> HTML </span><span style=\"font-family:宋体\">页面，一个</span><span style=\"font-family:Verdana\"> PDF </span><span style=\"font-family:宋体\">文档，或者一个文本文件。而类</span><span style=\"font-family:Verdana\"> Document </span><span style=\"font-family:宋体\">中的域一般就是实际文档的一些属性。比如对于一个</span><span style=\"font-family:Verdana\"> HTML </span><span style=\"font-family:宋体\">页面，它的域可能包括标题，内容，</span><span style=\"font-family:Verdana\">URL </span><span style=\"font-family:宋体\">等。我们可以用不同类型的</span><span style=\"font-family:Verdana\"> Field </span><span style=\"font-family:宋体\">来控制文档的哪些内容应该索引，哪些内容应该存储。如果想获取更多的关于</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的域的信息，可以参考</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的帮助文档。代码的第二行和第三行为文档添加了两个域，每个域包含两个属性，分别是域的名字和域的内容。在我们的例子中两个域的名字分别是</span><span style=\"font-family:Verdana\">\"content\"</span><span style=\"font-family:宋体\">和</span><span style=\"font-family:Verdana\">\"path\"</span><span style=\"font-family:宋体\">。分别存储了我们需要索引的文本文件的内容和路径。最后一行把准备好的文档添加到了索引当中。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">当我们把文档添加到索引中后，不要忘记关闭索引，这样才保证</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">把添加的文档写回到硬盘上。下面的一句代码演示了如何关闭索引。</span><span style=\"font-family:Verdana\">			</span></span></p><p> </p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.close();</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">利用清单</span><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">中的代码，你就可以成功的将文本文档添加到索引中去。接下来我们看看对索引进行的另外一种重要的操作，从索引中删除文档。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p> </p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene6.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene7.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene8.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene9.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"font-family:宋体\"><span style=\"color:black; font-size:13pt\"><strong><a name=\"N100C1\"/>从索引中删除文档</strong></span><span style=\"font-size:12pt\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">类</span><span style=\"font-family:Verdana\">IndexReader</span><span style=\"font-family:宋体\">负责从一个已经存在的索引中删除文档，如清单</span><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">所示。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N100CA\"/>清单</span><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">：从索引中删除文档</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">File   indexDir = new File(\"C:\\\\luceneIndex\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">IndexReader ir = IndexReader.open(indexDir);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">ir.delete(1);</span>< /p></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">ir.delete(new Term(\"path\",\"C:\\\\file_to_index\\lucene.txt\"));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">ir.close();</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">在清单</span><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">中，第二行用静态方法</span><span style=\"font-family:Verdana\"> IndexReader.open(indexDir) </span><span style=\"font-family:宋体\">初始化了类</span><span style=\"font-family:Verdana\"> IndexReader </span><span style=\"font-family:宋体\">的一个实例，这个方法的参数指定了索引的存储路径。类</span><span style=\"font-family:Verdana\"> IndexReader </span><span style=\"font-family:宋体\">提供了两种方法去删除一个文档，如程序中的第三行和第四行所示。第三行利用文档的编号来删除文档。每个文档都有一个系统自动生成的编号。第四行删除了路径为</span><span style=\"font-family:Verdana\">\"C:\\\\file_to_index\\lucene.txt\"</span><span style=\"font-family:宋体\">的文档。你可以通过指定文件路径来方便的删除一个文档。值得注意的是虽然利用上述代码删除文档使得该文档不能被检索到，但是并没有物理上删除该文档。</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">只是通过一个后缀名为</span><span style=\"font-family:Verdana\"> .delete </span><span style=\"font-family:宋体\">的文件来标记哪些文档已经被删除。既然没有物理上删除，我们可以方便的把这些标记为删除的文档恢复过来，如清单</span><span style=\"font-family:Verdana\"> 3 </span><span style=\"font-family:宋体\">所示，首先打开一个索引，然后调用方法</span><span style=\"font-family:Verdana\"> ir.undeleteAll() </span><span style=\"font-family:宋体\">来完成恢复工作。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N100D7\"/>清单</span><span style=\"font-family:Verdana\">3</span><span style=\"font-family:宋体\">：恢复已删除文档</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">File   indexDir = new File(\"C:\\\\luceneIndex\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">IndexReader ir = IndexReader.open(indexDir);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">ir.undeleteAll();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">ir.close();</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">你现在也许想知道如何物理上删除索引中的文档，方法也非常简单。清单</span><span style=\"font-family:Verdana\"> 4 </span><span style=\"font-family:宋体\">演示了这个过程。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N100E4\"/>清单</span><span style=\"font-family:Verdana\">4</span><span style=\"font-family:宋体\">：如何物理上删除文档</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">File   indexDir = new File(\"C:\\\\luceneIndex\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">Analyzer luceneAnalyzer = new StandardAnalyzer();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">IndexWriter indexWriter = new IndexWriter(indexDir,luceneAnalyzer,false);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.optimize();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.close();</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">在清单</span><span style=\"font-family:Verdana\"> 4 </span><span style=\"font-family:宋体\">中，第三行创建了类</span><span style=\"font-family:Verdana\"> IndexWriter </span><span style=\"font-family:宋体\">的一个实例，并且打开了一个已经存在的索引。第</span><span style=\"font-family:Verdana\"> 4 </span><span style=\"font-family:宋体\">行对索引进行清理，清理过程中将把所有标记为删除的文档物理删除。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">没有直接提供方法对文档进行更新，如果你需要更新一个文档，那么你首先需要把这个文档从索引中删除，然后把新版本的文档加入到索引中去。</span><span style=\"font-family:Verdana\">			</span></span></p><p> </p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene10.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene11.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene12.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene13.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"font-family:宋体\"><span style=\"color:black; font-size:13pt\"><strong><a name=\"N100F4\"/>提高索引性能</strong></span><span style=\"font-size:12pt\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">利用</span><span style=\"font-family:Verdana\"> Lucene</span><span style=\"font-family:宋体\">，在创建索引的工程中你可以充分利用机器的硬件资源来提高索引的效率。当你需要索引大量的文件时，你会注意到索引过程的瓶颈是在往磁盘上写索引文件的过程中。为了解决这个问题</span><span style=\"font-family:Verdana\">, Lucene </span><span style=\"font-family:宋体\">在内存中持有一块缓冲区。但我们如何控制</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的缓冲区呢？幸运的是，</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">的类</span><span style=\"font-family:Verdana\"> IndexWriter </span><span style=\"font-f\namily:宋体\">提供了三个参数用来调整缓冲区的大小以及往磁盘上写索引文件的频率。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">．合并因子（</span><span style=\"font-family:Verdana\">mergeFactor</span><span style=\"font-family:宋体\">）</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这个参数决定了在</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的一个索引块中可以存放多少文档以及把磁盘上的索引块合并成一个大的索引块的频率。比如，如果合并因子的值是</span><span style=\"font-family:Verdana\"> 10</span><span style=\"font-family:宋体\">，那么当内存中的文档数达到</span><span style=\"font-family:Verdana\"> 10 </span><span style=\"font-family:宋体\">的时候所有的文档都必须写到磁盘上的一个新的索引块中。并且，如果磁盘上的索引块的隔数达到</span><span style=\"font-family:Verdana\"> 10 </span><span style=\"font-family:宋体\">的话，这</span><span style=\"font-family:Verdana\"> 10 </span><span style=\"font-family:宋体\">个索引块会被合并成一个新的索引块。这个参数的默认值是</span><span style=\"font-family:Verdana\"> 10</span><span style=\"font-family:宋体\">，如果需要索引的文档数非常多的话这个值将是非常不合适的。对批处理的索引来讲，为这个参数赋一个比较大的值会得到比较好的索引效果。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">．最小合并文档数</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这个参数也会影响索引的性能。它决定了内存中的文档数至少达到多少才能将它们写回磁盘。这个参数的默认值是</span><span style=\"font-family:Verdana\">10</span><span style=\"font-family:宋体\">，如果你有足够的内存，那么将这个值尽量设的比较大一些将会显著的提高索引性能。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">3</span><span style=\"font-family:宋体\">．最大合并文档数</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这个参数决定了一个索引块中的最大的文档数。它的默认值是</span><span style=\"font-family:Verdana\"> Integer.MAX_VALUE</span><span style=\"font-family:宋体\">，将这个参数设置为比较大的值可以提高索引效率和检索速度，由于该参数的默认值是整型的最大值，所以我们一般不需要改动这个参数。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">清单</span><span style=\"font-family:Verdana\"> 5 </span><span style=\"font-family:宋体\">列出了这个三个参数用法，清单</span><span style=\"font-family:Verdana\"> 5 </span><span style=\"font-family:宋体\">和清单</span><span style=\"font-family:Verdana\"> 1 </span><span style=\"font-family:宋体\">非常相似，除了清单</span><span style=\"font-family:Verdana\"> 5 </span><span style=\"font-family:宋体\">中会设置刚才提到的三个参数。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N10112\"/>清单</span><span style=\"font-family:Verdana\">5</span><span style=\"font-family:宋体\">：提高索引性能</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">/**</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> * This class demonstrates how to improve the indexing performance </span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> * by adjusting the parameters provided by IndexWriter.</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\"> */</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">public class AdvancedTextFileIndexer  {</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">  public static void main(String[] args) throws Exception{</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    //fileDir is the directory that contains the text files to be indexed</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    File   fileDir  = new File(\"C:\\\\files_to_index\");</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    //indexDir is the directory that hosts Lucene\'s index files</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    File   indexDir = new File(\"C:\\\\luceneIndex\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    Analyzer luceneAnalyzer = new StandardAnalyzer();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    File[] textFiles  = fileDir.listFiles();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    long startTime = new Date().getTime();</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    int mergeFactor = 10;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    int minMergeDocs = 10;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    int maxMergeDocs = Integer.MAX_VALUE;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    IndexWriter indexWriter = new IndexWriter(indexDir,luceneAnalyzer,true);        </span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    indexWriter.mergeFactor = mergeFactor;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    indexWriter.minMergeDocs = minMergeDocs;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    indexWriter.maxMergeDocs = maxMergeDocs;</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    //Add documents to the index</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    for(int i = 0; i &lt; textFiles.length; i++){</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">      if(textFiles[i].isFile() &gt;&gt; textFiles[i].getName().endsWith(\".txt\")){</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">        Reader textReader = new FileReader(textFiles[i]);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">        Document document = new Document();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">        document.add(Field.Text(\"content\",textReader));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">        document.add(Field.Keyword(\"path\",textFiles[i].getPath()));</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">        indexWriter.addDocument(document);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">      }</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    }</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    indexWriter.optimize();</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    indexWriter.close();</span></p><p><span style=\"font-family:Lucida\nConsole; font-size:8pt\">    long endTime = new Date().getTime();</span></p><p> </p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    System.out.println(\"MergeFactor: \" + indexWriter.mergeFactor);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    System.out.println(\"MinMergeDocs: \" + indexWriter.minMergeDocs);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    System.out.println(\"MaxMergeDocs: \" + indexWriter.maxMergeDocs);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    System.out.println(\"Document number: \" + textFiles.length);</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">    System.out.println(\"Time consumed: \" + (endTime - startTime) + \" milliseconds\");</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">  }</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">}</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">通过这个例子，我们注意到在调整缓冲区的大小以及写磁盘的频率上面</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">给我们提供了非常大的灵活性。现在我们来看一下代码中的关键语句。如下的代码首先创建了类</span><span style=\"font-family:Verdana\"> IndexWriter </span><span style=\"font-family:宋体\">的一个实例，然后对它的三个参数进行赋值。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p> </p><div><table style=\"border-collapse:collapse; background: #eeeeee\" border=\"0\"><colgroup><col style=\"width:588px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\" style=\"padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px; border-top:  solid #cccccc 0.75pt; border-left:  solid #cccccc 0.75pt; border-bottom:  solid #cccccc 0.75pt; border-right:  solid #cccccc 0.75pt\"><p><span style=\"font-family:Lucida Console; font-size:8pt\">int mergeFactor = 10;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">int minMergeDocs = 10;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">int maxMergeDocs = Integer.MAX_VALUE;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">IndexWriter indexWriter = new IndexWriter(indexDir,luceneAnalyzer,true);        </span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.mergeFactor = mergeFactor;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.minMergeDocs = minMergeDocs;</span></p><p><span style=\"font-family:Lucida Console; font-size:8pt\">indexWriter.maxMergeDocs = maxMergeDocs;</span> </p></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">下面我们来看一下这三个参数取不同的值对索引时间的影响，注意参数值的不同和索引之间的关系。我们为这个实验准备了</span><span style=\"font-family:Verdana\"> 10000 </span><span style=\"font-family:宋体\">个测试文档。表</span><span style=\"font-family:Verdana\"> 1 </span><span style=\"font-family:宋体\">显示了测试结果。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N1012D\"/>表</span><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">：测试结果</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene14.png\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">通过表</span><span style=\"font-family:Verdana\"> 1</span><span style=\"font-family:宋体\">，你可以清楚地看到三个参数对索引时间的影响。在实践中，你会经常的改变合并因子和最小合并文档数的值来提高索引性能。只要你有足够大的内存，你可以为合并因子和最小合并文档数这两个参数赋尽量大的值以提高索引效率，另外我们一般无需更改最大合并文档数这个参数的值，因为系统已经默认将它设置成了最大。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p> </p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene15.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene16.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene17.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene18.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:13pt\"><strong><span style=\"font-family:Arial\"><a name=\"N10140\"/>Lucene </span><span style=\"font-family:宋体\">索引文件结构分析</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">在分析</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的索引文件结构之前，我们先要理解反向索引（</span><span style=\"font-family:Verdana\">Inverted index</span><span style=\"font-family:宋体\">）这个概念，反向索引是一种以索引项为中心来组织文档的方式，每个索引项指向一个文档序列，这个序列中的文档都包含该索引项。相反，在正向索引中，文档占据了中心的位置，每个文档指向了一个它所包含的索引项的序列。你可以利用反向索引轻松的找到那些文档包含了特定的索引项。</span><span style=\"font-family:Verdana\">Lucene</span><span style=\"font-family:宋体\">正是使用了反向索引作为其基本的索引结构。</span><span style=\"font-family:Verdana\">			</span></span></p><p> </p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene19.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene20.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene21.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene22.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"font-family:宋体\"><span style=\"color:black; font-size:13pt\"><strong><a name=\"N10149\"/>索引文件的逻辑视图</strong></span><span style=\"font-size:12\npt\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">在</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">中有索引块的概念，每个索引块包含了一定数目的文档。我们能够对单独的索引块进行检索。图</span><span style=\"font-family:Verdana\"> 2 </span><span style=\"font-family:宋体\">显示了</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">索引结构的逻辑视图。索引块的个数由索引的文档的总数以及每个索引块所能包含的最大文档数来决定。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N10154\"/>图</span><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">：索引文件的逻辑视图</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene23.jpg\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene24.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene25.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene26.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene27.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"color:black; font-size:13pt\"><strong><span style=\"font-family:Arial\"><a name=\"N10164\"/>Lucene </span><span style=\"font-family:宋体\">中的关键索引文件</span></strong></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">下面的部分将会分析</span><span style=\"font-family:Verdana\">Lucene</span><span style=\"font-family:宋体\">中的主要的索引文件，可能分析有些索引文件的时候没有包含文件的所有的字段，但不会影响到对索引文件的理解。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">1</span><span style=\"font-family:宋体\">．索引块文件</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这个文件包含了索引中的索引块信息，这个文件包含了每个索引块的名字以及大小等信息。表</span><span style=\"font-family:Verdana\"> 2 </span><span style=\"font-family:宋体\">显示了这个文件的结构信息。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N10175\"/>表</span><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">：索引块文件结构</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene28.png\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">2</span><span style=\"font-family:宋体\">．域信息文件</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">我们知道，索引中的文档由一个或者多个域组成，这个文件包含了每个索引块中的域的信息。表</span><span style=\"font-family:Verdana\"> 3 </span><span style=\"font-family:宋体\">显示了这个文件的结构。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N1018D\"/>表</span><span style=\"font-family:Verdana\">3</span><span style=\"font-family:宋体\">：域信息文件结构</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene29.png\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">3</span><span style=\"font-family:宋体\">．索引项信息文件</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这是索引文件里面最核心的一个文件，它存储了所有的索引项的值以及相关信息，并且以索引项来排序。表</span><span style=\"font-family:Verdana\"> 4 </span><span style=\"font-family:宋体\">显示了这个文件的结构。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N101A5\"/>表</span><span style=\"font-family:Verdana\">4</span><span style=\"font-family:宋体\">：索引项信息文件结构</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene30.png\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">4</span><span style=\"font-family:宋体\">．频率文件</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这个文件包含了包含索引项的文档的列表，以及索引项在每个文档中出现的频率信息。如果</span><span style=\"font-family:Verdana\">Lucene</span><span style=\"font-family:宋体\">在索引项信息文件中发现有索引项和搜索词相匹配。那么</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">就会在频率文件中找有哪些文件包含了该索引项。表</span><span style=\"font-family:Verdana\">5</span><span style=\"font-family:宋体\">显示了这个文件的一个大致的结构，并没有包含这个文件的所有字段。</span><span style=\"font-family:Verdana\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N101BD\"/>表</span><span style=\"font-family:Verdana\">5</span><span style=\"font-family:宋体\">：频率文件的结构</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene31.png\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\">5</span><span style=\"font-family:宋体\">．位置文件</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">这个文件包含了索引项在每个文档中出现的位置信息，你可以利用这些信息来参与对索引结果的排序。表</span><span style=\"font-family:Verdana\"> 6 </span><sp an style=\"font-family:宋体\">显示了这个文件的结构</sp></span><span style=\"font-family:Verdana\">			</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:Verdana\"><br /></span><strong><span style=\"font-family:宋体\"><a name=\"N101D5\"/>表</span><span style=\"font-family:Verdana\">6</span><span style=\"font-family:宋体\">：位置文件的结构</span></strong><span style=\"font-family:Verdana\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene32.png\" alt=\"\"/> </span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">到目前为止我们介绍了</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">中的主要的索引文件结构，希望能对你理解</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的物理的存储结构有所帮助。</span></span><span style=\"font-family:宋体; font-size:12pt\">		</span></p><p> </p><div><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:576px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene33.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\"><br /><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene34.png\" alt=\"\"/></span></p></td></tr><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene35.png\" alt=\"\"/><span style=\"font-family:宋体; font-size:12pt\">							</span></p><div style=\"text-align: right\"><table style=\"border-collapse:collapse\" border=\"0\"><colgroup><col style=\"width:16px\"/><col style=\"width:36px\"/></colgroup><tbody valign=\"top\"><tr><td vAlign=\"middle\"><p><img src=\"http://images.cnblogs.com/cnblogs_com/gaoyoubo/012710_0503_Lucene36.png\" alt=\"\"/></p></td><td><p style=\"text-align: right\"><a href=\"http://www.ibm.com/developerworks/cn/java/wa-lucene/\"><span style=\"color:#5c81a7; font-family:宋体; font-size:9pt\"><strong>回页首</strong></span></a></p></td></tr></tbody></table></div></td></tr></tbody></table></div><p> </p><p><span style=\"font-family:宋体\"><span style=\"color:black; font-size:13pt\"><strong><a name=\"N101E8\"/>总结</strong></span><span style=\"font-size:12pt\">			</span></span></p><p><span style=\"color:black; font-size:9pt\"><span style=\"font-family:宋体\">目前已经有非常多的知名的组织正在使用</span><span style=\"font-family:Verdana\"> Lucene</span><span style=\"font-family:宋体\">，比如，</span><span style=\"font-family:Verdana\">Lucene </span><span style=\"font-family:宋体\">为</span><span style=\"font-family:Verdana\"> Eclipse </span><span style=\"font-family:宋体\">的帮助系统，麻省理工学院的</span><span style=\"font-family:Verdana\"> OpenCourseWare </span><span style=\"font-family:宋体\">提供了搜索功能。通过阅读这篇文章，希望你能对</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">的索引机制有所了解，并且你会发现利用</span><span style=\"font-family:Verdana\"> Lucene </span><span style=\"font-family:宋体\">创建索引是非常简单的事情。</span><span style=\"font-family:Verdana\">			</span></span></p><p style=\"text-align: justify\"><span style=\"font-family:Times New Roman; font-size:10pt\">		</span> </p>\n','2010-01-27 13:05:00','2010-01-27 13:05:00',NULL,NULL,'publish',NULL,'深入Lucene索引机制','/post/2012/7/14/1344938612402.html',1,0),(384,1,'open','<pre class=\"brush: java; toolbar: false\">/**\n * \n */\npackage org.mspring.mlog.web.module.web;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.mspring.mlog.web.api.metaweblog.MetaWeblogAPI;\nimport org.mspring.platform.web.widget.stereotype.Widget;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.servlet.support.WebContentGenerator;\n\n/**\n * @author Gao Youbo\n * @since 2012-8-6\n * @Description \n * @TODO \n */\n@Widget\n@RequestMapping(&quot;/&quot;)\npublic class MetaWeblogController {\n    \n    @RequestMapping(&quot;/metaweblog.do&quot;)\n    public void metaweblog(HttpServletRequest request, HttpServletResponse response, Model model) throws IOException{\n        if (WebContentGenerator.METHOD_GET.equals(request.getMethod())) {\n            PrintWriter out = response.getWriter();\n            out.println(&quot;Not support get method.&quot;);\n            out.flush();\n        }\n        try {\n            MetaWeblogAPI api = new MetaWeblogAPI();\n            api.metaWeblog(request, response);\n        } catch (Exception e) {\n            // TODO: handle exception\n            e.printStackTrace();\n        }\n    }\n}</pre>','2012-08-15 10:07:19',NULL,NULL,'from.xmlrpc','publish','<pre class=\"brush: java; toolbar: false\">/**\n * \n */\npackage org.mspring.mlog.web.module.web;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.mspring.mlog.web.api.metaweblog.MetaWeblogAPI;\nimport org.mspring.platform.web.widget.stereotype.Widget;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.servlet','MetaWeblogController','/post/2012/7/15/1344996439195.html',1,491);

/*Table structure for table `mlog_post_catalog` */

DROP TABLE IF EXISTS `mlog_post_catalog`;

CREATE TABLE `mlog_post_catalog` (
  `_catalog_id` bigint(20) NOT NULL,
  `_post_id` bigint(20) NOT NULL,
  PRIMARY KEY (`_post_id`,`_catalog_id`),
  KEY `FK616CBB027794028D` (`_post_id`),
  KEY `FK616CBB02B75F6567` (`_catalog_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `mlog_post_catalog` */

insert  into `mlog_post_catalog`(`_catalog_id`,`_post_id`) values (14,167),(5,168),(5,169),(5,170),(2,171),(10,172),(5,173),(5,174),(5,175),(5,176),(2,177),(2,178),(17,179),(2,180),(2,181),(17,182),(5,183),(22,184),(5,185),(5,186),(9,187),(9,188),(24,189),(2,190),(8,191),(23,192),(23,193),(23,194),(3,195),(8,196),(2,197),(2,198),(22,199),(5,200),(17,201),(22,202),(22,203),(9,204),(3,205),(22,206),(5,207),(21,210),(21,211),(2,212),(2,213),(2,214),(2,215),(2,216),(20,217),(2,218),(5,220),(8,221),(2,222),(20,224),(17,225),(5,226),(2,227),(8,228),(18,229),(17,230),(5,233),(8,234),(8,235),(8,236),(14,237),(8,238),(8,239),(2,240),(8,241),(8,242),(5,243),(8,244),(5,245),(8,246),(8,247),(8,248),(9,249),(9,250),(9,251),(8,252),(8,253),(5,254),(8,255),(4,256),(7,257),(3,258),(16,259),(16,260),(8,261),(5,262),(3,263),(8,264),(8,265),(15,266),(8,267),(5,268),(8,269),(15,270),(8,272),(5,273),(8,274),(8,275),(8,276),(8,277),(5,278),(5,279),(2,280),(8,281),(2,282),(5,283),(8,284),(2,285),(8,286),(8,287),(2,288),(2,289),(2,290),(2,291),(2,292),(2,293),(8,294),(8,295),(3,296),(2,297),(3,298),(8,299),(14,300),(14,301),(14,302),(13,303),(9,304),(9,305),(3,306),(2,307),(2,308),(2,309),(13,310),(13,311),(2,312),(2,313),(3,314),(11,315),(10,316),(14,317),(8,318),(13,319),(12,320),(12,321),(12,322),(13,323),(13,324),(13,325),(13,326),(3,327),(12,328),(12,329),(2,330),(12,331),(4,332),(9,333),(9,334),(10,335),(8,336),(3,337),(8,338),(2,339),(2,340),(7,341),(2,342),(7,343),(2,344),(2,345),(2,346),(11,347),(3,348),(3,349),(3,350),(9,351),(3,352),(4,353),(3,354),(4,355),(4,356),(10,357),(4,358),(4,359),(3,360),(8,361),(9,362),(3,363),(2,364),(4,365),(2,366),(3,367),(4,368),(4,369),(3,370),(3,371),(3,372),(3,373),(8,374),(8,375),(9,376),(3,377),(3,378),(8,379),(4,380),(7,381),(7,382),(2,384);

/*Table structure for table `mlog_post_tag` */

DROP TABLE IF EXISTS `mlog_post_tag`;

CREATE TABLE `mlog_post_tag` (
  `_tag_id` bigint(20) NOT NULL,
  `_post_id` bigint(20) NOT NULL,
  PRIMARY KEY (`_post_id`,`_tag_id`),
  KEY `FKD7FAF7037794028D` (`_post_id`),
  KEY `FKD7FAF70385C2D847` (`_tag_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `mlog_post_tag` */

insert  into `mlog_post_tag`(`_tag_id`,`_post_id`) values (13,167),(14,168),(14,169),(14,170),(8,171),(9,172),(14,173),(14,174),(14,175),(14,176),(8,177),(8,178),(17,179),(8,180),(8,181),(17,182),(14,183),(22,184),(14,185),(14,186),(7,187),(7,188),(24,189),(8,190),(5,191),(23,192),(23,193),(23,194),(6,195),(5,196),(8,197),(8,198),(22,199),(14,200),(17,201),(22,202),(22,203),(7,204),(6,205),(22,206),(14,207),(21,210),(21,211),(8,212),(8,213),(8,214),(8,215),(8,216),(20,217),(8,218),(14,220),(5,221),(8,222),(20,224),(17,225),(14,226),(8,227),(5,228),(18,229),(17,230),(14,233),(5,234),(5,235),(5,236),(13,237),(5,238),(5,239),(8,240),(5,241),(5,242),(14,243),(5,244),(14,245),(5,246),(5,247),(5,248),(7,249),(7,250),(7,251),(5,252),(5,253),(14,254),(5,255),(4,256),(3,257),(6,258),(16,259),(16,260),(5,261),(14,262),(6,263),(5,264),(5,265),(15,266),(5,267),(14,268),(5,269),(15,270),(5,272),(14,273),(5,274),(5,275),(5,276),(5,277),(14,278),(14,279),(8,280),(5,281),(8,282),(14,283),(5,284),(8,285),(5,286),(5,287),(8,288),(8,289),(8,290),(8,291),(8,292),(8,293),(5,294),(5,295),(6,296),(8,297),(6,298),(5,299),(13,300),(13,301),(13,302),(12,303),(7,304),(7,305),(6,306),(8,307),(8,308),(8,309),(12,310),(12,311),(8,312),(8,313),(6,314),(10,315),(9,316),(13,317),(5,318),(12,319),(11,320),(11,321),(11,322),(12,323),(12,324),(12,325),(12,326),(6,327),(11,328),(11,329),(8,330),(11,331),(4,332),(7,333),(7,334),(9,335),(5,336),(6,337),(5,338),(8,339),(8,340),(3,341),(8,342),(3,343),(8,344),(8,345),(8,346),(10,347),(6,348),(6,349),(6,350),(7,351),(6,352),(4,353),(6,354),(4,355),(4,356),(9,357),(4,358),(4,359),(6,360),(5,361),(7,362),(6,363),(8,364),(4,365),(8,366),(6,367),(4,368),(4,369),(6,370),(6,371),(6,372),(6,373),(5,374),(5,375),(7,376),(6,377),(6,378),(5,379),(4,380),(3,381),(3,382);

/*Table structure for table `mlog_postmeta` */

DROP TABLE IF EXISTS `mlog_postmeta`;

CREATE TABLE `mlog_postmeta` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_key` varchar(200) NOT NULL,
  `_post_id` bigint(20) NOT NULL,
  `_value` text,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `mlog_postmeta` */

/*Table structure for table `mlog_stat` */

DROP TABLE IF EXISTS `mlog_stat`;

CREATE TABLE `mlog_stat` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_date` date NOT NULL,
  `_timezone` datetime NOT NULL,
  `_type` varchar(30) NOT NULL,
  `_value` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`)
) ENGINE=MyISAM AUTO_INCREMENT=2168 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_stat` */

insert  into `mlog_stat`(`_id`,`_date`,`_timezone`,`_type`,`_value`) values (1,'2012-08-14','2012-08-14 15:13:01','post_count','1'),(2,'2012-08-14','2012-08-14 15:13:18','click_count','1'),(3,'2012-08-14','2012-08-14 15:13:24','post_count','1'),(4,'2012-08-14','2012-08-14 15:13:24','click_count','2'),(5,'2012-08-14','2012-08-14 15:13:26','post_count','1'),(6,'2012-08-14','2012-08-14 15:13:26','click_count','3'),(7,'2012-08-14','2012-08-14 15:13:29','post_count','1'),(8,'2012-08-14','2012-08-14 15:13:29','click_count','4'),(9,'2012-08-14','2012-08-14 15:13:33','post_count','1'),(10,'2012-08-14','2012-08-14 15:13:33','click_count','5'),(11,'2012-08-14','2012-08-14 15:13:36','post_count','1'),(12,'2012-08-14','2012-08-14 15:13:36','click_count','6'),(13,'2012-08-14','2012-08-14 15:13:40','post_count','1'),(14,'2012-08-14','2012-08-14 15:13:40','click_count','7'),(15,'2012-08-14','2012-08-14 15:13:44','post_count','1'),(16,'2012-08-14','2012-08-14 15:13:44','click_count','8'),(17,'2012-08-14','2012-08-14 15:13:47','post_count','1'),(18,'2012-08-14','2012-08-14 15:13:47','click_count','9'),(19,'2012-08-14','2012-08-14 15:13:51','post_count','1'),(20,'2012-08-14','2012-08-14 15:13:51','click_count','10'),(21,'2012-08-14','2012-08-14 15:13:54','post_count','1'),(22,'2012-08-14','2012-08-14 15:13:54','click_count','11'),(23,'2012-08-14','2012-08-14 15:13:58','post_count','1'),(24,'2012-08-14','2012-08-14 15:13:58','click_count','12'),(25,'2012-08-14','2012-08-14 15:14:02','post_count','1'),(26,'2012-08-14','2012-08-14 15:14:02','click_count','13'),(27,'2012-08-14','2012-08-14 15:14:05','post_count','1'),(28,'2012-08-14','2012-08-14 15:14:05','click_count','14'),(29,'2012-08-14','2012-08-14 15:14:09','post_count','1'),(30,'2012-08-14','2012-08-14 15:14:09','click_count','15'),(31,'2012-08-14','2012-08-14 15:14:12','post_count','1'),(32,'2012-08-14','2012-08-14 15:14:12','click_count','16'),(33,'2012-08-14','2012-08-14 15:14:16','post_count','1'),(34,'2012-08-14','2012-08-14 15:14:16','click_count','17'),(35,'2012-08-14','2012-08-14 15:14:20','post_count','1'),(36,'2012-08-14','2012-08-14 15:14:20','click_count','18'),(37,'2012-08-14','2012-08-14 15:14:23','post_count','1'),(38,'2012-08-14','2012-08-14 15:14:23','click_count','19'),(39,'2012-08-14','2012-08-14 15:14:27','post_count','1'),(40,'2012-08-14','2012-08-14 15:14:27','click_count','20'),(41,'2012-08-14','2012-08-14 15:14:30','post_count','1'),(42,'2012-08-14','2012-08-14 15:14:30','click_count','21'),(43,'2012-08-14','2012-08-14 15:14:34','post_count','1'),(44,'2012-08-14','2012-08-14 15:14:34','click_count','22'),(45,'2012-08-14','2012-08-14 15:14:38','post_count','1'),(46,'2012-08-14','2012-08-14 15:14:38','click_count','23'),(47,'2012-08-14','2012-08-14 15:14:41','post_count','1'),(48,'2012-08-14','2012-08-14 15:14:41','click_count','24'),(49,'2012-08-14','2012-08-14 15:14:45','post_count','1'),(50,'2012-08-14','2012-08-14 15:14:45','click_count','25'),(51,'2012-08-14','2012-08-14 15:14:48','post_count','1'),(52,'2012-08-14','2012-08-14 15:14:48','click_count','26'),(53,'2012-08-14','2012-08-14 15:14:52','post_count','1'),(54,'2012-08-14','2012-08-14 15:14:52','click_count','27'),(55,'2012-08-14','2012-08-14 15:14:56','post_count','1'),(56,'2012-08-14','2012-08-14 15:14:56','click_count','28'),(57,'2012-08-14','2012-08-14 15:14:59','post_count','1'),(58,'2012-08-14','2012-08-14 15:14:59','click_count','29'),(59,'2012-08-14','2012-08-14 15:15:03','post_count','1'),(60,'2012-08-14','2012-08-14 15:15:03','click_count','30'),(61,'2012-08-14','2012-08-14 15:15:06','post_count','1'),(62,'2012-08-14','2012-08-14 15:15:06','click_count','31'),(63,'2012-08-14','2012-08-14 15:15:10','post_count','1'),(64,'2012-08-14','2012-08-14 15:15:10','click_count','32'),(65,'2012-08-14','2012-08-14 15:15:14','post_count','1'),(66,'2012-08-14','2012-08-14 15:15:14','click_count','33'),(67,'2012-08-14','2012-08-14 15:15:17','post_count','1'),(68,'2012-08-14','2012-08-14 15:15:17','click_count','34'),(69,'2012-08-14','2012-08-14 15:15:21','post_count','1'),(70,'2012-08-14','2012-08-14 15:15:21','click_count','35'),(71,'2012-08-14','2012-08-14 15:15:24','post_count','1'),(72,'2012-08-14','2012-08-14 15:15:24','click_count','36'),(73,'2012-08-14','2012-08-14 15:15:28','post_count','1'),(74,'2012-08-14','2012-08-14 15:15:28','click_count','37'),(75,'2012-08-14','2012-08-14 15:15:32','post_count','1'),(76,'2012-08-14','2012-08-14 15:15:32','click_count','38'),(77,'2012-08-14','2012-08-14 15:15:35','post_count','1'),(78,'2012-08-14','2012-08-14 15:15:35','click_count','39'),(79,'2012-08-14','2012-08-14 15:15:39','post_count','1'),(80,'2012-08-14','2012-08-14 15:15:39','click_count','40'),(81,'2012-08-14','2012-08-14 15:15:42','post_count','1'),(82,'2012-08-14','2012-08-14 15:15:42','click_count','41'),(83,'2012-08-14','2012-08-14 15:15:46','post_count','1'),(84,'2012-08-14','2012-08-14 15:15:46','click_count','42'),(85,'2012-08-14','2012-08-14 15:15:50','post_count','1'),(86,'2012-08-14','2012-08-14 15:15:50','click_count','43'),(87,'2012-08-14','2012-08-14 15:15:53','post_count','1'),(88,'2012-08-14','2012-08-14 15:15:53','click_count','44'),(89,'2012-08-14','2012-08-14 15:15:57','post_count','1'),(90,'2012-08-14','2012-08-14 15:15:57','click_count','45'),(91,'2012-08-14','2012-08-14 15:20:25','post_count','1'),(92,'2012-08-14','2012-08-14 15:20:25','comment_count','7'),(93,'2012-08-14','2012-08-14 15:20:28','post_count','1'),(94,'2012-08-14','2012-08-14 15:20:28','comment_count','7'),(95,'2012-08-14','2012-08-14 15:20:31','post_count','1'),(96,'2012-08-14','2012-08-14 15:20:31','comment_count','7'),(97,'2012-08-14','2012-08-14 15:20:35','post_count','1'),(98,'2012-08-14','2012-08-14 15:20:35','comment_count','7'),(99,'2012-08-14','2012-08-14 15:20:39','post_count','1'),(100,'2012-08-14','2012-08-14 15:20:39','comment_count','7'),(101,'2012-08-14','2012-08-14 15:20:42','post_count','1'),(102,'2012-08-14','2012-08-14 15:20:42','comment_count','7'),(103,'2012-08-14','2012-08-14 15:20:46','post_count','1'),(104,'2012-08-14','2012-08-14 15:20:46','comment_count','7'),(105,'2012-08-14','2012-08-14 15:20:49','post_count','1'),(106,'2012-08-14','2012-08-14 15:20:49','comment_count','7'),(107,'2012-08-14','2012-08-14 15:20:53','post_count','1'),(108,'2012-08-14','2012-08-14 15:20:53','comment_count','7'),(109,'2012-08-14','2012-08-14 15:20:57','post_count','1'),(110,'2012-08-14','2012-08-14 15:20:57','comment_count','7'),(111,'2012-08-14','2012-08-14 15:21:00','post_count','1'),(112,'2012-08-14','2012-08-14 15:21:00','comment_count','7'),(113,'2012-08-14','2012-08-14 15:21:04','post_count','1'),(114,'2012-08-14','2012-08-14 15:21:04','comment_count','7'),(115,'2012-08-14','2012-08-14 15:21:07','post_count','1'),(116,'2012-08-14','2012-08-14 15:21:07','comment_count','7'),(117,'2012-08-14','2012-08-14 15:21:11','post_count','1'),(118,'2012-08-14','2012-08-14 15:21:11','comment_count','7'),(119,'2012-08-14','2012-08-14 15:21:15','post_count','1'),(120,'2012-08-14','2012-08-14 15:21:15','comment_count','7'),(121,'2012-08-14','2012-08-14 15:21:18','post_count','1'),(122,'2012-08-14','2012-08-14 15:21:18','comment_count','7'),(123,'2012-08-14','2012-08-14 15:21:22','post_count','1'),(124,'2012-08-14','2012-08-14 15:21:22','comment_count','7'),(125,'2012-08-14','2012-08-14 15:21:25','post_count','1'),(126,'2012-08-14','2012-08-14 15:21:25','comment_count','7'),(127,'2012-08-14','2012-08-14 15:21:29','post_count','1'),(128,'2012-08-14','2012-08-14 15:21:29','comment_count','7'),(129,'2012-08-14','2012-08-14 15:21:33','post_count','1'),(130,'2012-08-14','2012-08-14 15:21:33','comment_count','7'),(131,'2012-08-14','2012-08-14 15:21:36','post_count','1'),(132,'2012-08-14','2012-08-14 15:21:36','comment_count','7'),(133,'2012-08-14','2012-08-14 15:21:40','post_count','1'),(134,'2012-08-14','2012-08-14 15:21:40','comment_count','7'),(135,'2012-08-14','2012-08-14 15:21:43','post_count','1'),(136,'2012-08-14','2012-08-14 15:21:43','comment_count','7'),(137,'2012-08-14','2012-08-14 15:21:47','post_count','1'),(138,'2012-08-14','2012-08-14 15:21:47','comment_count','7'),(139,'2012-08-14','2012-08-14 15:21:51','post_count','1'),(140,'2012-08-14','2012-08-14 15:21:51','comment_count','7'),(141,'2012-08-14','2012-08-14 15:21:54','post_count','1'),(142,'2012-08-14','2012-08-14 15:21:54','comment_count','7'),(143,'2012-08-14','2012-08-14 15:21:58','post_count','1'),(144,'2012-08-14','2012-08-14 15:21:58','comment_count','7'),(145,'2012-08-14','2012-08-14 15:22:01','post_count','1'),(146,'2012-08-14','2012-08-14 15:22:01','comment_count','7'),(147,'2012-08-14','2012-08-14 15:22:05','post_count','1'),(148,'2012-08-14','2012-08-14 15:22:05','comment_count','7'),(149,'2012-08-14','2012-08-14 15:22:09','post_count','1'),(150,'2012-08-14','2012-08-14 15:22:09','comment_count','7'),(151,'2012-08-14','2012-08-14 15:22:12','post_count','1'),(152,'2012-08-14','2012-08-14 15:22:12','comment_count','7'),(153,'2012-08-14','2012-08-14 15:22:16','post_count','1'),(154,'2012-08-14','2012-08-14 15:22:16','comment_count','7'),(155,'2012-08-14','2012-08-14 15:22:19','post_count','1'),(156,'2012-08-14','2012-08-14 15:22:19','comment_count','7'),(157,'2012-08-14','2012-08-14 15:22:23','post_count','1'),(158,'2012-08-14','2012-08-14 15:22:23','comment_count','7'),(159,'2012-08-14','2012-08-14 15:22:27','post_count','1'),(160,'2012-08-14','2012-08-14 15:22:27','comment_count','7'),(161,'2012-08-14','2012-08-14 15:22:30','post_count','1'),(162,'2012-08-14','2012-08-14 15:22:30','comment_count','7'),(163,'2012-08-14','2012-08-14 15:22:34','post_count','1'),(164,'2012-08-14','2012-08-14 15:22:34','comment_count','7'),(165,'2012-08-14','2012-08-14 15:22:37','post_count','1'),(166,'2012-08-14','2012-08-14 15:22:37','comment_count','7'),(167,'2012-08-14','2012-08-14 15:22:41','post_count','1'),(168,'2012-08-14','2012-08-14 15:22:41','comment_count','7'),(169,'2012-08-14','2012-08-14 15:22:45','post_count','1'),(170,'2012-08-14','2012-08-14 15:22:45','comment_count','7'),(171,'2012-08-14','2012-08-14 15:22:48','post_count','1'),(172,'2012-08-14','2012-08-14 15:22:48','comment_count','7'),(173,'2012-08-14','2012-08-14 15:22:52','post_count','1'),(174,'2012-08-14','2012-08-14 15:22:52','comment_count','7'),(175,'2012-08-14','2012-08-14 15:22:55','post_count','1'),(176,'2012-08-14','2012-08-14 15:22:55','comment_count','7'),(177,'2012-08-14','2012-08-14 15:22:59','post_count','1'),(178,'2012-08-14','2012-08-14 15:22:59','comment_count','7'),(179,'2012-08-14','2012-08-14 15:23:03','post_count','1'),(180,'2012-08-14','2012-08-14 15:23:03','comment_count','7'),(181,'2012-08-14','2012-08-14 15:23:06','post_count','1'),(182,'2012-08-14','2012-08-14 15:23:06','comment_count','7'),(183,'2012-08-14','2012-08-14 15:23:10','post_count','1'),(184,'2012-08-14','2012-08-14 15:23:10','comment_count','7'),(185,'2012-08-14','2012-08-14 15:23:13','post_count','1'),(186,'2012-08-14','2012-08-14 15:23:13','comment_count','7'),(187,'2012-08-14','2012-08-14 15:23:17','post_count','1'),(188,'2012-08-14','2012-08-14 15:23:17','comment_count','7'),(189,'2012-08-14','2012-08-14 15:23:21','post_count','1'),(190,'2012-08-14','2012-08-14 15:23:21','comment_count','7'),(191,'2012-08-14','2012-08-14 15:23:24','post_count','1'),(192,'2012-08-14','2012-08-14 15:23:24','comment_count','7'),(193,'2012-08-14','2012-08-14 15:23:28','post_count','1'),(194,'2012-08-14','2012-08-14 15:23:28','comment_count','7'),(195,'2012-08-14','2012-08-14 15:23:31','post_count','1'),(196,'2012-08-14','2012-08-14 15:23:31','comment_count','7'),(197,'2012-08-14','2012-08-14 15:23:35','post_count','1'),(198,'2012-08-14','2012-08-14 15:23:35','comment_count','7'),(199,'2012-08-14','2012-08-14 15:23:39','post_count','1'),(200,'2012-08-14','2012-08-14 15:23:39','comment_count','7'),(201,'2012-08-14','2012-08-14 15:23:42','post_count','1'),(202,'2012-08-14','2012-08-14 15:23:42','comment_count','7'),(203,'2012-08-14','2012-08-14 15:23:46','post_count','1'),(204,'2012-08-14','2012-08-14 15:23:46','comment_count','7'),(205,'2012-08-14','2012-08-14 15:23:49','post_count','1'),(206,'2012-08-14','2012-08-14 15:23:49','comment_count','7'),(207,'2012-08-14','2012-08-14 15:23:53','post_count','1'),(208,'2012-08-14','2012-08-14 15:23:53','comment_count','7'),(209,'2012-08-14','2012-08-14 15:23:57','post_count','1'),(210,'2012-08-14','2012-08-14 15:23:57','comment_count','7'),(211,'2012-08-14','2012-08-14 15:24:00','post_count','1'),(212,'2012-08-14','2012-08-14 15:24:00','comment_count','7'),(213,'2012-08-14','2012-08-14 15:24:04','post_count','1'),(214,'2012-08-14','2012-08-14 15:24:04','comment_count','7'),(215,'2012-08-14','2012-08-14 15:24:07','post_count','1'),(216,'2012-08-14','2012-08-14 15:24:07','comment_count','7'),(217,'2012-08-14','2012-08-14 15:24:11','post_count','1'),(218,'2012-08-14','2012-08-14 15:24:11','comment_count','7'),(219,'2012-08-14','2012-08-14 15:24:15','post_count','1'),(220,'2012-08-14','2012-08-14 15:24:15','comment_count','7'),(221,'2012-08-14','2012-08-14 15:24:18','post_count','1'),(222,'2012-08-14','2012-08-14 15:24:18','comment_count','7'),(223,'2012-08-14','2012-08-14 15:24:22','post_count','1'),(224,'2012-08-14','2012-08-14 15:24:22','comment_count','7'),(225,'2012-08-14','2012-08-14 15:24:25','post_count','1'),(226,'2012-08-14','2012-08-14 15:24:25','comment_count','7'),(227,'2012-08-14','2012-08-14 15:24:29','post_count','1'),(228,'2012-08-14','2012-08-14 15:24:29','comment_count','7'),(229,'2012-08-14','2012-08-14 15:24:33','post_count','1'),(230,'2012-08-14','2012-08-14 15:24:33','comment_count','7'),(231,'2012-08-14','2012-08-14 15:24:36','post_count','1'),(232,'2012-08-14','2012-08-14 15:24:36','comment_count','7'),(233,'2012-08-14','2012-08-14 15:24:40','post_count','1'),(234,'2012-08-14','2012-08-14 15:24:40','comment_count','7'),(235,'2012-08-14','2012-08-14 15:24:43','post_count','1'),(236,'2012-08-14','2012-08-14 15:24:43','comment_count','7'),(237,'2012-08-14','2012-08-14 15:24:47','post_count','1'),(238,'2012-08-14','2012-08-14 15:24:47','comment_count','7'),(239,'2012-08-14','2012-08-14 15:24:51','post_count','1'),(240,'2012-08-14','2012-08-14 15:24:51','comment_count','7'),(241,'2012-08-14','2012-08-14 15:24:54','post_count','1'),(242,'2012-08-14','2012-08-14 15:24:54','comment_count','7'),(243,'2012-08-14','2012-08-14 15:24:58','post_count','1'),(244,'2012-08-14','2012-08-14 15:24:58','comment_count','7'),(245,'2012-08-14','2012-08-14 15:25:01','post_count','1'),(246,'2012-08-14','2012-08-14 15:25:01','comment_count','7'),(247,'2012-08-14','2012-08-14 15:25:05','post_count','1'),(248,'2012-08-14','2012-08-14 15:25:05','comment_count','7'),(249,'2012-08-14','2012-08-14 15:25:09','post_count','1'),(250,'2012-08-14','2012-08-14 15:25:09','comment_count','7'),(251,'2012-08-14','2012-08-14 15:25:12','post_count','1'),(252,'2012-08-14','2012-08-14 15:25:12','comment_count','7'),(253,'2012-08-14','2012-08-14 15:25:16','post_count','1'),(254,'2012-08-14','2012-08-14 15:25:16','comment_count','7'),(255,'2012-08-14','2012-08-14 15:25:19','post_count','1'),(256,'2012-08-14','2012-08-14 15:25:19','comment_count','7'),(257,'2012-08-14','2012-08-14 15:25:23','post_count','1'),(258,'2012-08-14','2012-08-14 15:25:23','comment_count','7'),(259,'2012-08-14','2012-08-14 15:25:27','post_count','1'),(260,'2012-08-14','2012-08-14 15:25:27','comment_count','7'),(261,'2012-08-14','2012-08-14 15:25:30','post_count','1'),(262,'2012-08-14','2012-08-14 15:25:30','comment_count','7'),(263,'2012-08-14','2012-08-14 15:25:34','post_count','1'),(264,'2012-08-14','2012-08-14 15:25:34','comment_count','7'),(265,'2012-08-14','2012-08-14 15:25:37','post_count','1'),(266,'2012-08-14','2012-08-14 15:25:37','comment_count','7'),(267,'2012-08-14','2012-08-14 15:25:41','post_count','1'),(268,'2012-08-14','2012-08-14 15:25:41','comment_count','7'),(269,'2012-08-14','2012-08-14 15:25:45','post_count','1'),(270,'2012-08-14','2012-08-14 15:25:45','comment_count','7'),(271,'2012-08-14','2012-08-14 15:25:48','post_count','1'),(272,'2012-08-14','2012-08-14 15:25:48','comment_count','7'),(273,'2012-08-14','2012-08-14 15:25:52','post_count','1'),(274,'2012-08-14','2012-08-14 15:25:52','comment_count','7'),(275,'2012-08-14','2012-08-14 15:25:55','post_count','1'),(276,'2012-08-14','2012-08-14 15:25:55','comment_count','7'),(277,'2012-08-14','2012-08-14 15:25:59','post_count','1'),(278,'2012-08-14','2012-08-14 15:25:59','comment_count','7'),(279,'2012-08-14','2012-08-14 15:26:03','post_count','1'),(280,'2012-08-14','2012-08-14 15:26:03','comment_count','7'),(281,'2012-08-14','2012-08-14 15:26:06','post_count','1'),(282,'2012-08-14','2012-08-14 15:26:06','comment_count','7'),(283,'2012-08-14','2012-08-14 15:26:10','post_count','1'),(284,'2012-08-14','2012-08-14 15:26:10','comment_count','7'),(285,'2012-08-14','2012-08-14 15:26:13','post_count','1'),(286,'2012-08-14','2012-08-14 15:26:13','comment_count','7'),(287,'2012-08-14','2012-08-14 15:26:17','post_count','1'),(288,'2012-08-14','2012-08-14 15:26:17','comment_count','7'),(289,'2012-08-14','2012-08-14 15:26:21','post_count','1'),(290,'2012-08-14','2012-08-14 15:26:21','comment_count','7'),(291,'2012-08-14','2012-08-14 15:26:24','post_count','1'),(292,'2012-08-14','2012-08-14 15:26:24','comment_count','7'),(293,'2012-08-14','2012-08-14 15:26:28','post_count','1'),(294,'2012-08-14','2012-08-14 15:26:28','comment_count','7'),(295,'2012-08-14','2012-08-14 15:26:31','post_count','1'),(296,'2012-08-14','2012-08-14 15:26:32','comment_count','7'),(297,'2012-08-14','2012-08-14 15:26:35','post_count','1'),(298,'2012-08-14','2012-08-14 15:26:35','comment_count','7'),(299,'2012-08-14','2012-08-14 15:26:39','post_count','1'),(300,'2012-08-14','2012-08-14 15:26:39','comment_count','7'),(301,'2012-08-14','2012-08-14 15:26:42','post_count','1'),(302,'2012-08-14','2012-08-14 15:26:42','comment_count','7'),(303,'2012-08-14','2012-08-14 15:26:46','post_count','1'),(304,'2012-08-14','2012-08-14 15:26:46','comment_count','7'),(305,'2012-08-14','2012-08-14 15:26:49','post_count','1'),(306,'2012-08-14','2012-08-14 15:26:49','comment_count','7'),(307,'2012-08-14','2012-08-14 15:26:53','post_count','1'),(308,'2012-08-14','2012-08-14 15:26:53','comment_count','7'),(309,'2012-08-14','2012-08-14 15:26:57','post_count','1'),(310,'2012-08-14','2012-08-14 15:26:57','comment_count','7'),(311,'2012-08-14','2012-08-14 15:27:00','post_count','1'),(312,'2012-08-14','2012-08-14 15:27:00','comment_count','7'),(313,'2012-08-14','2012-08-14 15:27:04','post_count','1'),(314,'2012-08-14','2012-08-14 15:27:04','comment_count','7'),(315,'2012-08-14','2012-08-14 15:27:07','post_count','1'),(316,'2012-08-14','2012-08-14 15:27:07','comment_count','7'),(317,'2012-08-14','2012-08-14 15:27:11','post_count','1'),(318,'2012-08-14','2012-08-14 15:27:11','comment_count','7'),(319,'2012-08-14','2012-08-14 15:27:15','post_count','1'),(320,'2012-08-14','2012-08-14 15:27:15','comment_count','7'),(321,'2012-08-14','2012-08-14 15:27:18','post_count','1'),(322,'2012-08-14','2012-08-14 15:27:18','comment_count','7'),(323,'2012-08-14','2012-08-14 15:27:22','post_count','1'),(324,'2012-08-14','2012-08-14 15:27:22','comment_count','7'),(325,'2012-08-14','2012-08-14 15:27:25','post_count','1'),(326,'2012-08-14','2012-08-14 15:27:25','comment_count','7'),(327,'2012-08-14','2012-08-14 15:27:29','post_count','1'),(328,'2012-08-14','2012-08-14 15:27:29','comment_count','7'),(329,'2012-08-14','2012-08-14 15:27:33','post_count','1'),(330,'2012-08-14','2012-08-14 15:27:33','comment_count','7'),(331,'2012-08-14','2012-08-14 15:27:36','post_count','1'),(332,'2012-08-14','2012-08-14 15:27:36','comment_count','7'),(333,'2012-08-14','2012-08-14 15:27:40','post_count','1'),(334,'2012-08-14','2012-08-14 15:27:40','comment_count','7'),(335,'2012-08-14','2012-08-14 15:27:43','post_count','1'),(336,'2012-08-14','2012-08-14 15:27:43','comment_count','7'),(337,'2012-08-14','2012-08-14 15:27:47','post_count','1'),(338,'2012-08-14','2012-08-14 15:27:47','comment_count','7'),(339,'2012-08-14','2012-08-14 15:27:51','post_count','1'),(340,'2012-08-14','2012-08-14 15:27:51','comment_count','7'),(341,'2012-08-14','2012-08-14 15:27:54','post_count','1'),(342,'2012-08-14','2012-08-14 15:27:54','comment_count','7'),(343,'2012-08-14','2012-08-14 15:27:58','post_count','1'),(344,'2012-08-14','2012-08-14 15:27:58','comment_count','7'),(345,'2012-08-14','2012-08-14 15:28:01','post_count','1'),(346,'2012-08-14','2012-08-14 15:28:01','comment_count','7'),(347,'2012-08-14','2012-08-14 15:28:05','post_count','1'),(348,'2012-08-14','2012-08-14 15:28:05','comment_count','7'),(349,'2012-08-14','2012-08-14 15:28:09','post_count','1'),(350,'2012-08-14','2012-08-14 15:28:09','comment_count','7'),(351,'2012-08-14','2012-08-14 15:28:12','post_count','1'),(352,'2012-08-14','2012-08-14 15:28:12','comment_count','7'),(353,'2012-08-14','2012-08-14 15:28:16','post_count','1'),(354,'2012-08-14','2012-08-14 15:28:16','comment_count','7'),(355,'2012-08-14','2012-08-14 15:28:19','post_count','1'),(356,'2012-08-14','2012-08-14 15:28:19','comment_count','7'),(357,'2012-08-14','2012-08-14 15:28:23','post_count','1'),(358,'2012-08-14','2012-08-14 15:28:23','comment_count','7'),(359,'2012-08-14','2012-08-14 15:28:27','post_count','1'),(360,'2012-08-14','2012-08-14 15:28:27','comment_count','7'),(361,'2012-08-14','2012-08-14 15:28:30','post_count','1'),(362,'2012-08-14','2012-08-14 15:28:30','comment_count','7'),(363,'2012-08-14','2012-08-14 15:28:34','post_count','1'),(364,'2012-08-14','2012-08-14 15:28:34','comment_count','7'),(365,'2012-08-14','2012-08-14 15:28:37','post_count','1'),(366,'2012-08-14','2012-08-14 15:28:37','comment_count','7'),(367,'2012-08-14','2012-08-14 15:28:41','post_count','1'),(368,'2012-08-14','2012-08-14 15:28:41','comment_count','7'),(369,'2012-08-14','2012-08-14 15:28:45','post_count','1'),(370,'2012-08-14','2012-08-14 15:28:45','comment_count','7'),(371,'2012-08-14','2012-08-14 15:28:48','post_count','1'),(372,'2012-08-14','2012-08-14 15:28:48','comment_count','7'),(373,'2012-08-14','2012-08-14 15:28:52','post_count','1'),(374,'2012-08-14','2012-08-14 15:28:52','comment_count','7'),(375,'2012-08-14','2012-08-14 15:28:55','post_count','1'),(376,'2012-08-14','2012-08-14 15:28:55','comment_count','7'),(377,'2012-08-14','2012-08-14 15:28:59','post_count','1'),(378,'2012-08-14','2012-08-14 15:28:59','comment_count','7'),(379,'2012-08-14','2012-08-14 15:29:03','post_count','1'),(380,'2012-08-14','2012-08-14 15:29:03','comment_count','7'),(381,'2012-08-14','2012-08-14 15:29:06','post_count','1'),(382,'2012-08-14','2012-08-14 15:29:06','comment_count','7'),(383,'2012-08-14','2012-08-14 15:29:10','post_count','1'),(384,'2012-08-14','2012-08-14 15:29:10','comment_count','7'),(385,'2012-08-14','2012-08-14 15:29:13','post_count','1'),(386,'2012-08-14','2012-08-14 15:29:13','comment_count','7'),(387,'2012-08-14','2012-08-14 15:29:17','post_count','1'),(388,'2012-08-14','2012-08-14 15:29:17','comment_count','7'),(389,'2012-08-14','2012-08-14 15:29:21','post_count','1'),(390,'2012-08-14','2012-08-14 15:29:21','comment_count','7'),(391,'2012-08-14','2012-08-14 15:29:24','post_count','1'),(392,'2012-08-14','2012-08-14 15:29:24','comment_count','7'),(393,'2012-08-14','2012-08-14 15:29:28','post_count','1'),(394,'2012-08-14','2012-08-14 15:29:28','comment_count','7'),(395,'2012-08-14','2012-08-14 15:29:31','post_count','1'),(396,'2012-08-14','2012-08-14 15:29:31','comment_count','7'),(397,'2012-08-14','2012-08-14 15:29:35','post_count','1'),(398,'2012-08-14','2012-08-14 15:29:35','comment_count','7'),(399,'2012-08-14','2012-08-14 15:29:39','post_count','1'),(400,'2012-08-14','2012-08-14 15:29:39','comment_count','7'),(401,'2012-08-14','2012-08-14 15:29:42','post_count','1'),(402,'2012-08-14','2012-08-14 15:29:42','comment_count','7'),(403,'2012-08-14','2012-08-14 15:29:46','post_count','1'),(404,'2012-08-14','2012-08-14 15:29:46','comment_count','7'),(405,'2012-08-14','2012-08-14 15:29:49','post_count','1'),(406,'2012-08-14','2012-08-14 15:29:49','comment_count','7'),(407,'2012-08-14','2012-08-14 15:29:53','post_count','1'),(408,'2012-08-14','2012-08-14 15:29:53','comment_count','7'),(409,'2012-08-14','2012-08-14 15:29:57','post_count','1'),(410,'2012-08-14','2012-08-14 15:29:57','comment_count','7'),(411,'2012-08-14','2012-08-14 15:30:00','post_count','1'),(412,'2012-08-14','2012-08-14 15:30:00','comment_count','7'),(413,'2012-08-14','2012-08-14 15:30:04','post_count','1'),(414,'2012-08-14','2012-08-14 15:30:04','comment_count','7'),(415,'2012-08-14','2012-08-14 15:30:07','post_count','1'),(416,'2012-08-14','2012-08-14 15:30:07','comment_count','7'),(417,'2012-08-14','2012-08-14 15:30:11','post_count','1'),(418,'2012-08-14','2012-08-14 15:30:11','comment_count','7'),(419,'2012-08-14','2012-08-14 15:30:15','post_count','1'),(420,'2012-08-14','2012-08-14 15:30:15','comment_count','7'),(421,'2012-08-14','2012-08-14 15:30:18','post_count','1'),(422,'2012-08-14','2012-08-14 15:30:18','comment_count','7'),(423,'2012-08-14','2012-08-14 15:30:22','post_count','1'),(424,'2012-08-14','2012-08-14 15:30:22','comment_count','7'),(425,'2012-08-14','2012-08-14 15:30:25','post_count','1'),(426,'2012-08-14','2012-08-14 15:30:25','comment_count','7'),(427,'2012-08-14','2012-08-14 15:30:29','post_count','1'),(428,'2012-08-14','2012-08-14 15:30:29','comment_count','7'),(429,'2012-08-14','2012-08-14 15:30:33','post_count','1'),(430,'2012-08-14','2012-08-14 15:30:33','comment_count','7'),(431,'2012-08-14','2012-08-14 15:30:36','post_count','1'),(432,'2012-08-14','2012-08-14 15:30:36','comment_count','7'),(433,'2012-08-14','2012-08-14 15:30:40','post_count','1'),(434,'2012-08-14','2012-08-14 15:30:40','comment_count','7'),(435,'2012-08-14','2012-08-14 15:30:43','post_count','1'),(436,'2012-08-14','2012-08-14 15:30:43','comment_count','7'),(437,'2012-08-14','2012-08-14 15:30:47','post_count','1'),(438,'2012-08-14','2012-08-14 15:30:47','comment_count','7'),(439,'2012-08-14','2012-08-14 15:30:51','post_count','1'),(440,'2012-08-14','2012-08-14 15:30:51','comment_count','7'),(441,'2012-08-14','2012-08-14 15:30:54','post_count','1'),(442,'2012-08-14','2012-08-14 15:30:54','comment_count','7'),(443,'2012-08-14','2012-08-14 15:30:58','post_count','1'),(444,'2012-08-14','2012-08-14 15:30:58','comment_count','7'),(445,'2012-08-14','2012-08-14 15:31:01','post_count','1'),(446,'2012-08-14','2012-08-14 15:31:01','comment_count','7'),(447,'2012-08-14','2012-08-14 15:31:05','post_count','1'),(448,'2012-08-14','2012-08-14 15:31:05','comment_count','7'),(449,'2012-08-14','2012-08-14 15:31:09','post_count','1'),(450,'2012-08-14','2012-08-14 15:31:09','comment_count','7'),(451,'2012-08-14','2012-08-14 15:31:12','post_count','1'),(452,'2012-08-14','2012-08-14 15:31:12','comment_count','7'),(453,'2012-08-14','2012-08-14 15:31:16','post_count','1'),(454,'2012-08-14','2012-08-14 15:31:16','comment_count','7'),(455,'2012-08-14','2012-08-14 15:31:19','post_count','1'),(456,'2012-08-14','2012-08-14 15:31:19','comment_count','7'),(457,'2012-08-14','2012-08-14 15:31:23','post_count','1'),(458,'2012-08-14','2012-08-14 15:31:23','comment_count','7'),(459,'2012-08-14','2012-08-14 15:31:27','post_count','1'),(460,'2012-08-14','2012-08-14 15:31:27','comment_count','7'),(461,'2012-08-14','2012-08-14 15:31:30','post_count','1'),(462,'2012-08-14','2012-08-14 15:31:30','comment_count','7'),(463,'2012-08-14','2012-08-14 15:31:34','post_count','1'),(464,'2012-08-14','2012-08-14 15:31:34','comment_count','7'),(465,'2012-08-14','2012-08-14 15:31:37','post_count','1'),(466,'2012-08-14','2012-08-14 15:31:37','comment_count','7'),(467,'2012-08-14','2012-08-14 15:31:41','post_count','1'),(468,'2012-08-14','2012-08-14 15:31:41','comment_count','7'),(469,'2012-08-14','2012-08-14 15:31:45','post_count','1'),(470,'2012-08-14','2012-08-14 15:31:45','comment_count','7'),(471,'2012-08-14','2012-08-14 15:31:48','post_count','1'),(472,'2012-08-14','2012-08-14 15:31:48','comment_count','7'),(473,'2012-08-14','2012-08-14 15:31:52','post_count','1'),(474,'2012-08-14','2012-08-14 15:31:52','comment_count','7'),(475,'2012-08-14','2012-08-14 15:31:55','post_count','1'),(476,'2012-08-14','2012-08-14 15:31:55','comment_count','7'),(477,'2012-08-14','2012-08-14 15:31:59','post_count','1'),(478,'2012-08-14','2012-08-14 15:31:59','comment_count','7'),(479,'2012-08-14','2012-08-14 15:32:03','post_count','1'),(480,'2012-08-14','2012-08-14 15:32:03','comment_count','7'),(481,'2012-08-14','2012-08-14 15:32:06','post_count','1'),(482,'2012-08-14','2012-08-14 15:32:06','comment_count','7'),(483,'2012-08-14','2012-08-14 15:32:10','post_count','1'),(484,'2012-08-14','2012-08-14 15:32:10','comment_count','7'),(485,'2012-08-14','2012-08-14 15:32:13','post_count','1'),(486,'2012-08-14','2012-08-14 15:32:13','comment_count','7'),(487,'2012-08-14','2012-08-14 15:32:17','post_count','1'),(488,'2012-08-14','2012-08-14 15:32:17','comment_count','7'),(489,'2012-08-14','2012-08-14 15:32:21','post_count','1'),(490,'2012-08-14','2012-08-14 15:32:21','comment_count','7'),(491,'2012-08-14','2012-08-14 15:32:24','post_count','1'),(492,'2012-08-14','2012-08-14 15:32:24','comment_count','7'),(493,'2012-08-14','2012-08-14 15:32:28','post_count','1'),(494,'2012-08-14','2012-08-14 15:32:28','comment_count','7'),(495,'2012-08-14','2012-08-14 15:32:31','post_count','1'),(496,'2012-08-14','2012-08-14 15:32:31','comment_count','7'),(497,'2012-08-14','2012-08-14 15:32:35','post_count','1'),(498,'2012-08-14','2012-08-14 15:32:35','comment_count','7'),(499,'2012-08-14','2012-08-14 15:32:39','post_count','1'),(500,'2012-08-14','2012-08-14 15:32:39','comment_count','7'),(501,'2012-08-14','2012-08-14 15:32:42','post_count','1'),(502,'2012-08-14','2012-08-14 15:32:42','comment_count','7'),(503,'2012-08-14','2012-08-14 15:32:46','post_count','1'),(504,'2012-08-14','2012-08-14 15:32:46','comment_count','7'),(505,'2012-08-14','2012-08-14 15:32:49','post_count','1'),(506,'2012-08-14','2012-08-14 15:32:49','comment_count','7'),(507,'2012-08-14','2012-08-14 15:32:53','post_count','1'),(508,'2012-08-14','2012-08-14 15:32:53','comment_count','7'),(509,'2012-08-14','2012-08-14 15:32:57','post_count','1'),(510,'2012-08-14','2012-08-14 15:32:57','comment_count','7'),(511,'2012-08-14','2012-08-14 15:33:00','post_count','1'),(512,'2012-08-14','2012-08-14 15:33:00','comment_count','7'),(513,'2012-08-14','2012-08-14 15:33:04','post_count','1'),(514,'2012-08-14','2012-08-14 15:33:04','comment_count','7'),(515,'2012-08-14','2012-08-14 15:33:07','post_count','1'),(516,'2012-08-14','2012-08-14 15:33:07','comment_count','7'),(517,'2012-08-14','2012-08-14 15:33:11','post_count','1'),(518,'2012-08-14','2012-08-14 15:33:11','comment_count','7'),(519,'2012-08-14','2012-08-14 15:33:15','post_count','1'),(520,'2012-08-14','2012-08-14 15:33:15','comment_count','7'),(521,'2012-08-14','2012-08-14 15:33:35','post_count','1'),(522,'2012-08-14','2012-08-14 15:33:36','comment_count','7'),(523,'2012-08-14','2012-08-14 15:33:38','post_count','1'),(524,'2012-08-14','2012-08-14 15:33:38','comment_count','7'),(525,'2012-08-14','2012-08-14 15:33:42','post_count','1'),(526,'2012-08-14','2012-08-14 15:33:42','comment_count','7'),(527,'2012-08-14','2012-08-14 15:33:46','post_count','1'),(528,'2012-08-14','2012-08-14 15:33:46','comment_count','7'),(529,'2012-08-14','2012-08-14 15:33:49','post_count','1'),(530,'2012-08-14','2012-08-14 15:33:49','comment_count','7'),(531,'2012-08-14','2012-08-14 15:33:53','post_count','1'),(532,'2012-08-14','2012-08-14 15:33:53','comment_count','7'),(533,'2012-08-14','2012-08-14 15:33:56','post_count','1'),(534,'2012-08-14','2012-08-14 15:33:56','comment_count','7'),(535,'2012-08-14','2012-08-14 15:34:00','post_count','1'),(536,'2012-08-14','2012-08-14 15:34:00','comment_count','7'),(537,'2012-08-14','2012-08-14 15:34:04','post_count','1'),(538,'2012-08-14','2012-08-14 15:34:04','comment_count','7'),(539,'2012-08-14','2012-08-14 15:34:07','post_count','1'),(540,'2012-08-14','2012-08-14 15:34:07','comment_count','7'),(541,'2012-08-14','2012-08-14 15:34:11','post_count','1'),(542,'2012-08-14','2012-08-14 15:34:11','comment_count','7'),(543,'2012-08-14','2012-08-14 15:34:14','post_count','1'),(544,'2012-08-14','2012-08-14 15:34:14','comment_count','7'),(545,'2012-08-14','2012-08-14 15:34:18','post_count','1'),(546,'2012-08-14','2012-08-14 15:34:18','comment_count','7'),(547,'2012-08-14','2012-08-14 15:34:22','post_count','1'),(548,'2012-08-14','2012-08-14 15:34:22','comment_count','7'),(549,'2012-08-14','2012-08-14 15:34:25','post_count','1'),(550,'2012-08-14','2012-08-14 15:34:25','comment_count','7'),(551,'2012-08-14','2012-08-14 15:34:29','post_count','1'),(552,'2012-08-14','2012-08-14 15:34:29','comment_count','7'),(553,'2012-08-14','2012-08-14 15:34:32','post_count','1'),(554,'2012-08-14','2012-08-14 15:34:32','comment_count','7'),(555,'2012-08-14','2012-08-14 15:34:36','post_count','1'),(556,'2012-08-14','2012-08-14 15:34:36','comment_count','7'),(557,'2012-08-14','2012-08-14 15:34:40','post_count','1'),(558,'2012-08-14','2012-08-14 15:34:40','comment_count','7'),(559,'2012-08-14','2012-08-14 15:34:43','post_count','1'),(560,'2012-08-14','2012-08-14 15:34:43','comment_count','7'),(561,'2012-08-14','2012-08-14 15:34:47','post_count','1'),(562,'2012-08-14','2012-08-14 15:34:47','comment_count','7'),(563,'2012-08-14','2012-08-14 15:34:50','post_count','1'),(564,'2012-08-14','2012-08-14 15:34:50','comment_count','7'),(565,'2012-08-14','2012-08-14 15:34:54','post_count','1'),(566,'2012-08-14','2012-08-14 15:34:54','comment_count','7'),(567,'2012-08-14','2012-08-14 15:34:58','post_count','1'),(568,'2012-08-14','2012-08-14 15:34:58','comment_count','7'),(569,'2012-08-14','2012-08-14 15:35:01','post_count','1'),(570,'2012-08-14','2012-08-14 15:35:01','comment_count','7'),(571,'2012-08-14','2012-08-14 15:35:05','post_count','1'),(572,'2012-08-14','2012-08-14 15:35:05','comment_count','7'),(573,'2012-08-14','2012-08-14 15:35:08','post_count','1'),(574,'2012-08-14','2012-08-14 15:35:08','comment_count','7'),(575,'2012-08-14','2012-08-14 15:35:12','post_count','1'),(576,'2012-08-14','2012-08-14 15:35:12','comment_count','7'),(577,'2012-08-14','2012-08-14 15:35:16','post_count','1'),(578,'2012-08-14','2012-08-14 15:35:16','comment_count','7'),(579,'2012-08-14','2012-08-14 15:35:19','post_count','1'),(580,'2012-08-14','2012-08-14 15:35:19','comment_count','7'),(581,'2012-08-14','2012-08-14 15:35:23','post_count','1'),(582,'2012-08-14','2012-08-14 15:35:23','comment_count','7'),(583,'2012-08-14','2012-08-14 15:35:26','post_count','1'),(584,'2012-08-14','2012-08-14 15:35:26','comment_count','7'),(585,'2012-08-14','2012-08-14 15:35:30','post_count','1'),(586,'2012-08-14','2012-08-14 15:35:30','comment_count','7'),(587,'2012-08-14','2012-08-14 15:35:34','post_count','1'),(588,'2012-08-14','2012-08-14 15:35:34','comment_count','7'),(589,'2012-08-14','2012-08-14 15:35:37','post_count','1'),(590,'2012-08-14','2012-08-14 15:35:37','comment_count','7'),(591,'2012-08-14','2012-08-14 15:35:41','post_count','1'),(592,'2012-08-14','2012-08-14 15:35:41','comment_count','7'),(593,'2012-08-14','2012-08-14 15:35:44','post_count','1'),(594,'2012-08-14','2012-08-14 15:35:44','comment_count','7'),(595,'2012-08-14','2012-08-14 15:35:48','post_count','1'),(596,'2012-08-14','2012-08-14 15:35:48','comment_count','7'),(597,'2012-08-14','2012-08-14 15:35:52','post_count','1'),(598,'2012-08-14','2012-08-14 15:35:52','comment_count','7'),(599,'2012-08-14','2012-08-14 15:35:55','post_count','1'),(600,'2012-08-14','2012-08-14 15:35:55','comment_count','7'),(601,'2012-08-14','2012-08-14 15:35:59','post_count','1'),(602,'2012-08-14','2012-08-14 15:35:59','comment_count','7'),(603,'2012-08-14','2012-08-14 15:36:02','post_count','1'),(604,'2012-08-14','2012-08-14 15:36:02','comment_count','7'),(605,'2012-08-14','2012-08-14 15:36:06','post_count','1'),(606,'2012-08-14','2012-08-14 15:36:06','comment_count','7'),(607,'2012-08-14','2012-08-14 15:36:10','post_count','1'),(608,'2012-08-14','2012-08-14 15:36:10','comment_count','7'),(609,'2012-08-14','2012-08-14 15:36:13','post_count','1'),(610,'2012-08-14','2012-08-14 15:36:13','comment_count','7'),(611,'2012-08-14','2012-08-14 15:36:17','post_count','1'),(612,'2012-08-14','2012-08-14 15:36:17','comment_count','7'),(613,'2012-08-14','2012-08-14 15:36:20','post_count','1'),(614,'2012-08-14','2012-08-14 15:36:20','comment_count','7'),(615,'2012-08-14','2012-08-14 15:36:24','post_count','1'),(616,'2012-08-14','2012-08-14 15:36:24','comment_count','7'),(617,'2012-08-14','2012-08-14 15:36:28','post_count','1'),(618,'2012-08-14','2012-08-14 15:36:28','comment_count','7'),(619,'2012-08-14','2012-08-14 15:36:31','post_count','1'),(620,'2012-08-14','2012-08-14 15:36:31','comment_count','7'),(621,'2012-08-14','2012-08-14 15:36:35','post_count','1'),(622,'2012-08-14','2012-08-14 15:36:35','comment_count','7'),(623,'2012-08-14','2012-08-14 15:36:38','post_count','1'),(624,'2012-08-14','2012-08-14 15:36:38','comment_count','7'),(625,'2012-08-14','2012-08-14 15:36:42','post_count','1'),(626,'2012-08-14','2012-08-14 15:36:42','comment_count','7'),(627,'2012-08-14','2012-08-14 15:36:46','post_count','1'),(628,'2012-08-14','2012-08-14 15:36:46','comment_count','7'),(629,'2012-08-14','2012-08-14 15:36:49','post_count','1'),(630,'2012-08-14','2012-08-14 15:36:49','comment_count','7'),(631,'2012-08-14','2012-08-14 15:36:53','post_count','1'),(632,'2012-08-14','2012-08-14 15:36:53','comment_count','7'),(633,'2012-08-14','2012-08-14 15:36:56','post_count','1'),(634,'2012-08-14','2012-08-14 15:36:56','comment_count','7'),(635,'2012-08-14','2012-08-14 15:37:00','post_count','1'),(636,'2012-08-14','2012-08-14 15:37:00','comment_count','7'),(637,'2012-08-14','2012-08-14 15:37:04','post_count','1'),(638,'2012-08-14','2012-08-14 15:37:04','comment_count','7'),(639,'2012-08-14','2012-08-14 15:37:07','post_count','1'),(640,'2012-08-14','2012-08-14 15:37:07','comment_count','7'),(641,'2012-08-14','2012-08-14 15:37:11','post_count','1'),(642,'2012-08-14','2012-08-14 15:37:11','comment_count','7'),(643,'2012-08-14','2012-08-14 15:37:14','post_count','1'),(644,'2012-08-14','2012-08-14 15:37:14','comment_count','7'),(645,'2012-08-14','2012-08-14 15:37:18','post_count','1'),(646,'2012-08-14','2012-08-14 15:37:18','comment_count','7'),(647,'2012-08-14','2012-08-14 15:37:22','post_count','1'),(648,'2012-08-14','2012-08-14 15:37:22','comment_count','7'),(649,'2012-08-14','2012-08-14 15:37:25','post_count','1'),(650,'2012-08-14','2012-08-14 15:37:25','comment_count','7'),(651,'2012-08-14','2012-08-14 15:37:29','post_count','1'),(652,'2012-08-14','2012-08-14 15:37:29','comment_count','7'),(653,'2012-08-14','2012-08-14 15:37:32','post_count','1'),(654,'2012-08-14','2012-08-14 15:37:32','comment_count','7'),(655,'2012-08-14','2012-08-14 15:37:36','post_count','1'),(656,'2012-08-14','2012-08-14 15:37:36','comment_count','7'),(657,'2012-08-14','2012-08-14 15:37:40','post_count','1'),(658,'2012-08-14','2012-08-14 15:37:40','comment_count','7'),(659,'2012-08-14','2012-08-14 15:37:43','post_count','1'),(660,'2012-08-14','2012-08-14 15:37:43','comment_count','7'),(661,'2012-08-14','2012-08-14 15:37:47','post_count','1'),(662,'2012-08-14','2012-08-14 15:37:47','comment_count','7'),(663,'2012-08-14','2012-08-14 15:37:50','post_count','1'),(664,'2012-08-14','2012-08-14 15:37:50','comment_count','7'),(665,'2012-08-14','2012-08-14 15:37:54','post_count','1'),(666,'2012-08-14','2012-08-14 15:37:54','comment_count','7'),(667,'2012-08-14','2012-08-14 15:37:58','post_count','1'),(668,'2012-08-14','2012-08-14 15:37:58','comment_count','7'),(669,'2012-08-14','2012-08-14 15:38:01','post_count','1'),(670,'2012-08-14','2012-08-14 15:38:01','comment_count','7'),(671,'2012-08-14','2012-08-14 15:38:05','post_count','1'),(672,'2012-08-14','2012-08-14 15:38:05','comment_count','7'),(673,'2012-08-14','2012-08-14 15:38:08','post_count','1'),(674,'2012-08-14','2012-08-14 15:38:08','comment_count','7'),(675,'2012-08-14','2012-08-14 15:38:12','post_count','1'),(676,'2012-08-14','2012-08-14 15:38:12','comment_count','7'),(677,'2012-08-14','2012-08-14 15:38:16','post_count','1'),(678,'2012-08-14','2012-08-14 15:38:16','comment_count','7'),(679,'2012-08-14','2012-08-14 15:38:19','post_count','1'),(680,'2012-08-14','2012-08-14 15:38:19','comment_count','7'),(681,'2012-08-14','2012-08-14 15:38:23','post_count','1'),(682,'2012-08-14','2012-08-14 15:38:23','comment_count','7'),(683,'2012-08-14','2012-08-14 15:38:26','post_count','1'),(684,'2012-08-14','2012-08-14 15:38:26','comment_count','7'),(685,'2012-08-14','2012-08-14 15:38:30','post_count','1'),(686,'2012-08-14','2012-08-14 15:38:30','comment_count','7'),(687,'2012-08-14','2012-08-14 15:38:34','post_count','1'),(688,'2012-08-14','2012-08-14 15:38:34','comment_count','7'),(689,'2012-08-14','2012-08-14 15:38:37','post_count','1'),(690,'2012-08-14','2012-08-14 15:38:37','comment_count','7'),(691,'2012-08-14','2012-08-14 15:38:41','post_count','1'),(692,'2012-08-14','2012-08-14 15:38:41','comment_count','7'),(693,'2012-08-14','2012-08-14 15:38:44','post_count','1'),(694,'2012-08-14','2012-08-14 15:38:44','comment_count','7'),(695,'2012-08-14','2012-08-14 15:39:03','post_count','1'),(696,'2012-08-14','2012-08-14 15:39:03','comment_count','7'),(697,'2012-08-14','2012-08-14 15:39:06','post_count','1'),(698,'2012-08-14','2012-08-14 15:39:06','comment_count','7'),(699,'2012-08-14','2012-08-14 15:39:10','post_count','1'),(700,'2012-08-14','2012-08-14 15:39:10','comment_count','7'),(701,'2012-08-14','2012-08-14 15:39:13','post_count','1'),(702,'2012-08-14','2012-08-14 15:39:13','comment_count','7'),(703,'2012-08-14','2012-08-14 15:39:17','post_count','1'),(704,'2012-08-14','2012-08-14 15:39:17','comment_count','7'),(705,'2012-08-14','2012-08-14 15:39:20','post_count','1'),(706,'2012-08-14','2012-08-14 15:39:20','comment_count','7'),(707,'2012-08-14','2012-08-14 15:39:24','post_count','1'),(708,'2012-08-14','2012-08-14 15:39:24','comment_count','7'),(709,'2012-08-14','2012-08-14 15:40:33','post_count','1'),(710,'2012-08-14','2012-08-14 15:40:33','comment_count','7'),(711,'2012-08-14','2012-08-14 15:59:28','post_count','1'),(712,'2012-08-14','2012-08-14 15:59:28','comment_count','7'),(713,'2012-08-14','2012-08-14 15:59:41','click_count','46'),(714,'2012-08-14','2012-08-14 15:59:55','click_count','47'),(715,'2012-08-14','2012-08-14 15:59:56','click_count','48'),(716,'2012-08-14','2012-08-14 15:59:57','click_count','49'),(717,'2012-08-14','2012-08-14 15:59:58','click_count','50'),(718,'2012-08-14','2012-08-14 15:59:59','click_count','51'),(719,'2012-08-14','2012-08-14 16:00:01','click_count','52'),(720,'2012-08-14','2012-08-14 16:00:01','click_count','53'),(721,'2012-08-14','2012-08-14 16:00:03','click_count','54'),(722,'2012-08-14','2012-08-14 16:00:04','click_count','55'),(723,'2012-08-14','2012-08-14 16:00:04','click_count','56'),(724,'2012-08-14','2012-08-14 16:00:04','click_count','57'),(725,'2012-08-14','2012-08-14 16:00:04','click_count','58'),(726,'2012-08-14','2012-08-14 16:00:04','click_count','59'),(727,'2012-08-14','2012-08-14 16:00:04','click_count','60'),(728,'2012-08-14','2012-08-14 16:00:04','click_count','61'),(729,'2012-08-14','2012-08-14 16:00:04','click_count','62'),(730,'2012-08-14','2012-08-14 16:00:05','click_count','63'),(731,'2012-08-14','2012-08-14 16:00:05','click_count','64'),(732,'2012-08-14','2012-08-14 16:00:05','click_count','65'),(733,'2012-08-14','2012-08-14 16:00:05','click_count','66'),(734,'2012-08-14','2012-08-14 16:00:05','click_count','67'),(735,'2012-08-14','2012-08-14 16:00:05','click_count','68'),(736,'2012-08-14','2012-08-14 16:00:05','click_count','69'),(737,'2012-08-14','2012-08-14 16:00:05','click_count','70'),(738,'2012-08-14','2012-08-14 16:00:05','click_count','71'),(739,'2012-08-14','2012-08-14 16:00:05','click_count','72'),(740,'2012-08-14','2012-08-14 16:00:05','click_count','72'),(741,'2012-08-14','2012-08-14 16:00:05','click_count','73'),(742,'2012-08-14','2012-08-14 16:00:05','click_count','74'),(743,'2012-08-14','2012-08-14 16:00:05','click_count','75'),(744,'2012-08-14','2012-08-14 16:00:05','click_count','76'),(745,'2012-08-14','2012-08-14 16:00:05','click_count','77'),(746,'2012-08-14','2012-08-14 16:00:05','click_count','78'),(747,'2012-08-14','2012-08-14 16:00:05','click_count','79'),(748,'2012-08-14','2012-08-14 16:00:05','click_count','80'),(749,'2012-08-14','2012-08-14 16:00:05','click_count','81'),(750,'2012-08-14','2012-08-14 16:00:05','click_count','82'),(751,'2012-08-14','2012-08-14 16:00:06','click_count','83'),(752,'2012-08-14','2012-08-14 16:00:06','click_count','84'),(753,'2012-08-14','2012-08-14 16:00:06','click_count','84'),(754,'2012-08-14','2012-08-14 16:00:06','click_count','85'),(755,'2012-08-14','2012-08-14 16:00:06','click_count','86'),(756,'2012-08-14','2012-08-14 16:00:06','click_count','86'),(757,'2012-08-14','2012-08-14 16:00:06','click_count','87'),(758,'2012-08-14','2012-08-14 16:00:06','click_count','88'),(759,'2012-08-14','2012-08-14 16:00:06','click_count','89'),(760,'2012-08-14','2012-08-14 16:00:06','click_count','90'),(761,'2012-08-14','2012-08-14 16:00:06','click_count','91'),(762,'2012-08-14','2012-08-14 16:00:06','click_count','92'),(763,'2012-08-14','2012-08-14 16:00:06','click_count','93'),(764,'2012-08-14','2012-08-14 16:00:06','click_count','94'),(765,'2012-08-14','2012-08-14 16:00:06','click_count','95'),(766,'2012-08-14','2012-08-14 16:00:06','click_count','95'),(767,'2012-08-14','2012-08-14 16:00:06','click_count','96'),(768,'2012-08-14','2012-08-14 16:00:06','click_count','97'),(769,'2012-08-14','2012-08-14 16:00:06','click_count','98'),(770,'2012-08-14','2012-08-14 16:00:06','click_count','99'),(771,'2012-08-14','2012-08-14 16:00:06','click_count','100'),(772,'2012-08-14','2012-08-14 16:00:06','click_count','93'),(773,'2012-08-14','2012-08-14 16:00:06','click_count','94'),(774,'2012-08-14','2012-08-14 16:00:06','click_count','95'),(775,'2012-08-14','2012-08-14 16:00:06','click_count','96'),(776,'2012-08-14','2012-08-14 16:00:06','click_count','97'),(777,'2012-08-14','2012-08-14 16:00:07','click_count','98'),(778,'2012-08-14','2012-08-14 16:00:07','click_count','99'),(779,'2012-08-14','2012-08-14 16:00:07','click_count','100'),(780,'2012-08-14','2012-08-14 16:00:07','click_count','100'),(781,'2012-08-14','2012-08-14 16:00:07','click_count','100'),(782,'2012-08-14','2012-08-14 16:00:07','click_count','101'),(783,'2012-08-14','2012-08-14 16:00:08','click_count','102'),(784,'2012-08-14','2012-08-14 16:00:07','click_count','101'),(785,'2012-08-14','2012-08-14 16:00:07','click_count','101'),(786,'2012-08-14','2012-08-14 16:00:07','click_count','101'),(787,'2012-08-14','2012-08-14 16:00:08','click_count','103'),(788,'2012-08-14','2012-08-14 16:00:08','click_count','103'),(789,'2012-08-14','2012-08-14 16:00:08','click_count','104'),(790,'2012-08-14','2012-08-14 16:00:08','click_count','102'),(791,'2012-08-14','2012-08-14 16:00:08','click_count','104'),(792,'2012-08-14','2012-08-14 16:00:08','click_count','104'),(793,'2012-08-14','2012-08-14 16:00:08','click_count','105'),(794,'2012-08-14','2012-08-14 16:00:09','click_count','105'),(795,'2012-08-14','2012-08-14 16:00:09','click_count','105'),(796,'2012-08-14','2012-08-14 16:00:09','click_count','103'),(797,'2012-08-14','2012-08-14 16:00:09','click_count','103'),(798,'2012-08-14','2012-08-14 16:00:09','click_count','103'),(799,'2012-08-14','2012-08-14 16:00:09','click_count','106'),(800,'2012-08-14','2012-08-14 16:00:09','click_count','106'),(801,'2012-08-14','2012-08-14 16:00:09','click_count','104'),(802,'2012-08-14','2012-08-14 16:00:21','click_count','105'),(803,'2012-08-14','2012-08-14 16:00:23','click_count','106'),(804,'2012-08-14','2012-08-14 16:00:24','click_count','107'),(805,'2012-08-14','2012-08-14 16:00:25','click_count','108'),(806,'2012-08-14','2012-08-14 16:00:27','click_count','109'),(807,'2012-08-14','2012-08-14 16:00:28','click_count','110'),(808,'2012-08-14','2012-08-14 16:00:29','click_count','111'),(809,'2012-08-14','2012-08-14 16:00:31','click_count','112'),(810,'2012-08-14','2012-08-14 16:00:32','click_count','113'),(811,'2012-08-14','2012-08-14 16:00:34','click_count','114'),(812,'2012-08-14','2012-08-14 16:00:35','click_count','115'),(813,'2012-08-14','2012-08-14 16:00:37','click_count','116'),(814,'2012-08-14','2012-08-14 16:00:38','click_count','117'),(815,'2012-08-14','2012-08-14 16:00:40','click_count','118'),(816,'2012-08-14','2012-08-14 16:00:41','click_count','119'),(817,'2012-08-14','2012-08-14 16:00:42','click_count','120'),(818,'2012-08-14','2012-08-14 16:00:43','click_count','121'),(819,'2012-08-14','2012-08-14 16:01:09','click_count','122'),(820,'2012-08-14','2012-08-14 16:01:10','click_count','123'),(821,'2012-08-14','2012-08-14 16:01:11','click_count','124'),(822,'2012-08-14','2012-08-14 16:01:12','click_count','125'),(823,'2012-08-14','2012-08-14 16:01:12','click_count','126'),(824,'2012-08-14','2012-08-14 16:01:12','click_count','127'),(825,'2012-08-14','2012-08-14 16:01:13','click_count','128'),(826,'2012-08-14','2012-08-14 16:01:13','click_count','129'),(827,'2012-08-14','2012-08-14 16:01:13','click_count','130'),(828,'2012-08-14','2012-08-14 16:01:14','click_count','131'),(829,'2012-08-14','2012-08-14 16:01:14','click_count','132'),(830,'2012-08-14','2012-08-14 16:01:14','click_count','133'),(831,'2012-08-14','2012-08-14 16:01:14','click_count','134'),(832,'2012-08-14','2012-08-14 16:01:14','click_count','135'),(833,'2012-08-14','2012-08-14 16:01:15','click_count','136'),(834,'2012-08-14','2012-08-14 16:01:16','click_count','137'),(835,'2012-08-14','2012-08-14 16:01:17','click_count','138'),(836,'2012-08-14','2012-08-14 16:01:17','click_count','139'),(837,'2012-08-14','2012-08-14 16:01:17','click_count','140'),(838,'2012-08-14','2012-08-14 16:01:17','click_count','141'),(839,'2012-08-14','2012-08-14 16:01:17','click_count','142'),(840,'2012-08-14','2012-08-14 16:01:17','click_count','143'),(841,'2012-08-14','2012-08-14 16:01:17','click_count','144'),(842,'2012-08-14','2012-08-14 16:01:17','click_count','145'),(843,'2012-08-14','2012-08-14 16:01:17','click_count','145'),(844,'2012-08-14','2012-08-14 16:01:17','click_count','146'),(845,'2012-08-14','2012-08-14 16:01:17','click_count','147'),(846,'2012-08-14','2012-08-14 16:01:17','click_count','148'),(847,'2012-08-14','2012-08-14 16:01:17','click_count','149'),(848,'2012-08-14','2012-08-14 16:01:17','click_count','150'),(849,'2012-08-14','2012-08-14 16:01:17','click_count','151'),(850,'2012-08-14','2012-08-14 16:01:55','click_count','152'),(851,'2012-08-14','2012-08-14 16:02:08','click_count','153'),(852,'2012-08-14','2012-08-14 16:02:57','click_count','154'),(853,'2012-08-14','2012-08-14 16:05:34','click_count','155'),(854,'2012-08-14','2012-08-14 16:05:49','click_count','156'),(855,'2012-08-14','2012-08-14 16:06:11','click_count','157'),(856,'2012-08-14','2012-08-14 16:06:12','click_count','158'),(857,'2012-08-14','2012-08-14 16:06:12','click_count','159'),(858,'2012-08-14','2012-08-14 16:06:13','click_count','160'),(859,'2012-08-14','2012-08-14 16:06:27','click_count','161'),(860,'2012-08-14','2012-08-14 16:06:47','click_count','162'),(861,'2012-08-14','2012-08-14 16:08:00','click_count','163'),(862,'2012-08-14','2012-08-14 16:08:10','click_count','164'),(863,'2012-08-14','2012-08-14 16:08:29','click_count','165'),(864,'2012-08-14','2012-08-14 16:11:54','post_count','1'),(865,'2012-08-14','2012-08-14 16:11:55','comment_count','7'),(866,'2012-08-14','2012-08-14 16:11:58','post_count','1'),(867,'2012-08-14','2012-08-14 16:11:58','comment_count','7'),(868,'2012-08-14','2012-08-14 16:12:01','post_count','1'),(869,'2012-08-14','2012-08-14 16:12:01','comment_count','7'),(870,'2012-08-14','2012-08-14 16:12:05','post_count','1'),(871,'2012-08-14','2012-08-14 16:12:05','comment_count','7'),(872,'2012-08-14','2012-08-14 16:12:05','click_count','166'),(873,'2012-08-14','2012-08-14 16:12:08','post_count','1'),(874,'2012-08-14','2012-08-14 16:12:08','comment_count','7'),(875,'2012-08-14','2012-08-14 16:12:10','click_count','167'),(876,'2012-08-14','2012-08-14 16:12:10','click_count','168'),(877,'2012-08-14','2012-08-14 16:12:11','click_count','169'),(878,'2012-08-14','2012-08-14 16:12:11','click_count','170'),(879,'2012-08-14','2012-08-14 16:12:11','click_count','171'),(880,'2012-08-14','2012-08-14 16:12:11','click_count','172'),(881,'2012-08-14','2012-08-14 16:12:11','click_count','173'),(882,'2012-08-14','2012-08-14 16:12:12','click_count','174'),(883,'2012-08-14','2012-08-14 16:12:12','post_count','1'),(884,'2012-08-14','2012-08-14 16:12:12','comment_count','7'),(885,'2012-08-14','2012-08-14 16:12:12','click_count','175'),(886,'2012-08-14','2012-08-14 16:12:12','click_count','176'),(887,'2012-08-14','2012-08-14 16:12:13','click_count','177'),(888,'2012-08-14','2012-08-14 16:12:13','click_count','178'),(889,'2012-08-14','2012-08-14 16:12:13','click_count','179'),(890,'2012-08-14','2012-08-14 16:12:13','click_count','180'),(891,'2012-08-14','2012-08-14 16:12:13','click_count','181'),(892,'2012-08-14','2012-08-14 16:12:14','click_count','182'),(893,'2012-08-14','2012-08-14 16:12:14','click_count','183'),(894,'2012-08-14','2012-08-14 16:12:14','click_count','184'),(895,'2012-08-14','2012-08-14 16:12:14','click_count','185'),(896,'2012-08-14','2012-08-14 16:12:16','post_count','1'),(897,'2012-08-14','2012-08-14 16:12:16','comment_count','7'),(898,'2012-08-14','2012-08-14 16:12:16','click_count','186'),(899,'2012-08-14','2012-08-14 16:12:17','click_count','187'),(900,'2012-08-14','2012-08-14 16:12:18','click_count','188'),(901,'2012-08-14','2012-08-14 16:12:19','click_count','189'),(902,'2012-08-14','2012-08-14 16:12:19','click_count','190'),(903,'2012-08-14','2012-08-14 16:12:19','click_count','191'),(904,'2012-08-14','2012-08-14 16:12:19','click_count','192'),(905,'2012-08-14','2012-08-14 16:12:19','click_count','193'),(906,'2012-08-14','2012-08-14 16:12:19','click_count','194'),(907,'2012-08-14','2012-08-14 16:12:19','click_count','195'),(908,'2012-08-14','2012-08-14 16:12:19','click_count','196'),(909,'2012-08-14','2012-08-14 16:12:19','post_count','1'),(910,'2012-08-14','2012-08-14 16:12:19','comment_count','7'),(911,'2012-08-14','2012-08-14 16:12:19','click_count','197'),(912,'2012-08-14','2012-08-14 16:12:19','click_count','198'),(913,'2012-08-14','2012-08-14 16:12:19','click_count','199'),(914,'2012-08-14','2012-08-14 16:12:20','click_count','200'),(915,'2012-08-14','2012-08-14 16:12:20','click_count','201'),(916,'2012-08-14','2012-08-14 16:12:20','click_count','201'),(917,'2012-08-14','2012-08-14 16:12:20','click_count','202'),(918,'2012-08-14','2012-08-14 16:12:20','click_count','203'),(919,'2012-08-14','2012-08-14 16:12:20','click_count','203'),(920,'2012-08-14','2012-08-14 16:12:20','click_count','203'),(921,'2012-08-14','2012-08-14 16:12:20','click_count','203'),(922,'2012-08-14','2012-08-14 16:12:20','click_count','204'),(923,'2012-08-14','2012-08-14 16:12:21','click_count','204'),(924,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(925,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(926,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(927,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(928,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(929,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(930,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(931,'2012-08-14','2012-08-14 16:12:21','click_count','205'),(932,'2012-08-14','2012-08-14 16:12:22','click_count','206'),(933,'2012-08-14','2012-08-14 16:12:22','click_count','206'),(934,'2012-08-14','2012-08-14 16:12:22','click_count','206'),(935,'2012-08-14','2012-08-14 16:12:22','click_count','206'),(936,'2012-08-14','2012-08-14 16:12:22','click_count','206'),(937,'2012-08-14','2012-08-14 16:12:22','click_count','206'),(938,'2012-08-14','2012-08-14 16:12:22','click_count','207'),(939,'2012-08-14','2012-08-14 16:12:22','click_count','207'),(940,'2012-08-14','2012-08-14 16:12:23','click_count','206'),(941,'2012-08-14','2012-08-14 16:12:23','post_count','1'),(942,'2012-08-14','2012-08-14 16:12:23','click_count','207'),(943,'2012-08-14','2012-08-14 16:12:23','click_count','207'),(944,'2012-08-14','2012-08-14 16:12:23','click_count','207'),(945,'2012-08-14','2012-08-14 16:12:23','click_count','207'),(946,'2012-08-14','2012-08-14 16:12:24','click_count','207'),(947,'2012-08-14','2012-08-14 16:12:24','click_count','208'),(948,'2012-08-14','2012-08-14 16:12:24','click_count','208'),(949,'2012-08-14','2012-08-14 16:12:24','click_count','207'),(950,'2012-08-14','2012-08-14 16:12:24','click_count','207'),(951,'2012-08-14','2012-08-14 16:12:24','click_count','207'),(952,'2012-08-14','2012-08-14 16:12:25','comment_count','7'),(953,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(954,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(955,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(956,'2012-08-14','2012-08-14 16:12:25','click_count','209'),(957,'2012-08-14','2012-08-14 16:12:25','click_count','209'),(958,'2012-08-14','2012-08-14 16:12:25','click_count','209'),(959,'2012-08-14','2012-08-14 16:12:25','click_count','209'),(960,'2012-08-14','2012-08-14 16:12:25','click_count','209'),(961,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(962,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(963,'2012-08-14','2012-08-14 16:12:25','click_count','210'),(964,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(965,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(966,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(967,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(968,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(969,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(970,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(971,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(972,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(973,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(974,'2012-08-14','2012-08-14 16:12:25','click_count','208'),(975,'2012-08-14','2012-08-14 16:12:25','click_count','209'),(976,'2012-08-14','2012-08-14 16:12:26','click_count','208'),(977,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(978,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(979,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(980,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(981,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(982,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(983,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(984,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(985,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(986,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(987,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(988,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(989,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(990,'2012-08-14','2012-08-14 16:12:26','click_count','209'),(991,'2012-08-14','2012-08-14 16:12:27','post_count','1'),(992,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(993,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(994,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(995,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(996,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(997,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(998,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(999,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1000,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1001,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1002,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1003,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1004,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1005,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1006,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1007,'2012-08-14','2012-08-14 16:12:27','click_count','209'),(1008,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1009,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1010,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1011,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1012,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1013,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1014,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1015,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1016,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1017,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1018,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1019,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1020,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1021,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1022,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1023,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1024,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1025,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1026,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1027,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1028,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1029,'2012-08-14','2012-08-14 16:12:27','click_count','210'),(1030,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1031,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1032,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1033,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1034,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1035,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1036,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1037,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1038,'2012-08-14','2012-08-14 16:12:28','comment_count','7'),(1039,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1040,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1041,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1042,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1043,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1044,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1045,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1046,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1047,'2012-08-14','2012-08-14 16:12:28','click_count','210'),(1048,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1049,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1050,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1051,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1052,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1053,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1054,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1055,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1056,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1057,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1058,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1059,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1060,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1061,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1062,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1063,'2012-08-14','2012-08-14 16:12:28','click_count','211'),(1064,'2012-08-14','2012-08-14 16:12:28','click_count','212'),(1065,'2012-08-14','2012-08-14 16:12:30','click_count','213'),(1066,'2012-08-14','2012-08-14 16:12:30','post_count','1'),(1067,'2012-08-14','2012-08-14 16:12:30','comment_count','7'),(1068,'2012-08-14','2012-08-14 16:12:30','click_count','214'),(1069,'2012-08-14','2012-08-14 16:12:30','click_count','215'),(1070,'2012-08-14','2012-08-14 16:12:30','click_count','216'),(1071,'2012-08-14','2012-08-14 16:12:30','click_count','217'),(1072,'2012-08-14','2012-08-14 16:12:30','click_count','218'),(1073,'2012-08-14','2012-08-14 16:12:30','click_count','219'),(1074,'2012-08-14','2012-08-14 16:12:30','click_count','220'),(1075,'2012-08-14','2012-08-14 16:12:31','click_count','221'),(1076,'2012-08-14','2012-08-14 16:12:31','click_count','222'),(1077,'2012-08-14','2012-08-14 16:12:31','click_count','223'),(1078,'2012-08-14','2012-08-14 16:12:31','click_count','224'),(1079,'2012-08-14','2012-08-14 16:12:31','click_count','224'),(1080,'2012-08-14','2012-08-14 16:12:31','click_count','225'),(1081,'2012-08-14','2012-08-14 16:12:31','click_count','226'),(1082,'2012-08-14','2012-08-14 16:12:31','click_count','227'),(1083,'2012-08-14','2012-08-14 16:12:31','click_count','228'),(1084,'2012-08-14','2012-08-14 16:12:31','click_count','229'),(1085,'2012-08-14','2012-08-14 16:12:31','click_count','229'),(1086,'2012-08-14','2012-08-14 16:12:31','click_count','230'),(1087,'2012-08-14','2012-08-14 16:12:32','click_count','230'),(1088,'2012-08-14','2012-08-14 16:12:32','click_count','230'),(1089,'2012-08-14','2012-08-14 16:12:32','click_count','230'),(1090,'2012-08-14','2012-08-14 16:12:32','click_count','231'),(1091,'2012-08-14','2012-08-14 16:12:32','click_count','231'),(1092,'2012-08-14','2012-08-14 16:12:32','click_count','231'),(1093,'2012-08-14','2012-08-14 16:12:32','click_count','231'),(1094,'2012-08-14','2012-08-14 16:12:32','click_count','231'),(1095,'2012-08-14','2012-08-14 16:12:33','click_count','232'),(1096,'2012-08-14','2012-08-14 16:12:33','click_count','232'),(1097,'2012-08-14','2012-08-14 16:12:33','click_count','232'),(1098,'2012-08-14','2012-08-14 16:12:33','click_count','233'),(1099,'2012-08-14','2012-08-14 16:12:33','click_count','233'),(1100,'2012-08-14','2012-08-14 16:12:33','click_count','233'),(1101,'2012-08-14','2012-08-14 16:12:34','click_count','233'),(1102,'2012-08-14','2012-08-14 16:12:34','click_count','234'),(1103,'2012-08-14','2012-08-14 16:12:34','post_count','1'),(1104,'2012-08-14','2012-08-14 16:12:34','click_count','235'),(1105,'2012-08-14','2012-08-14 16:12:34','click_count','234'),(1106,'2012-08-14','2012-08-14 16:12:34','click_count','235'),(1107,'2012-08-14','2012-08-14 16:12:34','click_count','234'),(1108,'2012-08-14','2012-08-14 16:12:34','click_count','234'),(1109,'2012-08-14','2012-08-14 16:12:34','click_count','234'),(1110,'2012-08-14','2012-08-14 16:12:34','click_count','234'),(1111,'2012-08-14','2012-08-14 16:12:34','click_count','235'),(1112,'2012-08-14','2012-08-14 16:12:34','click_count','235'),(1113,'2012-08-14','2012-08-14 16:12:34','click_count','235'),(1114,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1115,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1116,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1117,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1118,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1119,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1120,'2012-08-14','2012-08-14 16:12:35','comment_count','7'),(1121,'2012-08-14','2012-08-14 16:12:35','click_count','236'),(1122,'2012-08-14','2012-08-14 16:12:35','click_count','236'),(1123,'2012-08-14','2012-08-14 16:12:35','click_count','236'),(1124,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1125,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1126,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1127,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1128,'2012-08-14','2012-08-14 16:12:35','click_count','237'),(1129,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1130,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1131,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1132,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1133,'2012-08-14','2012-08-14 16:12:35','click_count','237'),(1134,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1135,'2012-08-14','2012-08-14 16:12:35','click_count','235'),(1136,'2012-08-14','2012-08-14 16:12:35','click_count','236'),(1137,'2012-08-14','2012-08-14 16:12:35','click_count','236'),(1138,'2012-08-14','2012-08-14 16:12:36','click_count','236'),(1139,'2012-08-14','2012-08-14 16:12:36','click_count','236'),(1140,'2012-08-14','2012-08-14 16:12:36','click_count','236'),(1141,'2012-08-14','2012-08-14 16:12:36','click_count','236'),(1142,'2012-08-14','2012-08-14 16:12:36','click_count','238'),(1143,'2012-08-14','2012-08-14 16:12:36','click_count','236'),(1144,'2012-08-14','2012-08-14 16:12:36','click_count','237'),(1145,'2012-08-14','2012-08-14 16:12:36','click_count','237'),(1146,'2012-08-14','2012-08-14 16:12:36','click_count','237'),(1147,'2012-08-14','2012-08-14 16:12:36','click_count','237'),(1148,'2012-08-14','2012-08-14 16:12:36','click_count','237'),(1149,'2012-08-14','2012-08-14 16:12:36','click_count','237'),(1150,'2012-08-14','2012-08-14 16:12:37','post_count','1'),(1151,'2012-08-14','2012-08-14 16:12:37','comment_count','7'),(1152,'2012-08-14','2012-08-14 16:12:41','post_count','1'),(1153,'2012-08-14','2012-08-14 16:12:41','comment_count','7'),(1154,'2012-08-14','2012-08-14 16:12:44','post_count','1'),(1155,'2012-08-14','2012-08-14 16:12:44','comment_count','7'),(1156,'2012-08-14','2012-08-14 16:12:47','click_count','238'),(1157,'2012-08-14','2012-08-14 16:12:48','post_count','1'),(1158,'2012-08-14','2012-08-14 16:12:48','comment_count','7'),(1159,'2012-08-14','2012-08-14 16:12:52','post_count','1'),(1160,'2012-08-14','2012-08-14 16:12:52','comment_count','7'),(1161,'2012-08-14','2012-08-14 16:12:53','click_count','239'),(1162,'2012-08-14','2012-08-14 16:12:54','click_count','240'),(1163,'2012-08-14','2012-08-14 16:12:54','click_count','241'),(1164,'2012-08-14','2012-08-14 16:12:55','click_count','242'),(1165,'2012-08-14','2012-08-14 16:12:55','post_count','1'),(1166,'2012-08-14','2012-08-14 16:12:55','comment_count','7'),(1167,'2012-08-14','2012-08-14 16:12:56','click_count','243'),(1168,'2012-08-14','2012-08-14 16:12:57','click_count','244'),(1169,'2012-08-14','2012-08-14 16:12:57','click_count','245'),(1170,'2012-08-14','2012-08-14 16:12:57','click_count','246'),(1171,'2012-08-14','2012-08-14 16:12:58','click_count','247'),(1172,'2012-08-14','2012-08-14 16:12:58','click_count','248'),(1173,'2012-08-14','2012-08-14 16:12:59','click_count','249'),(1174,'2012-08-14','2012-08-14 16:12:59','post_count','1'),(1175,'2012-08-14','2012-08-14 16:12:59','comment_count','7'),(1176,'2012-08-14','2012-08-14 16:12:59','click_count','250'),(1177,'2012-08-14','2012-08-14 16:12:59','click_count','251'),(1178,'2012-08-14','2012-08-14 16:12:59','click_count','252'),(1179,'2012-08-14','2012-08-14 16:13:00','click_count','253'),(1180,'2012-08-14','2012-08-14 16:13:00','click_count','254'),(1181,'2012-08-14','2012-08-14 16:13:00','click_count','255'),(1182,'2012-08-14','2012-08-14 16:13:02','click_count','256'),(1183,'2012-08-14','2012-08-14 16:13:02','click_count','257'),(1184,'2012-08-14','2012-08-14 16:13:02','click_count','258'),(1185,'2012-08-14','2012-08-14 16:13:02','click_count','259'),(1186,'2012-08-14','2012-08-14 16:13:02','post_count','1'),(1187,'2012-08-14','2012-08-14 16:13:02','comment_count','7'),(1188,'2012-08-14','2012-08-14 16:13:03','click_count','260'),(1189,'2012-08-14','2012-08-14 16:13:04','click_count','261'),(1190,'2012-08-14','2012-08-14 16:13:04','click_count','262'),(1191,'2012-08-14','2012-08-14 16:13:04','click_count','263'),(1192,'2012-08-14','2012-08-14 16:13:04','click_count','264'),(1193,'2012-08-14','2012-08-14 16:13:05','click_count','265'),(1194,'2012-08-14','2012-08-14 16:13:05','click_count','266'),(1195,'2012-08-14','2012-08-14 16:13:05','click_count','267'),(1196,'2012-08-14','2012-08-14 16:13:05','click_count','268'),(1197,'2012-08-14','2012-08-14 16:13:05','click_count','269'),(1198,'2012-08-14','2012-08-14 16:13:06','click_count','270'),(1199,'2012-08-14','2012-08-14 16:13:06','click_count','271'),(1200,'2012-08-14','2012-08-14 16:13:06','post_count','1'),(1201,'2012-08-14','2012-08-14 16:13:06','comment_count','7'),(1202,'2012-08-14','2012-08-14 16:13:06','click_count','272'),(1203,'2012-08-14','2012-08-14 16:13:06','click_count','273'),(1204,'2012-08-14','2012-08-14 16:13:07','click_count','274'),(1205,'2012-08-14','2012-08-14 16:13:07','click_count','275'),(1206,'2012-08-14','2012-08-14 16:13:07','click_count','276'),(1207,'2012-08-14','2012-08-14 16:13:07','click_count','277'),(1208,'2012-08-14','2012-08-14 16:13:08','click_count','278'),(1209,'2012-08-14','2012-08-14 16:13:08','click_count','279'),(1210,'2012-08-14','2012-08-14 16:13:08','click_count','280'),(1211,'2012-08-14','2012-08-14 16:13:08','click_count','281'),(1212,'2012-08-14','2012-08-14 16:13:08','click_count','282'),(1213,'2012-08-14','2012-08-14 16:13:09','click_count','283'),(1214,'2012-08-14','2012-08-14 16:13:09','click_count','284'),(1215,'2012-08-14','2012-08-14 16:13:09','click_count','285'),(1216,'2012-08-14','2012-08-14 16:13:09','click_count','286'),(1217,'2012-08-14','2012-08-14 16:13:10','click_count','287'),(1218,'2012-08-14','2012-08-14 16:13:10','post_count','1'),(1219,'2012-08-14','2012-08-14 16:13:10','comment_count','7'),(1220,'2012-08-14','2012-08-14 16:13:13','post_count','1'),(1221,'2012-08-14','2012-08-14 16:13:13','comment_count','7'),(1222,'2012-08-14','2012-08-14 16:13:17','post_count','1'),(1223,'2012-08-14','2012-08-14 16:13:17','comment_count','7'),(1224,'2012-08-14','2012-08-14 16:13:20','post_count','1'),(1225,'2012-08-14','2012-08-14 16:13:20','comment_count','7'),(1226,'2012-08-14','2012-08-14 16:13:24','post_count','1'),(1227,'2012-08-14','2012-08-14 16:13:24','comment_count','7'),(1228,'2012-08-14','2012-08-14 16:13:28','post_count','1'),(1229,'2012-08-14','2012-08-14 16:13:28','comment_count','7'),(1230,'2012-08-14','2012-08-14 16:13:31','post_count','1'),(1231,'2012-08-14','2012-08-14 16:13:31','comment_count','7'),(1232,'2012-08-14','2012-08-14 16:13:35','post_count','1'),(1233,'2012-08-14','2012-08-14 16:13:35','comment_count','7'),(1234,'2012-08-14','2012-08-14 16:13:38','post_count','1'),(1235,'2012-08-14','2012-08-14 16:13:38','comment_count','7'),(1236,'2012-08-14','2012-08-14 16:13:42','post_count','1'),(1237,'2012-08-14','2012-08-14 16:13:42','comment_count','7'),(1238,'2012-08-14','2012-08-14 16:13:46','post_count','1'),(1239,'2012-08-14','2012-08-14 16:13:46','comment_count','7'),(1240,'2012-08-14','2012-08-14 16:13:49','post_count','1'),(1241,'2012-08-14','2012-08-14 16:13:49','comment_count','7'),(1242,'2012-08-14','2012-08-14 16:13:53','post_count','1'),(1243,'2012-08-14','2012-08-14 16:13:53','comment_count','7'),(1244,'2012-08-14','2012-08-14 16:13:56','post_count','1'),(1245,'2012-08-14','2012-08-14 16:13:56','comment_count','7'),(1246,'2012-08-14','2012-08-14 16:14:00','post_count','1'),(1247,'2012-08-14','2012-08-14 16:14:00','comment_count','7'),(1248,'2012-08-14','2012-08-14 16:14:04','post_count','1'),(1249,'2012-08-14','2012-08-14 16:14:04','comment_count','7'),(1250,'2012-08-14','2012-08-14 16:14:07','post_count','1'),(1251,'2012-08-14','2012-08-14 16:14:07','comment_count','7'),(1252,'2012-08-14','2012-08-14 16:14:11','post_count','1'),(1253,'2012-08-14','2012-08-14 16:14:11','comment_count','7'),(1254,'2012-08-14','2012-08-14 16:14:14','post_count','1'),(1255,'2012-08-14','2012-08-14 16:14:14','comment_count','7'),(1256,'2012-08-14','2012-08-14 16:14:16','click_count','288'),(1257,'2012-08-14','2012-08-14 16:14:18','post_count','1'),(1258,'2012-08-14','2012-08-14 16:14:18','comment_count','7'),(1259,'2012-08-14','2012-08-14 16:14:22','post_count','1'),(1260,'2012-08-14','2012-08-14 16:14:22','comment_count','7'),(1261,'2012-08-14','2012-08-14 16:14:25','post_count','1'),(1262,'2012-08-14','2012-08-14 16:14:25','comment_count','7'),(1263,'2012-08-14','2012-08-14 16:14:29','post_count','1'),(1264,'2012-08-14','2012-08-14 16:14:29','comment_count','7'),(1265,'2012-08-14','2012-08-14 16:14:32','post_count','1'),(1266,'2012-08-14','2012-08-14 16:14:32','comment_count','7'),(1267,'2012-08-14','2012-08-14 16:14:36','post_count','1'),(1268,'2012-08-14','2012-08-14 16:14:36','comment_count','7'),(1269,'2012-08-14','2012-08-14 16:14:40','post_count','1'),(1270,'2012-08-14','2012-08-14 16:14:40','comment_count','7'),(1271,'2012-08-14','2012-08-14 16:15:12','post_count','1'),(1272,'2012-08-14','2012-08-14 16:15:12','comment_count','7'),(1273,'2012-08-14','2012-08-14 16:15:15','click_count','289'),(1274,'2012-08-14','2012-08-14 16:15:24','click_count','290'),(1275,'2012-08-14','2012-08-14 16:15:25','click_count','291'),(1276,'2012-08-14','2012-08-14 16:15:25','click_count','292'),(1277,'2012-08-14','2012-08-14 16:15:25','click_count','293'),(1278,'2012-08-14','2012-08-14 16:15:26','click_count','294'),(1279,'2012-08-14','2012-08-14 16:15:26','click_count','295'),(1280,'2012-08-14','2012-08-14 16:15:26','click_count','296'),(1281,'2012-08-14','2012-08-14 16:15:27','click_count','297'),(1282,'2012-08-14','2012-08-14 16:15:27','click_count','298'),(1283,'2012-08-14','2012-08-14 16:15:27','click_count','299'),(1284,'2012-08-14','2012-08-14 16:15:28','click_count','300'),(1285,'2012-08-14','2012-08-14 16:15:28','click_count','301'),(1286,'2012-08-14','2012-08-14 16:15:28','click_count','302'),(1287,'2012-08-14','2012-08-14 16:15:29','click_count','303'),(1288,'2012-08-14','2012-08-14 16:15:29','click_count','304'),(1289,'2012-08-14','2012-08-14 16:15:29','click_count','305'),(1290,'2012-08-14','2012-08-14 16:15:30','click_count','306'),(1291,'2012-08-14','2012-08-14 16:15:30','click_count','307'),(1292,'2012-08-14','2012-08-14 16:15:30','click_count','308'),(1293,'2012-08-14','2012-08-14 16:15:30','click_count','309'),(1294,'2012-08-14','2012-08-14 16:15:31','click_count','310'),(1295,'2012-08-14','2012-08-14 16:15:31','click_count','311'),(1296,'2012-08-14','2012-08-14 16:15:31','click_count','312'),(1297,'2012-08-14','2012-08-14 16:15:31','click_count','313'),(1298,'2012-08-14','2012-08-14 16:15:32','click_count','314'),(1299,'2012-08-14','2012-08-14 16:15:32','click_count','315'),(1300,'2012-08-14','2012-08-14 16:16:08','click_count','316'),(1301,'2012-08-14','2012-08-14 17:37:52','click_count','317'),(1302,'2012-08-14','2012-08-14 17:37:54','post_count','1'),(1303,'2012-08-14','2012-08-14 17:37:54','comment_count','7'),(1304,'2012-08-14','2012-08-14 17:38:19','click_count','318'),(1305,'2012-08-14','2012-08-14 17:38:30','click_count','319'),(1306,'2012-08-14','2012-08-14 17:38:34','click_count','320'),(1307,'2012-08-14','2012-08-14 17:39:26','click_count','321'),(1308,'2012-08-14','2012-08-14 17:42:12','click_count','322'),(1309,'2012-08-14','2012-08-14 17:42:58','click_count','323'),(1310,'2012-08-14','2012-08-14 17:43:31','click_count','324'),(1311,'2012-08-14','2012-08-14 17:45:01','click_count','325'),(1312,'2012-08-14','2012-08-14 17:45:10','click_count','326'),(1313,'2012-08-14','2012-08-14 17:45:26','click_count','327'),(1314,'2012-08-14','2012-08-14 17:45:28','click_count','328'),(1315,'2012-08-14','2012-08-14 17:52:36','click_count','329'),(1316,'2012-08-14','2012-08-14 17:53:09','click_count','330'),(1317,'2012-08-14','2012-08-14 17:53:32','click_count','331'),(1318,'2012-08-14','2012-08-14 17:53:52','click_count','332'),(1319,'2012-08-14','2012-08-14 17:54:33','post_count','0'),(1320,'2012-08-14','2012-08-14 17:54:33','comment_count','7'),(1321,'2012-08-14','2012-08-14 17:55:16','click_count','333'),(1322,'2012-08-14','2012-08-14 17:57:19','click_count','334'),(1323,'2012-08-14','2012-08-14 17:57:39','post_count','0'),(1324,'2012-08-14','2012-08-14 17:57:39','comment_count','7'),(1325,'2012-08-14','2012-08-14 17:57:42','click_count','335'),(1326,'2012-08-14','2012-08-14 18:00:58','click_count','336'),(1327,'2012-08-14','2012-08-14 18:02:12','post_count','74'),(1328,'2012-08-14','2012-08-14 18:02:12','comment_count','7'),(1329,'2012-08-14','2012-08-14 18:02:36','click_count','337'),(1330,'2012-08-14','2012-08-14 18:03:56','click_count','338'),(1331,'2012-08-14','2012-08-14 18:04:09','click_count','339'),(1332,'2012-08-14','2012-08-14 18:05:28','click_count','340'),(1333,'2012-08-14','2012-08-14 18:05:33','click_count','341'),(1334,'2012-08-14','2012-08-14 18:05:34','click_count','342'),(1335,'2012-08-14','2012-08-14 18:05:40','click_count','343'),(1336,'2012-08-14','2012-08-14 18:05:43','click_count','344'),(1337,'2012-08-14','2012-08-14 18:05:45','click_count','345'),(1338,'2012-08-14','2012-08-14 18:05:50','click_count','346'),(1339,'2012-08-14','2012-08-14 18:07:09','click_count','347'),(1340,'2012-08-14','2012-08-14 18:07:17','click_count','348'),(1341,'2012-08-14','2012-08-14 18:07:24','click_count','349'),(1342,'2012-08-14','2012-08-14 18:08:34','click_count','350'),(1343,'2012-08-14','2012-08-14 18:08:50','click_count','351'),(1344,'2012-08-14','2012-08-14 18:08:54','click_count','352'),(1345,'2012-08-14','2012-08-14 18:09:11','click_count','353'),(1346,'2012-08-14','2012-08-14 18:09:12','click_count','354'),(1347,'2012-08-14','2012-08-14 18:09:37','click_count','355'),(1348,'2012-08-14','2012-08-14 18:09:41','click_count','356'),(1349,'2012-08-14','2012-08-14 18:09:42','click_count','357'),(1350,'2012-08-14','2012-08-14 18:09:43','click_count','358'),(1351,'2012-08-14','2012-08-14 18:09:43','click_count','359'),(1352,'2012-08-14','2012-08-14 18:09:43','click_count','360'),(1353,'2012-08-14','2012-08-14 18:09:46','click_count','361'),(1354,'2012-08-14','2012-08-14 18:09:52','click_count','362'),(1355,'2012-08-14','2012-08-14 18:10:41','click_count','363'),(1356,'2012-08-14','2012-08-14 18:11:02','click_count','364'),(1357,'2012-08-14','2012-08-14 18:11:03','click_count','365'),(1358,'2012-08-15','2012-08-15 08:42:51','click_count','366'),(1359,'2012-08-15','2012-08-15 08:42:52','post_count','216'),(1360,'2012-08-15','2012-08-15 08:42:52','comment_count','0'),(1361,'2012-08-15','2012-08-15 08:51:11','click_count','367'),(1362,'2012-08-15','2012-08-15 09:12:37','click_count','368'),(1363,'2012-08-15','2012-08-15 09:12:40','click_count','369'),(1364,'2012-08-15','2012-08-15 09:12:52','post_count','216'),(1365,'2012-08-15','2012-08-15 09:12:52','comment_count','0'),(1366,'2012-08-15','2012-08-15 09:30:35','click_count','370'),(1367,'2012-08-15','2012-08-15 09:32:14','click_count','371'),(1368,'2012-08-15','2012-08-15 09:42:52','post_count','216'),(1369,'2012-08-15','2012-08-15 09:42:52','comment_count','0'),(1370,'2012-08-15','2012-08-15 09:55:49','click_count','372'),(1371,'2012-08-15','2012-08-15 10:02:56','click_count','373'),(1372,'2012-08-15','2012-08-15 10:03:22','click_count','374'),(1373,'2012-08-15','2012-08-15 10:03:30','click_count','375'),(1374,'2012-08-15','2012-08-15 10:03:39','click_count','376'),(1375,'2012-08-15','2012-08-15 10:03:45','click_count','377'),(1376,'2012-08-15','2012-08-15 10:03:46','click_count','378'),(1377,'2012-08-15','2012-08-15 10:03:49','click_count','379'),(1378,'2012-08-15','2012-08-15 10:05:19','click_count','380'),(1379,'2012-08-15','2012-08-15 10:06:11','click_count','381'),(1380,'2012-08-15','2012-08-15 10:06:12','click_count','382'),(1381,'2012-08-15','2012-08-15 10:06:25','click_count','383'),(1382,'2012-08-15','2012-08-15 10:06:29','click_count','384'),(1383,'2012-08-15','2012-08-15 10:07:24','click_count','385'),(1384,'2012-08-15','2012-08-15 10:08:52','click_count','386'),(1385,'2012-08-15','2012-08-15 10:09:24','click_count','387'),(1386,'2012-08-15','2012-08-15 10:12:52','post_count','217'),(1387,'2012-08-15','2012-08-15 10:12:52','comment_count','0'),(1388,'2012-08-15','2012-08-15 10:14:33','click_count','388'),(1389,'2012-08-15','2012-08-15 10:21:42','click_count','389'),(1390,'2012-08-15','2012-08-15 10:21:43','click_count','390'),(1391,'2012-08-15','2012-08-15 10:21:46','click_count','391'),(1392,'2012-08-15','2012-08-15 10:21:48','click_count','392'),(1393,'2012-08-15','2012-08-15 10:24:54','click_count','393'),(1394,'2012-08-15','2012-08-15 10:24:56','click_count','394'),(1395,'2012-08-15','2012-08-15 10:24:57','click_count','395'),(1396,'2012-08-15','2012-08-15 10:25:01','click_count','396'),(1397,'2012-08-15','2012-08-15 10:25:02','click_count','397'),(1398,'2012-08-15','2012-08-15 10:25:03','click_count','398'),(1399,'2012-08-15','2012-08-15 10:25:04','click_count','399'),(1400,'2012-08-15','2012-08-15 10:25:04','click_count','400'),(1401,'2012-08-15','2012-08-15 10:25:05','click_count','401'),(1402,'2012-08-15','2012-08-15 10:25:06','click_count','402'),(1403,'2012-08-15','2012-08-15 10:29:44','click_count','403'),(1404,'2012-08-15','2012-08-15 10:29:47','click_count','404'),(1405,'2012-08-15','2012-08-15 10:29:55','click_count','405'),(1406,'2012-08-15','2012-08-15 10:41:30','click_count','406'),(1407,'2012-08-15','2012-08-15 10:42:52','post_count','217'),(1408,'2012-08-15','2012-08-15 10:42:52','comment_count','0'),(1409,'2012-08-15','2012-08-15 10:47:20','click_count','407'),(1410,'2012-08-15','2012-08-15 10:50:45','click_count','408'),(1411,'2012-08-15','2012-08-15 10:55:38','click_count','409'),(1412,'2012-08-15','2012-08-15 11:00:38','click_count','410'),(1413,'2012-08-15','2012-08-15 11:00:43','click_count','411'),(1414,'2012-08-15','2012-08-15 11:00:45','click_count','412'),(1415,'2012-08-15','2012-08-15 11:04:27','click_count','413'),(1416,'2012-08-15','2012-08-15 11:05:19','click_count','414'),(1417,'2012-08-15','2012-08-15 11:05:24','click_count','415'),(1418,'2012-08-15','2012-08-15 11:05:31','click_count','416'),(1419,'2012-08-15','2012-08-15 11:05:37','click_count','417'),(1420,'2012-08-15','2012-08-15 12:42:52','click_count','418'),(1421,'2012-08-15','2012-08-15 12:42:53','post_count','217'),(1422,'2012-08-15','2012-08-15 12:42:53','comment_count','0'),(1423,'2012-08-15','2012-08-15 13:04:18','click_count','419'),(1424,'2012-08-15','2012-08-15 13:04:20','click_count','420'),(1425,'2012-08-15','2012-08-15 13:04:28','click_count','421'),(1426,'2012-08-15','2012-08-15 13:04:29','click_count','422'),(1427,'2012-08-15','2012-08-15 13:05:24','click_count','423'),(1428,'2012-08-15','2012-08-15 13:06:01','click_count','424'),(1429,'2012-08-15','2012-08-15 13:06:31','click_count','425'),(1430,'2012-08-15','2012-08-15 13:06:32','click_count','426'),(1431,'2012-08-15','2012-08-15 13:06:39','click_count','427'),(1432,'2012-08-15','2012-08-15 13:06:39','click_count','428'),(1433,'2012-08-15','2012-08-15 13:06:45','click_count','429'),(1434,'2012-08-15','2012-08-15 13:07:35','click_count','430'),(1435,'2012-08-15','2012-08-15 13:07:42','click_count','431'),(1436,'2012-08-15','2012-08-15 13:07:56','click_count','432'),(1437,'2012-08-15','2012-08-15 13:08:12','click_count','433'),(1438,'2012-08-15','2012-08-15 13:08:56','click_count','434'),(1439,'2012-08-15','2012-08-15 13:12:54','post_count','217'),(1440,'2012-08-15','2012-08-15 13:12:54','comment_count','0'),(1441,'2012-08-15','2012-08-15 13:35:09','click_count','435'),(1442,'2012-08-15','2012-08-15 13:35:26','click_count','436'),(1443,'2012-08-15','2012-08-15 13:35:43','click_count','437'),(1444,'2012-08-15','2012-08-15 13:36:48','click_count','438'),(1445,'2012-08-15','2012-08-15 13:36:49','click_count','439'),(1446,'2012-08-15','2012-08-15 13:38:11','click_count','440'),(1447,'2012-08-15','2012-08-15 13:38:12','click_count','441'),(1448,'2012-08-15','2012-08-15 13:38:41','click_count','442'),(1449,'2012-08-15','2012-08-15 13:38:54','click_count','443'),(1450,'2012-08-15','2012-08-15 13:39:03','click_count','444'),(1451,'2012-08-15','2012-08-15 13:39:10','click_count','445'),(1452,'2012-08-15','2012-08-15 13:39:22','click_count','446'),(1453,'2012-08-15','2012-08-15 13:39:42','click_count','447'),(1454,'2012-08-15','2012-08-15 13:39:52','click_count','448'),(1455,'2012-08-15','2012-08-15 13:40:40','click_count','449'),(1456,'2012-08-15','2012-08-15 13:41:09','click_count','450'),(1457,'2012-08-15','2012-08-15 13:41:10','click_count','451'),(1458,'2012-08-15','2012-08-15 13:41:10','click_count','452'),(1459,'2012-08-15','2012-08-15 13:41:32','click_count','453'),(1460,'2012-08-15','2012-08-15 13:42:17','click_count','454'),(1461,'2012-08-15','2012-08-15 13:42:53','post_count','217'),(1462,'2012-08-15','2012-08-15 13:42:53','comment_count','0'),(1463,'2012-08-15','2012-08-15 13:43:08','click_count','455'),(1464,'2012-08-15','2012-08-15 13:43:18','click_count','456'),(1465,'2012-08-15','2012-08-15 13:43:33','click_count','457'),(1466,'2012-08-15','2012-08-15 13:43:34','click_count','458'),(1467,'2012-08-15','2012-08-15 13:43:35','click_count','459'),(1468,'2012-08-15','2012-08-15 13:43:36','click_count','460'),(1469,'2012-08-15','2012-08-15 13:44:05','click_count','461'),(1470,'2012-08-15','2012-08-15 13:44:10','click_count','462'),(1471,'2012-08-15','2012-08-15 13:44:23','click_count','463'),(1472,'2012-08-15','2012-08-15 13:44:39','click_count','464'),(1473,'2012-08-15','2012-08-15 13:44:40','click_count','465'),(1474,'2012-08-15','2012-08-15 13:44:40','click_count','466'),(1475,'2012-08-15','2012-08-15 13:44:46','click_count','467'),(1476,'2012-08-15','2012-08-15 13:46:52','click_count','468'),(1477,'2012-08-15','2012-08-15 13:46:56','click_count','469'),(1478,'2012-08-15','2012-08-15 13:47:02','click_count','470'),(1479,'2012-08-15','2012-08-15 13:47:07','click_count','471'),(1480,'2012-08-15','2012-08-15 13:47:09','click_count','472'),(1481,'2012-08-15','2012-08-15 13:47:12','click_count','473'),(1482,'2012-08-15','2012-08-15 13:47:16','click_count','474'),(1483,'2012-08-15','2012-08-15 13:50:54','click_count','475'),(1484,'2012-08-15','2012-08-15 14:09:56','click_count','476'),(1485,'2012-08-15','2012-08-15 14:10:05','click_count','477'),(1486,'2012-08-15','2012-08-15 14:11:46','click_count','478'),(1487,'2012-08-15','2012-08-15 14:11:50','click_count','479'),(1488,'2012-08-15','2012-08-15 14:12:53','post_count','217'),(1489,'2012-08-15','2012-08-15 14:12:53','comment_count','0'),(1490,'2012-08-15','2012-08-15 14:14:57','click_count','480'),(1491,'2012-08-15','2012-08-15 14:17:49','click_count','481'),(1492,'2012-08-15','2012-08-15 14:17:49','click_count','482'),(1493,'2012-08-15','2012-08-15 14:18:17','click_count','483'),(1494,'2012-08-15','2012-08-15 14:18:17','click_count','484'),(1495,'2012-08-15','2012-08-15 14:18:18','click_count','485'),(1496,'2012-08-15','2012-08-15 14:42:53','post_count','217'),(1497,'2012-08-15','2012-08-15 14:42:53','comment_count','0'),(1498,'2012-08-15','2012-08-15 15:12:53','post_count','217'),(1499,'2012-08-15','2012-08-15 15:12:53','comment_count','0'),(1500,'2012-08-15','2012-08-15 15:42:53','post_count','217'),(1501,'2012-08-15','2012-08-15 15:42:53','comment_count','0'),(1502,'2012-08-15','2012-08-15 16:12:53','post_count','217'),(1503,'2012-08-15','2012-08-15 16:12:53','comment_count','0'),(1504,'2012-08-15','2012-08-15 16:46:36','post_count','217'),(1505,'2012-08-15','2012-08-15 16:46:36','comment_count','0'),(1506,'2012-08-15','2012-08-15 16:46:37','click_count','486'),(1507,'2012-08-15','2012-08-15 16:54:18','post_count','217'),(1508,'2012-08-15','2012-08-15 16:54:18','comment_count','1'),(1509,'2012-08-15','2012-08-15 16:56:25','click_count','487'),(1510,'2012-08-15','2012-08-15 16:58:01','click_count','488'),(1511,'2012-08-15','2012-08-15 17:03:47','click_count','489'),(1512,'2012-08-15','2012-08-15 17:04:03','click_count','490'),(1513,'2012-08-15','2012-08-15 17:04:05','click_count','491'),(1514,'2012-08-15','2012-08-15 17:04:07','click_count','492'),(1515,'2012-08-15','2012-08-15 17:04:40','click_count','493'),(1516,'2012-08-15','2012-08-15 17:05:25','click_count','494'),(1517,'2012-08-15','2012-08-15 17:08:15','click_count','495'),(1518,'2012-08-15','2012-08-15 17:08:19','click_count','496'),(1519,'2012-08-15','2012-08-15 17:08:24','click_count','497'),(1520,'2012-08-15','2012-08-15 17:08:25','click_count','498'),(1521,'2012-08-15','2012-08-15 17:08:27','click_count','499'),(1522,'2012-08-15','2012-08-15 17:09:13','click_count','500'),(1523,'2012-08-15','2012-08-15 17:16:30','click_count','501'),(1524,'2012-08-15','2012-08-15 17:20:38','click_count','502'),(1525,'2012-08-15','2012-08-15 17:24:18','post_count','217'),(1526,'2012-08-15','2012-08-15 17:24:18','comment_count','1'),(1527,'2012-08-15','2012-08-15 17:27:13','click_count','503'),(1528,'2012-08-15','2012-08-15 17:27:15','click_count','504'),(1529,'2012-08-15','2012-08-15 17:27:29','click_count','505'),(1530,'2012-08-15','2012-08-15 17:28:10','click_count','506'),(1531,'2012-08-16','2012-08-16 08:29:18','post_count','217'),(1532,'2012-08-16','2012-08-16 08:29:18','comment_count','1'),(1533,'2012-08-16','2012-08-16 08:42:07','click_count','507'),(1534,'2012-08-16','2012-08-16 08:42:57','click_count','508'),(1535,'2012-08-16','2012-08-16 08:43:24','click_count','509'),(1536,'2012-08-16','2012-08-16 08:44:22','click_count','510'),(1537,'2012-08-16','2012-08-16 08:44:24','click_count','511'),(1538,'2012-08-16','2012-08-16 08:45:16','click_count','512'),(1539,'2012-08-16','2012-08-16 08:45:18','click_count','513'),(1540,'2012-08-16','2012-08-16 08:45:21','click_count','514'),(1541,'2012-08-16','2012-08-16 08:45:37','click_count','515'),(1542,'2012-08-16','2012-08-16 08:45:38','click_count','516'),(1543,'2012-08-16','2012-08-16 08:46:18','click_count','517'),(1544,'2012-08-16','2012-08-16 08:46:26','click_count','518'),(1545,'2012-08-16','2012-08-16 08:50:10','click_count','519'),(1546,'2012-08-16','2012-08-16 08:50:17','click_count','520'),(1547,'2012-08-16','2012-08-16 08:51:25','click_count','521'),(1548,'2012-08-16','2012-08-16 08:51:26','click_count','522'),(1549,'2012-08-16','2012-08-16 08:51:39','click_count','523'),(1550,'2012-08-16','2012-08-16 08:54:31','click_count','524'),(1551,'2012-08-16','2012-08-16 08:56:42','click_count','525'),(1552,'2012-08-16','2012-08-16 08:57:28','click_count','526'),(1553,'2012-08-16','2012-08-16 08:57:29','click_count','527'),(1554,'2012-08-16','2012-08-16 08:57:29','click_count','528'),(1555,'2012-08-16','2012-08-16 08:57:30','click_count','529'),(1556,'2012-08-16','2012-08-16 08:57:30','click_count','530'),(1557,'2012-08-16','2012-08-16 08:59:17','post_count','217'),(1558,'2012-08-16','2012-08-16 08:59:17','comment_count','1'),(1559,'2012-08-16','2012-08-16 08:59:52','click_count','531'),(1560,'2012-08-16','2012-08-16 08:59:53','click_count','532'),(1561,'2012-08-16','2012-08-16 09:00:41','click_count','533'),(1562,'2012-08-16','2012-08-16 09:00:45','click_count','534'),(1563,'2012-08-16','2012-08-16 09:00:45','click_count','535'),(1564,'2012-08-16','2012-08-16 09:01:06','click_count','536'),(1565,'2012-08-16','2012-08-16 09:01:07','click_count','537'),(1566,'2012-08-16','2012-08-16 09:01:07','click_count','538'),(1567,'2012-08-16','2012-08-16 09:01:41','click_count','539'),(1568,'2012-08-16','2012-08-16 09:02:14','click_count','540'),(1569,'2012-08-16','2012-08-16 09:02:18','click_count','541'),(1570,'2012-08-16','2012-08-16 09:02:20','click_count','542'),(1571,'2012-08-16','2012-08-16 09:07:33','click_count','543'),(1572,'2012-08-16','2012-08-16 09:07:34','post_count','217'),(1573,'2012-08-16','2012-08-16 09:07:34','comment_count','1'),(1574,'2012-08-16','2012-08-16 09:08:29','click_count','544'),(1575,'2012-08-16','2012-08-16 09:10:25','click_count','545'),(1576,'2012-08-16','2012-08-16 09:10:26','click_count','546'),(1577,'2012-08-16','2012-08-16 09:10:26','click_count','547'),(1578,'2012-08-16','2012-08-16 09:10:27','click_count','548'),(1579,'2012-08-16','2012-08-16 09:10:27','click_count','549'),(1580,'2012-08-16','2012-08-16 09:10:27','click_count','550'),(1581,'2012-08-16','2012-08-16 09:10:28','click_count','551'),(1582,'2012-08-16','2012-08-16 09:10:38','click_count','552'),(1583,'2012-08-16','2012-08-16 09:10:42','click_count','553'),(1584,'2012-08-16','2012-08-16 09:10:45','click_count','554'),(1585,'2012-08-16','2012-08-16 09:10:48','click_count','555'),(1586,'2012-08-16','2012-08-16 09:10:49','click_count','556'),(1587,'2012-08-16','2012-08-16 09:10:49','click_count','557'),(1588,'2012-08-16','2012-08-16 09:10:49','click_count','558'),(1589,'2012-08-16','2012-08-16 09:10:55','click_count','559'),(1590,'2012-08-16','2012-08-16 09:10:56','click_count','560'),(1591,'2012-08-16','2012-08-16 09:11:05','click_count','561'),(1592,'2012-08-16','2012-08-16 09:11:06','click_count','562'),(1593,'2012-08-16','2012-08-16 09:12:01','click_count','563'),(1594,'2012-08-16','2012-08-16 09:12:22','click_count','564'),(1595,'2012-08-16','2012-08-16 09:12:26','click_count','565'),(1596,'2012-08-16','2012-08-16 09:13:31','click_count','566'),(1597,'2012-08-16','2012-08-16 09:14:39','click_count','567'),(1598,'2012-08-16','2012-08-16 09:15:58','click_count','568'),(1599,'2012-08-16','2012-08-16 09:15:58','click_count','569'),(1600,'2012-08-16','2012-08-16 09:16:13','click_count','570'),(1601,'2012-08-16','2012-08-16 09:16:25','click_count','571'),(1602,'2012-08-16','2012-08-16 09:16:35','click_count','572'),(1603,'2012-08-16','2012-08-16 09:17:00','click_count','573'),(1604,'2012-08-16','2012-08-16 09:17:06','click_count','574'),(1605,'2012-08-16','2012-08-16 09:17:30','click_count','575'),(1606,'2012-08-16','2012-08-16 09:18:01','click_count','576'),(1607,'2012-08-16','2012-08-16 09:18:02','click_count','577'),(1608,'2012-08-16','2012-08-16 09:18:02','click_count','578'),(1609,'2012-08-16','2012-08-16 09:18:02','click_count','579'),(1610,'2012-08-16','2012-08-16 09:18:02','click_count','580'),(1611,'2012-08-16','2012-08-16 09:18:03','click_count','581'),(1612,'2012-08-16','2012-08-16 09:18:03','click_count','582'),(1613,'2012-08-16','2012-08-16 09:18:03','click_count','583'),(1614,'2012-08-16','2012-08-16 09:18:03','click_count','584'),(1615,'2012-08-16','2012-08-16 09:18:04','click_count','585'),(1616,'2012-08-16','2012-08-16 09:18:04','click_count','586'),(1617,'2012-08-16','2012-08-16 09:21:12','click_count','587'),(1618,'2012-08-16','2012-08-16 09:21:13','click_count','588'),(1619,'2012-08-16','2012-08-16 09:21:13','click_count','589'),(1620,'2012-08-16','2012-08-16 09:21:27','click_count','590'),(1621,'2012-08-16','2012-08-16 09:21:41','click_count','591'),(1622,'2012-08-16','2012-08-16 09:21:42','click_count','592'),(1623,'2012-08-16','2012-08-16 09:21:43','click_count','593'),(1624,'2012-08-16','2012-08-16 09:21:43','click_count','594'),(1625,'2012-08-16','2012-08-16 09:22:13','click_count','595'),(1626,'2012-08-16','2012-08-16 09:22:52','click_count','596'),(1627,'2012-08-16','2012-08-16 09:22:53','click_count','597'),(1628,'2012-08-16','2012-08-16 09:22:53','click_count','598'),(1629,'2012-08-16','2012-08-16 09:22:54','click_count','599'),(1630,'2012-08-16','2012-08-16 09:22:54','click_count','600'),(1631,'2012-08-16','2012-08-16 09:22:54','click_count','601'),(1632,'2012-08-16','2012-08-16 09:23:49','click_count','602'),(1633,'2012-08-16','2012-08-16 09:23:49','click_count','603'),(1634,'2012-08-16','2012-08-16 09:23:50','click_count','604'),(1635,'2012-08-16','2012-08-16 09:24:42','click_count','605'),(1636,'2012-08-16','2012-08-16 09:25:01','click_count','606'),(1637,'2012-08-16','2012-08-16 09:25:17','click_count','607'),(1638,'2012-08-16','2012-08-16 09:25:23','click_count','608'),(1639,'2012-08-16','2012-08-16 09:25:28','click_count','609'),(1640,'2012-08-16','2012-08-16 09:27:06','click_count','610'),(1641,'2012-08-16','2012-08-16 09:27:06','click_count','611'),(1642,'2012-08-16','2012-08-16 09:27:35','click_count','612'),(1643,'2012-08-16','2012-08-16 09:27:41','click_count','613'),(1644,'2012-08-16','2012-08-16 09:27:49','click_count','614'),(1645,'2012-08-16','2012-08-16 09:27:50','click_count','615'),(1646,'2012-08-16','2012-08-16 09:27:57','click_count','616'),(1647,'2012-08-16','2012-08-16 09:27:57','click_count','617'),(1648,'2012-08-16','2012-08-16 09:29:06','click_count','618'),(1649,'2012-08-16','2012-08-16 09:29:27','click_count','619'),(1650,'2012-08-16','2012-08-16 09:34:28','click_count','620'),(1651,'2012-08-16','2012-08-16 09:34:29','click_count','621'),(1652,'2012-08-16','2012-08-16 09:34:29','click_count','622'),(1653,'2012-08-16','2012-08-16 09:37:04','click_count','623'),(1654,'2012-08-16','2012-08-16 09:37:05','click_count','624'),(1655,'2012-08-16','2012-08-16 09:37:34','post_count','217'),(1656,'2012-08-16','2012-08-16 09:37:34','comment_count','1'),(1657,'2012-08-16','2012-08-16 09:38:13','click_count','625'),(1658,'2012-08-16','2012-08-16 09:38:28','click_count','626'),(1659,'2012-08-16','2012-08-16 09:38:46','click_count','627'),(1660,'2012-08-16','2012-08-16 09:39:38','click_count','628'),(1661,'2012-08-16','2012-08-16 09:39:42','click_count','629'),(1662,'2012-08-16','2012-08-16 09:40:19','click_count','630'),(1663,'2012-08-16','2012-08-16 09:41:02','click_count','631'),(1664,'2012-08-16','2012-08-16 09:42:46','click_count','632'),(1665,'2012-08-16','2012-08-16 09:42:57','click_count','633'),(1666,'2012-08-16','2012-08-16 09:43:20','click_count','634'),(1667,'2012-08-16','2012-08-16 09:43:52','click_count','635'),(1668,'2012-08-16','2012-08-16 09:44:08','click_count','636'),(1669,'2012-08-16','2012-08-16 09:49:01','click_count','637'),(1670,'2012-08-16','2012-08-16 09:49:02','click_count','638'),(1671,'2012-08-16','2012-08-16 09:49:05','click_count','639'),(1672,'2012-08-16','2012-08-16 09:49:17','click_count','640'),(1673,'2012-08-16','2012-08-16 09:49:23','click_count','641'),(1674,'2012-08-16','2012-08-16 09:49:31','click_count','642'),(1675,'2012-08-16','2012-08-16 09:49:43','click_count','643'),(1676,'2012-08-16','2012-08-16 09:50:21','click_count','644'),(1677,'2012-08-16','2012-08-16 09:55:57','click_count','645'),(1678,'2012-08-16','2012-08-16 09:56:40','click_count','646'),(1679,'2012-08-16','2012-08-16 09:56:42','click_count','647'),(1680,'2012-08-16','2012-08-16 09:56:45','click_count','648'),(1681,'2012-08-16','2012-08-16 09:57:21','click_count','649'),(1682,'2012-08-16','2012-08-16 09:57:21','click_count','650'),(1683,'2012-08-16','2012-08-16 09:58:27','click_count','651'),(1684,'2012-08-16','2012-08-16 10:00:23','click_count','652'),(1685,'2012-08-16','2012-08-16 10:00:33','click_count','653'),(1686,'2012-08-16','2012-08-16 10:02:48','click_count','654'),(1687,'2012-08-16','2012-08-16 10:04:40','click_count','655'),(1688,'2012-08-16','2012-08-16 10:05:11','click_count','656'),(1689,'2012-08-16','2012-08-16 10:05:49','click_count','657'),(1690,'2012-08-16','2012-08-16 10:06:24','click_count','658'),(1691,'2012-08-16','2012-08-16 10:07:34','post_count','217'),(1692,'2012-08-16','2012-08-16 10:07:34','comment_count','1'),(1693,'2012-08-16','2012-08-16 10:07:46','click_count','659'),(1694,'2012-08-16','2012-08-16 10:07:53','click_count','660'),(1695,'2012-08-16','2012-08-16 10:07:59','click_count','661'),(1696,'2012-08-16','2012-08-16 10:08:31','click_count','662'),(1697,'2012-08-16','2012-08-16 10:08:37','click_count','663'),(1698,'2012-08-16','2012-08-16 10:12:57','click_count','664'),(1699,'2012-08-16','2012-08-16 10:13:03','click_count','665'),(1700,'2012-08-16','2012-08-16 10:13:52','click_count','666'),(1701,'2012-08-16','2012-08-16 10:14:08','click_count','667'),(1702,'2012-08-16','2012-08-16 10:14:45','click_count','668'),(1703,'2012-08-16','2012-08-16 10:15:19','click_count','669'),(1704,'2012-08-16','2012-08-16 10:15:35','click_count','670'),(1705,'2012-08-16','2012-08-16 10:16:14','click_count','671'),(1706,'2012-08-16','2012-08-16 10:16:18','click_count','672'),(1707,'2012-08-16','2012-08-16 10:17:34','click_count','673'),(1708,'2012-08-16','2012-08-16 10:17:38','click_count','674'),(1709,'2012-08-16','2012-08-16 10:17:39','click_count','675'),(1710,'2012-08-16','2012-08-16 10:17:40','click_count','676'),(1711,'2012-08-16','2012-08-16 10:17:41','click_count','677'),(1712,'2012-08-16','2012-08-16 10:17:48','click_count','678'),(1713,'2012-08-16','2012-08-16 10:17:49','click_count','679'),(1714,'2012-08-16','2012-08-16 10:17:51','click_count','680'),(1715,'2012-08-16','2012-08-16 10:17:51','click_count','681'),(1716,'2012-08-16','2012-08-16 10:17:52','click_count','682'),(1717,'2012-08-16','2012-08-16 10:17:52','click_count','683'),(1718,'2012-08-16','2012-08-16 10:17:53','click_count','684'),(1719,'2012-08-16','2012-08-16 10:17:57','click_count','685'),(1720,'2012-08-16','2012-08-16 10:18:01','click_count','686'),(1721,'2012-08-16','2012-08-16 10:20:58','click_count','687'),(1722,'2012-08-16','2012-08-16 10:21:00','click_count','688'),(1723,'2012-08-16','2012-08-16 10:21:01','click_count','689'),(1724,'2012-08-16','2012-08-16 10:21:04','click_count','690'),(1725,'2012-08-16','2012-08-16 10:21:04','click_count','691'),(1726,'2012-08-16','2012-08-16 10:21:06','click_count','692'),(1727,'2012-08-16','2012-08-16 10:21:07','click_count','693'),(1728,'2012-08-16','2012-08-16 10:21:07','click_count','694'),(1729,'2012-08-16','2012-08-16 10:21:08','click_count','695'),(1730,'2012-08-16','2012-08-16 10:21:09','click_count','696'),(1731,'2012-08-16','2012-08-16 10:21:10','click_count','697'),(1732,'2012-08-16','2012-08-16 10:21:11','click_count','698'),(1733,'2012-08-16','2012-08-16 10:21:24','click_count','699'),(1734,'2012-08-16','2012-08-16 10:21:25','click_count','700'),(1735,'2012-08-16','2012-08-16 10:21:25','click_count','701'),(1736,'2012-08-16','2012-08-16 10:21:26','click_count','702'),(1737,'2012-08-16','2012-08-16 10:21:26','click_count','703'),(1738,'2012-08-16','2012-08-16 10:21:27','click_count','704'),(1739,'2012-08-16','2012-08-16 10:21:27','click_count','705'),(1740,'2012-08-16','2012-08-16 10:21:27','click_count','706'),(1741,'2012-08-16','2012-08-16 10:21:28','click_count','707'),(1742,'2012-08-16','2012-08-16 10:21:28','click_count','708'),(1743,'2012-08-16','2012-08-16 10:21:29','click_count','709'),(1744,'2012-08-16','2012-08-16 10:21:29','click_count','710'),(1745,'2012-08-16','2012-08-16 10:21:29','click_count','711'),(1746,'2012-08-16','2012-08-16 10:21:30','click_count','712'),(1747,'2012-08-16','2012-08-16 10:21:30','click_count','713'),(1748,'2012-08-16','2012-08-16 10:21:31','click_count','714'),(1749,'2012-08-16','2012-08-16 10:21:31','click_count','715'),(1750,'2012-08-16','2012-08-16 10:21:31','click_count','716'),(1751,'2012-08-16','2012-08-16 10:21:32','click_count','717'),(1752,'2012-08-16','2012-08-16 10:21:41','click_count','718'),(1753,'2012-08-16','2012-08-16 10:21:41','click_count','719'),(1754,'2012-08-16','2012-08-16 10:22:16','click_count','720'),(1755,'2012-08-16','2012-08-16 10:22:17','click_count','721'),(1756,'2012-08-16','2012-08-16 10:22:17','click_count','722'),(1757,'2012-08-16','2012-08-16 10:22:18','click_count','723'),(1758,'2012-08-16','2012-08-16 10:22:18','click_count','724'),(1759,'2012-08-16','2012-08-16 10:22:19','click_count','725'),(1760,'2012-08-16','2012-08-16 10:22:19','click_count','726'),(1761,'2012-08-16','2012-08-16 10:22:19','click_count','727'),(1762,'2012-08-16','2012-08-16 10:22:20','click_count','728'),(1763,'2012-08-16','2012-08-16 10:22:20','click_count','729'),(1764,'2012-08-16','2012-08-16 10:22:20','click_count','730'),(1765,'2012-08-16','2012-08-16 10:22:21','click_count','731'),(1766,'2012-08-16','2012-08-16 10:22:41','click_count','732'),(1767,'2012-08-16','2012-08-16 10:22:42','click_count','733'),(1768,'2012-08-16','2012-08-16 10:22:42','click_count','734'),(1769,'2012-08-16','2012-08-16 10:22:43','click_count','735'),(1770,'2012-08-16','2012-08-16 10:22:44','click_count','736'),(1771,'2012-08-16','2012-08-16 10:22:44','click_count','737'),(1772,'2012-08-16','2012-08-16 10:22:44','click_count','738'),(1773,'2012-08-16','2012-08-16 10:22:48','click_count','739'),(1774,'2012-08-16','2012-08-16 10:22:48','click_count','740'),(1775,'2012-08-16','2012-08-16 10:22:49','click_count','741'),(1776,'2012-08-16','2012-08-16 10:22:49','click_count','742'),(1777,'2012-08-16','2012-08-16 10:22:49','click_count','743'),(1778,'2012-08-16','2012-08-16 10:22:54','click_count','744'),(1779,'2012-08-16','2012-08-16 10:22:55','click_count','745'),(1780,'2012-08-16','2012-08-16 10:23:24','click_count','746'),(1781,'2012-08-16','2012-08-16 10:23:24','click_count','747'),(1782,'2012-08-16','2012-08-16 10:23:25','click_count','748'),(1783,'2012-08-16','2012-08-16 10:23:25','click_count','749'),(1784,'2012-08-16','2012-08-16 10:23:26','click_count','750'),(1785,'2012-08-16','2012-08-16 10:23:26','click_count','751'),(1786,'2012-08-16','2012-08-16 10:23:38','click_count','752'),(1787,'2012-08-16','2012-08-16 10:23:39','click_count','753'),(1788,'2012-08-16','2012-08-16 10:23:39','click_count','754'),(1789,'2012-08-16','2012-08-16 10:23:40','click_count','755'),(1790,'2012-08-16','2012-08-16 10:23:41','click_count','756'),(1791,'2012-08-16','2012-08-16 10:23:41','click_count','757'),(1792,'2012-08-16','2012-08-16 10:23:42','click_count','758'),(1793,'2012-08-16','2012-08-16 10:23:42','click_count','759'),(1794,'2012-08-16','2012-08-16 10:23:42','click_count','760'),(1795,'2012-08-16','2012-08-16 10:23:42','click_count','761'),(1796,'2012-08-16','2012-08-16 10:25:02','click_count','762'),(1797,'2012-08-16','2012-08-16 10:29:29','click_count','763'),(1798,'2012-08-16','2012-08-16 10:29:29','click_count','764'),(1799,'2012-08-16','2012-08-16 10:30:23','click_count','765'),(1800,'2012-08-16','2012-08-16 10:30:24','click_count','766'),(1801,'2012-08-16','2012-08-16 10:30:28','click_count','767'),(1802,'2012-08-16','2012-08-16 10:30:28','click_count','768'),(1803,'2012-08-16','2012-08-16 10:30:43','click_count','769'),(1804,'2012-08-16','2012-08-16 10:34:14','click_count','770'),(1805,'2012-08-16','2012-08-16 10:34:17','click_count','771'),(1806,'2012-08-16','2012-08-16 10:34:35','click_count','772'),(1807,'2012-08-16','2012-08-16 10:34:52','click_count','773'),(1808,'2012-08-16','2012-08-16 10:35:10','click_count','774'),(1809,'2012-08-16','2012-08-16 10:36:54','click_count','775'),(1810,'2012-08-16','2012-08-16 10:36:55','click_count','776'),(1811,'2012-08-16','2012-08-16 10:37:34','post_count','217'),(1812,'2012-08-16','2012-08-16 10:37:34','comment_count','1'),(1813,'2012-08-16','2012-08-16 10:39:08','click_count','777'),(1814,'2012-08-16','2012-08-16 10:39:09','click_count','778'),(1815,'2012-08-16','2012-08-16 10:39:18','click_count','779'),(1816,'2012-08-16','2012-08-16 10:39:22','click_count','780'),(1817,'2012-08-16','2012-08-16 10:39:23','click_count','781'),(1818,'2012-08-16','2012-08-16 10:39:24','click_count','782'),(1819,'2012-08-16','2012-08-16 10:39:24','click_count','783'),(1820,'2012-08-16','2012-08-16 10:40:46','click_count','784'),(1821,'2012-08-16','2012-08-16 10:42:00','click_count','785'),(1822,'2012-08-16','2012-08-16 10:42:10','click_count','786'),(1823,'2012-08-16','2012-08-16 10:42:13','click_count','787'),(1824,'2012-08-16','2012-08-16 10:43:36','click_count','788'),(1825,'2012-08-16','2012-08-16 10:43:48','click_count','789'),(1826,'2012-08-16','2012-08-16 10:43:49','click_count','790'),(1827,'2012-08-16','2012-08-16 10:43:59','click_count','791'),(1828,'2012-08-16','2012-08-16 10:44:05','click_count','792'),(1829,'2012-08-16','2012-08-16 10:44:07','click_count','793'),(1830,'2012-08-16','2012-08-16 10:44:07','click_count','794'),(1831,'2012-08-16','2012-08-16 10:59:01','click_count','795'),(1832,'2012-08-16','2012-08-16 10:59:15','click_count','796'),(1833,'2012-08-16','2012-08-16 10:59:38','click_count','797'),(1834,'2012-08-16','2012-08-16 10:59:54','click_count','798'),(1835,'2012-08-16','2012-08-16 10:59:54','click_count','799'),(1836,'2012-08-16','2012-08-16 11:00:02','click_count','800'),(1837,'2012-08-16','2012-08-16 11:00:03','click_count','801'),(1838,'2012-08-16','2012-08-16 11:00:05','click_count','802'),(1839,'2012-08-16','2012-08-16 11:00:06','click_count','803'),(1840,'2012-08-16','2012-08-16 11:00:11','click_count','804'),(1841,'2012-08-16','2012-08-16 11:00:12','click_count','805'),(1842,'2012-08-16','2012-08-16 11:00:14','click_count','806'),(1843,'2012-08-16','2012-08-16 11:00:15','click_count','807'),(1844,'2012-08-16','2012-08-16 11:00:19','click_count','808'),(1845,'2012-08-16','2012-08-16 11:00:20','click_count','809'),(1846,'2012-08-16','2012-08-16 11:03:09','click_count','810'),(1847,'2012-08-16','2012-08-16 11:03:10','click_count','811'),(1848,'2012-08-16','2012-08-16 11:05:05','click_count','812'),(1849,'2012-08-16','2012-08-16 11:05:14','click_count','813'),(1850,'2012-08-16','2012-08-16 11:05:14','click_count','814'),(1851,'2012-08-16','2012-08-16 11:05:15','click_count','815'),(1852,'2012-08-16','2012-08-16 11:05:15','click_count','816'),(1853,'2012-08-16','2012-08-16 11:05:17','click_count','817'),(1854,'2012-08-16','2012-08-16 11:05:17','click_count','818'),(1855,'2012-08-16','2012-08-16 11:05:18','click_count','819'),(1856,'2012-08-16','2012-08-16 11:05:18','click_count','820'),(1857,'2012-08-16','2012-08-16 11:05:18','click_count','821'),(1858,'2012-08-16','2012-08-16 11:05:19','click_count','822'),(1859,'2012-08-16','2012-08-16 11:05:27','click_count','823'),(1860,'2012-08-16','2012-08-16 11:07:34','post_count','217'),(1861,'2012-08-16','2012-08-16 11:07:34','comment_count','1'),(1862,'2012-08-16','2012-08-16 11:13:53','click_count','824'),(1863,'2012-08-16','2012-08-16 11:13:53','click_count','825'),(1864,'2012-08-16','2012-08-16 11:14:01','click_count','826'),(1865,'2012-08-16','2012-08-16 11:14:01','click_count','827'),(1866,'2012-08-16','2012-08-16 11:14:21','click_count','828'),(1867,'2012-08-16','2012-08-16 11:14:22','click_count','829'),(1868,'2012-08-16','2012-08-16 11:15:05','click_count','830'),(1869,'2012-08-16','2012-08-16 11:15:05','click_count','831'),(1870,'2012-08-16','2012-08-16 11:29:11','click_count','832'),(1871,'2012-08-16','2012-08-16 11:29:11','click_count','833'),(1872,'2012-08-16','2012-08-16 11:29:41','click_count','834'),(1873,'2012-08-16','2012-08-16 11:29:44','click_count','835'),(1874,'2012-08-16','2012-08-16 11:37:34','post_count','217'),(1875,'2012-08-16','2012-08-16 11:37:34','comment_count','1'),(1876,'2012-08-16','2012-08-16 11:57:58','post_count','217'),(1877,'2012-08-16','2012-08-16 11:57:58','comment_count','1'),(1878,'2012-08-16','2012-08-16 11:58:53','click_count','836'),(1879,'2012-08-16','2012-08-16 11:58:56','click_count','837'),(1880,'2012-08-16','2012-08-16 11:59:46','click_count','838'),(1881,'2012-08-16','2012-08-16 11:59:47','click_count','839'),(1882,'2012-08-16','2012-08-16 11:59:49','click_count','840'),(1883,'2012-08-16','2012-08-16 11:59:49','click_count','841'),(1884,'2012-08-16','2012-08-16 11:59:54','click_count','842'),(1885,'2012-08-16','2012-08-16 11:59:54','click_count','843'),(1886,'2012-08-16','2012-08-16 11:59:55','click_count','844'),(1887,'2012-08-16','2012-08-16 11:59:55','click_count','845'),(1888,'2012-08-16','2012-08-16 11:59:57','click_count','846'),(1889,'2012-08-16','2012-08-16 11:59:57','click_count','847'),(1890,'2012-08-16','2012-08-16 12:13:37','click_count','848'),(1891,'2012-08-16','2012-08-16 12:13:38','click_count','849'),(1892,'2012-08-16','2012-08-16 12:21:19','post_count','217'),(1893,'2012-08-16','2012-08-16 12:21:19','comment_count','1'),(1894,'2012-08-16','2012-08-16 12:22:56','post_count','217'),(1895,'2012-08-16','2012-08-16 12:22:56','comment_count','1'),(1896,'2012-08-16','2012-08-16 12:25:06','post_count','217'),(1897,'2012-08-16','2012-08-16 12:25:06','comment_count','1'),(1898,'2012-08-16','2012-08-16 12:31:11','post_count','217'),(1899,'2012-08-16','2012-08-16 12:31:11','comment_count','1'),(1900,'2012-08-16','2012-08-16 12:32:11','click_count','850'),(1901,'2012-08-16','2012-08-16 12:32:11','click_count','851'),(1902,'2012-08-16','2012-08-16 12:32:22','click_count','852'),(1903,'2012-08-16','2012-08-16 12:32:28','click_count','853'),(1904,'2012-08-16','2012-08-16 12:32:29','click_count','854'),(1905,'2012-08-16','2012-08-16 12:32:29','click_count','855'),(1906,'2012-08-16','2012-08-16 12:32:29','click_count','856'),(1907,'2012-08-16','2012-08-16 12:32:30','click_count','857'),(1908,'2012-08-16','2012-08-16 12:32:30','click_count','858'),(1909,'2012-08-16','2012-08-16 12:32:30','click_count','859'),(1910,'2012-08-16','2012-08-16 12:32:30','click_count','860'),(1911,'2012-08-16','2012-08-16 12:32:31','click_count','861'),(1912,'2012-08-16','2012-08-16 12:32:31','click_count','862'),(1913,'2012-08-16','2012-08-16 12:32:31','click_count','863'),(1914,'2012-08-16','2012-08-16 12:32:35','click_count','864'),(1915,'2012-08-16','2012-08-16 12:32:35','click_count','865'),(1916,'2012-08-16','2012-08-16 12:32:35','click_count','866'),(1917,'2012-08-16','2012-08-16 12:32:36','click_count','867'),(1918,'2012-08-16','2012-08-16 12:32:36','click_count','868'),(1919,'2012-08-16','2012-08-16 12:32:36','click_count','869'),(1920,'2012-08-16','2012-08-16 12:32:37','click_count','870'),(1921,'2012-08-16','2012-08-16 12:32:37','click_count','871'),(1922,'2012-08-16','2012-08-16 12:32:37','click_count','872'),(1923,'2012-08-16','2012-08-16 12:32:38','click_count','873'),(1924,'2012-08-16','2012-08-16 12:32:50','click_count','874'),(1925,'2012-08-16','2012-08-16 12:32:50','click_count','875'),(1926,'2012-08-16','2012-08-16 12:32:51','click_count','876'),(1927,'2012-08-16','2012-08-16 12:32:51','click_count','877'),(1928,'2012-08-16','2012-08-16 12:33:05','click_count','878'),(1929,'2012-08-16','2012-08-16 12:33:05','click_count','879'),(1930,'2012-08-16','2012-08-16 12:53:09','click_count','880'),(1931,'2012-08-16','2012-08-16 12:53:09','click_count','881'),(1932,'2012-08-16','2012-08-16 12:54:29','click_count','882'),(1933,'2012-08-16','2012-08-16 12:54:30','click_count','883'),(1934,'2012-08-16','2012-08-16 12:55:06','click_count','884'),(1935,'2012-08-16','2012-08-16 12:55:07','click_count','885'),(1936,'2012-08-16','2012-08-16 12:55:20','click_count','886'),(1937,'2012-08-16','2012-08-16 12:55:21','click_count','887'),(1938,'2012-08-16','2012-08-16 12:55:24','click_count','888'),(1939,'2012-08-16','2012-08-16 12:55:24','click_count','889'),(1940,'2012-08-16','2012-08-16 13:01:11','post_count','217'),(1941,'2012-08-16','2012-08-16 13:01:11','comment_count','1'),(1942,'2012-08-16','2012-08-16 13:14:03','click_count','890'),(1943,'2012-08-16','2012-08-16 13:14:04','click_count','891'),(1944,'2012-08-17','2012-08-17 16:33:34','post_count','217'),(1945,'2012-08-17','2012-08-17 16:33:35','comment_count','1'),(1946,'2012-08-17','2012-08-17 16:33:38','click_count','892'),(1947,'2012-08-17','2012-08-17 16:33:44','click_count','893'),(1948,'2012-08-17','2012-08-17 16:33:47','click_count','894'),(1949,'2012-08-17','2012-08-17 16:33:47','click_count','895'),(1950,'2012-08-17','2012-08-17 16:33:56','click_count','896'),(1951,'2012-08-17','2012-08-17 16:33:57','click_count','897'),(1952,'2012-08-17','2012-08-17 16:35:39','click_count','898'),(1953,'2012-08-17','2012-08-17 16:35:59','click_count','899'),(1954,'2012-08-17','2012-08-17 16:36:00','click_count','900'),(1955,'2012-08-19','2012-08-19 10:42:19','post_count','217'),(1956,'2012-08-19','2012-08-19 10:42:19','comment_count','1'),(1957,'2012-08-19','2012-08-19 10:42:20','click_count','901'),(1958,'2012-08-19','2012-08-19 10:45:09','click_count','902'),(1959,'2012-08-19','2012-08-19 10:45:16','click_count','903'),(1960,'2012-08-19','2012-08-19 10:45:32','click_count','904'),(1961,'2012-08-19','2012-08-19 10:45:34','click_count','905'),(1962,'2012-08-19','2012-08-19 11:12:14','post_count','217'),(1963,'2012-08-19','2012-08-19 11:12:14','comment_count','1'),(1964,'2012-08-19','2012-08-19 11:20:20','click_count','906'),(1965,'2012-08-19','2012-08-19 11:20:25','click_count','907'),(1966,'2012-08-19','2012-08-19 11:20:46','click_count','908'),(1967,'2012-08-19','2012-08-19 11:20:55','click_count','909'),(1968,'2012-08-25','2012-08-25 09:48:51','post_count','217'),(1969,'2012-08-25','2012-08-25 09:48:51','comment_count','1'),(1970,'2012-08-25','2012-08-25 09:50:53','click_count','910'),(1971,'2012-08-25','2012-08-25 09:52:42','click_count','911'),(1972,'2012-08-25','2012-08-25 09:53:09','click_count','912'),(1973,'2012-08-25','2012-08-25 09:53:15','click_count','913'),(1974,'2012-08-25','2012-08-25 09:53:20','click_count','914'),(1975,'2012-08-25','2012-08-25 09:53:27','click_count','915'),(1976,'2012-08-25','2012-08-25 10:18:48','post_count','217'),(1977,'2012-08-25','2012-08-25 10:18:48','comment_count','1'),(1978,'2012-08-25','2012-08-25 10:25:30','post_count','217'),(1979,'2012-08-25','2012-08-25 10:25:30','comment_count','1'),(1980,'2012-08-25','2012-08-25 10:27:18','click_count','916'),(1981,'2012-08-25','2012-08-25 10:27:23','click_count','917'),(1982,'2012-08-25','2012-08-25 10:27:26','click_count','918'),(1983,'2012-08-25','2012-08-25 10:27:28','click_count','919'),(1984,'2012-08-25','2012-08-25 10:27:29','click_count','920'),(1985,'2012-08-25','2012-08-25 10:27:31','click_count','921'),(1986,'2012-08-25','2012-08-25 10:27:31','click_count','922'),(1987,'2012-08-25','2012-08-25 10:27:31','click_count','921'),(1988,'2012-08-25','2012-08-25 10:27:31','click_count','921'),(1989,'2012-08-25','2012-08-25 10:27:32','click_count','922'),(1990,'2012-08-25','2012-08-25 10:27:32','click_count','923'),(1991,'2012-08-25','2012-08-25 10:27:32','click_count','923'),(1992,'2012-08-25','2012-08-25 10:27:33','click_count','924'),(1993,'2012-08-25','2012-08-25 10:27:34','click_count','925'),(1994,'2012-08-25','2012-08-25 10:27:34','click_count','926'),(1995,'2012-08-25','2012-08-25 10:27:35','click_count','927'),(1996,'2012-08-25','2012-08-25 10:27:35','click_count','928'),(1997,'2012-08-25','2012-08-25 10:27:35','click_count','928'),(1998,'2012-08-25','2012-08-25 10:27:35','click_count','929'),(1999,'2012-08-25','2012-08-25 10:27:36','click_count','930'),(2000,'2012-08-25','2012-08-25 10:27:36','click_count','931'),(2001,'2012-08-25','2012-08-25 10:27:36','click_count','932'),(2002,'2012-08-25','2012-08-25 10:27:37','click_count','933'),(2003,'2012-08-25','2012-08-25 10:27:38','click_count','934'),(2004,'2012-08-25','2012-08-25 10:27:38','click_count','935'),(2005,'2012-08-25','2012-08-25 10:27:40','click_count','936'),(2006,'2012-08-25','2012-08-25 10:27:40','click_count','936'),(2007,'2012-08-25','2012-08-25 10:27:40','click_count','937'),(2008,'2012-08-25','2012-08-25 10:27:40','click_count','938'),(2009,'2012-08-25','2012-08-25 10:27:40','click_count','938'),(2010,'2012-08-25','2012-08-25 10:27:40','click_count','939'),(2011,'2012-08-25','2012-08-25 10:27:41','click_count','939'),(2012,'2012-08-25','2012-08-25 10:27:41','click_count','940'),(2013,'2012-08-25','2012-08-25 10:27:41','click_count','941'),(2014,'2012-08-25','2012-08-25 10:27:56','click_count','942'),(2015,'2012-08-25','2012-08-25 10:28:32','click_count','943'),(2016,'2012-08-25','2012-08-25 10:33:01','post_count','217'),(2017,'2012-08-25','2012-08-25 10:33:01','comment_count','1'),(2018,'2012-08-25','2012-08-25 10:49:57','post_count','217'),(2019,'2012-08-25','2012-08-25 10:49:58','comment_count','1'),(2020,'2012-08-25','2012-08-25 10:52:12','post_count','217'),(2021,'2012-08-25','2012-08-25 10:52:13','comment_count','1'),(2022,'2012-08-25','2012-08-25 12:14:46','post_count','217'),(2023,'2012-08-25','2012-08-25 12:14:47','comment_count','1'),(2024,'2012-08-25','2012-08-25 12:43:19','post_count','217'),(2025,'2012-08-25','2012-08-25 12:43:19','comment_count','1'),(2026,'2012-08-25','2012-08-25 12:57:21','post_count','217'),(2027,'2012-08-25','2012-08-25 12:57:22','comment_count','1'),(2028,'2012-08-25','2012-08-25 12:58:41','post_count','217'),(2029,'2012-08-25','2012-08-25 12:58:41','comment_count','1'),(2030,'2012-08-25','2012-08-25 12:58:42','click_count','944'),(2031,'2012-08-25','2012-08-25 13:00:01','post_count','217'),(2032,'2012-08-25','2012-08-25 13:00:01','comment_count','1'),(2033,'2012-08-25','2012-08-25 13:27:31','post_count','217'),(2034,'2012-08-25','2012-08-25 13:27:31','comment_count','1'),(2035,'2012-08-25','2012-08-25 13:31:16','post_count','217'),(2036,'2012-08-25','2012-08-25 13:31:17','comment_count','1'),(2037,'2012-08-25','2012-08-25 13:33:56','post_count','217'),(2038,'2012-08-25','2012-08-25 13:33:57','comment_count','1'),(2039,'2012-08-25','2012-08-25 13:35:42','post_count','217'),(2040,'2012-08-25','2012-08-25 13:35:43','comment_count','1'),(2041,'2012-08-26','2012-08-26 16:02:57','click_count','945'),(2042,'2012-08-26','2012-08-26 16:07:29','post_count','217'),(2043,'2012-08-26','2012-08-26 16:07:30','comment_count','1'),(2044,'2012-08-26','2012-08-26 16:15:32','post_count','217'),(2045,'2012-08-26','2012-08-26 16:15:33','comment_count','1'),(2046,'2012-08-26','2012-08-26 16:25:11','post_count','217'),(2047,'2012-08-26','2012-08-26 16:25:12','comment_count','1'),(2048,'2012-08-26','2012-08-26 16:30:27','post_count','217'),(2049,'2012-08-26','2012-08-26 16:30:27','comment_count','1'),(2050,'2012-08-26','2012-08-26 16:31:39','post_count','217'),(2051,'2012-08-26','2012-08-26 16:31:39','comment_count','1'),(2052,'2012-09-01','2012-09-01 18:42:55','click_count','946'),(2053,'2012-09-01','2012-09-01 18:53:30','click_count','947'),(2054,'2012-09-01','2012-09-01 18:54:04','click_count','948'),(2055,'2012-09-01','2012-09-01 18:54:30','click_count','949'),(2056,'2012-09-01','2012-09-01 18:54:39','click_count','950'),(2057,'2012-09-01','2012-09-01 18:54:50','click_count','951'),(2058,'2012-09-02','2012-09-02 10:12:42','post_count','217'),(2059,'2012-09-02','2012-09-02 10:12:42','comment_count','1'),(2060,'2012-09-02','2012-09-02 10:12:43','click_count','952'),(2061,'2012-09-02','2012-09-02 10:22:00','post_count','217'),(2062,'2012-09-02','2012-09-02 10:22:00','comment_count','1'),(2063,'2012-09-02','2012-09-02 10:23:32','click_count','953'),(2064,'2012-09-02','2012-09-02 10:51:58','post_count','217'),(2065,'2012-09-02','2012-09-02 10:51:58','comment_count','1'),(2066,'2012-09-23','2012-09-23 15:33:17','click_count','954'),(2067,'2012-09-23','2012-09-23 15:33:20','click_count','955'),(2068,'2012-09-23','2012-09-23 15:34:08','post_count','217'),(2069,'2012-09-23','2012-09-23 15:34:08','comment_count','1'),(2070,'2012-09-23','2012-09-23 15:39:44','click_count','956'),(2071,'2012-09-23','2012-09-23 15:48:24','click_count','957'),(2072,'2012-09-23','2012-09-23 15:50:00','click_count','958'),(2073,'2012-09-23','2012-09-23 16:04:06','post_count','217'),(2074,'2012-09-23','2012-09-23 16:04:06','comment_count','1'),(2075,'2012-09-23','2012-09-23 16:16:47','click_count','959'),(2076,'2012-10-01','2012-10-01 15:41:03','post_count','217'),(2077,'2012-10-01','2012-10-01 15:41:03','comment_count','1'),(2078,'2012-10-01','2012-10-01 15:41:32','click_count','960'),(2079,'2012-10-01','2012-10-01 15:41:49','click_count','961'),(2080,'2012-10-01','2012-10-01 15:44:26','click_count','962'),(2081,'2012-10-01','2012-10-01 16:09:31','post_count','217'),(2082,'2012-10-01','2012-10-01 16:09:31','comment_count','3'),(2083,'2012-10-01','2012-10-01 16:31:16','post_count','217'),(2084,'2012-10-01','2012-10-01 16:31:17','comment_count','9'),(2085,'2012-10-01','2012-10-01 16:37:38','post_count','217'),(2086,'2012-10-01','2012-10-01 16:37:39','comment_count','4'),(2087,'2012-10-01','2012-10-01 16:41:48','post_count','217'),(2088,'2012-10-01','2012-10-01 16:41:49','comment_count','6'),(2089,'2012-10-01','2012-10-01 16:51:41','post_count','217'),(2090,'2012-10-01','2012-10-01 16:51:41','comment_count','7'),(2091,'2012-10-01','2012-10-01 16:58:05','post_count','217'),(2092,'2012-10-01','2012-10-01 16:58:05','comment_count','12'),(2093,'2012-10-04','2012-10-04 16:14:21','post_count','217'),(2094,'2012-10-04','2012-10-04 16:14:22','comment_count','14'),(2095,'2012-10-04','2012-10-04 16:14:36','click_count','963'),(2096,'2012-10-05','2012-10-05 13:20:47','post_count','217'),(2097,'2012-10-05','2012-10-05 13:20:47','comment_count','14'),(2098,'2012-10-05','2012-10-05 13:25:05','click_count','964'),(2099,'2012-10-05','2012-10-05 13:55:36','post_count','217'),(2100,'2012-10-05','2012-10-05 13:55:36','comment_count','14'),(2101,'2012-10-05','2012-10-05 14:17:43','post_count','217'),(2102,'2012-10-05','2012-10-05 14:17:44','comment_count','1'),(2103,'2012-10-05','2012-10-05 14:25:32','post_count','217'),(2104,'2012-10-05','2012-10-05 14:25:32','comment_count','1'),(2105,'2012-10-05','2012-10-05 14:55:27','post_count','217'),(2106,'2012-10-05','2012-10-05 14:55:28','comment_count','1'),(2107,'2012-10-05','2012-10-05 14:59:55','post_count','217'),(2108,'2012-10-05','2012-10-05 14:59:55','comment_count','1'),(2109,'2012-10-05','2012-10-05 15:03:31','click_count','965'),(2110,'2012-10-05','2012-10-05 15:05:19','click_count','966'),(2111,'2012-10-05','2012-10-05 15:05:27','click_count','967'),(2112,'2012-10-05','2012-10-05 15:06:24','click_count','968'),(2113,'2012-10-05','2012-10-05 15:07:13','click_count','969'),(2114,'2012-10-05','2012-10-05 15:07:27','click_count','970'),(2115,'2012-10-05','2012-10-05 15:07:28','click_count','971'),(2116,'2012-10-05','2012-10-05 15:08:32','click_count','972'),(2117,'2012-10-05','2012-10-05 15:09:03','click_count','973'),(2118,'2012-10-05','2012-10-05 15:09:10','click_count','974'),(2119,'2012-10-05','2012-10-05 15:10:52','click_count','975'),(2120,'2012-10-05','2012-10-05 15:11:18','click_count','976'),(2121,'2012-10-05','2012-10-05 15:12:05','click_count','977'),(2122,'2012-10-05','2012-10-05 15:12:27','click_count','978'),(2123,'2012-10-05','2012-10-05 15:12:53','click_count','979'),(2124,'2012-10-05','2012-10-05 15:12:59','click_count','980'),(2125,'2012-10-05','2012-10-05 15:13:09','click_count','981'),(2126,'2012-10-05','2012-10-05 15:15:22','click_count','982'),(2127,'2012-10-05','2012-10-05 15:15:35','click_count','983'),(2128,'2012-10-05','2012-10-05 15:15:43','click_count','984'),(2129,'2012-10-05','2012-10-05 15:16:16','click_count','985'),(2130,'2012-10-05','2012-10-05 15:16:27','click_count','986'),(2131,'2012-10-05','2012-10-05 15:22:03','click_count','987'),(2132,'2012-10-05','2012-10-05 15:22:09','click_count','988'),(2133,'2012-10-05','2012-10-05 15:22:13','click_count','989'),(2134,'2012-10-05','2012-10-05 15:22:15','click_count','990'),(2135,'2012-10-05','2012-10-05 15:22:16','click_count','991'),(2136,'2012-10-05','2012-10-05 15:22:17','click_count','992'),(2137,'2012-10-05','2012-10-05 15:22:19','click_count','993'),(2138,'2012-10-05','2012-10-05 15:22:20','click_count','994'),(2139,'2012-10-05','2012-10-05 15:22:21','click_count','995'),(2140,'2012-10-05','2012-10-05 15:22:22','click_count','996'),(2141,'2012-10-05','2012-10-05 15:22:23','click_count','997'),(2142,'2012-10-05','2012-10-05 15:22:24','click_count','998'),(2143,'2012-10-05','2012-10-05 15:22:27','click_count','999'),(2144,'2012-10-05','2012-10-05 15:22:28','click_count','1000'),(2145,'2012-10-05','2012-10-05 15:22:30','click_count','1001'),(2146,'2012-10-05','2012-10-05 15:22:31','click_count','1002'),(2147,'2012-10-05','2012-10-05 15:22:32','click_count','1003'),(2148,'2012-10-05','2012-10-05 15:22:34','click_count','1004'),(2149,'2012-10-05','2012-10-05 15:22:35','click_count','1005'),(2150,'2012-10-05','2012-10-05 15:22:36','click_count','1006'),(2151,'2012-10-05','2012-10-05 15:22:37','click_count','1007'),(2152,'2012-10-05','2012-10-05 15:22:38','click_count','1008'),(2153,'2012-10-05','2012-10-05 15:22:39','click_count','1009'),(2154,'2012-10-05','2012-10-05 15:22:40','click_count','1010'),(2155,'2012-10-05','2012-10-05 15:22:42','click_count','1011'),(2156,'2012-10-05','2012-10-05 15:23:03','click_count','1012'),(2157,'2012-10-05','2012-10-05 15:23:50','click_count','1013'),(2158,'2012-10-05','2012-10-05 15:29:53','post_count','217'),(2159,'2012-10-05','2012-10-05 15:29:53','comment_count','1'),(2160,'2012-10-05','2012-10-05 15:40:37','post_count','217'),(2161,'2012-10-05','2012-10-05 15:40:37','comment_count','1'),(2162,'2012-10-05','2012-10-05 15:42:53','post_count','217'),(2163,'2012-10-05','2012-10-05 15:42:54','comment_count','1'),(2164,'2012-10-05','2012-10-05 15:44:41','post_count','217'),(2165,'2012-10-05','2012-10-05 15:44:42','comment_count','1'),(2166,'2012-10-05','2012-10-05 15:54:19','post_count','217'),(2167,'2012-10-05','2012-10-05 15:54:19','comment_count','1');

/*Table structure for table `mlog_tag` */

DROP TABLE IF EXISTS `mlog_tag`;

CREATE TABLE `mlog_tag` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_count` bigint(20) DEFAULT NULL,
  `_create_time` datetime NOT NULL,
  `_name` varchar(300) NOT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`),
  UNIQUE KEY `_name` (`_name`)
) ENGINE=MyISAM AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_tag` */

insert  into `mlog_tag`(`_id`,`_count`,`_create_time`,`_name`) values (1,NULL,'2012-08-09 16:51:44','软件'),(2,NULL,'2012-08-09 16:51:44','工程师'),(3,NULL,'2012-08-14 17:38:06','Lucene'),(4,NULL,'2012-08-14 17:43:00','.NET'),(5,NULL,'2012-08-14 17:43:00','M-Spring'),(6,NULL,'2012-08-14 17:43:00','JavaScript'),(7,NULL,'2012-08-14 17:43:01','SQL'),(8,NULL,'2012-08-14 17:43:01','Java'),(9,NULL,'2012-08-14 17:43:02','Spring'),(10,NULL,'2012-08-14 17:43:03','webwork'),(11,NULL,'2012-08-14 17:43:04','Android'),(12,NULL,'2012-08-14 17:43:05','JBPM'),(13,NULL,'2012-08-14 17:43:06','Hibernate'),(14,NULL,'2012-08-14 17:56:01','碎碎念'),(15,NULL,'2012-08-14 17:56:10','Freemarker'),(16,NULL,'2012-08-14 17:56:21','设计模式'),(17,NULL,'2012-08-14 17:56:51','网摘'),(18,NULL,'2012-08-14 17:56:52','G-Blog'),(19,NULL,'2012-08-14 17:56:53','webservice'),(20,NULL,'2012-08-14 17:56:59','编程开发'),(21,NULL,'2012-08-14 17:57:15','GWT'),(22,NULL,'2012-08-14 17:57:22','Wordpress'),(23,NULL,'2012-08-14 17:58:51','linux'),(24,NULL,'2012-08-14 17:58:52','struts2');

/*Table structure for table `mlog_tree_item` */

DROP TABLE IF EXISTS `mlog_tree_item`;

CREATE TABLE `mlog_tree_item` (
  `_id` varchar(100) NOT NULL,
  `_call` varchar(500) DEFAULT NULL,
  `_deleted` bit(1) DEFAULT NULL,
  `_icon` varchar(100) DEFAULT NULL,
  `_name` varchar(200) NOT NULL,
  `_open` bit(1) DEFAULT NULL,
  `_order` bigint(20) NOT NULL,
  `_parent` bigint(20) DEFAULT NULL,
  `_target` varchar(100) DEFAULT '_self',
  `_type` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

/*Data for the table `mlog_tree_item` */

insert  into `mlog_tree_item`(`_id`,`_call`,`_deleted`,`_icon`,`_name`,`_open`,`_order`,`_parent`,`_target`,`_type`) values ('1',NULL,'\0',NULL,'功能菜单','',0,0,'main',0),('105','admin','\0',NULL,'首页','',0,1,'main',0),('115',NULL,'\0',NULL,'文章','',0,1,'main',0),('11505','admin/post/list','\0',NULL,'文章管理','',0,115,'main',0),('220','admin/setting/bloginfo','\0',NULL,'博客信息','',0,2,'main',0),('2',NULL,'\0',NULL,'配置','',0,0,'main',0),('205','admin/user/userinfo','\0',NULL,'用户信息','',0,2,'main',0),('3',NULL,'\0',NULL,'关于','',0,0,'main',0),('305','admin/about','\0',NULL,'关于','',0,3,'main',0),('310','admin/contact','\0',NULL,'联系方式','',0,3,'main',0),('11515','admin/catalog/list','\0',NULL,'分类管理','',0,115,'main',0),('11520','admin/comment/list','\0',NULL,'评论管理','',0,115,'main',0),('120','admin/link/list','\0',NULL,'链接管理','',0,1,'main',0),('225','admin/setting/mail','\0',NULL,'邮件设置','',0,2,'main',0),('230','admin/setting/skin','\0',NULL,'皮肤设置','',0,2,'main',0),('235','admin/setting/seo','\0',NULL,'SEO设置','',0,2,'main',0);

/*Table structure for table `mlog_user` */

DROP TABLE IF EXISTS `mlog_user`;

CREATE TABLE `mlog_user` (
  `_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `_alias` varchar(100) NOT NULL,
  `_create_time` datetime NOT NULL,
  `_email` varchar(200) NOT NULL,
  `_name` varchar(100) NOT NULL,
  `_password` varchar(100) NOT NULL,
  PRIMARY KEY (`_id`),
  UNIQUE KEY `_id` (`_id`),
  UNIQUE KEY `_alias` (`_alias`),
  UNIQUE KEY `_name` (`_name`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `mlog_user` */

insert  into `mlog_user`(`_id`,`_alias`,`_create_time`,`_email`,`_name`,`_password`) values (1,'雾非雾的情思','2012-08-09 09:41:43','gaoyoubo@mspring.org','gaoyoubo','3be4183bcb1730f57be96b7b1c1aaf8a');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
